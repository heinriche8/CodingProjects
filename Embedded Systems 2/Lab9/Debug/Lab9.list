
Lab9.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00009a68  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000010d0  08009c38  08009c38  00019c38  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800ad08  0800ad08  00020ce8  2**0
                  CONTENTS
  4 .ARM          00000000  0800ad08  0800ad08  00020ce8  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800ad08  0800ad08  00020ce8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800ad08  0800ad08  0001ad08  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800ad0c  0800ad0c  0001ad0c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000ce8  20000000  0800ad10  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000078  20000ce8  0800b9f8  00020ce8  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000d60  0800b9f8  00020d60  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00020ce8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00008203  00000000  00000000  00020d12  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000017ba  00000000  00000000  00028f15  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000338  00000000  00000000  0002a6d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000270  00000000  00000000  0002aa08  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00004a4f  00000000  00000000  0002ac78  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00005296  00000000  00000000  0002f6c7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000be7a  00000000  00000000  0003495d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000407d7  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000028b8  00000000  00000000  0004082c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000ce8 	.word	0x20000ce8
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08009c20 	.word	0x08009c20

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000cec 	.word	0x20000cec
 800020c:	08009c20 	.word	0x08009c20

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <strcmp>:
 80002b0:	f810 2b01 	ldrb.w	r2, [r0], #1
 80002b4:	f811 3b01 	ldrb.w	r3, [r1], #1
 80002b8:	2a01      	cmp	r2, #1
 80002ba:	bf28      	it	cs
 80002bc:	429a      	cmpcs	r2, r3
 80002be:	d0f7      	beq.n	80002b0 <strcmp>
 80002c0:	1ad0      	subs	r0, r2, r3
 80002c2:	4770      	bx	lr

080002c4 <strlen>:
 80002c4:	4603      	mov	r3, r0
 80002c6:	f813 2b01 	ldrb.w	r2, [r3], #1
 80002ca:	2a00      	cmp	r2, #0
 80002cc:	d1fb      	bne.n	80002c6 <strlen+0x2>
 80002ce:	1a18      	subs	r0, r3, r0
 80002d0:	3801      	subs	r0, #1
 80002d2:	4770      	bx	lr

080002d4 <__aeabi_drsub>:
 80002d4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002d8:	e002      	b.n	80002e0 <__adddf3>
 80002da:	bf00      	nop

080002dc <__aeabi_dsub>:
 80002dc:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002e0 <__adddf3>:
 80002e0:	b530      	push	{r4, r5, lr}
 80002e2:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002e6:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002ea:	ea94 0f05 	teq	r4, r5
 80002ee:	bf08      	it	eq
 80002f0:	ea90 0f02 	teqeq	r0, r2
 80002f4:	bf1f      	itttt	ne
 80002f6:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002fa:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002fe:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000302:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000306:	f000 80e2 	beq.w	80004ce <__adddf3+0x1ee>
 800030a:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800030e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000312:	bfb8      	it	lt
 8000314:	426d      	neglt	r5, r5
 8000316:	dd0c      	ble.n	8000332 <__adddf3+0x52>
 8000318:	442c      	add	r4, r5
 800031a:	ea80 0202 	eor.w	r2, r0, r2
 800031e:	ea81 0303 	eor.w	r3, r1, r3
 8000322:	ea82 0000 	eor.w	r0, r2, r0
 8000326:	ea83 0101 	eor.w	r1, r3, r1
 800032a:	ea80 0202 	eor.w	r2, r0, r2
 800032e:	ea81 0303 	eor.w	r3, r1, r3
 8000332:	2d36      	cmp	r5, #54	; 0x36
 8000334:	bf88      	it	hi
 8000336:	bd30      	pophi	{r4, r5, pc}
 8000338:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800033c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000340:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000344:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x70>
 800034a:	4240      	negs	r0, r0
 800034c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000350:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000354:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000358:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800035c:	d002      	beq.n	8000364 <__adddf3+0x84>
 800035e:	4252      	negs	r2, r2
 8000360:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000364:	ea94 0f05 	teq	r4, r5
 8000368:	f000 80a7 	beq.w	80004ba <__adddf3+0x1da>
 800036c:	f1a4 0401 	sub.w	r4, r4, #1
 8000370:	f1d5 0e20 	rsbs	lr, r5, #32
 8000374:	db0d      	blt.n	8000392 <__adddf3+0xb2>
 8000376:	fa02 fc0e 	lsl.w	ip, r2, lr
 800037a:	fa22 f205 	lsr.w	r2, r2, r5
 800037e:	1880      	adds	r0, r0, r2
 8000380:	f141 0100 	adc.w	r1, r1, #0
 8000384:	fa03 f20e 	lsl.w	r2, r3, lr
 8000388:	1880      	adds	r0, r0, r2
 800038a:	fa43 f305 	asr.w	r3, r3, r5
 800038e:	4159      	adcs	r1, r3
 8000390:	e00e      	b.n	80003b0 <__adddf3+0xd0>
 8000392:	f1a5 0520 	sub.w	r5, r5, #32
 8000396:	f10e 0e20 	add.w	lr, lr, #32
 800039a:	2a01      	cmp	r2, #1
 800039c:	fa03 fc0e 	lsl.w	ip, r3, lr
 80003a0:	bf28      	it	cs
 80003a2:	f04c 0c02 	orrcs.w	ip, ip, #2
 80003a6:	fa43 f305 	asr.w	r3, r3, r5
 80003aa:	18c0      	adds	r0, r0, r3
 80003ac:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80003b0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003b4:	d507      	bpl.n	80003c6 <__adddf3+0xe6>
 80003b6:	f04f 0e00 	mov.w	lr, #0
 80003ba:	f1dc 0c00 	rsbs	ip, ip, #0
 80003be:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003c2:	eb6e 0101 	sbc.w	r1, lr, r1
 80003c6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003ca:	d31b      	bcc.n	8000404 <__adddf3+0x124>
 80003cc:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003d0:	d30c      	bcc.n	80003ec <__adddf3+0x10c>
 80003d2:	0849      	lsrs	r1, r1, #1
 80003d4:	ea5f 0030 	movs.w	r0, r0, rrx
 80003d8:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003dc:	f104 0401 	add.w	r4, r4, #1
 80003e0:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003e4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003e8:	f080 809a 	bcs.w	8000520 <__adddf3+0x240>
 80003ec:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003f0:	bf08      	it	eq
 80003f2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003f6:	f150 0000 	adcs.w	r0, r0, #0
 80003fa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003fe:	ea41 0105 	orr.w	r1, r1, r5
 8000402:	bd30      	pop	{r4, r5, pc}
 8000404:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000408:	4140      	adcs	r0, r0
 800040a:	eb41 0101 	adc.w	r1, r1, r1
 800040e:	3c01      	subs	r4, #1
 8000410:	bf28      	it	cs
 8000412:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000416:	d2e9      	bcs.n	80003ec <__adddf3+0x10c>
 8000418:	f091 0f00 	teq	r1, #0
 800041c:	bf04      	itt	eq
 800041e:	4601      	moveq	r1, r0
 8000420:	2000      	moveq	r0, #0
 8000422:	fab1 f381 	clz	r3, r1
 8000426:	bf08      	it	eq
 8000428:	3320      	addeq	r3, #32
 800042a:	f1a3 030b 	sub.w	r3, r3, #11
 800042e:	f1b3 0220 	subs.w	r2, r3, #32
 8000432:	da0c      	bge.n	800044e <__adddf3+0x16e>
 8000434:	320c      	adds	r2, #12
 8000436:	dd08      	ble.n	800044a <__adddf3+0x16a>
 8000438:	f102 0c14 	add.w	ip, r2, #20
 800043c:	f1c2 020c 	rsb	r2, r2, #12
 8000440:	fa01 f00c 	lsl.w	r0, r1, ip
 8000444:	fa21 f102 	lsr.w	r1, r1, r2
 8000448:	e00c      	b.n	8000464 <__adddf3+0x184>
 800044a:	f102 0214 	add.w	r2, r2, #20
 800044e:	bfd8      	it	le
 8000450:	f1c2 0c20 	rsble	ip, r2, #32
 8000454:	fa01 f102 	lsl.w	r1, r1, r2
 8000458:	fa20 fc0c 	lsr.w	ip, r0, ip
 800045c:	bfdc      	itt	le
 800045e:	ea41 010c 	orrle.w	r1, r1, ip
 8000462:	4090      	lslle	r0, r2
 8000464:	1ae4      	subs	r4, r4, r3
 8000466:	bfa2      	ittt	ge
 8000468:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800046c:	4329      	orrge	r1, r5
 800046e:	bd30      	popge	{r4, r5, pc}
 8000470:	ea6f 0404 	mvn.w	r4, r4
 8000474:	3c1f      	subs	r4, #31
 8000476:	da1c      	bge.n	80004b2 <__adddf3+0x1d2>
 8000478:	340c      	adds	r4, #12
 800047a:	dc0e      	bgt.n	800049a <__adddf3+0x1ba>
 800047c:	f104 0414 	add.w	r4, r4, #20
 8000480:	f1c4 0220 	rsb	r2, r4, #32
 8000484:	fa20 f004 	lsr.w	r0, r0, r4
 8000488:	fa01 f302 	lsl.w	r3, r1, r2
 800048c:	ea40 0003 	orr.w	r0, r0, r3
 8000490:	fa21 f304 	lsr.w	r3, r1, r4
 8000494:	ea45 0103 	orr.w	r1, r5, r3
 8000498:	bd30      	pop	{r4, r5, pc}
 800049a:	f1c4 040c 	rsb	r4, r4, #12
 800049e:	f1c4 0220 	rsb	r2, r4, #32
 80004a2:	fa20 f002 	lsr.w	r0, r0, r2
 80004a6:	fa01 f304 	lsl.w	r3, r1, r4
 80004aa:	ea40 0003 	orr.w	r0, r0, r3
 80004ae:	4629      	mov	r1, r5
 80004b0:	bd30      	pop	{r4, r5, pc}
 80004b2:	fa21 f004 	lsr.w	r0, r1, r4
 80004b6:	4629      	mov	r1, r5
 80004b8:	bd30      	pop	{r4, r5, pc}
 80004ba:	f094 0f00 	teq	r4, #0
 80004be:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004c2:	bf06      	itte	eq
 80004c4:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004c8:	3401      	addeq	r4, #1
 80004ca:	3d01      	subne	r5, #1
 80004cc:	e74e      	b.n	800036c <__adddf3+0x8c>
 80004ce:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004d2:	bf18      	it	ne
 80004d4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004d8:	d029      	beq.n	800052e <__adddf3+0x24e>
 80004da:	ea94 0f05 	teq	r4, r5
 80004de:	bf08      	it	eq
 80004e0:	ea90 0f02 	teqeq	r0, r2
 80004e4:	d005      	beq.n	80004f2 <__adddf3+0x212>
 80004e6:	ea54 0c00 	orrs.w	ip, r4, r0
 80004ea:	bf04      	itt	eq
 80004ec:	4619      	moveq	r1, r3
 80004ee:	4610      	moveq	r0, r2
 80004f0:	bd30      	pop	{r4, r5, pc}
 80004f2:	ea91 0f03 	teq	r1, r3
 80004f6:	bf1e      	ittt	ne
 80004f8:	2100      	movne	r1, #0
 80004fa:	2000      	movne	r0, #0
 80004fc:	bd30      	popne	{r4, r5, pc}
 80004fe:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000502:	d105      	bne.n	8000510 <__adddf3+0x230>
 8000504:	0040      	lsls	r0, r0, #1
 8000506:	4149      	adcs	r1, r1
 8000508:	bf28      	it	cs
 800050a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800050e:	bd30      	pop	{r4, r5, pc}
 8000510:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000514:	bf3c      	itt	cc
 8000516:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800051a:	bd30      	popcc	{r4, r5, pc}
 800051c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000520:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000524:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000528:	f04f 0000 	mov.w	r0, #0
 800052c:	bd30      	pop	{r4, r5, pc}
 800052e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000532:	bf1a      	itte	ne
 8000534:	4619      	movne	r1, r3
 8000536:	4610      	movne	r0, r2
 8000538:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 800053c:	bf1c      	itt	ne
 800053e:	460b      	movne	r3, r1
 8000540:	4602      	movne	r2, r0
 8000542:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000546:	bf06      	itte	eq
 8000548:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800054c:	ea91 0f03 	teqeq	r1, r3
 8000550:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000554:	bd30      	pop	{r4, r5, pc}
 8000556:	bf00      	nop

08000558 <__aeabi_ui2d>:
 8000558:	f090 0f00 	teq	r0, #0
 800055c:	bf04      	itt	eq
 800055e:	2100      	moveq	r1, #0
 8000560:	4770      	bxeq	lr
 8000562:	b530      	push	{r4, r5, lr}
 8000564:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000568:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800056c:	f04f 0500 	mov.w	r5, #0
 8000570:	f04f 0100 	mov.w	r1, #0
 8000574:	e750      	b.n	8000418 <__adddf3+0x138>
 8000576:	bf00      	nop

08000578 <__aeabi_i2d>:
 8000578:	f090 0f00 	teq	r0, #0
 800057c:	bf04      	itt	eq
 800057e:	2100      	moveq	r1, #0
 8000580:	4770      	bxeq	lr
 8000582:	b530      	push	{r4, r5, lr}
 8000584:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000588:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800058c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000590:	bf48      	it	mi
 8000592:	4240      	negmi	r0, r0
 8000594:	f04f 0100 	mov.w	r1, #0
 8000598:	e73e      	b.n	8000418 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_f2d>:
 800059c:	0042      	lsls	r2, r0, #1
 800059e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80005a2:	ea4f 0131 	mov.w	r1, r1, rrx
 80005a6:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80005aa:	bf1f      	itttt	ne
 80005ac:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80005b0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005b4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005b8:	4770      	bxne	lr
 80005ba:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005be:	bf08      	it	eq
 80005c0:	4770      	bxeq	lr
 80005c2:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005c6:	bf04      	itt	eq
 80005c8:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005cc:	4770      	bxeq	lr
 80005ce:	b530      	push	{r4, r5, lr}
 80005d0:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005d4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005d8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005dc:	e71c      	b.n	8000418 <__adddf3+0x138>
 80005de:	bf00      	nop

080005e0 <__aeabi_ul2d>:
 80005e0:	ea50 0201 	orrs.w	r2, r0, r1
 80005e4:	bf08      	it	eq
 80005e6:	4770      	bxeq	lr
 80005e8:	b530      	push	{r4, r5, lr}
 80005ea:	f04f 0500 	mov.w	r5, #0
 80005ee:	e00a      	b.n	8000606 <__aeabi_l2d+0x16>

080005f0 <__aeabi_l2d>:
 80005f0:	ea50 0201 	orrs.w	r2, r0, r1
 80005f4:	bf08      	it	eq
 80005f6:	4770      	bxeq	lr
 80005f8:	b530      	push	{r4, r5, lr}
 80005fa:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005fe:	d502      	bpl.n	8000606 <__aeabi_l2d+0x16>
 8000600:	4240      	negs	r0, r0
 8000602:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000606:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800060a:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800060e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000612:	f43f aed8 	beq.w	80003c6 <__adddf3+0xe6>
 8000616:	f04f 0203 	mov.w	r2, #3
 800061a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800061e:	bf18      	it	ne
 8000620:	3203      	addne	r2, #3
 8000622:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000626:	bf18      	it	ne
 8000628:	3203      	addne	r2, #3
 800062a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800062e:	f1c2 0320 	rsb	r3, r2, #32
 8000632:	fa00 fc03 	lsl.w	ip, r0, r3
 8000636:	fa20 f002 	lsr.w	r0, r0, r2
 800063a:	fa01 fe03 	lsl.w	lr, r1, r3
 800063e:	ea40 000e 	orr.w	r0, r0, lr
 8000642:	fa21 f102 	lsr.w	r1, r1, r2
 8000646:	4414      	add	r4, r2
 8000648:	e6bd      	b.n	80003c6 <__adddf3+0xe6>
 800064a:	bf00      	nop

0800064c <__aeabi_dmul>:
 800064c:	b570      	push	{r4, r5, r6, lr}
 800064e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000652:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000656:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800065a:	bf1d      	ittte	ne
 800065c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000660:	ea94 0f0c 	teqne	r4, ip
 8000664:	ea95 0f0c 	teqne	r5, ip
 8000668:	f000 f8de 	bleq	8000828 <__aeabi_dmul+0x1dc>
 800066c:	442c      	add	r4, r5
 800066e:	ea81 0603 	eor.w	r6, r1, r3
 8000672:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000676:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800067a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800067e:	bf18      	it	ne
 8000680:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000684:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000688:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800068c:	d038      	beq.n	8000700 <__aeabi_dmul+0xb4>
 800068e:	fba0 ce02 	umull	ip, lr, r0, r2
 8000692:	f04f 0500 	mov.w	r5, #0
 8000696:	fbe1 e502 	umlal	lr, r5, r1, r2
 800069a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800069e:	fbe0 e503 	umlal	lr, r5, r0, r3
 80006a2:	f04f 0600 	mov.w	r6, #0
 80006a6:	fbe1 5603 	umlal	r5, r6, r1, r3
 80006aa:	f09c 0f00 	teq	ip, #0
 80006ae:	bf18      	it	ne
 80006b0:	f04e 0e01 	orrne.w	lr, lr, #1
 80006b4:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80006b8:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80006bc:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006c0:	d204      	bcs.n	80006cc <__aeabi_dmul+0x80>
 80006c2:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006c6:	416d      	adcs	r5, r5
 80006c8:	eb46 0606 	adc.w	r6, r6, r6
 80006cc:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006d0:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006d4:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006d8:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006dc:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006e0:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006e4:	bf88      	it	hi
 80006e6:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006ea:	d81e      	bhi.n	800072a <__aeabi_dmul+0xde>
 80006ec:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006f0:	bf08      	it	eq
 80006f2:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006f6:	f150 0000 	adcs.w	r0, r0, #0
 80006fa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006fe:	bd70      	pop	{r4, r5, r6, pc}
 8000700:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000704:	ea46 0101 	orr.w	r1, r6, r1
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	ea81 0103 	eor.w	r1, r1, r3
 8000710:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000714:	bfc2      	ittt	gt
 8000716:	ebd4 050c 	rsbsgt	r5, r4, ip
 800071a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800071e:	bd70      	popgt	{r4, r5, r6, pc}
 8000720:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000724:	f04f 0e00 	mov.w	lr, #0
 8000728:	3c01      	subs	r4, #1
 800072a:	f300 80ab 	bgt.w	8000884 <__aeabi_dmul+0x238>
 800072e:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000732:	bfde      	ittt	le
 8000734:	2000      	movle	r0, #0
 8000736:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800073a:	bd70      	pople	{r4, r5, r6, pc}
 800073c:	f1c4 0400 	rsb	r4, r4, #0
 8000740:	3c20      	subs	r4, #32
 8000742:	da35      	bge.n	80007b0 <__aeabi_dmul+0x164>
 8000744:	340c      	adds	r4, #12
 8000746:	dc1b      	bgt.n	8000780 <__aeabi_dmul+0x134>
 8000748:	f104 0414 	add.w	r4, r4, #20
 800074c:	f1c4 0520 	rsb	r5, r4, #32
 8000750:	fa00 f305 	lsl.w	r3, r0, r5
 8000754:	fa20 f004 	lsr.w	r0, r0, r4
 8000758:	fa01 f205 	lsl.w	r2, r1, r5
 800075c:	ea40 0002 	orr.w	r0, r0, r2
 8000760:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000764:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000768:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800076c:	fa21 f604 	lsr.w	r6, r1, r4
 8000770:	eb42 0106 	adc.w	r1, r2, r6
 8000774:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000778:	bf08      	it	eq
 800077a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800077e:	bd70      	pop	{r4, r5, r6, pc}
 8000780:	f1c4 040c 	rsb	r4, r4, #12
 8000784:	f1c4 0520 	rsb	r5, r4, #32
 8000788:	fa00 f304 	lsl.w	r3, r0, r4
 800078c:	fa20 f005 	lsr.w	r0, r0, r5
 8000790:	fa01 f204 	lsl.w	r2, r1, r4
 8000794:	ea40 0002 	orr.w	r0, r0, r2
 8000798:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800079c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80007a0:	f141 0100 	adc.w	r1, r1, #0
 80007a4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007a8:	bf08      	it	eq
 80007aa:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007ae:	bd70      	pop	{r4, r5, r6, pc}
 80007b0:	f1c4 0520 	rsb	r5, r4, #32
 80007b4:	fa00 f205 	lsl.w	r2, r0, r5
 80007b8:	ea4e 0e02 	orr.w	lr, lr, r2
 80007bc:	fa20 f304 	lsr.w	r3, r0, r4
 80007c0:	fa01 f205 	lsl.w	r2, r1, r5
 80007c4:	ea43 0302 	orr.w	r3, r3, r2
 80007c8:	fa21 f004 	lsr.w	r0, r1, r4
 80007cc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007d0:	fa21 f204 	lsr.w	r2, r1, r4
 80007d4:	ea20 0002 	bic.w	r0, r0, r2
 80007d8:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007dc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007e0:	bf08      	it	eq
 80007e2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007e6:	bd70      	pop	{r4, r5, r6, pc}
 80007e8:	f094 0f00 	teq	r4, #0
 80007ec:	d10f      	bne.n	800080e <__aeabi_dmul+0x1c2>
 80007ee:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007f2:	0040      	lsls	r0, r0, #1
 80007f4:	eb41 0101 	adc.w	r1, r1, r1
 80007f8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007fc:	bf08      	it	eq
 80007fe:	3c01      	subeq	r4, #1
 8000800:	d0f7      	beq.n	80007f2 <__aeabi_dmul+0x1a6>
 8000802:	ea41 0106 	orr.w	r1, r1, r6
 8000806:	f095 0f00 	teq	r5, #0
 800080a:	bf18      	it	ne
 800080c:	4770      	bxne	lr
 800080e:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000812:	0052      	lsls	r2, r2, #1
 8000814:	eb43 0303 	adc.w	r3, r3, r3
 8000818:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 800081c:	bf08      	it	eq
 800081e:	3d01      	subeq	r5, #1
 8000820:	d0f7      	beq.n	8000812 <__aeabi_dmul+0x1c6>
 8000822:	ea43 0306 	orr.w	r3, r3, r6
 8000826:	4770      	bx	lr
 8000828:	ea94 0f0c 	teq	r4, ip
 800082c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000830:	bf18      	it	ne
 8000832:	ea95 0f0c 	teqne	r5, ip
 8000836:	d00c      	beq.n	8000852 <__aeabi_dmul+0x206>
 8000838:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800083c:	bf18      	it	ne
 800083e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000842:	d1d1      	bne.n	80007e8 <__aeabi_dmul+0x19c>
 8000844:	ea81 0103 	eor.w	r1, r1, r3
 8000848:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000856:	bf06      	itte	eq
 8000858:	4610      	moveq	r0, r2
 800085a:	4619      	moveq	r1, r3
 800085c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000860:	d019      	beq.n	8000896 <__aeabi_dmul+0x24a>
 8000862:	ea94 0f0c 	teq	r4, ip
 8000866:	d102      	bne.n	800086e <__aeabi_dmul+0x222>
 8000868:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 800086c:	d113      	bne.n	8000896 <__aeabi_dmul+0x24a>
 800086e:	ea95 0f0c 	teq	r5, ip
 8000872:	d105      	bne.n	8000880 <__aeabi_dmul+0x234>
 8000874:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000878:	bf1c      	itt	ne
 800087a:	4610      	movne	r0, r2
 800087c:	4619      	movne	r1, r3
 800087e:	d10a      	bne.n	8000896 <__aeabi_dmul+0x24a>
 8000880:	ea81 0103 	eor.w	r1, r1, r3
 8000884:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000888:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800088c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000890:	f04f 0000 	mov.w	r0, #0
 8000894:	bd70      	pop	{r4, r5, r6, pc}
 8000896:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800089a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800089e:	bd70      	pop	{r4, r5, r6, pc}

080008a0 <__aeabi_ddiv>:
 80008a0:	b570      	push	{r4, r5, r6, lr}
 80008a2:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80008a6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80008aa:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80008ae:	bf1d      	ittte	ne
 80008b0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008b4:	ea94 0f0c 	teqne	r4, ip
 80008b8:	ea95 0f0c 	teqne	r5, ip
 80008bc:	f000 f8a7 	bleq	8000a0e <__aeabi_ddiv+0x16e>
 80008c0:	eba4 0405 	sub.w	r4, r4, r5
 80008c4:	ea81 0e03 	eor.w	lr, r1, r3
 80008c8:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008cc:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008d0:	f000 8088 	beq.w	80009e4 <__aeabi_ddiv+0x144>
 80008d4:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008d8:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008dc:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008e0:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008e4:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008e8:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008ec:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008f0:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008f4:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008f8:	429d      	cmp	r5, r3
 80008fa:	bf08      	it	eq
 80008fc:	4296      	cmpeq	r6, r2
 80008fe:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8000902:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000906:	d202      	bcs.n	800090e <__aeabi_ddiv+0x6e>
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	1ab6      	subs	r6, r6, r2
 8000910:	eb65 0503 	sbc.w	r5, r5, r3
 8000914:	085b      	lsrs	r3, r3, #1
 8000916:	ea4f 0232 	mov.w	r2, r2, rrx
 800091a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800091e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8000922:	ebb6 0e02 	subs.w	lr, r6, r2
 8000926:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092a:	bf22      	ittt	cs
 800092c:	1ab6      	subcs	r6, r6, r2
 800092e:	4675      	movcs	r5, lr
 8000930:	ea40 000c 	orrcs.w	r0, r0, ip
 8000934:	085b      	lsrs	r3, r3, #1
 8000936:	ea4f 0232 	mov.w	r2, r2, rrx
 800093a:	ebb6 0e02 	subs.w	lr, r6, r2
 800093e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000942:	bf22      	ittt	cs
 8000944:	1ab6      	subcs	r6, r6, r2
 8000946:	4675      	movcs	r5, lr
 8000948:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 800094c:	085b      	lsrs	r3, r3, #1
 800094e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000952:	ebb6 0e02 	subs.w	lr, r6, r2
 8000956:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095a:	bf22      	ittt	cs
 800095c:	1ab6      	subcs	r6, r6, r2
 800095e:	4675      	movcs	r5, lr
 8000960:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000964:	085b      	lsrs	r3, r3, #1
 8000966:	ea4f 0232 	mov.w	r2, r2, rrx
 800096a:	ebb6 0e02 	subs.w	lr, r6, r2
 800096e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000972:	bf22      	ittt	cs
 8000974:	1ab6      	subcs	r6, r6, r2
 8000976:	4675      	movcs	r5, lr
 8000978:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 800097c:	ea55 0e06 	orrs.w	lr, r5, r6
 8000980:	d018      	beq.n	80009b4 <__aeabi_ddiv+0x114>
 8000982:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000986:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800098a:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800098e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000992:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000996:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800099a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800099e:	d1c0      	bne.n	8000922 <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009a4:	d10b      	bne.n	80009be <__aeabi_ddiv+0x11e>
 80009a6:	ea41 0100 	orr.w	r1, r1, r0
 80009aa:	f04f 0000 	mov.w	r0, #0
 80009ae:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 80009b2:	e7b6      	b.n	8000922 <__aeabi_ddiv+0x82>
 80009b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009b8:	bf04      	itt	eq
 80009ba:	4301      	orreq	r1, r0
 80009bc:	2000      	moveq	r0, #0
 80009be:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009c2:	bf88      	it	hi
 80009c4:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009c8:	f63f aeaf 	bhi.w	800072a <__aeabi_dmul+0xde>
 80009cc:	ebb5 0c03 	subs.w	ip, r5, r3
 80009d0:	bf04      	itt	eq
 80009d2:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009d6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009da:	f150 0000 	adcs.w	r0, r0, #0
 80009de:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009e2:	bd70      	pop	{r4, r5, r6, pc}
 80009e4:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009e8:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009ec:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009f0:	bfc2      	ittt	gt
 80009f2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009f6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009fa:	bd70      	popgt	{r4, r5, r6, pc}
 80009fc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000a00:	f04f 0e00 	mov.w	lr, #0
 8000a04:	3c01      	subs	r4, #1
 8000a06:	e690      	b.n	800072a <__aeabi_dmul+0xde>
 8000a08:	ea45 0e06 	orr.w	lr, r5, r6
 8000a0c:	e68d      	b.n	800072a <__aeabi_dmul+0xde>
 8000a0e:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000a12:	ea94 0f0c 	teq	r4, ip
 8000a16:	bf08      	it	eq
 8000a18:	ea95 0f0c 	teqeq	r5, ip
 8000a1c:	f43f af3b 	beq.w	8000896 <__aeabi_dmul+0x24a>
 8000a20:	ea94 0f0c 	teq	r4, ip
 8000a24:	d10a      	bne.n	8000a3c <__aeabi_ddiv+0x19c>
 8000a26:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a2a:	f47f af34 	bne.w	8000896 <__aeabi_dmul+0x24a>
 8000a2e:	ea95 0f0c 	teq	r5, ip
 8000a32:	f47f af25 	bne.w	8000880 <__aeabi_dmul+0x234>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e72c      	b.n	8000896 <__aeabi_dmul+0x24a>
 8000a3c:	ea95 0f0c 	teq	r5, ip
 8000a40:	d106      	bne.n	8000a50 <__aeabi_ddiv+0x1b0>
 8000a42:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a46:	f43f aefd 	beq.w	8000844 <__aeabi_dmul+0x1f8>
 8000a4a:	4610      	mov	r0, r2
 8000a4c:	4619      	mov	r1, r3
 8000a4e:	e722      	b.n	8000896 <__aeabi_dmul+0x24a>
 8000a50:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a54:	bf18      	it	ne
 8000a56:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a5a:	f47f aec5 	bne.w	80007e8 <__aeabi_dmul+0x19c>
 8000a5e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a62:	f47f af0d 	bne.w	8000880 <__aeabi_dmul+0x234>
 8000a66:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a6a:	f47f aeeb 	bne.w	8000844 <__aeabi_dmul+0x1f8>
 8000a6e:	e712      	b.n	8000896 <__aeabi_dmul+0x24a>

08000a70 <__gedf2>:
 8000a70:	f04f 3cff 	mov.w	ip, #4294967295
 8000a74:	e006      	b.n	8000a84 <__cmpdf2+0x4>
 8000a76:	bf00      	nop

08000a78 <__ledf2>:
 8000a78:	f04f 0c01 	mov.w	ip, #1
 8000a7c:	e002      	b.n	8000a84 <__cmpdf2+0x4>
 8000a7e:	bf00      	nop

08000a80 <__cmpdf2>:
 8000a80:	f04f 0c01 	mov.w	ip, #1
 8000a84:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a88:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a8c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	bf18      	it	ne
 8000a96:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a9a:	d01b      	beq.n	8000ad4 <__cmpdf2+0x54>
 8000a9c:	b001      	add	sp, #4
 8000a9e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000aa2:	bf0c      	ite	eq
 8000aa4:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000aa8:	ea91 0f03 	teqne	r1, r3
 8000aac:	bf02      	ittt	eq
 8000aae:	ea90 0f02 	teqeq	r0, r2
 8000ab2:	2000      	moveq	r0, #0
 8000ab4:	4770      	bxeq	lr
 8000ab6:	f110 0f00 	cmn.w	r0, #0
 8000aba:	ea91 0f03 	teq	r1, r3
 8000abe:	bf58      	it	pl
 8000ac0:	4299      	cmppl	r1, r3
 8000ac2:	bf08      	it	eq
 8000ac4:	4290      	cmpeq	r0, r2
 8000ac6:	bf2c      	ite	cs
 8000ac8:	17d8      	asrcs	r0, r3, #31
 8000aca:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000ace:	f040 0001 	orr.w	r0, r0, #1
 8000ad2:	4770      	bx	lr
 8000ad4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ad8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000adc:	d102      	bne.n	8000ae4 <__cmpdf2+0x64>
 8000ade:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ae2:	d107      	bne.n	8000af4 <__cmpdf2+0x74>
 8000ae4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ae8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aec:	d1d6      	bne.n	8000a9c <__cmpdf2+0x1c>
 8000aee:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000af2:	d0d3      	beq.n	8000a9c <__cmpdf2+0x1c>
 8000af4:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000af8:	4770      	bx	lr
 8000afa:	bf00      	nop

08000afc <__aeabi_cdrcmple>:
 8000afc:	4684      	mov	ip, r0
 8000afe:	4610      	mov	r0, r2
 8000b00:	4662      	mov	r2, ip
 8000b02:	468c      	mov	ip, r1
 8000b04:	4619      	mov	r1, r3
 8000b06:	4663      	mov	r3, ip
 8000b08:	e000      	b.n	8000b0c <__aeabi_cdcmpeq>
 8000b0a:	bf00      	nop

08000b0c <__aeabi_cdcmpeq>:
 8000b0c:	b501      	push	{r0, lr}
 8000b0e:	f7ff ffb7 	bl	8000a80 <__cmpdf2>
 8000b12:	2800      	cmp	r0, #0
 8000b14:	bf48      	it	mi
 8000b16:	f110 0f00 	cmnmi.w	r0, #0
 8000b1a:	bd01      	pop	{r0, pc}

08000b1c <__aeabi_dcmpeq>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff fff4 	bl	8000b0c <__aeabi_cdcmpeq>
 8000b24:	bf0c      	ite	eq
 8000b26:	2001      	moveq	r0, #1
 8000b28:	2000      	movne	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmplt>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffea 	bl	8000b0c <__aeabi_cdcmpeq>
 8000b38:	bf34      	ite	cc
 8000b3a:	2001      	movcc	r0, #1
 8000b3c:	2000      	movcs	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmple>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffe0 	bl	8000b0c <__aeabi_cdcmpeq>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpge>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffce 	bl	8000afc <__aeabi_cdrcmple>
 8000b60:	bf94      	ite	ls
 8000b62:	2001      	movls	r0, #1
 8000b64:	2000      	movhi	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpgt>:
 8000b6c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b70:	f7ff ffc4 	bl	8000afc <__aeabi_cdrcmple>
 8000b74:	bf34      	ite	cc
 8000b76:	2001      	movcc	r0, #1
 8000b78:	2000      	movcs	r0, #0
 8000b7a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b7e:	bf00      	nop

08000b80 <__aeabi_dcmpun>:
 8000b80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b88:	d102      	bne.n	8000b90 <__aeabi_dcmpun+0x10>
 8000b8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b8e:	d10a      	bne.n	8000ba6 <__aeabi_dcmpun+0x26>
 8000b90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b98:	d102      	bne.n	8000ba0 <__aeabi_dcmpun+0x20>
 8000b9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b9e:	d102      	bne.n	8000ba6 <__aeabi_dcmpun+0x26>
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	f04f 0001 	mov.w	r0, #1
 8000baa:	4770      	bx	lr

08000bac <__aeabi_d2iz>:
 8000bac:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bb0:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bb4:	d215      	bcs.n	8000be2 <__aeabi_d2iz+0x36>
 8000bb6:	d511      	bpl.n	8000bdc <__aeabi_d2iz+0x30>
 8000bb8:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bbc:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bc0:	d912      	bls.n	8000be8 <__aeabi_d2iz+0x3c>
 8000bc2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bc6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bca:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bce:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000bd2:	fa23 f002 	lsr.w	r0, r3, r2
 8000bd6:	bf18      	it	ne
 8000bd8:	4240      	negne	r0, r0
 8000bda:	4770      	bx	lr
 8000bdc:	f04f 0000 	mov.w	r0, #0
 8000be0:	4770      	bx	lr
 8000be2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000be6:	d105      	bne.n	8000bf4 <__aeabi_d2iz+0x48>
 8000be8:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bec:	bf08      	it	eq
 8000bee:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bf2:	4770      	bx	lr
 8000bf4:	f04f 0000 	mov.w	r0, #0
 8000bf8:	4770      	bx	lr
 8000bfa:	bf00      	nop

08000bfc <__aeabi_d2uiz>:
 8000bfc:	004a      	lsls	r2, r1, #1
 8000bfe:	d211      	bcs.n	8000c24 <__aeabi_d2uiz+0x28>
 8000c00:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000c04:	d211      	bcs.n	8000c2a <__aeabi_d2uiz+0x2e>
 8000c06:	d50d      	bpl.n	8000c24 <__aeabi_d2uiz+0x28>
 8000c08:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000c0c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000c10:	d40e      	bmi.n	8000c30 <__aeabi_d2uiz+0x34>
 8000c12:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c16:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000c1a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000c1e:	fa23 f002 	lsr.w	r0, r3, r2
 8000c22:	4770      	bx	lr
 8000c24:	f04f 0000 	mov.w	r0, #0
 8000c28:	4770      	bx	lr
 8000c2a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000c2e:	d102      	bne.n	8000c36 <__aeabi_d2uiz+0x3a>
 8000c30:	f04f 30ff 	mov.w	r0, #4294967295
 8000c34:	4770      	bx	lr
 8000c36:	f04f 0000 	mov.w	r0, #0
 8000c3a:	4770      	bx	lr

08000c3c <__aeabi_d2f>:
 8000c3c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000c40:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000c44:	bf24      	itt	cs
 8000c46:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000c4a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000c4e:	d90d      	bls.n	8000c6c <__aeabi_d2f+0x30>
 8000c50:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c54:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c58:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c5c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c60:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c64:	bf08      	it	eq
 8000c66:	f020 0001 	biceq.w	r0, r0, #1
 8000c6a:	4770      	bx	lr
 8000c6c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c70:	d121      	bne.n	8000cb6 <__aeabi_d2f+0x7a>
 8000c72:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c76:	bfbc      	itt	lt
 8000c78:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c7c:	4770      	bxlt	lr
 8000c7e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c82:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c86:	f1c2 0218 	rsb	r2, r2, #24
 8000c8a:	f1c2 0c20 	rsb	ip, r2, #32
 8000c8e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c92:	fa20 f002 	lsr.w	r0, r0, r2
 8000c96:	bf18      	it	ne
 8000c98:	f040 0001 	orrne.w	r0, r0, #1
 8000c9c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000ca0:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000ca4:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000ca8:	ea40 000c 	orr.w	r0, r0, ip
 8000cac:	fa23 f302 	lsr.w	r3, r3, r2
 8000cb0:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000cb4:	e7cc      	b.n	8000c50 <__aeabi_d2f+0x14>
 8000cb6:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000cba:	d107      	bne.n	8000ccc <__aeabi_d2f+0x90>
 8000cbc:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000cc0:	bf1e      	ittt	ne
 8000cc2:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000cc6:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000cca:	4770      	bxne	lr
 8000ccc:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000cd0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000cd4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000cd8:	4770      	bx	lr
 8000cda:	bf00      	nop

08000cdc <__aeabi_frsub>:
 8000cdc:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8000ce0:	e002      	b.n	8000ce8 <__addsf3>
 8000ce2:	bf00      	nop

08000ce4 <__aeabi_fsub>:
 8000ce4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08000ce8 <__addsf3>:
 8000ce8:	0042      	lsls	r2, r0, #1
 8000cea:	bf1f      	itttt	ne
 8000cec:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000cf0:	ea92 0f03 	teqne	r2, r3
 8000cf4:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000cf8:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000cfc:	d06a      	beq.n	8000dd4 <__addsf3+0xec>
 8000cfe:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000d02:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000d06:	bfc1      	itttt	gt
 8000d08:	18d2      	addgt	r2, r2, r3
 8000d0a:	4041      	eorgt	r1, r0
 8000d0c:	4048      	eorgt	r0, r1
 8000d0e:	4041      	eorgt	r1, r0
 8000d10:	bfb8      	it	lt
 8000d12:	425b      	neglt	r3, r3
 8000d14:	2b19      	cmp	r3, #25
 8000d16:	bf88      	it	hi
 8000d18:	4770      	bxhi	lr
 8000d1a:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000d1e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000d22:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8000d26:	bf18      	it	ne
 8000d28:	4240      	negne	r0, r0
 8000d2a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000d2e:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8000d32:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8000d36:	bf18      	it	ne
 8000d38:	4249      	negne	r1, r1
 8000d3a:	ea92 0f03 	teq	r2, r3
 8000d3e:	d03f      	beq.n	8000dc0 <__addsf3+0xd8>
 8000d40:	f1a2 0201 	sub.w	r2, r2, #1
 8000d44:	fa41 fc03 	asr.w	ip, r1, r3
 8000d48:	eb10 000c 	adds.w	r0, r0, ip
 8000d4c:	f1c3 0320 	rsb	r3, r3, #32
 8000d50:	fa01 f103 	lsl.w	r1, r1, r3
 8000d54:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000d58:	d502      	bpl.n	8000d60 <__addsf3+0x78>
 8000d5a:	4249      	negs	r1, r1
 8000d5c:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000d60:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8000d64:	d313      	bcc.n	8000d8e <__addsf3+0xa6>
 8000d66:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8000d6a:	d306      	bcc.n	8000d7a <__addsf3+0x92>
 8000d6c:	0840      	lsrs	r0, r0, #1
 8000d6e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000d72:	f102 0201 	add.w	r2, r2, #1
 8000d76:	2afe      	cmp	r2, #254	; 0xfe
 8000d78:	d251      	bcs.n	8000e1e <__addsf3+0x136>
 8000d7a:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8000d7e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000d82:	bf08      	it	eq
 8000d84:	f020 0001 	biceq.w	r0, r0, #1
 8000d88:	ea40 0003 	orr.w	r0, r0, r3
 8000d8c:	4770      	bx	lr
 8000d8e:	0049      	lsls	r1, r1, #1
 8000d90:	eb40 0000 	adc.w	r0, r0, r0
 8000d94:	3a01      	subs	r2, #1
 8000d96:	bf28      	it	cs
 8000d98:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8000d9c:	d2ed      	bcs.n	8000d7a <__addsf3+0x92>
 8000d9e:	fab0 fc80 	clz	ip, r0
 8000da2:	f1ac 0c08 	sub.w	ip, ip, #8
 8000da6:	ebb2 020c 	subs.w	r2, r2, ip
 8000daa:	fa00 f00c 	lsl.w	r0, r0, ip
 8000dae:	bfaa      	itet	ge
 8000db0:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000db4:	4252      	neglt	r2, r2
 8000db6:	4318      	orrge	r0, r3
 8000db8:	bfbc      	itt	lt
 8000dba:	40d0      	lsrlt	r0, r2
 8000dbc:	4318      	orrlt	r0, r3
 8000dbe:	4770      	bx	lr
 8000dc0:	f092 0f00 	teq	r2, #0
 8000dc4:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000dc8:	bf06      	itte	eq
 8000dca:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8000dce:	3201      	addeq	r2, #1
 8000dd0:	3b01      	subne	r3, #1
 8000dd2:	e7b5      	b.n	8000d40 <__addsf3+0x58>
 8000dd4:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000dd8:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000ddc:	bf18      	it	ne
 8000dde:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000de2:	d021      	beq.n	8000e28 <__addsf3+0x140>
 8000de4:	ea92 0f03 	teq	r2, r3
 8000de8:	d004      	beq.n	8000df4 <__addsf3+0x10c>
 8000dea:	f092 0f00 	teq	r2, #0
 8000dee:	bf08      	it	eq
 8000df0:	4608      	moveq	r0, r1
 8000df2:	4770      	bx	lr
 8000df4:	ea90 0f01 	teq	r0, r1
 8000df8:	bf1c      	itt	ne
 8000dfa:	2000      	movne	r0, #0
 8000dfc:	4770      	bxne	lr
 8000dfe:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8000e02:	d104      	bne.n	8000e0e <__addsf3+0x126>
 8000e04:	0040      	lsls	r0, r0, #1
 8000e06:	bf28      	it	cs
 8000e08:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000e0c:	4770      	bx	lr
 8000e0e:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8000e12:	bf3c      	itt	cc
 8000e14:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000e18:	4770      	bxcc	lr
 8000e1a:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000e1e:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8000e22:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000e26:	4770      	bx	lr
 8000e28:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000e2c:	bf16      	itet	ne
 8000e2e:	4608      	movne	r0, r1
 8000e30:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000e34:	4601      	movne	r1, r0
 8000e36:	0242      	lsls	r2, r0, #9
 8000e38:	bf06      	itte	eq
 8000e3a:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000e3e:	ea90 0f01 	teqeq	r0, r1
 8000e42:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8000e46:	4770      	bx	lr

08000e48 <__aeabi_ui2f>:
 8000e48:	f04f 0300 	mov.w	r3, #0
 8000e4c:	e004      	b.n	8000e58 <__aeabi_i2f+0x8>
 8000e4e:	bf00      	nop

08000e50 <__aeabi_i2f>:
 8000e50:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8000e54:	bf48      	it	mi
 8000e56:	4240      	negmi	r0, r0
 8000e58:	ea5f 0c00 	movs.w	ip, r0
 8000e5c:	bf08      	it	eq
 8000e5e:	4770      	bxeq	lr
 8000e60:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8000e64:	4601      	mov	r1, r0
 8000e66:	f04f 0000 	mov.w	r0, #0
 8000e6a:	e01c      	b.n	8000ea6 <__aeabi_l2f+0x2a>

08000e6c <__aeabi_ul2f>:
 8000e6c:	ea50 0201 	orrs.w	r2, r0, r1
 8000e70:	bf08      	it	eq
 8000e72:	4770      	bxeq	lr
 8000e74:	f04f 0300 	mov.w	r3, #0
 8000e78:	e00a      	b.n	8000e90 <__aeabi_l2f+0x14>
 8000e7a:	bf00      	nop

08000e7c <__aeabi_l2f>:
 8000e7c:	ea50 0201 	orrs.w	r2, r0, r1
 8000e80:	bf08      	it	eq
 8000e82:	4770      	bxeq	lr
 8000e84:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8000e88:	d502      	bpl.n	8000e90 <__aeabi_l2f+0x14>
 8000e8a:	4240      	negs	r0, r0
 8000e8c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000e90:	ea5f 0c01 	movs.w	ip, r1
 8000e94:	bf02      	ittt	eq
 8000e96:	4684      	moveq	ip, r0
 8000e98:	4601      	moveq	r1, r0
 8000e9a:	2000      	moveq	r0, #0
 8000e9c:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8000ea0:	bf08      	it	eq
 8000ea2:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8000ea6:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8000eaa:	fabc f28c 	clz	r2, ip
 8000eae:	3a08      	subs	r2, #8
 8000eb0:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000eb4:	db10      	blt.n	8000ed8 <__aeabi_l2f+0x5c>
 8000eb6:	fa01 fc02 	lsl.w	ip, r1, r2
 8000eba:	4463      	add	r3, ip
 8000ebc:	fa00 fc02 	lsl.w	ip, r0, r2
 8000ec0:	f1c2 0220 	rsb	r2, r2, #32
 8000ec4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000ec8:	fa20 f202 	lsr.w	r2, r0, r2
 8000ecc:	eb43 0002 	adc.w	r0, r3, r2
 8000ed0:	bf08      	it	eq
 8000ed2:	f020 0001 	biceq.w	r0, r0, #1
 8000ed6:	4770      	bx	lr
 8000ed8:	f102 0220 	add.w	r2, r2, #32
 8000edc:	fa01 fc02 	lsl.w	ip, r1, r2
 8000ee0:	f1c2 0220 	rsb	r2, r2, #32
 8000ee4:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000ee8:	fa21 f202 	lsr.w	r2, r1, r2
 8000eec:	eb43 0002 	adc.w	r0, r3, r2
 8000ef0:	bf08      	it	eq
 8000ef2:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000ef6:	4770      	bx	lr

08000ef8 <__aeabi_fmul>:
 8000ef8:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000efc:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000f00:	bf1e      	ittt	ne
 8000f02:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000f06:	ea92 0f0c 	teqne	r2, ip
 8000f0a:	ea93 0f0c 	teqne	r3, ip
 8000f0e:	d06f      	beq.n	8000ff0 <__aeabi_fmul+0xf8>
 8000f10:	441a      	add	r2, r3
 8000f12:	ea80 0c01 	eor.w	ip, r0, r1
 8000f16:	0240      	lsls	r0, r0, #9
 8000f18:	bf18      	it	ne
 8000f1a:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000f1e:	d01e      	beq.n	8000f5e <__aeabi_fmul+0x66>
 8000f20:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8000f24:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000f28:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000f2c:	fba0 3101 	umull	r3, r1, r0, r1
 8000f30:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000f34:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8000f38:	bf3e      	ittt	cc
 8000f3a:	0049      	lslcc	r1, r1, #1
 8000f3c:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000f40:	005b      	lslcc	r3, r3, #1
 8000f42:	ea40 0001 	orr.w	r0, r0, r1
 8000f46:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 8000f4a:	2afd      	cmp	r2, #253	; 0xfd
 8000f4c:	d81d      	bhi.n	8000f8a <__aeabi_fmul+0x92>
 8000f4e:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8000f52:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000f56:	bf08      	it	eq
 8000f58:	f020 0001 	biceq.w	r0, r0, #1
 8000f5c:	4770      	bx	lr
 8000f5e:	f090 0f00 	teq	r0, #0
 8000f62:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000f66:	bf08      	it	eq
 8000f68:	0249      	lsleq	r1, r1, #9
 8000f6a:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000f6e:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000f72:	3a7f      	subs	r2, #127	; 0x7f
 8000f74:	bfc2      	ittt	gt
 8000f76:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000f7a:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000f7e:	4770      	bxgt	lr
 8000f80:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000f84:	f04f 0300 	mov.w	r3, #0
 8000f88:	3a01      	subs	r2, #1
 8000f8a:	dc5d      	bgt.n	8001048 <__aeabi_fmul+0x150>
 8000f8c:	f112 0f19 	cmn.w	r2, #25
 8000f90:	bfdc      	itt	le
 8000f92:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8000f96:	4770      	bxle	lr
 8000f98:	f1c2 0200 	rsb	r2, r2, #0
 8000f9c:	0041      	lsls	r1, r0, #1
 8000f9e:	fa21 f102 	lsr.w	r1, r1, r2
 8000fa2:	f1c2 0220 	rsb	r2, r2, #32
 8000fa6:	fa00 fc02 	lsl.w	ip, r0, r2
 8000faa:	ea5f 0031 	movs.w	r0, r1, rrx
 8000fae:	f140 0000 	adc.w	r0, r0, #0
 8000fb2:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000fb6:	bf08      	it	eq
 8000fb8:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000fbc:	4770      	bx	lr
 8000fbe:	f092 0f00 	teq	r2, #0
 8000fc2:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000fc6:	bf02      	ittt	eq
 8000fc8:	0040      	lsleq	r0, r0, #1
 8000fca:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000fce:	3a01      	subeq	r2, #1
 8000fd0:	d0f9      	beq.n	8000fc6 <__aeabi_fmul+0xce>
 8000fd2:	ea40 000c 	orr.w	r0, r0, ip
 8000fd6:	f093 0f00 	teq	r3, #0
 8000fda:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000fde:	bf02      	ittt	eq
 8000fe0:	0049      	lsleq	r1, r1, #1
 8000fe2:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000fe6:	3b01      	subeq	r3, #1
 8000fe8:	d0f9      	beq.n	8000fde <__aeabi_fmul+0xe6>
 8000fea:	ea41 010c 	orr.w	r1, r1, ip
 8000fee:	e78f      	b.n	8000f10 <__aeabi_fmul+0x18>
 8000ff0:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000ff4:	ea92 0f0c 	teq	r2, ip
 8000ff8:	bf18      	it	ne
 8000ffa:	ea93 0f0c 	teqne	r3, ip
 8000ffe:	d00a      	beq.n	8001016 <__aeabi_fmul+0x11e>
 8001000:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8001004:	bf18      	it	ne
 8001006:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 800100a:	d1d8      	bne.n	8000fbe <__aeabi_fmul+0xc6>
 800100c:	ea80 0001 	eor.w	r0, r0, r1
 8001010:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8001014:	4770      	bx	lr
 8001016:	f090 0f00 	teq	r0, #0
 800101a:	bf17      	itett	ne
 800101c:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8001020:	4608      	moveq	r0, r1
 8001022:	f091 0f00 	teqne	r1, #0
 8001026:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 800102a:	d014      	beq.n	8001056 <__aeabi_fmul+0x15e>
 800102c:	ea92 0f0c 	teq	r2, ip
 8001030:	d101      	bne.n	8001036 <__aeabi_fmul+0x13e>
 8001032:	0242      	lsls	r2, r0, #9
 8001034:	d10f      	bne.n	8001056 <__aeabi_fmul+0x15e>
 8001036:	ea93 0f0c 	teq	r3, ip
 800103a:	d103      	bne.n	8001044 <__aeabi_fmul+0x14c>
 800103c:	024b      	lsls	r3, r1, #9
 800103e:	bf18      	it	ne
 8001040:	4608      	movne	r0, r1
 8001042:	d108      	bne.n	8001056 <__aeabi_fmul+0x15e>
 8001044:	ea80 0001 	eor.w	r0, r0, r1
 8001048:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 800104c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8001050:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8001054:	4770      	bx	lr
 8001056:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 800105a:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 800105e:	4770      	bx	lr

08001060 <__aeabi_fdiv>:
 8001060:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8001064:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8001068:	bf1e      	ittt	ne
 800106a:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 800106e:	ea92 0f0c 	teqne	r2, ip
 8001072:	ea93 0f0c 	teqne	r3, ip
 8001076:	d069      	beq.n	800114c <__aeabi_fdiv+0xec>
 8001078:	eba2 0203 	sub.w	r2, r2, r3
 800107c:	ea80 0c01 	eor.w	ip, r0, r1
 8001080:	0249      	lsls	r1, r1, #9
 8001082:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8001086:	d037      	beq.n	80010f8 <__aeabi_fdiv+0x98>
 8001088:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800108c:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8001090:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8001094:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8001098:	428b      	cmp	r3, r1
 800109a:	bf38      	it	cc
 800109c:	005b      	lslcc	r3, r3, #1
 800109e:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 80010a2:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 80010a6:	428b      	cmp	r3, r1
 80010a8:	bf24      	itt	cs
 80010aa:	1a5b      	subcs	r3, r3, r1
 80010ac:	ea40 000c 	orrcs.w	r0, r0, ip
 80010b0:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 80010b4:	bf24      	itt	cs
 80010b6:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 80010ba:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80010be:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 80010c2:	bf24      	itt	cs
 80010c4:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 80010c8:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80010cc:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 80010d0:	bf24      	itt	cs
 80010d2:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 80010d6:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80010da:	011b      	lsls	r3, r3, #4
 80010dc:	bf18      	it	ne
 80010de:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 80010e2:	d1e0      	bne.n	80010a6 <__aeabi_fdiv+0x46>
 80010e4:	2afd      	cmp	r2, #253	; 0xfd
 80010e6:	f63f af50 	bhi.w	8000f8a <__aeabi_fmul+0x92>
 80010ea:	428b      	cmp	r3, r1
 80010ec:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80010f0:	bf08      	it	eq
 80010f2:	f020 0001 	biceq.w	r0, r0, #1
 80010f6:	4770      	bx	lr
 80010f8:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 80010fc:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8001100:	327f      	adds	r2, #127	; 0x7f
 8001102:	bfc2      	ittt	gt
 8001104:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8001108:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 800110c:	4770      	bxgt	lr
 800110e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8001112:	f04f 0300 	mov.w	r3, #0
 8001116:	3a01      	subs	r2, #1
 8001118:	e737      	b.n	8000f8a <__aeabi_fmul+0x92>
 800111a:	f092 0f00 	teq	r2, #0
 800111e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8001122:	bf02      	ittt	eq
 8001124:	0040      	lsleq	r0, r0, #1
 8001126:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 800112a:	3a01      	subeq	r2, #1
 800112c:	d0f9      	beq.n	8001122 <__aeabi_fdiv+0xc2>
 800112e:	ea40 000c 	orr.w	r0, r0, ip
 8001132:	f093 0f00 	teq	r3, #0
 8001136:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 800113a:	bf02      	ittt	eq
 800113c:	0049      	lsleq	r1, r1, #1
 800113e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8001142:	3b01      	subeq	r3, #1
 8001144:	d0f9      	beq.n	800113a <__aeabi_fdiv+0xda>
 8001146:	ea41 010c 	orr.w	r1, r1, ip
 800114a:	e795      	b.n	8001078 <__aeabi_fdiv+0x18>
 800114c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8001150:	ea92 0f0c 	teq	r2, ip
 8001154:	d108      	bne.n	8001168 <__aeabi_fdiv+0x108>
 8001156:	0242      	lsls	r2, r0, #9
 8001158:	f47f af7d 	bne.w	8001056 <__aeabi_fmul+0x15e>
 800115c:	ea93 0f0c 	teq	r3, ip
 8001160:	f47f af70 	bne.w	8001044 <__aeabi_fmul+0x14c>
 8001164:	4608      	mov	r0, r1
 8001166:	e776      	b.n	8001056 <__aeabi_fmul+0x15e>
 8001168:	ea93 0f0c 	teq	r3, ip
 800116c:	d104      	bne.n	8001178 <__aeabi_fdiv+0x118>
 800116e:	024b      	lsls	r3, r1, #9
 8001170:	f43f af4c 	beq.w	800100c <__aeabi_fmul+0x114>
 8001174:	4608      	mov	r0, r1
 8001176:	e76e      	b.n	8001056 <__aeabi_fmul+0x15e>
 8001178:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 800117c:	bf18      	it	ne
 800117e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8001182:	d1ca      	bne.n	800111a <__aeabi_fdiv+0xba>
 8001184:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 8001188:	f47f af5c 	bne.w	8001044 <__aeabi_fmul+0x14c>
 800118c:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 8001190:	f47f af3c 	bne.w	800100c <__aeabi_fmul+0x114>
 8001194:	e75f      	b.n	8001056 <__aeabi_fmul+0x15e>
 8001196:	bf00      	nop

08001198 <__gesf2>:
 8001198:	f04f 3cff 	mov.w	ip, #4294967295
 800119c:	e006      	b.n	80011ac <__cmpsf2+0x4>
 800119e:	bf00      	nop

080011a0 <__lesf2>:
 80011a0:	f04f 0c01 	mov.w	ip, #1
 80011a4:	e002      	b.n	80011ac <__cmpsf2+0x4>
 80011a6:	bf00      	nop

080011a8 <__cmpsf2>:
 80011a8:	f04f 0c01 	mov.w	ip, #1
 80011ac:	f84d cd04 	str.w	ip, [sp, #-4]!
 80011b0:	ea4f 0240 	mov.w	r2, r0, lsl #1
 80011b4:	ea4f 0341 	mov.w	r3, r1, lsl #1
 80011b8:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 80011bc:	bf18      	it	ne
 80011be:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 80011c2:	d011      	beq.n	80011e8 <__cmpsf2+0x40>
 80011c4:	b001      	add	sp, #4
 80011c6:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 80011ca:	bf18      	it	ne
 80011cc:	ea90 0f01 	teqne	r0, r1
 80011d0:	bf58      	it	pl
 80011d2:	ebb2 0003 	subspl.w	r0, r2, r3
 80011d6:	bf88      	it	hi
 80011d8:	17c8      	asrhi	r0, r1, #31
 80011da:	bf38      	it	cc
 80011dc:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 80011e0:	bf18      	it	ne
 80011e2:	f040 0001 	orrne.w	r0, r0, #1
 80011e6:	4770      	bx	lr
 80011e8:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 80011ec:	d102      	bne.n	80011f4 <__cmpsf2+0x4c>
 80011ee:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 80011f2:	d105      	bne.n	8001200 <__cmpsf2+0x58>
 80011f4:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 80011f8:	d1e4      	bne.n	80011c4 <__cmpsf2+0x1c>
 80011fa:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 80011fe:	d0e1      	beq.n	80011c4 <__cmpsf2+0x1c>
 8001200:	f85d 0b04 	ldr.w	r0, [sp], #4
 8001204:	4770      	bx	lr
 8001206:	bf00      	nop

08001208 <__aeabi_cfrcmple>:
 8001208:	4684      	mov	ip, r0
 800120a:	4608      	mov	r0, r1
 800120c:	4661      	mov	r1, ip
 800120e:	e7ff      	b.n	8001210 <__aeabi_cfcmpeq>

08001210 <__aeabi_cfcmpeq>:
 8001210:	b50f      	push	{r0, r1, r2, r3, lr}
 8001212:	f7ff ffc9 	bl	80011a8 <__cmpsf2>
 8001216:	2800      	cmp	r0, #0
 8001218:	bf48      	it	mi
 800121a:	f110 0f00 	cmnmi.w	r0, #0
 800121e:	bd0f      	pop	{r0, r1, r2, r3, pc}

08001220 <__aeabi_fcmpeq>:
 8001220:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001224:	f7ff fff4 	bl	8001210 <__aeabi_cfcmpeq>
 8001228:	bf0c      	ite	eq
 800122a:	2001      	moveq	r0, #1
 800122c:	2000      	movne	r0, #0
 800122e:	f85d fb08 	ldr.w	pc, [sp], #8
 8001232:	bf00      	nop

08001234 <__aeabi_fcmplt>:
 8001234:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001238:	f7ff ffea 	bl	8001210 <__aeabi_cfcmpeq>
 800123c:	bf34      	ite	cc
 800123e:	2001      	movcc	r0, #1
 8001240:	2000      	movcs	r0, #0
 8001242:	f85d fb08 	ldr.w	pc, [sp], #8
 8001246:	bf00      	nop

08001248 <__aeabi_fcmple>:
 8001248:	f84d ed08 	str.w	lr, [sp, #-8]!
 800124c:	f7ff ffe0 	bl	8001210 <__aeabi_cfcmpeq>
 8001250:	bf94      	ite	ls
 8001252:	2001      	movls	r0, #1
 8001254:	2000      	movhi	r0, #0
 8001256:	f85d fb08 	ldr.w	pc, [sp], #8
 800125a:	bf00      	nop

0800125c <__aeabi_fcmpge>:
 800125c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001260:	f7ff ffd2 	bl	8001208 <__aeabi_cfrcmple>
 8001264:	bf94      	ite	ls
 8001266:	2001      	movls	r0, #1
 8001268:	2000      	movhi	r0, #0
 800126a:	f85d fb08 	ldr.w	pc, [sp], #8
 800126e:	bf00      	nop

08001270 <__aeabi_fcmpgt>:
 8001270:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001274:	f7ff ffc8 	bl	8001208 <__aeabi_cfrcmple>
 8001278:	bf34      	ite	cc
 800127a:	2001      	movcc	r0, #1
 800127c:	2000      	movcs	r0, #0
 800127e:	f85d fb08 	ldr.w	pc, [sp], #8
 8001282:	bf00      	nop

08001284 <__aeabi_fcmpun>:
 8001284:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8001288:	ea4f 0341 	mov.w	r3, r1, lsl #1
 800128c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8001290:	d102      	bne.n	8001298 <__aeabi_fcmpun+0x14>
 8001292:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8001296:	d108      	bne.n	80012aa <__aeabi_fcmpun+0x26>
 8001298:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 800129c:	d102      	bne.n	80012a4 <__aeabi_fcmpun+0x20>
 800129e:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 80012a2:	d102      	bne.n	80012aa <__aeabi_fcmpun+0x26>
 80012a4:	f04f 0000 	mov.w	r0, #0
 80012a8:	4770      	bx	lr
 80012aa:	f04f 0001 	mov.w	r0, #1
 80012ae:	4770      	bx	lr

080012b0 <__aeabi_f2iz>:
 80012b0:	ea4f 0240 	mov.w	r2, r0, lsl #1
 80012b4:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 80012b8:	d30f      	bcc.n	80012da <__aeabi_f2iz+0x2a>
 80012ba:	f04f 039e 	mov.w	r3, #158	; 0x9e
 80012be:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 80012c2:	d90d      	bls.n	80012e0 <__aeabi_f2iz+0x30>
 80012c4:	ea4f 2300 	mov.w	r3, r0, lsl #8
 80012c8:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 80012cc:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 80012d0:	fa23 f002 	lsr.w	r0, r3, r2
 80012d4:	bf18      	it	ne
 80012d6:	4240      	negne	r0, r0
 80012d8:	4770      	bx	lr
 80012da:	f04f 0000 	mov.w	r0, #0
 80012de:	4770      	bx	lr
 80012e0:	f112 0f61 	cmn.w	r2, #97	; 0x61
 80012e4:	d101      	bne.n	80012ea <__aeabi_f2iz+0x3a>
 80012e6:	0242      	lsls	r2, r0, #9
 80012e8:	d105      	bne.n	80012f6 <__aeabi_f2iz+0x46>
 80012ea:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
 80012ee:	bf08      	it	eq
 80012f0:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 80012f4:	4770      	bx	lr
 80012f6:	f04f 0000 	mov.w	r0, #0
 80012fa:	4770      	bx	lr

080012fc <__aeabi_f2uiz>:
 80012fc:	0042      	lsls	r2, r0, #1
 80012fe:	d20e      	bcs.n	800131e <__aeabi_f2uiz+0x22>
 8001300:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8001304:	d30b      	bcc.n	800131e <__aeabi_f2uiz+0x22>
 8001306:	f04f 039e 	mov.w	r3, #158	; 0x9e
 800130a:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 800130e:	d409      	bmi.n	8001324 <__aeabi_f2uiz+0x28>
 8001310:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8001314:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8001318:	fa23 f002 	lsr.w	r0, r3, r2
 800131c:	4770      	bx	lr
 800131e:	f04f 0000 	mov.w	r0, #0
 8001322:	4770      	bx	lr
 8001324:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8001328:	d101      	bne.n	800132e <__aeabi_f2uiz+0x32>
 800132a:	0242      	lsls	r2, r0, #9
 800132c:	d102      	bne.n	8001334 <__aeabi_f2uiz+0x38>
 800132e:	f04f 30ff 	mov.w	r0, #4294967295
 8001332:	4770      	bx	lr
 8001334:	f04f 0000 	mov.w	r0, #0
 8001338:	4770      	bx	lr
 800133a:	bf00      	nop

0800133c <__aeabi_d2lz>:
 800133c:	b538      	push	{r3, r4, r5, lr}
 800133e:	4605      	mov	r5, r0
 8001340:	460c      	mov	r4, r1
 8001342:	4628      	mov	r0, r5
 8001344:	4621      	mov	r1, r4
 8001346:	2200      	movs	r2, #0
 8001348:	2300      	movs	r3, #0
 800134a:	f7ff fbf1 	bl	8000b30 <__aeabi_dcmplt>
 800134e:	b928      	cbnz	r0, 800135c <__aeabi_d2lz+0x20>
 8001350:	4628      	mov	r0, r5
 8001352:	4621      	mov	r1, r4
 8001354:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001358:	f000 b80a 	b.w	8001370 <__aeabi_d2ulz>
 800135c:	4628      	mov	r0, r5
 800135e:	f104 4100 	add.w	r1, r4, #2147483648	; 0x80000000
 8001362:	f000 f805 	bl	8001370 <__aeabi_d2ulz>
 8001366:	4240      	negs	r0, r0
 8001368:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800136c:	bd38      	pop	{r3, r4, r5, pc}
 800136e:	bf00      	nop

08001370 <__aeabi_d2ulz>:
 8001370:	b5d0      	push	{r4, r6, r7, lr}
 8001372:	4b0c      	ldr	r3, [pc, #48]	; (80013a4 <__aeabi_d2ulz+0x34>)
 8001374:	2200      	movs	r2, #0
 8001376:	4606      	mov	r6, r0
 8001378:	460f      	mov	r7, r1
 800137a:	f7ff f967 	bl	800064c <__aeabi_dmul>
 800137e:	f7ff fc3d 	bl	8000bfc <__aeabi_d2uiz>
 8001382:	4604      	mov	r4, r0
 8001384:	f7ff f8e8 	bl	8000558 <__aeabi_ui2d>
 8001388:	4b07      	ldr	r3, [pc, #28]	; (80013a8 <__aeabi_d2ulz+0x38>)
 800138a:	2200      	movs	r2, #0
 800138c:	f7ff f95e 	bl	800064c <__aeabi_dmul>
 8001390:	4602      	mov	r2, r0
 8001392:	460b      	mov	r3, r1
 8001394:	4630      	mov	r0, r6
 8001396:	4639      	mov	r1, r7
 8001398:	f7fe ffa0 	bl	80002dc <__aeabi_dsub>
 800139c:	f7ff fc2e 	bl	8000bfc <__aeabi_d2uiz>
 80013a0:	4621      	mov	r1, r4
 80013a2:	bdd0      	pop	{r4, r6, r7, pc}
 80013a4:	3df00000 	.word	0x3df00000
 80013a8:	41f00000 	.word	0x41f00000

080013ac <LED_Init>:
	Displays a 10-bit number on the LEDs on the MSOE Devboard
*/

#include "registers.h"
#include <inttypes.h>
void LED_Init() {
 80013ac:	b480      	push	{r7}
 80013ae:	b083      	sub	sp, #12
 80013b0:	af00      	add	r7, sp, #0
	// Initialize Variables
	volatile uint32_t* addr = 0;
 80013b2:	2300      	movs	r3, #0
 80013b4:	607b      	str	r3, [r7, #4]
	volatile uint32_t mask = 0;
 80013b6:	2300      	movs	r3, #0
 80013b8:	603b      	str	r3, [r7, #0]

	// Enable GPIOB in AHB1
	addr = (uint32_t*) RCC_AHB1ENR;	// Set target address
 80013ba:	4b0c      	ldr	r3, [pc, #48]	; (80013ec <LED_Init+0x40>)
 80013bc:	607b      	str	r3, [r7, #4]
	mask = 1<<1;		// Set mask to enable GPIOB
 80013be:	2302      	movs	r3, #2
 80013c0:	603b      	str	r3, [r7, #0]
	*addr |= mask;		// Slick read modify write
 80013c2:	683a      	ldr	r2, [r7, #0]
 80013c4:	687b      	ldr	r3, [r7, #4]
 80013c6:	681b      	ldr	r3, [r3, #0]
 80013c8:	431a      	orrs	r2, r3
 80013ca:	687b      	ldr	r3, [r7, #4]
 80013cc:	601a      	str	r2, [r3, #0]

	// Set pins PB5-PB15 (skip PB11) as outputs
	addr = (uint32_t*) GPIOB_MODER;	// Set target address
 80013ce:	4b08      	ldr	r3, [pc, #32]	; (80013f0 <LED_Init+0x44>)
 80013d0:	607b      	str	r3, [r7, #4]
	mask = 0x55155400;				// Mask to set appropriate pins
 80013d2:	4b08      	ldr	r3, [pc, #32]	; (80013f4 <LED_Init+0x48>)
 80013d4:	603b      	str	r3, [r7, #0]
	*addr |= mask;					// RMW
 80013d6:	683a      	ldr	r2, [r7, #0]
 80013d8:	687b      	ldr	r3, [r7, #4]
 80013da:	681b      	ldr	r3, [r3, #0]
 80013dc:	431a      	orrs	r2, r3
 80013de:	687b      	ldr	r3, [r7, #4]
 80013e0:	601a      	str	r2, [r3, #0]

	return;
 80013e2:	bf00      	nop
}
 80013e4:	370c      	adds	r7, #12
 80013e6:	46bd      	mov	sp, r7
 80013e8:	bc80      	pop	{r7}
 80013ea:	4770      	bx	lr
 80013ec:	40023830 	.word	0x40023830
 80013f0:	40020400 	.word	0x40020400
 80013f4:	55155400 	.word	0x55155400

080013f8 <LED_PrintNum>:

void LED_PrintNum(uint32_t num) {
 80013f8:	b480      	push	{r7}
 80013fa:	b089      	sub	sp, #36	; 0x24
 80013fc:	af00      	add	r7, sp, #0
 80013fe:	6078      	str	r0, [r7, #4]
	// Initialize Variables
	volatile uint32_t* addr = 0;
 8001400:	2300      	movs	r3, #0
 8001402:	61fb      	str	r3, [r7, #28]

	// Split the argument because PB11 is skipped
	uint32_t temp = num & (1023);
 8001404:	687b      	ldr	r3, [r7, #4]
 8001406:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800140a:	61bb      	str	r3, [r7, #24]

	// Upper 4 bits
	uint32_t upper = temp & 960;
 800140c:	69bb      	ldr	r3, [r7, #24]
 800140e:	f403 7370 	and.w	r3, r3, #960	; 0x3c0
 8001412:	617b      	str	r3, [r7, #20]

	// Lower 6 bits
	uint32_t lower = temp & 63;
 8001414:	69bb      	ldr	r3, [r7, #24]
 8001416:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800141a:	613b      	str	r3, [r7, #16]

	// Value to be displayed with PB11 skipped
	uint32_t output = ((upper << 1) | lower) << 5;
 800141c:	697b      	ldr	r3, [r7, #20]
 800141e:	005a      	lsls	r2, r3, #1
 8001420:	693b      	ldr	r3, [r7, #16]
 8001422:	4313      	orrs	r3, r2
 8001424:	015b      	lsls	r3, r3, #5
 8001426:	60fb      	str	r3, [r7, #12]

	// Clear LEDs via BSRR
	addr = (uint32_t*)GPIOB_BSRR;
 8001428:	4b06      	ldr	r3, [pc, #24]	; (8001444 <LED_PrintNum+0x4c>)
 800142a:	61fb      	str	r3, [r7, #28]
	*addr = 0xFFFF0000;
 800142c:	69fb      	ldr	r3, [r7, #28]
 800142e:	4a06      	ldr	r2, [pc, #24]	; (8001448 <LED_PrintNum+0x50>)
 8001430:	601a      	str	r2, [r3, #0]

	*addr = output;
 8001432:	69fb      	ldr	r3, [r7, #28]
 8001434:	68fa      	ldr	r2, [r7, #12]
 8001436:	601a      	str	r2, [r3, #0]
	return;
 8001438:	bf00      	nop
}
 800143a:	3724      	adds	r7, #36	; 0x24
 800143c:	46bd      	mov	sp, r7
 800143e:	bc80      	pop	{r7}
 8001440:	4770      	bx	lr
 8001442:	bf00      	nop
 8001444:	40020418 	.word	0x40020418
 8001448:	ffff0000 	.word	0xffff0000

0800144c <console>:
		{0, 0, betweenNotes},
		{E, 5, zeldaTempo>>1},
		{0, 0, 0}
};

void console() {
 800144c:	b580      	push	{r7, lr}
 800144e:	b094      	sub	sp, #80	; 0x50
 8001450:	af00      	add	r7, sp, #0
	while(1==1) {

	// Blank string for input
	char input[30] = "";
 8001452:	2300      	movs	r3, #0
 8001454:	603b      	str	r3, [r7, #0]
 8001456:	1d3b      	adds	r3, r7, #4
 8001458:	2200      	movs	r2, #0
 800145a:	601a      	str	r2, [r3, #0]
 800145c:	605a      	str	r2, [r3, #4]
 800145e:	609a      	str	r2, [r3, #8]
 8001460:	60da      	str	r2, [r3, #12]
 8001462:	611a      	str	r2, [r3, #16]
 8001464:	615a      	str	r2, [r3, #20]
 8001466:	831a      	strh	r2, [r3, #24]

	// Address to interact with
	uint32_t* address = 0;
 8001468:	2300      	movs	r3, #0
 800146a:	64fb      	str	r3, [r7, #76]	; 0x4c

	// Command variable
	int command = -1;
 800146c:	f04f 33ff 	mov.w	r3, #4294967295
 8001470:	63bb      	str	r3, [r7, #56]	; 0x38

	uint32_t frequency = 0;
 8001472:	2300      	movs	r3, #0
 8001474:	64bb      	str	r3, [r7, #72]	; 0x48
	uint32_t samples = 0;
 8001476:	2300      	movs	r3, #0
 8001478:	647b      	str	r3, [r7, #68]	; 0x44
	uint16_t* waveform;

	// Last argument, either length to read or value to write
	uint32_t argument = 0;
 800147a:	2300      	movs	r3, #0
 800147c:	63fb      	str	r3, [r7, #60]	; 0x3c

	// Welcome message
	printf("Evan's Memory Management Console\n\r");
 800147e:	48ab      	ldr	r0, [pc, #684]	; (800172c <console+0x2e0>)
 8001480:	f002 ff4a 	bl	8004318 <iprintf>
	printf("Type \'?\' for help\n\r");
 8001484:	48aa      	ldr	r0, [pc, #680]	; (8001730 <console+0x2e4>)
 8001486:	f002 ff47 	bl	8004318 <iprintf>

	// Infinite loop for program
	while(1==1) {
		// Prompt
		printf("> ");
 800148a:	48aa      	ldr	r0, [pc, #680]	; (8001734 <console+0x2e8>)
 800148c:	f002 ff44 	bl	8004318 <iprintf>
		fgets(input, 29, stdin);
 8001490:	4ba9      	ldr	r3, [pc, #676]	; (8001738 <console+0x2ec>)
 8001492:	681b      	ldr	r3, [r3, #0]
 8001494:	685a      	ldr	r2, [r3, #4]
 8001496:	463b      	mov	r3, r7
 8001498:	211d      	movs	r1, #29
 800149a:	4618      	mov	r0, r3
 800149c:	f001 feb0 	bl	8003200 <fgets>

		// First token, determines command
		char* strnCommand = strtok(input, " ");
 80014a0:	463b      	mov	r3, r7
 80014a2:	49a6      	ldr	r1, [pc, #664]	; (800173c <console+0x2f0>)
 80014a4:	4618      	mov	r0, r3
 80014a6:	f003 fff9 	bl	800549c <strtok>
 80014aa:	6378      	str	r0, [r7, #52]	; 0x34

		// Second token
		char* arg1 = strtok(NULL, " ");
 80014ac:	49a3      	ldr	r1, [pc, #652]	; (800173c <console+0x2f0>)
 80014ae:	2000      	movs	r0, #0
 80014b0:	f003 fff4 	bl	800549c <strtok>
 80014b4:	6338      	str	r0, [r7, #48]	; 0x30

		// Third token
		char* arg2 = strtok(NULL, " ");
 80014b6:	49a1      	ldr	r1, [pc, #644]	; (800173c <console+0x2f0>)
 80014b8:	2000      	movs	r0, #0
 80014ba:	f003 ffef 	bl	800549c <strtok>
 80014be:	62f8      	str	r0, [r7, #44]	; 0x2c

		// If there is an extracted command
		if(strnCommand != NULL) {
 80014c0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80014c2:	2b00      	cmp	r3, #0
 80014c4:	f000 8186 	beq.w	80017d4 <console+0x388>
			// Attempt to parse the command
			command = parseCommand(strnCommand);
 80014c8:	6b78      	ldr	r0, [r7, #52]	; 0x34
 80014ca:	f000 fbe5 	bl	8001c98 <parseCommand>
 80014ce:	63b8      	str	r0, [r7, #56]	; 0x38
 80014d0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80014d2:	2b09      	cmp	r3, #9
 80014d4:	f200 817a 	bhi.w	80017cc <console+0x380>
 80014d8:	a201      	add	r2, pc, #4	; (adr r2, 80014e0 <console+0x94>)
 80014da:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80014de:	bf00      	nop
 80014e0:	08001509 	.word	0x08001509
 80014e4:	0800150f 	.word	0x0800150f
 80014e8:	08001551 	.word	0x08001551
 80014ec:	08001583 	.word	0x08001583
 80014f0:	080015c5 	.word	0x080015c5
 80014f4:	08001643 	.word	0x08001643
 80014f8:	08001681 	.word	0x08001681
 80014fc:	080016d1 	.word	0x080016d1
 8001500:	0800171d 	.word	0x0800171d
 8001504:	080017c1 	.word	0x080017c1
			// Switch case for reported commands
			switch (command) {

			// Help command
			case 0:
				help();
 8001508:	f000 fc92 	bl	8001e30 <help>
				break;
 800150c:	e16b      	b.n	80017e6 <console+0x39a>

			// Dump memory command
			case 1:
				// Attempt to parse address
				if(arg1 != NULL) {
 800150e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8001510:	2b00      	cmp	r3, #0
 8001512:	d003      	beq.n	800151c <console+0xd0>
					address = parseAddress(arg1);
 8001514:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8001516:	f000 fcdd 	bl	8001ed4 <parseAddress>
 800151a:	64f8      	str	r0, [r7, #76]	; 0x4c
				}

				// Attempt to parse second argument
				if(arg2 != NULL) {
 800151c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800151e:	2b00      	cmp	r3, #0
 8001520:	d003      	beq.n	800152a <console+0xde>
					argument = parseArgument(arg2);
 8001522:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8001524:	f000 fcea 	bl	8001efc <parseArgument>
 8001528:	63f8      	str	r0, [r7, #60]	; 0x3c
				}

				if(arg1 != NULL) {
 800152a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800152c:	2b00      	cmp	r3, #0
 800152e:	d00b      	beq.n	8001548 <console+0xfc>
					if(arg2 == NULL) {
 8001530:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001532:	2b00      	cmp	r3, #0
 8001534:	d103      	bne.n	800153e <console+0xf2>
						memdmpDefault((uint8_t*)address);
 8001536:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 8001538:	f000 fa4e 	bl	80019d8 <memdmpDefault>
						memdmp((uint8_t*)address, argument);
					}
				} else {
					printf("No address provided\n\r");
				}
				break;
 800153c:	e153      	b.n	80017e6 <console+0x39a>
						memdmp((uint8_t*)address, argument);
 800153e:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8001540:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 8001542:	f000 faa5 	bl	8001a90 <memdmp>
				break;
 8001546:	e14e      	b.n	80017e6 <console+0x39a>
					printf("No address provided\n\r");
 8001548:	487d      	ldr	r0, [pc, #500]	; (8001740 <console+0x2f4>)
 800154a:	f002 fee5 	bl	8004318 <iprintf>
				break;
 800154e:	e14a      	b.n	80017e6 <console+0x39a>

			// Read word command
			case 2:
				// Attempt to parse address
				if(arg1 != NULL) {
 8001550:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8001552:	2b00      	cmp	r3, #0
 8001554:	d003      	beq.n	800155e <console+0x112>
					address = parseAddress(arg1);
 8001556:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8001558:	f000 fcbc 	bl	8001ed4 <parseAddress>
 800155c:	64f8      	str	r0, [r7, #76]	; 0x4c
				}

				// Attempt to parse second argument
				if(arg2 != NULL) {
 800155e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001560:	2b00      	cmp	r3, #0
 8001562:	d003      	beq.n	800156c <console+0x120>
					argument = parseArgument(arg2);
 8001564:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8001566:	f000 fcc9 	bl	8001efc <parseArgument>
 800156a:	63f8      	str	r0, [r7, #60]	; 0x3c
				}

				if(arg1 != NULL) {
 800156c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800156e:	2b00      	cmp	r3, #0
 8001570:	d003      	beq.n	800157a <console+0x12e>
					memwrd(address);
 8001572:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 8001574:	f000 fb52 	bl	8001c1c <memwrd>
				} else {
					printf("No address provided\n\r");
				}
				break;
 8001578:	e135      	b.n	80017e6 <console+0x39a>
					printf("No address provided\n\r");
 800157a:	4871      	ldr	r0, [pc, #452]	; (8001740 <console+0x2f4>)
 800157c:	f002 fecc 	bl	8004318 <iprintf>
				break;
 8001580:	e131      	b.n	80017e6 <console+0x39a>

			// Write word command
			case 3:
				// Attempt to parse address
				if(arg1 != NULL) {
 8001582:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8001584:	2b00      	cmp	r3, #0
 8001586:	d003      	beq.n	8001590 <console+0x144>
					address = parseAddress(arg1);
 8001588:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800158a:	f000 fca3 	bl	8001ed4 <parseAddress>
 800158e:	64f8      	str	r0, [r7, #76]	; 0x4c
				}

				// Attempt to parse second argument
				if(arg2 != NULL) {
 8001590:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001592:	2b00      	cmp	r3, #0
 8001594:	d003      	beq.n	800159e <console+0x152>
					argument = parseArgument(arg2);
 8001596:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8001598:	f000 fcb0 	bl	8001efc <parseArgument>
 800159c:	63f8      	str	r0, [r7, #60]	; 0x3c
				}

				if(arg1 != NULL) {
 800159e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80015a0:	2b00      	cmp	r3, #0
 80015a2:	d00b      	beq.n	80015bc <console+0x170>
					if(arg2 != NULL) {
 80015a4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80015a6:	2b00      	cmp	r3, #0
 80015a8:	d004      	beq.n	80015b4 <console+0x168>
						wmemwrd(address, argument);
 80015aa:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 80015ac:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 80015ae:	f000 fb57 	bl	8001c60 <wmemwrd>
						printf("No value to write provided\n\r");
					}
				} else {
					printf("No address provided\n\r");
				}
				break;
 80015b2:	e118      	b.n	80017e6 <console+0x39a>
						printf("No value to write provided\n\r");
 80015b4:	4863      	ldr	r0, [pc, #396]	; (8001744 <console+0x2f8>)
 80015b6:	f002 feaf 	bl	8004318 <iprintf>
				break;
 80015ba:	e114      	b.n	80017e6 <console+0x39a>
					printf("No address provided\n\r");
 80015bc:	4860      	ldr	r0, [pc, #384]	; (8001740 <console+0x2f4>)
 80015be:	f002 feab 	bl	8004318 <iprintf>
				break;
 80015c2:	e110      	b.n	80017e6 <console+0x39a>

			// Music command
			case 4:
				// Determine song to be played
				if(strcmp(arg1, "doom") == 0 || strcmp(arg1, "doom\n") == 0) {
 80015c4:	4960      	ldr	r1, [pc, #384]	; (8001748 <console+0x2fc>)
 80015c6:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80015c8:	f7fe fe72 	bl	80002b0 <strcmp>
 80015cc:	4603      	mov	r3, r0
 80015ce:	2b00      	cmp	r3, #0
 80015d0:	d006      	beq.n	80015e0 <console+0x194>
 80015d2:	495e      	ldr	r1, [pc, #376]	; (800174c <console+0x300>)
 80015d4:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80015d6:	f7fe fe6b 	bl	80002b0 <strcmp>
 80015da:	4603      	mov	r3, r0
 80015dc:	2b00      	cmp	r3, #0
 80015de:	d10e      	bne.n	80015fe <console+0x1b2>

					// Play background/foreground accordingly
					if(strcmp(arg2, "background\n") == 0) {
 80015e0:	495b      	ldr	r1, [pc, #364]	; (8001750 <console+0x304>)
 80015e2:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 80015e4:	f7fe fe64 	bl	80002b0 <strcmp>
 80015e8:	4603      	mov	r3, r0
 80015ea:	2b00      	cmp	r3, #0
 80015ec:	d103      	bne.n	80015f6 <console+0x1aa>
						music_Background(atDoomsGate);
 80015ee:	4859      	ldr	r0, [pc, #356]	; (8001754 <console+0x308>)
 80015f0:	f000 ff7a 	bl	80024e8 <music_Background>
					if(strcmp(arg2, "background\n") == 0) {
 80015f4:	e024      	b.n	8001640 <console+0x1f4>
					} else {
						music_Play(atDoomsGate);
 80015f6:	4857      	ldr	r0, [pc, #348]	; (8001754 <console+0x308>)
 80015f8:	f000 fefe 	bl	80023f8 <music_Play>
					if(strcmp(arg2, "background\n") == 0) {
 80015fc:	e020      	b.n	8001640 <console+0x1f4>
					}

				} else if(strcmp(arg1, "zelda") == 0 || strcmp(arg1, "zelda\n") == 0) {
 80015fe:	4956      	ldr	r1, [pc, #344]	; (8001758 <console+0x30c>)
 8001600:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8001602:	f7fe fe55 	bl	80002b0 <strcmp>
 8001606:	4603      	mov	r3, r0
 8001608:	2b00      	cmp	r3, #0
 800160a:	d006      	beq.n	800161a <console+0x1ce>
 800160c:	4953      	ldr	r1, [pc, #332]	; (800175c <console+0x310>)
 800160e:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8001610:	f7fe fe4e 	bl	80002b0 <strcmp>
 8001614:	4603      	mov	r3, r0
 8001616:	2b00      	cmp	r3, #0
 8001618:	d10e      	bne.n	8001638 <console+0x1ec>

					// Play background/foreground accordingly
					if(strcmp(arg2, "background\n") == 0) {
 800161a:	494d      	ldr	r1, [pc, #308]	; (8001750 <console+0x304>)
 800161c:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 800161e:	f7fe fe47 	bl	80002b0 <strcmp>
 8001622:	4603      	mov	r3, r0
 8001624:	2b00      	cmp	r3, #0
 8001626:	d103      	bne.n	8001630 <console+0x1e4>
						music_Background(zelda);
 8001628:	484d      	ldr	r0, [pc, #308]	; (8001760 <console+0x314>)
 800162a:	f000 ff5d 	bl	80024e8 <music_Background>
					if(strcmp(arg2, "background\n") == 0) {
 800162e:	e007      	b.n	8001640 <console+0x1f4>
					} else {
						music_Play(zelda);
 8001630:	484b      	ldr	r0, [pc, #300]	; (8001760 <console+0x314>)
 8001632:	f000 fee1 	bl	80023f8 <music_Play>
					if(strcmp(arg2, "background\n") == 0) {
 8001636:	e003      	b.n	8001640 <console+0x1f4>
					}

				} else {
					printf("Invalid song\n");
 8001638:	484a      	ldr	r0, [pc, #296]	; (8001764 <console+0x318>)
 800163a:	f002 fef3 	bl	8004424 <puts>
				}
				break;
 800163e:	e0d2      	b.n	80017e6 <console+0x39a>
 8001640:	e0d1      	b.n	80017e6 <console+0x39a>

			// Frequency Measurement
			case 5:
				if(arg1 != NULL) {
 8001642:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8001644:	2b00      	cmp	r3, #0
 8001646:	d017      	beq.n	8001678 <console+0x22c>
					if(strcmp(arg1, "frequency\n") == 0) {
 8001648:	4947      	ldr	r1, [pc, #284]	; (8001768 <console+0x31c>)
 800164a:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800164c:	f7fe fe30 	bl	80002b0 <strcmp>
 8001650:	4603      	mov	r3, r0
 8001652:	2b00      	cmp	r3, #0
 8001654:	d10c      	bne.n	8001670 <console+0x224>
						printf("\nMeasuring frequency...\n\n");
 8001656:	4845      	ldr	r0, [pc, #276]	; (800176c <console+0x320>)
 8001658:	f002 fee4 	bl	8004424 <puts>
						double average = period_Measure();
 800165c:	f001 f804 	bl	8002668 <period_Measure>
 8001660:	e9c7 0108 	strd	r0, r1, [r7, #32]
						printf("Measured frequency was %.2f Hz\n", average);
 8001664:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8001668:	4841      	ldr	r0, [pc, #260]	; (8001770 <console+0x324>)
 800166a:	f002 fe55 	bl	8004318 <iprintf>
							printf("Invalid measurement\n");
						}
					} else {
						printf("Measurement type required\n");
					}
					break;
 800166e:	e0ba      	b.n	80017e6 <console+0x39a>
							printf("Invalid measurement\n");
 8001670:	4840      	ldr	r0, [pc, #256]	; (8001774 <console+0x328>)
 8001672:	f002 fed7 	bl	8004424 <puts>
					break;
 8001676:	e0b6      	b.n	80017e6 <console+0x39a>
						printf("Measurement type required\n");
 8001678:	483f      	ldr	r0, [pc, #252]	; (8001778 <console+0x32c>)
 800167a:	f002 fed3 	bl	8004424 <puts>
					break;
 800167e:	e0b2      	b.n	80017e6 <console+0x39a>

			// Sine wave command
			case 6:
				// Parse Frequency
				if(arg1 != NULL) {
 8001680:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8001682:	2b00      	cmp	r3, #0
 8001684:	d004      	beq.n	8001690 <console+0x244>
					frequency = parseArgument(arg1);
 8001686:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8001688:	f000 fc38 	bl	8001efc <parseArgument>
 800168c:	64b8      	str	r0, [r7, #72]	; 0x48
 800168e:	e002      	b.n	8001696 <console+0x24a>
				} else {
					printf("No frequency provided\n");
 8001690:	483a      	ldr	r0, [pc, #232]	; (800177c <console+0x330>)
 8001692:	f002 fec7 	bl	8004424 <puts>
				}

				// Parse Samples
				if(arg2 != NULL) {
 8001696:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001698:	2b00      	cmp	r3, #0
 800169a:	d004      	beq.n	80016a6 <console+0x25a>
					samples = parseArgument(arg2);
 800169c:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 800169e:	f000 fc2d 	bl	8001efc <parseArgument>
 80016a2:	6478      	str	r0, [r7, #68]	; 0x44
 80016a4:	e002      	b.n	80016ac <console+0x260>
				} else {
					printf("No number of samples provided\n");
 80016a6:	4836      	ldr	r0, [pc, #216]	; (8001780 <console+0x334>)
 80016a8:	f002 febc 	bl	8004424 <puts>
				}

				// Execute Command
				if(arg1 != NULL && arg2 != NULL) {
 80016ac:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80016ae:	2b00      	cmp	r3, #0
 80016b0:	f000 8094 	beq.w	80017dc <console+0x390>
 80016b4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80016b6:	2b00      	cmp	r3, #0
 80016b8:	f000 8090 	beq.w	80017dc <console+0x390>
					waveform = sineWave(samples);
 80016bc:	6c78      	ldr	r0, [r7, #68]	; 0x44
 80016be:	f001 fa1f 	bl	8002b00 <sineWave>
 80016c2:	6438      	str	r0, [r7, #64]	; 0x40
					wave_Start(waveform, frequency, samples);
 80016c4:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 80016c6:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 80016c8:	6c38      	ldr	r0, [r7, #64]	; 0x40
 80016ca:	f001 fbfd 	bl	8002ec8 <wave_Start>
				}
				break;
 80016ce:	e085      	b.n	80017dc <console+0x390>

			// Sawtooth wave command
			case 7:
				// Parse Frequency
				if(arg1 != NULL) {
 80016d0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80016d2:	2b00      	cmp	r3, #0
 80016d4:	d004      	beq.n	80016e0 <console+0x294>
					frequency = parseArgument(arg1);
 80016d6:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80016d8:	f000 fc10 	bl	8001efc <parseArgument>
 80016dc:	64b8      	str	r0, [r7, #72]	; 0x48
 80016de:	e002      	b.n	80016e6 <console+0x29a>
				} else {
					printf("No frequency provided\n");
 80016e0:	4826      	ldr	r0, [pc, #152]	; (800177c <console+0x330>)
 80016e2:	f002 fe9f 	bl	8004424 <puts>
				}

				// Parse Samples
				if(arg2 != NULL) {
 80016e6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80016e8:	2b00      	cmp	r3, #0
 80016ea:	d004      	beq.n	80016f6 <console+0x2aa>
					samples = parseArgument(arg2);
 80016ec:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 80016ee:	f000 fc05 	bl	8001efc <parseArgument>
 80016f2:	6478      	str	r0, [r7, #68]	; 0x44
 80016f4:	e002      	b.n	80016fc <console+0x2b0>
				} else {
					printf("No number of samples provided\n");
 80016f6:	4822      	ldr	r0, [pc, #136]	; (8001780 <console+0x334>)
 80016f8:	f002 fe94 	bl	8004424 <puts>
				}

				// Execute Command
				if(arg1 != NULL && arg2 != NULL) {
 80016fc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80016fe:	2b00      	cmp	r3, #0
 8001700:	d06e      	beq.n	80017e0 <console+0x394>
 8001702:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001704:	2b00      	cmp	r3, #0
 8001706:	d06b      	beq.n	80017e0 <console+0x394>
					waveform = sawtoothWave(samples);
 8001708:	6c78      	ldr	r0, [r7, #68]	; 0x44
 800170a:	f001 faf1 	bl	8002cf0 <sawtoothWave>
 800170e:	6438      	str	r0, [r7, #64]	; 0x40
					wave_Start(waveform, frequency, samples);
 8001710:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8001712:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 8001714:	6c38      	ldr	r0, [r7, #64]	; 0x40
 8001716:	f001 fbd7 	bl	8002ec8 <wave_Start>
				}
				break;
 800171a:	e061      	b.n	80017e0 <console+0x394>

			// Triangle wave command
			case 8:
				// Parse Frequency
				if(arg1 != NULL) {
 800171c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800171e:	2b00      	cmp	r3, #0
 8001720:	d030      	beq.n	8001784 <console+0x338>
					frequency = parseArgument(arg1);
 8001722:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8001724:	f000 fbea 	bl	8001efc <parseArgument>
 8001728:	64b8      	str	r0, [r7, #72]	; 0x48
 800172a:	e02e      	b.n	800178a <console+0x33e>
 800172c:	08009c38 	.word	0x08009c38
 8001730:	08009c5c 	.word	0x08009c5c
 8001734:	08009c70 	.word	0x08009c70
 8001738:	20000b10 	.word	0x20000b10
 800173c:	08009c74 	.word	0x08009c74
 8001740:	08009c78 	.word	0x08009c78
 8001744:	08009c90 	.word	0x08009c90
 8001748:	08009cb0 	.word	0x08009cb0
 800174c:	08009cb8 	.word	0x08009cb8
 8001750:	08009cc0 	.word	0x08009cc0
 8001754:	20000000 	.word	0x20000000
 8001758:	08009ccc 	.word	0x08009ccc
 800175c:	08009cd4 	.word	0x08009cd4
 8001760:	20000540 	.word	0x20000540
 8001764:	08009cdc 	.word	0x08009cdc
 8001768:	08009cec 	.word	0x08009cec
 800176c:	08009cf8 	.word	0x08009cf8
 8001770:	08009d14 	.word	0x08009d14
 8001774:	08009d34 	.word	0x08009d34
 8001778:	08009d48 	.word	0x08009d48
 800177c:	08009d64 	.word	0x08009d64
 8001780:	08009d7c 	.word	0x08009d7c
				} else {
					printf("No frequency provided\n");
 8001784:	4821      	ldr	r0, [pc, #132]	; (800180c <console+0x3c0>)
 8001786:	f002 fe4d 	bl	8004424 <puts>
				}

				// Parse Samples
				if(arg2 != NULL) {
 800178a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800178c:	2b00      	cmp	r3, #0
 800178e:	d004      	beq.n	800179a <console+0x34e>
					samples = parseArgument(arg2);
 8001790:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8001792:	f000 fbb3 	bl	8001efc <parseArgument>
 8001796:	6478      	str	r0, [r7, #68]	; 0x44
 8001798:	e002      	b.n	80017a0 <console+0x354>
				} else {
					printf("No number of samples provided\n");
 800179a:	481d      	ldr	r0, [pc, #116]	; (8001810 <console+0x3c4>)
 800179c:	f002 fe42 	bl	8004424 <puts>
				}

				// Execute Command
				if(arg1 != NULL && arg2 != NULL) {
 80017a0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80017a2:	2b00      	cmp	r3, #0
 80017a4:	d01e      	beq.n	80017e4 <console+0x398>
 80017a6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80017a8:	2b00      	cmp	r3, #0
 80017aa:	d01b      	beq.n	80017e4 <console+0x398>
					waveform = triWave(samples);
 80017ac:	6c78      	ldr	r0, [r7, #68]	; 0x44
 80017ae:	f001 fa1f 	bl	8002bf0 <triWave>
 80017b2:	6438      	str	r0, [r7, #64]	; 0x40
					wave_Start(waveform, frequency, samples);
 80017b4:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 80017b6:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 80017b8:	6c38      	ldr	r0, [r7, #64]	; 0x40
 80017ba:	f001 fb85 	bl	8002ec8 <wave_Start>
				}
				break;
 80017be:	e011      	b.n	80017e4 <console+0x398>

			// Stop waveform command
			case 9:
				wave_Stop();
 80017c0:	f001 fbe8 	bl	8002f94 <wave_Stop>

				// Free the malloc
				free((void*) waveform);
 80017c4:	6c38      	ldr	r0, [r7, #64]	; 0x40
 80017c6:	f001 fe67 	bl	8003498 <free>
				break;
 80017ca:	e00c      	b.n	80017e6 <console+0x39a>

			default:
				printf("Invalid command\n\r");
 80017cc:	4811      	ldr	r0, [pc, #68]	; (8001814 <console+0x3c8>)
 80017ce:	f002 fda3 	bl	8004318 <iprintf>
 80017d2:	e008      	b.n	80017e6 <console+0x39a>
			}

		} else {
			printf("No input\n\r");
 80017d4:	4810      	ldr	r0, [pc, #64]	; (8001818 <console+0x3cc>)
 80017d6:	f002 fd9f 	bl	8004318 <iprintf>
 80017da:	e004      	b.n	80017e6 <console+0x39a>
				break;
 80017dc:	bf00      	nop
 80017de:	e002      	b.n	80017e6 <console+0x39a>
				break;
 80017e0:	bf00      	nop
 80017e2:	e000      	b.n	80017e6 <console+0x39a>
				break;
 80017e4:	bf00      	nop
		}

		// fgets again because it will read the newline from previous entry
		fgets(input, 29, stdin);
 80017e6:	4b0d      	ldr	r3, [pc, #52]	; (800181c <console+0x3d0>)
 80017e8:	681b      	ldr	r3, [r3, #0]
 80017ea:	685a      	ldr	r2, [r3, #4]
 80017ec:	463b      	mov	r3, r7
 80017ee:	211d      	movs	r1, #29
 80017f0:	4618      	mov	r0, r3
 80017f2:	f001 fd05 	bl	8003200 <fgets>

		// Clear the input string
		memset(input, 0, strlen(input));
 80017f6:	463b      	mov	r3, r7
 80017f8:	4618      	mov	r0, r3
 80017fa:	f7fe fd63 	bl	80002c4 <strlen>
 80017fe:	4602      	mov	r2, r0
 8001800:	463b      	mov	r3, r7
 8001802:	2100      	movs	r1, #0
 8001804:	4618      	mov	r0, r3
 8001806:	f001 fe5d 	bl	80034c4 <memset>
	while(1==1) {
 800180a:	e63e      	b.n	800148a <console+0x3e>
 800180c:	08009d64 	.word	0x08009d64
 8001810:	08009d7c 	.word	0x08009d7c
 8001814:	08009d9c 	.word	0x08009d9c
 8001818:	08009db0 	.word	0x08009db0
 800181c:	20000b10 	.word	0x20000b10

08001820 <delay_Init>:
	Note: Uses TIM2 prescaled to 1MHz
*/

#include "registers_new.h"
#include <inttypes.h>
void delay_Init() {
 8001820:	b480      	push	{r7}
 8001822:	b083      	sub	sp, #12
 8001824:	af00      	add	r7, sp, #0
	volatile RCC* RCC_Target = (RCC*) RCC_BASE;
 8001826:	4b11      	ldr	r3, [pc, #68]	; (800186c <delay_Init+0x4c>)
 8001828:	607b      	str	r3, [r7, #4]
	volatile TIMER* TIM2 = (TIMER*) TIM2_BASE;
 800182a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800182e:	603b      	str	r3, [r7, #0]

	// Enable TIM2 in APB1ENR
	RCC_Target->APB1ENR |= RCC_TIM2EN;
 8001830:	687b      	ldr	r3, [r7, #4]
 8001832:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001834:	f043 0201 	orr.w	r2, r3, #1
 8001838:	687b      	ldr	r3, [r7, #4]
 800183a:	641a      	str	r2, [r3, #64]	; 0x40

	// Set TIM2 CR configurations, one-pulse & countdown
	TIM2->CR1 |= (TIM_OPM | TIM_DIR);
 800183c:	683b      	ldr	r3, [r7, #0]
 800183e:	681b      	ldr	r3, [r3, #0]
 8001840:	f043 0218 	orr.w	r2, r3, #24
 8001844:	683b      	ldr	r3, [r7, #0]
 8001846:	601a      	str	r2, [r3, #0]

	// Set TIM2 prescale to 16, aka 1 count = 1us
	TIM2->PSC = 16;
 8001848:	683b      	ldr	r3, [r7, #0]
 800184a:	2210      	movs	r2, #16
 800184c:	629a      	str	r2, [r3, #40]	; 0x28

	// Prescale fix
	// Forces an event to be generated and then
	// clears it right away which tricks the timer
	// into applying the prescale somehow
	TIM2->EGR = 1;
 800184e:	683b      	ldr	r3, [r7, #0]
 8001850:	2201      	movs	r2, #1
 8001852:	615a      	str	r2, [r3, #20]
	TIM2->SR &= ~(1);
 8001854:	683b      	ldr	r3, [r7, #0]
 8001856:	691b      	ldr	r3, [r3, #16]
 8001858:	f023 0201 	bic.w	r2, r3, #1
 800185c:	683b      	ldr	r3, [r7, #0]
 800185e:	611a      	str	r2, [r3, #16]

	return;
 8001860:	bf00      	nop
}
 8001862:	370c      	adds	r7, #12
 8001864:	46bd      	mov	sp, r7
 8001866:	bc80      	pop	{r7}
 8001868:	4770      	bx	lr
 800186a:	bf00      	nop
 800186c:	40023800 	.word	0x40023800

08001870 <delay_ms>:

void delay_ms(uint32_t delay) {
 8001870:	b480      	push	{r7}
 8001872:	b087      	sub	sp, #28
 8001874:	af00      	add	r7, sp, #0
 8001876:	6078      	str	r0, [r7, #4]
	// Initialize Variables
	volatile TIMER* TIM2 = (TIMER*) TIM2_BASE;
 8001878:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800187c:	617b      	str	r3, [r7, #20]

	// Assert counting is not enabled
	TIM2->CR1 &= ~(TIM_CEN);
 800187e:	697b      	ldr	r3, [r7, #20]
 8001880:	681b      	ldr	r3, [r3, #0]
 8001882:	f023 0201 	bic.w	r2, r3, #1
 8001886:	697b      	ldr	r3, [r7, #20]
 8001888:	601a      	str	r2, [r3, #0]

	// Write the desired count, x1000 for ms to us conversion
	TIM2->CNT = (delay * 1000);
 800188a:	687b      	ldr	r3, [r7, #4]
 800188c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8001890:	fb02 f203 	mul.w	r2, r2, r3
 8001894:	697b      	ldr	r3, [r7, #20]
 8001896:	625a      	str	r2, [r3, #36]	; 0x24

	// Enable count
	TIM2->CR1 |= TIM_CEN;
 8001898:	697b      	ldr	r3, [r7, #20]
 800189a:	681b      	ldr	r3, [r3, #0]
 800189c:	f043 0201 	orr.w	r2, r3, #1
 80018a0:	697b      	ldr	r3, [r7, #20]
 80018a2:	601a      	str	r2, [r3, #0]

	// Busy loop
	uint32_t mask = (TIM_CEN);
 80018a4:	2301      	movs	r3, #1
 80018a6:	613b      	str	r3, [r7, #16]
	volatile uint32_t contents = TIM2->CR1 & mask;
 80018a8:	697b      	ldr	r3, [r7, #20]
 80018aa:	681a      	ldr	r2, [r3, #0]
 80018ac:	693b      	ldr	r3, [r7, #16]
 80018ae:	4013      	ands	r3, r2
 80018b0:	60fb      	str	r3, [r7, #12]

	while(contents != 0) {
 80018b2:	e004      	b.n	80018be <delay_ms+0x4e>
		contents = TIM2->CR1 & mask;
 80018b4:	697b      	ldr	r3, [r7, #20]
 80018b6:	681a      	ldr	r2, [r3, #0]
 80018b8:	693b      	ldr	r3, [r7, #16]
 80018ba:	4013      	ands	r3, r2
 80018bc:	60fb      	str	r3, [r7, #12]
	while(contents != 0) {
 80018be:	68fb      	ldr	r3, [r7, #12]
 80018c0:	2b00      	cmp	r3, #0
 80018c2:	d1f7      	bne.n	80018b4 <delay_ms+0x44>
	}

	return;
 80018c4:	bf00      	nop
}
 80018c6:	371c      	adds	r7, #28
 80018c8:	46bd      	mov	sp, r7
 80018ca:	bc80      	pop	{r7}
 80018cc:	4770      	bx	lr

080018ce <delay_us>:

void delay_us(uint32_t delay) {
 80018ce:	b480      	push	{r7}
 80018d0:	b087      	sub	sp, #28
 80018d2:	af00      	add	r7, sp, #0
 80018d4:	6078      	str	r0, [r7, #4]
	// Initialize Variables
	volatile TIMER* TIM2 = (TIMER*) TIM2_BASE;
 80018d6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80018da:	617b      	str	r3, [r7, #20]

	// Assert counting is not enabled
	TIM2->CR1 &= ~(TIM_CEN);
 80018dc:	697b      	ldr	r3, [r7, #20]
 80018de:	681b      	ldr	r3, [r3, #0]
 80018e0:	f023 0201 	bic.w	r2, r3, #1
 80018e4:	697b      	ldr	r3, [r7, #20]
 80018e6:	601a      	str	r2, [r3, #0]

	// Write the desired count
	TIM2->CNT = delay;
 80018e8:	697b      	ldr	r3, [r7, #20]
 80018ea:	687a      	ldr	r2, [r7, #4]
 80018ec:	625a      	str	r2, [r3, #36]	; 0x24

	// Enable count
	TIM2->CR1 |= TIM_CEN;
 80018ee:	697b      	ldr	r3, [r7, #20]
 80018f0:	681b      	ldr	r3, [r3, #0]
 80018f2:	f043 0201 	orr.w	r2, r3, #1
 80018f6:	697b      	ldr	r3, [r7, #20]
 80018f8:	601a      	str	r2, [r3, #0]

	// Busy loop
	uint32_t mask = (TIM_CEN);
 80018fa:	2301      	movs	r3, #1
 80018fc:	613b      	str	r3, [r7, #16]
	volatile uint32_t contents = TIM2->CR1 & mask;
 80018fe:	697b      	ldr	r3, [r7, #20]
 8001900:	681a      	ldr	r2, [r3, #0]
 8001902:	693b      	ldr	r3, [r7, #16]
 8001904:	4013      	ands	r3, r2
 8001906:	60fb      	str	r3, [r7, #12]

	while(contents != 0) {
 8001908:	e004      	b.n	8001914 <delay_us+0x46>
		contents = TIM2->CR1 & mask;
 800190a:	697b      	ldr	r3, [r7, #20]
 800190c:	681a      	ldr	r2, [r3, #0]
 800190e:	693b      	ldr	r3, [r7, #16]
 8001910:	4013      	ands	r3, r2
 8001912:	60fb      	str	r3, [r7, #12]
	while(contents != 0) {
 8001914:	68fb      	ldr	r3, [r7, #12]
 8001916:	2b00      	cmp	r3, #0
 8001918:	d1f7      	bne.n	800190a <delay_us+0x3c>
	}

	return;
 800191a:	bf00      	nop
}
 800191c:	371c      	adds	r7, #28
 800191e:	46bd      	mov	sp, r7
 8001920:	bc80      	pop	{r7}
 8001922:	4770      	bx	lr

08001924 <krl>:
#include "LED.h"

#define F_CPU 16000000UL
#define MOTION 50

void krl() {
 8001924:	b580      	push	{r7, lr}
 8001926:	b086      	sub	sp, #24
 8001928:	af00      	add	r7, sp, #0
	while(1==1) {
		int light = 1;
 800192a:	2301      	movs	r3, #1
 800192c:	60fb      	str	r3, [r7, #12]

		for(int i = 0; i < 10; i++) {
 800192e:	2300      	movs	r3, #0
 8001930:	617b      	str	r3, [r7, #20]
 8001932:	e00e      	b.n	8001952 <krl+0x2e>
			int shifted = light << i;
 8001934:	68fa      	ldr	r2, [r7, #12]
 8001936:	697b      	ldr	r3, [r7, #20]
 8001938:	fa02 f303 	lsl.w	r3, r2, r3
 800193c:	607b      	str	r3, [r7, #4]
			LED_PrintNum(shifted);
 800193e:	687b      	ldr	r3, [r7, #4]
 8001940:	4618      	mov	r0, r3
 8001942:	f7ff fd59 	bl	80013f8 <LED_PrintNum>
			delay_ms(MOTION);
 8001946:	2032      	movs	r0, #50	; 0x32
 8001948:	f7ff ff92 	bl	8001870 <delay_ms>
		for(int i = 0; i < 10; i++) {
 800194c:	697b      	ldr	r3, [r7, #20]
 800194e:	3301      	adds	r3, #1
 8001950:	617b      	str	r3, [r7, #20]
 8001952:	697b      	ldr	r3, [r7, #20]
 8001954:	2b09      	cmp	r3, #9
 8001956:	dded      	ble.n	8001934 <krl+0x10>
		}

		light = 1 << 9;
 8001958:	f44f 7300 	mov.w	r3, #512	; 0x200
 800195c:	60fb      	str	r3, [r7, #12]

		for(int i = 0; i < 10; i++) {
 800195e:	2300      	movs	r3, #0
 8001960:	613b      	str	r3, [r7, #16]
 8001962:	e00e      	b.n	8001982 <krl+0x5e>
			int shifted = light >> i;
 8001964:	68fa      	ldr	r2, [r7, #12]
 8001966:	693b      	ldr	r3, [r7, #16]
 8001968:	fa42 f303 	asr.w	r3, r2, r3
 800196c:	60bb      	str	r3, [r7, #8]
			LED_PrintNum(shifted);
 800196e:	68bb      	ldr	r3, [r7, #8]
 8001970:	4618      	mov	r0, r3
 8001972:	f7ff fd41 	bl	80013f8 <LED_PrintNum>
			delay_ms(MOTION);
 8001976:	2032      	movs	r0, #50	; 0x32
 8001978:	f7ff ff7a 	bl	8001870 <delay_ms>
		for(int i = 0; i < 10; i++) {
 800197c:	693b      	ldr	r3, [r7, #16]
 800197e:	3301      	adds	r3, #1
 8001980:	613b      	str	r3, [r7, #16]
 8001982:	693b      	ldr	r3, [r7, #16]
 8001984:	2b09      	cmp	r3, #9
 8001986:	dded      	ble.n	8001964 <krl+0x40>
	while(1==1) {
 8001988:	e7cf      	b.n	800192a <krl+0x6>
	...

0800198c <main>:
		}
	}
}

int main(void) {
 800198c:	b580      	push	{r7, lr}
 800198e:	af00      	add	r7, sp, #0
	init_usart2(115200,F_CPU);
 8001990:	490f      	ldr	r1, [pc, #60]	; (80019d0 <main+0x44>)
 8001992:	f44f 30e1 	mov.w	r0, #115200	; 0x1c200
 8001996:	f001 f85b 	bl	8002a50 <init_usart2>

	delay_Init();
 800199a:	f7ff ff41 	bl	8001820 <delay_Init>

	music_Init();
 800199e:	f000 fcbb 	bl	8002318 <music_Init>

	//period_Init();

	wave_Init();
 80019a2:	f001 fa29 	bl	8002df8 <wave_Init>

	LED_Init();
 80019a6:	f7ff fd01 	bl	80013ac <LED_Init>

	init_tasker(2, 10);
 80019aa:	210a      	movs	r1, #10
 80019ac:	2002      	movs	r0, #2
 80019ae:	f000 fadd 	bl	8001f6c <init_tasker>
	init_task(1, 1000, console, 5);
 80019b2:	2305      	movs	r3, #5
 80019b4:	4a07      	ldr	r2, [pc, #28]	; (80019d4 <main+0x48>)
 80019b6:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80019ba:	2001      	movs	r0, #1
 80019bc:	f000 fb00 	bl	8001fc0 <init_task>

	stk_Init();
 80019c0:	f000 fab2 	bl	8001f28 <stk_Init>

	krl();
 80019c4:	f7ff ffae 	bl	8001924 <krl>

	exit(EXIT_SUCCESS);
 80019c8:	2000      	movs	r0, #0
 80019ca:	f001 fb8b 	bl	80030e4 <exit>
 80019ce:	bf00      	nop
 80019d0:	00f42400 	.word	0x00f42400
 80019d4:	0800144d 	.word	0x0800144d

080019d8 <memdmpDefault>:
 * Syntax: dm [address]
 *
 * Address must be hexadecimal, prefaced with '0x' and the letters
 * must be caps.
 */
void memdmpDefault(uint8_t* const addr) {
 80019d8:	b580      	push	{r7, lr}
 80019da:	b0a2      	sub	sp, #136	; 0x88
 80019dc:	af00      	add	r7, sp, #0
 80019de:	6078      	str	r0, [r7, #4]
	// Empty string containing memory dump
	char output[100] = "";
 80019e0:	2300      	movs	r3, #0
 80019e2:	61bb      	str	r3, [r7, #24]
 80019e4:	f107 031c 	add.w	r3, r7, #28
 80019e8:	2260      	movs	r2, #96	; 0x60
 80019ea:	2100      	movs	r1, #0
 80019ec:	4618      	mov	r0, r3
 80019ee:	f001 fd69 	bl	80034c4 <memset>

	// Add hex dump
	for(int i = 0; i < DEFAULT_SIZE; i++) {
 80019f2:	2300      	movs	r3, #0
 80019f4:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 80019f8:	e035      	b.n	8001a66 <memdmpDefault+0x8e>
		uint8_t* target = addr + i;
 80019fa:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 80019fe:	687a      	ldr	r2, [r7, #4]
 8001a00:	4413      	add	r3, r2
 8001a02:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
		//delay_us(MEM_DELAY);
		uint8_t contents = *target;
 8001a06:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 8001a0a:	781b      	ldrb	r3, [r3, #0]
 8001a0c:	f887 307f 	strb.w	r3, [r7, #127]	; 0x7f
		//delay_us(MEM_DELAY);
		char temp[10] = "";
 8001a10:	2300      	movs	r3, #0
 8001a12:	60fb      	str	r3, [r7, #12]
 8001a14:	f107 0310 	add.w	r3, r7, #16
 8001a18:	2200      	movs	r2, #0
 8001a1a:	601a      	str	r2, [r3, #0]
 8001a1c:	809a      	strh	r2, [r3, #4]
		sprintf(temp, "%X", contents);
 8001a1e:	f897 207f 	ldrb.w	r2, [r7, #127]	; 0x7f
 8001a22:	f107 030c 	add.w	r3, r7, #12
 8001a26:	4917      	ldr	r1, [pc, #92]	; (8001a84 <memdmpDefault+0xac>)
 8001a28:	4618      	mov	r0, r3
 8001a2a:	f002 fe71 	bl	8004710 <siprintf>
		strcat(temp, " ");
 8001a2e:	f107 030c 	add.w	r3, r7, #12
 8001a32:	4618      	mov	r0, r3
 8001a34:	f7fe fc46 	bl	80002c4 <strlen>
 8001a38:	4603      	mov	r3, r0
 8001a3a:	461a      	mov	r2, r3
 8001a3c:	f107 030c 	add.w	r3, r7, #12
 8001a40:	4413      	add	r3, r2
 8001a42:	4911      	ldr	r1, [pc, #68]	; (8001a88 <memdmpDefault+0xb0>)
 8001a44:	461a      	mov	r2, r3
 8001a46:	460b      	mov	r3, r1
 8001a48:	881b      	ldrh	r3, [r3, #0]
 8001a4a:	8013      	strh	r3, [r2, #0]
		strcat(output, temp);
 8001a4c:	f107 020c 	add.w	r2, r7, #12
 8001a50:	f107 0318 	add.w	r3, r7, #24
 8001a54:	4611      	mov	r1, r2
 8001a56:	4618      	mov	r0, r3
 8001a58:	f002 fee9 	bl	800482e <strcat>
	for(int i = 0; i < DEFAULT_SIZE; i++) {
 8001a5c:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8001a60:	3301      	adds	r3, #1
 8001a62:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8001a66:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8001a6a:	2b0f      	cmp	r3, #15
 8001a6c:	ddc5      	ble.n	80019fa <memdmpDefault+0x22>
	}

	// Print the formatted result
	printf("0x%X: %s\n\r", (unsigned int)addr, output);
 8001a6e:	687b      	ldr	r3, [r7, #4]
 8001a70:	f107 0218 	add.w	r2, r7, #24
 8001a74:	4619      	mov	r1, r3
 8001a76:	4805      	ldr	r0, [pc, #20]	; (8001a8c <memdmpDefault+0xb4>)
 8001a78:	f002 fc4e 	bl	8004318 <iprintf>

	return;
 8001a7c:	bf00      	nop
}
 8001a7e:	3788      	adds	r7, #136	; 0x88
 8001a80:	46bd      	mov	sp, r7
 8001a82:	bd80      	pop	{r7, pc}
 8001a84:	08009dbc 	.word	0x08009dbc
 8001a88:	08009dc0 	.word	0x08009dc0
 8001a8c:	08009dc4 	.word	0x08009dc4

08001a90 <memdmp>:
 * Syntax: dm [address] [length]
 *
 * Address must be hexadecimal, prefaced with '0x' and the letters
 * must be caps.
 */
void memdmp(uint8_t* const addr, uint32_t len) {
 8001a90:	b580      	push	{r7, lr}
 8001a92:	b0a6      	sub	sp, #152	; 0x98
 8001a94:	af00      	add	r7, sp, #0
 8001a96:	6078      	str	r0, [r7, #4]
 8001a98:	6039      	str	r1, [r7, #0]
	char output[100] = "";
 8001a9a:	2300      	movs	r3, #0
 8001a9c:	623b      	str	r3, [r7, #32]
 8001a9e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001aa2:	2260      	movs	r2, #96	; 0x60
 8001aa4:	2100      	movs	r1, #0
 8001aa6:	4618      	mov	r0, r3
 8001aa8:	f001 fd0c 	bl	80034c4 <memset>
	unsigned int newlines = 0;
 8001aac:	2300      	movs	r3, #0
 8001aae:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
	uint8_t* newaddr = 0;
 8001ab2:	2300      	movs	r3, #0
 8001ab4:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
	uint8_t contents = 0;
 8001ab8:	2300      	movs	r3, #0
 8001aba:	f887 308b 	strb.w	r3, [r7, #139]	; 0x8b

	// Hex dump
	for(int i = 0; i < len; i++) {
 8001abe:	2300      	movs	r3, #0
 8001ac0:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8001ac4:	e080      	b.n	8001bc8 <memdmp+0x138>
		newaddr = addr + i;
 8001ac6:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8001aca:	687a      	ldr	r2, [r7, #4]
 8001acc:	4413      	add	r3, r2
 8001ace:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
		contents = *newaddr;
 8001ad2:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8001ad6:	781b      	ldrb	r3, [r3, #0]
 8001ad8:	f887 308b 	strb.w	r3, [r7, #139]	; 0x8b
		// New line every 16 bytes, clear output buffer after printing
		if((i%16 == 0) && i > 0) {
 8001adc:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8001ae0:	f003 030f 	and.w	r3, r3, #15
 8001ae4:	2b00      	cmp	r3, #0
 8001ae6:	d144      	bne.n	8001b72 <memdmp+0xe2>
 8001ae8:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8001aec:	2b00      	cmp	r3, #0
 8001aee:	dd40      	ble.n	8001b72 <memdmp+0xe2>
			printf("0x%X: %s\n\r", (unsigned int)newaddr-16, output);
 8001af0:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8001af4:	3b10      	subs	r3, #16
 8001af6:	f107 0220 	add.w	r2, r7, #32
 8001afa:	4619      	mov	r1, r3
 8001afc:	4844      	ldr	r0, [pc, #272]	; (8001c10 <memdmp+0x180>)
 8001afe:	f002 fc0b 	bl	8004318 <iprintf>
			memset(output, 0, strlen(output));
 8001b02:	f107 0320 	add.w	r3, r7, #32
 8001b06:	4618      	mov	r0, r3
 8001b08:	f7fe fbdc 	bl	80002c4 <strlen>
 8001b0c:	4602      	mov	r2, r0
 8001b0e:	f107 0320 	add.w	r3, r7, #32
 8001b12:	2100      	movs	r1, #0
 8001b14:	4618      	mov	r0, r3
 8001b16:	f001 fcd5 	bl	80034c4 <memset>
			newlines++;
 8001b1a:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8001b1e:	3301      	adds	r3, #1
 8001b20:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94

			char temp[10] = "";
 8001b24:	2300      	movs	r3, #0
 8001b26:	617b      	str	r3, [r7, #20]
 8001b28:	f107 0318 	add.w	r3, r7, #24
 8001b2c:	2200      	movs	r2, #0
 8001b2e:	601a      	str	r2, [r3, #0]
 8001b30:	809a      	strh	r2, [r3, #4]
			sprintf(temp, "%X", contents);
 8001b32:	f897 208b 	ldrb.w	r2, [r7, #139]	; 0x8b
 8001b36:	f107 0314 	add.w	r3, r7, #20
 8001b3a:	4936      	ldr	r1, [pc, #216]	; (8001c14 <memdmp+0x184>)
 8001b3c:	4618      	mov	r0, r3
 8001b3e:	f002 fde7 	bl	8004710 <siprintf>

			// Append a space
			strcat(temp, " ");
 8001b42:	f107 0314 	add.w	r3, r7, #20
 8001b46:	4618      	mov	r0, r3
 8001b48:	f7fe fbbc 	bl	80002c4 <strlen>
 8001b4c:	4603      	mov	r3, r0
 8001b4e:	461a      	mov	r2, r3
 8001b50:	f107 0314 	add.w	r3, r7, #20
 8001b54:	4413      	add	r3, r2
 8001b56:	4930      	ldr	r1, [pc, #192]	; (8001c18 <memdmp+0x188>)
 8001b58:	461a      	mov	r2, r3
 8001b5a:	460b      	mov	r3, r1
 8001b5c:	881b      	ldrh	r3, [r3, #0]
 8001b5e:	8013      	strh	r3, [r2, #0]

			// Append contents to output
			strcat(output, temp);
 8001b60:	f107 0214 	add.w	r2, r7, #20
 8001b64:	f107 0320 	add.w	r3, r7, #32
 8001b68:	4611      	mov	r1, r2
 8001b6a:	4618      	mov	r0, r3
 8001b6c:	f002 fe5f 	bl	800482e <strcat>
		if((i%16 == 0) && i > 0) {
 8001b70:	e025      	b.n	8001bbe <memdmp+0x12e>
		} else {
			// Current contents string
			char temp[10] = "";
 8001b72:	2300      	movs	r3, #0
 8001b74:	60bb      	str	r3, [r7, #8]
 8001b76:	f107 030c 	add.w	r3, r7, #12
 8001b7a:	2200      	movs	r2, #0
 8001b7c:	601a      	str	r2, [r3, #0]
 8001b7e:	809a      	strh	r2, [r3, #4]
			sprintf(temp, "%X", contents);
 8001b80:	f897 208b 	ldrb.w	r2, [r7, #139]	; 0x8b
 8001b84:	f107 0308 	add.w	r3, r7, #8
 8001b88:	4922      	ldr	r1, [pc, #136]	; (8001c14 <memdmp+0x184>)
 8001b8a:	4618      	mov	r0, r3
 8001b8c:	f002 fdc0 	bl	8004710 <siprintf>

			// Append a space
			strcat(temp, " ");
 8001b90:	f107 0308 	add.w	r3, r7, #8
 8001b94:	4618      	mov	r0, r3
 8001b96:	f7fe fb95 	bl	80002c4 <strlen>
 8001b9a:	4603      	mov	r3, r0
 8001b9c:	461a      	mov	r2, r3
 8001b9e:	f107 0308 	add.w	r3, r7, #8
 8001ba2:	4413      	add	r3, r2
 8001ba4:	491c      	ldr	r1, [pc, #112]	; (8001c18 <memdmp+0x188>)
 8001ba6:	461a      	mov	r2, r3
 8001ba8:	460b      	mov	r3, r1
 8001baa:	881b      	ldrh	r3, [r3, #0]
 8001bac:	8013      	strh	r3, [r2, #0]

			// Append contents to output
			strcat(output, temp);
 8001bae:	f107 0208 	add.w	r2, r7, #8
 8001bb2:	f107 0320 	add.w	r3, r7, #32
 8001bb6:	4611      	mov	r1, r2
 8001bb8:	4618      	mov	r0, r3
 8001bba:	f002 fe38 	bl	800482e <strcat>
	for(int i = 0; i < len; i++) {
 8001bbe:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8001bc2:	3301      	adds	r3, #1
 8001bc4:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8001bc8:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8001bcc:	683a      	ldr	r2, [r7, #0]
 8001bce:	429a      	cmp	r2, r3
 8001bd0:	f63f af79 	bhi.w	8001ac6 <memdmp+0x36>
		}
	}

	// If output is not empty, print it
	if(strnlen((const char*)output, 99) > 1) {
 8001bd4:	f107 0320 	add.w	r3, r7, #32
 8001bd8:	2163      	movs	r1, #99	; 0x63
 8001bda:	4618      	mov	r0, r3
 8001bdc:	f002 fe36 	bl	800484c <strnlen>
 8001be0:	4603      	mov	r3, r0
 8001be2:	2b01      	cmp	r3, #1
 8001be4:	d90f      	bls.n	8001c06 <memdmp+0x176>
		unsigned int actualAddr = (unsigned int)addr + (newlines * 16);
 8001be6:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8001bea:	011a      	lsls	r2, r3, #4
 8001bec:	687b      	ldr	r3, [r7, #4]
 8001bee:	4413      	add	r3, r2
 8001bf0:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
		printf("0x%X: %s\n\r", actualAddr, output);
 8001bf4:	f107 0320 	add.w	r3, r7, #32
 8001bf8:	461a      	mov	r2, r3
 8001bfa:	f8d7 1084 	ldr.w	r1, [r7, #132]	; 0x84
 8001bfe:	4804      	ldr	r0, [pc, #16]	; (8001c10 <memdmp+0x180>)
 8001c00:	f002 fb8a 	bl	8004318 <iprintf>
	}

	return;
 8001c04:	bf00      	nop
 8001c06:	bf00      	nop
}
 8001c08:	3798      	adds	r7, #152	; 0x98
 8001c0a:	46bd      	mov	sp, r7
 8001c0c:	bd80      	pop	{r7, pc}
 8001c0e:	bf00      	nop
 8001c10:	08009dc4 	.word	0x08009dc4
 8001c14:	08009dbc 	.word	0x08009dbc
 8001c18:	08009dc0 	.word	0x08009dc0

08001c1c <memwrd>:
 * Syntax: rmw [address]
 *
 * Address must be hexadecimal and word aligned, prefaced with '0x'
 * and the letters must be caps.
 */
void memwrd(const uint32_t* addr) {
 8001c1c:	b580      	push	{r7, lr}
 8001c1e:	b084      	sub	sp, #16
 8001c20:	af00      	add	r7, sp, #0
 8001c22:	6078      	str	r0, [r7, #4]
	// One word in our system is 32 bits, so word alignment is every 32 bits
	unsigned int contents = 0;
 8001c24:	2300      	movs	r3, #0
 8001c26:	60fb      	str	r3, [r7, #12]

	if((unsigned int)addr%32 == 0) {
 8001c28:	687b      	ldr	r3, [r7, #4]
 8001c2a:	f003 031f 	and.w	r3, r3, #31
 8001c2e:	2b00      	cmp	r3, #0
 8001c30:	d109      	bne.n	8001c46 <memwrd+0x2a>
		contents = *addr;
 8001c32:	687b      	ldr	r3, [r7, #4]
 8001c34:	681b      	ldr	r3, [r3, #0]
 8001c36:	60fb      	str	r3, [r7, #12]
		printf("0x%X: 0x%X %d\n\r", (unsigned int)addr, contents, contents);
 8001c38:	6879      	ldr	r1, [r7, #4]
 8001c3a:	68fb      	ldr	r3, [r7, #12]
 8001c3c:	68fa      	ldr	r2, [r7, #12]
 8001c3e:	4806      	ldr	r0, [pc, #24]	; (8001c58 <memwrd+0x3c>)
 8001c40:	f002 fb6a 	bl	8004318 <iprintf>
	} else {
		// Print the address and the text "Bad alignment" if it breaks word boundaries
		printf("0x%X: Bad alignment\n\r", (unsigned int)addr);
	}

	return;
 8001c44:	e005      	b.n	8001c52 <memwrd+0x36>
		printf("0x%X: Bad alignment\n\r", (unsigned int)addr);
 8001c46:	687b      	ldr	r3, [r7, #4]
 8001c48:	4619      	mov	r1, r3
 8001c4a:	4804      	ldr	r0, [pc, #16]	; (8001c5c <memwrd+0x40>)
 8001c4c:	f002 fb64 	bl	8004318 <iprintf>
	return;
 8001c50:	bf00      	nop
}
 8001c52:	3710      	adds	r7, #16
 8001c54:	46bd      	mov	sp, r7
 8001c56:	bd80      	pop	{r7, pc}
 8001c58:	08009dd0 	.word	0x08009dd0
 8001c5c:	08009de0 	.word	0x08009de0

08001c60 <wmemwrd>:
 * Syntax: wmw [address] [value]
 *
 * Address must be hexadecimal and word aligned, prefaced with '0x'
 * and the letters must be caps.
 */
void wmemwrd(uint32_t* const dest, uint32_t contents) {
 8001c60:	b580      	push	{r7, lr}
 8001c62:	b082      	sub	sp, #8
 8001c64:	af00      	add	r7, sp, #0
 8001c66:	6078      	str	r0, [r7, #4]
 8001c68:	6039      	str	r1, [r7, #0]
	if((unsigned int)dest % 32 == 0) {
 8001c6a:	687b      	ldr	r3, [r7, #4]
 8001c6c:	f003 031f 	and.w	r3, r3, #31
 8001c70:	2b00      	cmp	r3, #0
 8001c72:	d106      	bne.n	8001c82 <wmemwrd+0x22>
		// Write value
		*dest = contents;
 8001c74:	687b      	ldr	r3, [r7, #4]
 8001c76:	683a      	ldr	r2, [r7, #0]
 8001c78:	601a      	str	r2, [r3, #0]

		// Print new value
		memwrd(dest);
 8001c7a:	6878      	ldr	r0, [r7, #4]
 8001c7c:	f7ff ffce 	bl	8001c1c <memwrd>
	} else {
		// Error message
		printf("0x%X: Bad alignment, nothing written\n\r", (unsigned int)dest);
	}
	return;
 8001c80:	e005      	b.n	8001c8e <wmemwrd+0x2e>
		printf("0x%X: Bad alignment, nothing written\n\r", (unsigned int)dest);
 8001c82:	687b      	ldr	r3, [r7, #4]
 8001c84:	4619      	mov	r1, r3
 8001c86:	4803      	ldr	r0, [pc, #12]	; (8001c94 <wmemwrd+0x34>)
 8001c88:	f002 fb46 	bl	8004318 <iprintf>
	return;
 8001c8c:	bf00      	nop
}
 8001c8e:	3708      	adds	r7, #8
 8001c90:	46bd      	mov	sp, r7
 8001c92:	bd80      	pop	{r7, pc}
 8001c94:	08009df8 	.word	0x08009df8

08001c98 <parseCommand>:
 * 'saw' = 7
 * 'tri' = 8
 * 'stop' = 9
 * invalid = -1
 */
int parseCommand(const char* input) {
 8001c98:	b580      	push	{r7, lr}
 8001c9a:	b084      	sub	sp, #16
 8001c9c:	af00      	add	r7, sp, #0
 8001c9e:	6078      	str	r0, [r7, #4]
	// Default command, -1 = invalid command
	int command = -1;
 8001ca0:	f04f 33ff 	mov.w	r3, #4294967295
 8001ca4:	60fb      	str	r3, [r7, #12]

	// Switch statement based on first char
	switch(input[0]) {
 8001ca6:	687b      	ldr	r3, [r7, #4]
 8001ca8:	781b      	ldrb	r3, [r3, #0]
 8001caa:	2b3f      	cmp	r3, #63	; 0x3f
 8001cac:	d038      	beq.n	8001d20 <parseCommand+0x88>
 8001cae:	2b3f      	cmp	r3, #63	; 0x3f
 8001cb0:	f2c0 80af 	blt.w	8001e12 <parseCommand+0x17a>
 8001cb4:	2b77      	cmp	r3, #119	; 0x77
 8001cb6:	f300 80ac 	bgt.w	8001e12 <parseCommand+0x17a>
 8001cba:	2b64      	cmp	r3, #100	; 0x64
 8001cbc:	f2c0 80a9 	blt.w	8001e12 <parseCommand+0x17a>
 8001cc0:	3b64      	subs	r3, #100	; 0x64
 8001cc2:	2b13      	cmp	r3, #19
 8001cc4:	f200 80a5 	bhi.w	8001e12 <parseCommand+0x17a>
 8001cc8:	a201      	add	r2, pc, #4	; (adr r2, 8001cd0 <parseCommand+0x38>)
 8001cca:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001cce:	bf00      	nop
 8001cd0:	08001d27 	.word	0x08001d27
 8001cd4:	08001e13 	.word	0x08001e13
 8001cd8:	08001e13 	.word	0x08001e13
 8001cdc:	08001e13 	.word	0x08001e13
 8001ce0:	08001e13 	.word	0x08001e13
 8001ce4:	08001e13 	.word	0x08001e13
 8001ce8:	08001e13 	.word	0x08001e13
 8001cec:	08001e13 	.word	0x08001e13
 8001cf0:	08001e13 	.word	0x08001e13
 8001cf4:	08001d6b 	.word	0x08001d6b
 8001cf8:	08001e13 	.word	0x08001e13
 8001cfc:	08001e13 	.word	0x08001e13
 8001d00:	08001e13 	.word	0x08001e13
 8001d04:	08001e13 	.word	0x08001e13
 8001d08:	08001d37 	.word	0x08001d37
 8001d0c:	08001dad 	.word	0x08001dad
 8001d10:	08001de9 	.word	0x08001de9
 8001d14:	08001e13 	.word	0x08001e13
 8001d18:	08001e13 	.word	0x08001e13
 8001d1c:	08001d51 	.word	0x08001d51
	// Help command, return 0
	case '?':
		command = 0;
 8001d20:	2300      	movs	r3, #0
 8001d22:	60fb      	str	r3, [r7, #12]
		break;
 8001d24:	e075      	b.n	8001e12 <parseCommand+0x17a>

	// Dump memory command, return 1
	case 'd':
		if(input[1] == 'm') {
 8001d26:	687b      	ldr	r3, [r7, #4]
 8001d28:	3301      	adds	r3, #1
 8001d2a:	781b      	ldrb	r3, [r3, #0]
 8001d2c:	2b6d      	cmp	r3, #109	; 0x6d
 8001d2e:	d165      	bne.n	8001dfc <parseCommand+0x164>
			command = 1;
 8001d30:	2301      	movs	r3, #1
 8001d32:	60fb      	str	r3, [r7, #12]
		}
		break;
 8001d34:	e062      	b.n	8001dfc <parseCommand+0x164>

	// Read word command, return 2
	case 'r':
		if(input[1] == 'm' && input[2] == 'w') {
 8001d36:	687b      	ldr	r3, [r7, #4]
 8001d38:	3301      	adds	r3, #1
 8001d3a:	781b      	ldrb	r3, [r3, #0]
 8001d3c:	2b6d      	cmp	r3, #109	; 0x6d
 8001d3e:	d15f      	bne.n	8001e00 <parseCommand+0x168>
 8001d40:	687b      	ldr	r3, [r7, #4]
 8001d42:	3302      	adds	r3, #2
 8001d44:	781b      	ldrb	r3, [r3, #0]
 8001d46:	2b77      	cmp	r3, #119	; 0x77
 8001d48:	d15a      	bne.n	8001e00 <parseCommand+0x168>
			command = 2;
 8001d4a:	2302      	movs	r3, #2
 8001d4c:	60fb      	str	r3, [r7, #12]
		}
		break;
 8001d4e:	e057      	b.n	8001e00 <parseCommand+0x168>

	// Write word command, return 3
	case 'w':
		if(input[1] == 'm' && input[2] == 'w') {
 8001d50:	687b      	ldr	r3, [r7, #4]
 8001d52:	3301      	adds	r3, #1
 8001d54:	781b      	ldrb	r3, [r3, #0]
 8001d56:	2b6d      	cmp	r3, #109	; 0x6d
 8001d58:	d154      	bne.n	8001e04 <parseCommand+0x16c>
 8001d5a:	687b      	ldr	r3, [r7, #4]
 8001d5c:	3302      	adds	r3, #2
 8001d5e:	781b      	ldrb	r3, [r3, #0]
 8001d60:	2b77      	cmp	r3, #119	; 0x77
 8001d62:	d14f      	bne.n	8001e04 <parseCommand+0x16c>
			command = 3;
 8001d64:	2303      	movs	r3, #3
 8001d66:	60fb      	str	r3, [r7, #12]
		}
		break;
 8001d68:	e04c      	b.n	8001e04 <parseCommand+0x16c>

	case 'm':
		if(input[1] == 'u' && input[2] == 's' && input[3] == 'i' && input[4] == 'c') {
 8001d6a:	687b      	ldr	r3, [r7, #4]
 8001d6c:	3301      	adds	r3, #1
 8001d6e:	781b      	ldrb	r3, [r3, #0]
 8001d70:	2b75      	cmp	r3, #117	; 0x75
 8001d72:	d111      	bne.n	8001d98 <parseCommand+0x100>
 8001d74:	687b      	ldr	r3, [r7, #4]
 8001d76:	3302      	adds	r3, #2
 8001d78:	781b      	ldrb	r3, [r3, #0]
 8001d7a:	2b73      	cmp	r3, #115	; 0x73
 8001d7c:	d10c      	bne.n	8001d98 <parseCommand+0x100>
 8001d7e:	687b      	ldr	r3, [r7, #4]
 8001d80:	3303      	adds	r3, #3
 8001d82:	781b      	ldrb	r3, [r3, #0]
 8001d84:	2b69      	cmp	r3, #105	; 0x69
 8001d86:	d107      	bne.n	8001d98 <parseCommand+0x100>
 8001d88:	687b      	ldr	r3, [r7, #4]
 8001d8a:	3304      	adds	r3, #4
 8001d8c:	781b      	ldrb	r3, [r3, #0]
 8001d8e:	2b63      	cmp	r3, #99	; 0x63
 8001d90:	d102      	bne.n	8001d98 <parseCommand+0x100>
			command = 4;
 8001d92:	2304      	movs	r3, #4
 8001d94:	60fb      	str	r3, [r7, #12]
		} else if(strcmp(input, "measure") == 0) {
			command = 5;
		}
		break;
 8001d96:	e037      	b.n	8001e08 <parseCommand+0x170>
		} else if(strcmp(input, "measure") == 0) {
 8001d98:	4920      	ldr	r1, [pc, #128]	; (8001e1c <parseCommand+0x184>)
 8001d9a:	6878      	ldr	r0, [r7, #4]
 8001d9c:	f7fe fa88 	bl	80002b0 <strcmp>
 8001da0:	4603      	mov	r3, r0
 8001da2:	2b00      	cmp	r3, #0
 8001da4:	d130      	bne.n	8001e08 <parseCommand+0x170>
			command = 5;
 8001da6:	2305      	movs	r3, #5
 8001da8:	60fb      	str	r3, [r7, #12]
		break;
 8001daa:	e02d      	b.n	8001e08 <parseCommand+0x170>

	// Sine/sawtooth command
	case 's':
		if(strcmp(input, "sine") == 0) {
 8001dac:	491c      	ldr	r1, [pc, #112]	; (8001e20 <parseCommand+0x188>)
 8001dae:	6878      	ldr	r0, [r7, #4]
 8001db0:	f7fe fa7e 	bl	80002b0 <strcmp>
 8001db4:	4603      	mov	r3, r0
 8001db6:	2b00      	cmp	r3, #0
 8001db8:	d102      	bne.n	8001dc0 <parseCommand+0x128>
			command = 6;
 8001dba:	2306      	movs	r3, #6
 8001dbc:	60fb      	str	r3, [r7, #12]
		} else if(strcmp(input, "saw") == 0) {
			command = 7;
		} else if(strcmp(input, "stop\n") == 0) {
			command = 9;
		}
		break;
 8001dbe:	e025      	b.n	8001e0c <parseCommand+0x174>
		} else if(strcmp(input, "saw") == 0) {
 8001dc0:	4918      	ldr	r1, [pc, #96]	; (8001e24 <parseCommand+0x18c>)
 8001dc2:	6878      	ldr	r0, [r7, #4]
 8001dc4:	f7fe fa74 	bl	80002b0 <strcmp>
 8001dc8:	4603      	mov	r3, r0
 8001dca:	2b00      	cmp	r3, #0
 8001dcc:	d102      	bne.n	8001dd4 <parseCommand+0x13c>
			command = 7;
 8001dce:	2307      	movs	r3, #7
 8001dd0:	60fb      	str	r3, [r7, #12]
		break;
 8001dd2:	e01b      	b.n	8001e0c <parseCommand+0x174>
		} else if(strcmp(input, "stop\n") == 0) {
 8001dd4:	4914      	ldr	r1, [pc, #80]	; (8001e28 <parseCommand+0x190>)
 8001dd6:	6878      	ldr	r0, [r7, #4]
 8001dd8:	f7fe fa6a 	bl	80002b0 <strcmp>
 8001ddc:	4603      	mov	r3, r0
 8001dde:	2b00      	cmp	r3, #0
 8001de0:	d114      	bne.n	8001e0c <parseCommand+0x174>
			command = 9;
 8001de2:	2309      	movs	r3, #9
 8001de4:	60fb      	str	r3, [r7, #12]
		break;
 8001de6:	e011      	b.n	8001e0c <parseCommand+0x174>

	// Triangle wave
	case 't':
		if(strcmp(input, "tri") == 0) {
 8001de8:	4910      	ldr	r1, [pc, #64]	; (8001e2c <parseCommand+0x194>)
 8001dea:	6878      	ldr	r0, [r7, #4]
 8001dec:	f7fe fa60 	bl	80002b0 <strcmp>
 8001df0:	4603      	mov	r3, r0
 8001df2:	2b00      	cmp	r3, #0
 8001df4:	d10c      	bne.n	8001e10 <parseCommand+0x178>
			command = 8;
 8001df6:	2308      	movs	r3, #8
 8001df8:	60fb      	str	r3, [r7, #12]
		}
		break;
 8001dfa:	e009      	b.n	8001e10 <parseCommand+0x178>
		break;
 8001dfc:	bf00      	nop
 8001dfe:	e008      	b.n	8001e12 <parseCommand+0x17a>
		break;
 8001e00:	bf00      	nop
 8001e02:	e006      	b.n	8001e12 <parseCommand+0x17a>
		break;
 8001e04:	bf00      	nop
 8001e06:	e004      	b.n	8001e12 <parseCommand+0x17a>
		break;
 8001e08:	bf00      	nop
 8001e0a:	e002      	b.n	8001e12 <parseCommand+0x17a>
		break;
 8001e0c:	bf00      	nop
 8001e0e:	e000      	b.n	8001e12 <parseCommand+0x17a>
		break;
 8001e10:	bf00      	nop
	}

	return command;
 8001e12:	68fb      	ldr	r3, [r7, #12]
}
 8001e14:	4618      	mov	r0, r3
 8001e16:	3710      	adds	r7, #16
 8001e18:	46bd      	mov	sp, r7
 8001e1a:	bd80      	pop	{r7, pc}
 8001e1c:	08009e20 	.word	0x08009e20
 8001e20:	08009e28 	.word	0x08009e28
 8001e24:	08009e30 	.word	0x08009e30
 8001e28:	08009e34 	.word	0x08009e34
 8001e2c:	08009e3c 	.word	0x08009e3c

08001e30 <help>:
/**
 * help
 * Prints a bunch of lines to stdout to help
 * with syntaxes of the commands
 */
void help() {
 8001e30:	b580      	push	{r7, lr}
 8001e32:	af00      	add	r7, sp, #0
	printf("NOTE: All commands are case-sensitive!\n\n");
 8001e34:	4818      	ldr	r0, [pc, #96]	; (8001e98 <help+0x68>)
 8001e36:	f002 faf5 	bl	8004424 <puts>

	// WMW
	printf("command \'wmw\' - write memory word - writes a provided 32-bit value into the specified address in memory\n\r");
 8001e3a:	4818      	ldr	r0, [pc, #96]	; (8001e9c <help+0x6c>)
 8001e3c:	f002 fa6c 	bl	8004318 <iprintf>
	printf("\tsyntax: wmw [address] [value]\n\r");
 8001e40:	4817      	ldr	r0, [pc, #92]	; (8001ea0 <help+0x70>)
 8001e42:	f002 fa69 	bl	8004318 <iprintf>
	printf("the provided address must be hexadecimal with capital letters and prefaced with \'0x\'\n\r");
 8001e46:	4817      	ldr	r0, [pc, #92]	; (8001ea4 <help+0x74>)
 8001e48:	f002 fa66 	bl	8004318 <iprintf>
	printf("the value to be written can be provided in either hex or decimal, default is decimal, unless a \'0x\' is found\n\n\r");
 8001e4c:	4816      	ldr	r0, [pc, #88]	; (8001ea8 <help+0x78>)
 8001e4e:	f002 fa63 	bl	8004318 <iprintf>

	// RMW
	printf("command \'rmw\' - read memory word - reads a provided address and outputs the unsigned contents of that address in both hex and decimal\n\r");
 8001e52:	4816      	ldr	r0, [pc, #88]	; (8001eac <help+0x7c>)
 8001e54:	f002 fa60 	bl	8004318 <iprintf>
	printf("\tsyntax: rmw [address]\n\r");
 8001e58:	4815      	ldr	r0, [pc, #84]	; (8001eb0 <help+0x80>)
 8001e5a:	f002 fa5d 	bl	8004318 <iprintf>
	printf("the provided address must be hexadecimal with capital letters and prefaced with \'0x\'\n\n\r");
 8001e5e:	4815      	ldr	r0, [pc, #84]	; (8001eb4 <help+0x84>)
 8001e60:	f002 fa5a 	bl	8004318 <iprintf>

	// DM
	printf("command \'dm\' - dump memory - reads memory starting at the provided address for the provided length in bytes, outputs byte-sized hex values\n\r");
 8001e64:	4814      	ldr	r0, [pc, #80]	; (8001eb8 <help+0x88>)
 8001e66:	f002 fa57 	bl	8004318 <iprintf>
	printf("\tsyntax: dm [address] [OPT:length]\n\r");
 8001e6a:	4814      	ldr	r0, [pc, #80]	; (8001ebc <help+0x8c>)
 8001e6c:	f002 fa54 	bl	8004318 <iprintf>
	printf("\tif no length is specified, default is 16 bytes\n\r");
 8001e70:	4813      	ldr	r0, [pc, #76]	; (8001ec0 <help+0x90>)
 8001e72:	f002 fa51 	bl	8004318 <iprintf>
	printf("the provided address must be hexadecimal with capital letters and prefaced with \'0x\'\n\r");
 8001e76:	480b      	ldr	r0, [pc, #44]	; (8001ea4 <help+0x74>)
 8001e78:	f002 fa4e 	bl	8004318 <iprintf>
	printf("the length can be provided in either hex or decimal, default is decimal, unless a \'0x\' is found\n\r");
 8001e7c:	4811      	ldr	r0, [pc, #68]	; (8001ec4 <help+0x94>)
 8001e7e:	f002 fa4b 	bl	8004318 <iprintf>

	// music
	printf("command \'music\' - Plays a song\n");
 8001e82:	4811      	ldr	r0, [pc, #68]	; (8001ec8 <help+0x98>)
 8001e84:	f002 face 	bl	8004424 <puts>
	printf("\tsyntax: music [song] [OPT:background]\n");
 8001e88:	4810      	ldr	r0, [pc, #64]	; (8001ecc <help+0x9c>)
 8001e8a:	f002 facb 	bl	8004424 <puts>
	printf("current songs as of lab 5: \n\t\'doom\' - At Doom's Gate\n\t\'zelda\' - Legend of Zelda Main Theme");
 8001e8e:	4810      	ldr	r0, [pc, #64]	; (8001ed0 <help+0xa0>)
 8001e90:	f002 fa42 	bl	8004318 <iprintf>
	return;
 8001e94:	bf00      	nop
}
 8001e96:	bd80      	pop	{r7, pc}
 8001e98:	08009e40 	.word	0x08009e40
 8001e9c:	08009e68 	.word	0x08009e68
 8001ea0:	08009ed4 	.word	0x08009ed4
 8001ea4:	08009ef8 	.word	0x08009ef8
 8001ea8:	08009f50 	.word	0x08009f50
 8001eac:	08009fc0 	.word	0x08009fc0
 8001eb0:	0800a048 	.word	0x0800a048
 8001eb4:	0800a064 	.word	0x0800a064
 8001eb8:	0800a0bc 	.word	0x0800a0bc
 8001ebc:	0800a14c 	.word	0x0800a14c
 8001ec0:	0800a174 	.word	0x0800a174
 8001ec4:	0800a1a8 	.word	0x0800a1a8
 8001ec8:	0800a20c 	.word	0x0800a20c
 8001ecc:	0800a22c 	.word	0x0800a22c
 8001ed0:	0800a254 	.word	0x0800a254

08001ed4 <parseAddress>:
 * Attempts to parse a string containing an address into that address.
 * Uses sscanf
 * Input must be hex and prefaced with '0x'
 * All hex chars after the preface must be caps
 */
uint32_t* parseAddress(const char* input) {
 8001ed4:	b580      	push	{r7, lr}
 8001ed6:	b084      	sub	sp, #16
 8001ed8:	af00      	add	r7, sp, #0
 8001eda:	6078      	str	r0, [r7, #4]
	// Variable to store parsed address
	unsigned int address = 0;
 8001edc:	2300      	movs	r3, #0
 8001ede:	60fb      	str	r3, [r7, #12]

	// Parse the address
	sscanf(input, "0x%X", &address);
 8001ee0:	f107 030c 	add.w	r3, r7, #12
 8001ee4:	461a      	mov	r2, r3
 8001ee6:	4904      	ldr	r1, [pc, #16]	; (8001ef8 <parseAddress+0x24>)
 8001ee8:	6878      	ldr	r0, [r7, #4]
 8001eea:	f002 fc31 	bl	8004750 <siscanf>

	// Return the address
	return (uint32_t*)address;
 8001eee:	68fb      	ldr	r3, [r7, #12]
}
 8001ef0:	4618      	mov	r0, r3
 8001ef2:	3710      	adds	r7, #16
 8001ef4:	46bd      	mov	sp, r7
 8001ef6:	bd80      	pop	{r7, pc}
 8001ef8:	0800a2b0 	.word	0x0800a2b0

08001efc <parseArgument>:
/**
 * parseArgument
 * Takes a string and attempts to convert it to a number.
 * Input must be in decimal and unsigned.
 */
uint32_t parseArgument(const char* input) {
 8001efc:	b580      	push	{r7, lr}
 8001efe:	b084      	sub	sp, #16
 8001f00:	af00      	add	r7, sp, #0
 8001f02:	6078      	str	r0, [r7, #4]
	// Default value if the input can't be parsed
	uint32_t parsed = -1;
 8001f04:	f04f 33ff 	mov.w	r3, #4294967295
 8001f08:	60fb      	str	r3, [r7, #12]

	// Attempt to parse
	sscanf(input, "%lu", &parsed);
 8001f0a:	f107 030c 	add.w	r3, r7, #12
 8001f0e:	461a      	mov	r2, r3
 8001f10:	4904      	ldr	r1, [pc, #16]	; (8001f24 <parseArgument+0x28>)
 8001f12:	6878      	ldr	r0, [r7, #4]
 8001f14:	f002 fc1c 	bl	8004750 <siscanf>

	// Return the parsed value
	return parsed;
 8001f18:	68fb      	ldr	r3, [r7, #12]
}
 8001f1a:	4618      	mov	r0, r3
 8001f1c:	3710      	adds	r7, #16
 8001f1e:	46bd      	mov	sp, r7
 8001f20:	bd80      	pop	{r7, pc}
 8001f22:	bf00      	nop
 8001f24:	0800a2b8 	.word	0x0800a2b8

08001f28 <stk_Init>:
static task* tasks;
static uint32_t num_tasks;
static uint32_t current_task;
static uint32_t next_task;

void stk_Init() {
 8001f28:	b480      	push	{r7}
 8001f2a:	b083      	sub	sp, #12
 8001f2c:	af00      	add	r7, sp, #0
	// Systick struct
	volatile SYSTICK* STK = (SYSTICK*)STK_BASE;
 8001f2e:	4b0e      	ldr	r3, [pc, #56]	; (8001f68 <stk_Init+0x40>)
 8001f30:	607b      	str	r3, [r7, #4]

	// Enable Systick interrupts
	STK->CTRL |= STK_INT;
 8001f32:	687b      	ldr	r3, [r7, #4]
 8001f34:	681b      	ldr	r3, [r3, #0]
 8001f36:	f043 0202 	orr.w	r2, r3, #2
 8001f3a:	687b      	ldr	r3, [r7, #4]
 8001f3c:	601a      	str	r2, [r3, #0]

	// Set to count according to internal clock
	STK->CTRL |= STK_CLK;
 8001f3e:	687b      	ldr	r3, [r7, #4]
 8001f40:	681b      	ldr	r3, [r3, #0]
 8001f42:	f043 0204 	orr.w	r2, r3, #4
 8001f46:	687b      	ldr	r3, [r7, #4]
 8001f48:	601a      	str	r2, [r3, #0]

	// Set reload value to 1ms at 16MHz = 16,000
	STK->LOAD = 16000-1;
 8001f4a:	687b      	ldr	r3, [r7, #4]
 8001f4c:	f643 627f 	movw	r2, #15999	; 0x3e7f
 8001f50:	605a      	str	r2, [r3, #4]

	STK->CTRL |= STK_EN;
 8001f52:	687b      	ldr	r3, [r7, #4]
 8001f54:	681b      	ldr	r3, [r3, #0]
 8001f56:	f043 0201 	orr.w	r2, r3, #1
 8001f5a:	687b      	ldr	r3, [r7, #4]
 8001f5c:	601a      	str	r2, [r3, #0]
}
 8001f5e:	bf00      	nop
 8001f60:	370c      	adds	r7, #12
 8001f62:	46bd      	mov	sp, r7
 8001f64:	bc80      	pop	{r7}
 8001f66:	4770      	bx	lr
 8001f68:	e000e010 	.word	0xe000e010

08001f6c <init_tasker>:

void init_tasker(uint32_t total_tasks, uint32_t main_ticks) {
 8001f6c:	b580      	push	{r7, lr}
 8001f6e:	b082      	sub	sp, #8
 8001f70:	af00      	add	r7, sp, #0
 8001f72:	6078      	str	r0, [r7, #4]
 8001f74:	6039      	str	r1, [r7, #0]
	num_tasks = total_tasks;
 8001f76:	4a0f      	ldr	r2, [pc, #60]	; (8001fb4 <init_tasker+0x48>)
 8001f78:	687b      	ldr	r3, [r7, #4]
 8001f7a:	6013      	str	r3, [r2, #0]

	tasks = calloc(total_tasks,sizeof(task));
 8001f7c:	2110      	movs	r1, #16
 8001f7e:	6878      	ldr	r0, [r7, #4]
 8001f80:	f001 f8a2 	bl	80030c8 <calloc>
 8001f84:	4603      	mov	r3, r0
 8001f86:	461a      	mov	r2, r3
 8001f88:	4b0b      	ldr	r3, [pc, #44]	; (8001fb8 <init_tasker+0x4c>)
 8001f8a:	601a      	str	r2, [r3, #0]

	tasks[0].state = ACTIVE;
 8001f8c:	4b0a      	ldr	r3, [pc, #40]	; (8001fb8 <init_tasker+0x4c>)
 8001f8e:	681b      	ldr	r3, [r3, #0]
 8001f90:	2201      	movs	r2, #1
 8001f92:	711a      	strb	r2, [r3, #4]
	tasks[0].ticks_starting = main_ticks;
 8001f94:	4b08      	ldr	r3, [pc, #32]	; (8001fb8 <init_tasker+0x4c>)
 8001f96:	681b      	ldr	r3, [r3, #0]
 8001f98:	683a      	ldr	r2, [r7, #0]
 8001f9a:	609a      	str	r2, [r3, #8]
	tasks[0].ticks_remaining = main_ticks;
 8001f9c:	4b06      	ldr	r3, [pc, #24]	; (8001fb8 <init_tasker+0x4c>)
 8001f9e:	681b      	ldr	r3, [r3, #0]
 8001fa0:	683a      	ldr	r2, [r7, #0]
 8001fa2:	60da      	str	r2, [r3, #12]

	current_task = 0;
 8001fa4:	4b05      	ldr	r3, [pc, #20]	; (8001fbc <init_tasker+0x50>)
 8001fa6:	2200      	movs	r2, #0
 8001fa8:	601a      	str	r2, [r3, #0]
}
 8001faa:	bf00      	nop
 8001fac:	3708      	adds	r7, #8
 8001fae:	46bd      	mov	sp, r7
 8001fb0:	bd80      	pop	{r7, pc}
 8001fb2:	bf00      	nop
 8001fb4:	20000d08 	.word	0x20000d08
 8001fb8:	20000d04 	.word	0x20000d04
 8001fbc:	20000d0c 	.word	0x20000d0c

08001fc0 <init_task>:

void init_task(uint32_t task_num, uint32_t stacksize, void(*entry_point)(void), uint32_t ticks) {
 8001fc0:	b590      	push	{r4, r7, lr}
 8001fc2:	b085      	sub	sp, #20
 8001fc4:	af00      	add	r7, sp, #0
 8001fc6:	60f8      	str	r0, [r7, #12]
 8001fc8:	60b9      	str	r1, [r7, #8]
 8001fca:	607a      	str	r2, [r7, #4]
 8001fcc:	603b      	str	r3, [r7, #0]
	tasks[task_num].stack_pointer = (uint32_t*)malloc(stacksize*sizeof(uint32_t));
 8001fce:	68bb      	ldr	r3, [r7, #8]
 8001fd0:	0099      	lsls	r1, r3, #2
 8001fd2:	4b78      	ldr	r3, [pc, #480]	; (80021b4 <init_task+0x1f4>)
 8001fd4:	681a      	ldr	r2, [r3, #0]
 8001fd6:	68fb      	ldr	r3, [r7, #12]
 8001fd8:	011b      	lsls	r3, r3, #4
 8001fda:	18d4      	adds	r4, r2, r3
 8001fdc:	4608      	mov	r0, r1
 8001fde:	f001 fa53 	bl	8003488 <malloc>
 8001fe2:	4603      	mov	r3, r0
 8001fe4:	6023      	str	r3, [r4, #0]

	tasks[task_num].stack_pointer += stacksize;
 8001fe6:	4b73      	ldr	r3, [pc, #460]	; (80021b4 <init_task+0x1f4>)
 8001fe8:	681a      	ldr	r2, [r3, #0]
 8001fea:	68fb      	ldr	r3, [r7, #12]
 8001fec:	011b      	lsls	r3, r3, #4
 8001fee:	4413      	add	r3, r2
 8001ff0:	6819      	ldr	r1, [r3, #0]
 8001ff2:	68bb      	ldr	r3, [r7, #8]
 8001ff4:	009a      	lsls	r2, r3, #2
 8001ff6:	4b6f      	ldr	r3, [pc, #444]	; (80021b4 <init_task+0x1f4>)
 8001ff8:	6818      	ldr	r0, [r3, #0]
 8001ffa:	68fb      	ldr	r3, [r7, #12]
 8001ffc:	011b      	lsls	r3, r3, #4
 8001ffe:	4403      	add	r3, r0
 8002000:	440a      	add	r2, r1
 8002002:	601a      	str	r2, [r3, #0]

	*(--tasks[task_num].stack_pointer) = 0x01000000;
 8002004:	4b6b      	ldr	r3, [pc, #428]	; (80021b4 <init_task+0x1f4>)
 8002006:	681a      	ldr	r2, [r3, #0]
 8002008:	68fb      	ldr	r3, [r7, #12]
 800200a:	011b      	lsls	r3, r3, #4
 800200c:	4413      	add	r3, r2
 800200e:	681a      	ldr	r2, [r3, #0]
 8002010:	3a04      	subs	r2, #4
 8002012:	601a      	str	r2, [r3, #0]
 8002014:	681b      	ldr	r3, [r3, #0]
 8002016:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800201a:	601a      	str	r2, [r3, #0]
	*(--tasks[task_num].stack_pointer) = (uint32_t)entry_point;
 800201c:	4b65      	ldr	r3, [pc, #404]	; (80021b4 <init_task+0x1f4>)
 800201e:	681a      	ldr	r2, [r3, #0]
 8002020:	68fb      	ldr	r3, [r7, #12]
 8002022:	011b      	lsls	r3, r3, #4
 8002024:	4413      	add	r3, r2
 8002026:	681a      	ldr	r2, [r3, #0]
 8002028:	3a04      	subs	r2, #4
 800202a:	601a      	str	r2, [r3, #0]
 800202c:	681b      	ldr	r3, [r3, #0]
 800202e:	687a      	ldr	r2, [r7, #4]
 8002030:	601a      	str	r2, [r3, #0]
	*(--tasks[task_num].stack_pointer) = 0xFFFFFFFF;
 8002032:	4b60      	ldr	r3, [pc, #384]	; (80021b4 <init_task+0x1f4>)
 8002034:	681a      	ldr	r2, [r3, #0]
 8002036:	68fb      	ldr	r3, [r7, #12]
 8002038:	011b      	lsls	r3, r3, #4
 800203a:	4413      	add	r3, r2
 800203c:	681a      	ldr	r2, [r3, #0]
 800203e:	3a04      	subs	r2, #4
 8002040:	601a      	str	r2, [r3, #0]
 8002042:	681b      	ldr	r3, [r3, #0]
 8002044:	f04f 32ff 	mov.w	r2, #4294967295
 8002048:	601a      	str	r2, [r3, #0]
	*(--tasks[task_num].stack_pointer) = 0x0;
 800204a:	4b5a      	ldr	r3, [pc, #360]	; (80021b4 <init_task+0x1f4>)
 800204c:	681a      	ldr	r2, [r3, #0]
 800204e:	68fb      	ldr	r3, [r7, #12]
 8002050:	011b      	lsls	r3, r3, #4
 8002052:	4413      	add	r3, r2
 8002054:	681a      	ldr	r2, [r3, #0]
 8002056:	3a04      	subs	r2, #4
 8002058:	601a      	str	r2, [r3, #0]
 800205a:	681b      	ldr	r3, [r3, #0]
 800205c:	2200      	movs	r2, #0
 800205e:	601a      	str	r2, [r3, #0]
	*(--tasks[task_num].stack_pointer) = 0x0;
 8002060:	4b54      	ldr	r3, [pc, #336]	; (80021b4 <init_task+0x1f4>)
 8002062:	681a      	ldr	r2, [r3, #0]
 8002064:	68fb      	ldr	r3, [r7, #12]
 8002066:	011b      	lsls	r3, r3, #4
 8002068:	4413      	add	r3, r2
 800206a:	681a      	ldr	r2, [r3, #0]
 800206c:	3a04      	subs	r2, #4
 800206e:	601a      	str	r2, [r3, #0]
 8002070:	681b      	ldr	r3, [r3, #0]
 8002072:	2200      	movs	r2, #0
 8002074:	601a      	str	r2, [r3, #0]
	*(--tasks[task_num].stack_pointer) = 0x0;
 8002076:	4b4f      	ldr	r3, [pc, #316]	; (80021b4 <init_task+0x1f4>)
 8002078:	681a      	ldr	r2, [r3, #0]
 800207a:	68fb      	ldr	r3, [r7, #12]
 800207c:	011b      	lsls	r3, r3, #4
 800207e:	4413      	add	r3, r2
 8002080:	681a      	ldr	r2, [r3, #0]
 8002082:	3a04      	subs	r2, #4
 8002084:	601a      	str	r2, [r3, #0]
 8002086:	681b      	ldr	r3, [r3, #0]
 8002088:	2200      	movs	r2, #0
 800208a:	601a      	str	r2, [r3, #0]
	*(--tasks[task_num].stack_pointer) = 0x0;
 800208c:	4b49      	ldr	r3, [pc, #292]	; (80021b4 <init_task+0x1f4>)
 800208e:	681a      	ldr	r2, [r3, #0]
 8002090:	68fb      	ldr	r3, [r7, #12]
 8002092:	011b      	lsls	r3, r3, #4
 8002094:	4413      	add	r3, r2
 8002096:	681a      	ldr	r2, [r3, #0]
 8002098:	3a04      	subs	r2, #4
 800209a:	601a      	str	r2, [r3, #0]
 800209c:	681b      	ldr	r3, [r3, #0]
 800209e:	2200      	movs	r2, #0
 80020a0:	601a      	str	r2, [r3, #0]
	*(--tasks[task_num].stack_pointer) = 0x0;
 80020a2:	4b44      	ldr	r3, [pc, #272]	; (80021b4 <init_task+0x1f4>)
 80020a4:	681a      	ldr	r2, [r3, #0]
 80020a6:	68fb      	ldr	r3, [r7, #12]
 80020a8:	011b      	lsls	r3, r3, #4
 80020aa:	4413      	add	r3, r2
 80020ac:	681a      	ldr	r2, [r3, #0]
 80020ae:	3a04      	subs	r2, #4
 80020b0:	601a      	str	r2, [r3, #0]
 80020b2:	681b      	ldr	r3, [r3, #0]
 80020b4:	2200      	movs	r2, #0
 80020b6:	601a      	str	r2, [r3, #0]
	*(--tasks[task_num].stack_pointer) = 0xFFFFFFF9;
 80020b8:	4b3e      	ldr	r3, [pc, #248]	; (80021b4 <init_task+0x1f4>)
 80020ba:	681a      	ldr	r2, [r3, #0]
 80020bc:	68fb      	ldr	r3, [r7, #12]
 80020be:	011b      	lsls	r3, r3, #4
 80020c0:	4413      	add	r3, r2
 80020c2:	681a      	ldr	r2, [r3, #0]
 80020c4:	3a04      	subs	r2, #4
 80020c6:	601a      	str	r2, [r3, #0]
 80020c8:	681b      	ldr	r3, [r3, #0]
 80020ca:	f06f 0206 	mvn.w	r2, #6
 80020ce:	601a      	str	r2, [r3, #0]
	*(--tasks[task_num].stack_pointer) = 0x0;
 80020d0:	4b38      	ldr	r3, [pc, #224]	; (80021b4 <init_task+0x1f4>)
 80020d2:	681a      	ldr	r2, [r3, #0]
 80020d4:	68fb      	ldr	r3, [r7, #12]
 80020d6:	011b      	lsls	r3, r3, #4
 80020d8:	4413      	add	r3, r2
 80020da:	681a      	ldr	r2, [r3, #0]
 80020dc:	3a04      	subs	r2, #4
 80020de:	601a      	str	r2, [r3, #0]
 80020e0:	681b      	ldr	r3, [r3, #0]
 80020e2:	2200      	movs	r2, #0
 80020e4:	601a      	str	r2, [r3, #0]
	*(--tasks[task_num].stack_pointer) = 0x0;
 80020e6:	4b33      	ldr	r3, [pc, #204]	; (80021b4 <init_task+0x1f4>)
 80020e8:	681a      	ldr	r2, [r3, #0]
 80020ea:	68fb      	ldr	r3, [r7, #12]
 80020ec:	011b      	lsls	r3, r3, #4
 80020ee:	4413      	add	r3, r2
 80020f0:	681a      	ldr	r2, [r3, #0]
 80020f2:	3a04      	subs	r2, #4
 80020f4:	601a      	str	r2, [r3, #0]
 80020f6:	681b      	ldr	r3, [r3, #0]
 80020f8:	2200      	movs	r2, #0
 80020fa:	601a      	str	r2, [r3, #0]
	*(--tasks[task_num].stack_pointer) = 0x0;
 80020fc:	4b2d      	ldr	r3, [pc, #180]	; (80021b4 <init_task+0x1f4>)
 80020fe:	681a      	ldr	r2, [r3, #0]
 8002100:	68fb      	ldr	r3, [r7, #12]
 8002102:	011b      	lsls	r3, r3, #4
 8002104:	4413      	add	r3, r2
 8002106:	681a      	ldr	r2, [r3, #0]
 8002108:	3a04      	subs	r2, #4
 800210a:	601a      	str	r2, [r3, #0]
 800210c:	681b      	ldr	r3, [r3, #0]
 800210e:	2200      	movs	r2, #0
 8002110:	601a      	str	r2, [r3, #0]
	*(--tasks[task_num].stack_pointer) = 0x0;
 8002112:	4b28      	ldr	r3, [pc, #160]	; (80021b4 <init_task+0x1f4>)
 8002114:	681a      	ldr	r2, [r3, #0]
 8002116:	68fb      	ldr	r3, [r7, #12]
 8002118:	011b      	lsls	r3, r3, #4
 800211a:	4413      	add	r3, r2
 800211c:	681a      	ldr	r2, [r3, #0]
 800211e:	3a04      	subs	r2, #4
 8002120:	601a      	str	r2, [r3, #0]
 8002122:	681b      	ldr	r3, [r3, #0]
 8002124:	2200      	movs	r2, #0
 8002126:	601a      	str	r2, [r3, #0]
	*(--tasks[task_num].stack_pointer) = 0x0;
 8002128:	4b22      	ldr	r3, [pc, #136]	; (80021b4 <init_task+0x1f4>)
 800212a:	681a      	ldr	r2, [r3, #0]
 800212c:	68fb      	ldr	r3, [r7, #12]
 800212e:	011b      	lsls	r3, r3, #4
 8002130:	4413      	add	r3, r2
 8002132:	681a      	ldr	r2, [r3, #0]
 8002134:	3a04      	subs	r2, #4
 8002136:	601a      	str	r2, [r3, #0]
 8002138:	681b      	ldr	r3, [r3, #0]
 800213a:	2200      	movs	r2, #0
 800213c:	601a      	str	r2, [r3, #0]
	*(--tasks[task_num].stack_pointer) = 0x0;
 800213e:	4b1d      	ldr	r3, [pc, #116]	; (80021b4 <init_task+0x1f4>)
 8002140:	681a      	ldr	r2, [r3, #0]
 8002142:	68fb      	ldr	r3, [r7, #12]
 8002144:	011b      	lsls	r3, r3, #4
 8002146:	4413      	add	r3, r2
 8002148:	681a      	ldr	r2, [r3, #0]
 800214a:	3a04      	subs	r2, #4
 800214c:	601a      	str	r2, [r3, #0]
 800214e:	681b      	ldr	r3, [r3, #0]
 8002150:	2200      	movs	r2, #0
 8002152:	601a      	str	r2, [r3, #0]
	*(--tasks[task_num].stack_pointer) = 0x0;
 8002154:	4b17      	ldr	r3, [pc, #92]	; (80021b4 <init_task+0x1f4>)
 8002156:	681a      	ldr	r2, [r3, #0]
 8002158:	68fb      	ldr	r3, [r7, #12]
 800215a:	011b      	lsls	r3, r3, #4
 800215c:	4413      	add	r3, r2
 800215e:	681a      	ldr	r2, [r3, #0]
 8002160:	3a04      	subs	r2, #4
 8002162:	601a      	str	r2, [r3, #0]
 8002164:	681b      	ldr	r3, [r3, #0]
 8002166:	2200      	movs	r2, #0
 8002168:	601a      	str	r2, [r3, #0]
	*(--tasks[task_num].stack_pointer) = 0x0;
 800216a:	4b12      	ldr	r3, [pc, #72]	; (80021b4 <init_task+0x1f4>)
 800216c:	681a      	ldr	r2, [r3, #0]
 800216e:	68fb      	ldr	r3, [r7, #12]
 8002170:	011b      	lsls	r3, r3, #4
 8002172:	4413      	add	r3, r2
 8002174:	681a      	ldr	r2, [r3, #0]
 8002176:	3a04      	subs	r2, #4
 8002178:	601a      	str	r2, [r3, #0]
 800217a:	681b      	ldr	r3, [r3, #0]
 800217c:	2200      	movs	r2, #0
 800217e:	601a      	str	r2, [r3, #0]

	tasks[task_num].state = ACTIVE;
 8002180:	4b0c      	ldr	r3, [pc, #48]	; (80021b4 <init_task+0x1f4>)
 8002182:	681a      	ldr	r2, [r3, #0]
 8002184:	68fb      	ldr	r3, [r7, #12]
 8002186:	011b      	lsls	r3, r3, #4
 8002188:	4413      	add	r3, r2
 800218a:	2201      	movs	r2, #1
 800218c:	711a      	strb	r2, [r3, #4]
	tasks[task_num].ticks_starting = ticks;
 800218e:	4b09      	ldr	r3, [pc, #36]	; (80021b4 <init_task+0x1f4>)
 8002190:	681a      	ldr	r2, [r3, #0]
 8002192:	68fb      	ldr	r3, [r7, #12]
 8002194:	011b      	lsls	r3, r3, #4
 8002196:	4413      	add	r3, r2
 8002198:	683a      	ldr	r2, [r7, #0]
 800219a:	609a      	str	r2, [r3, #8]
	tasks[task_num].ticks_remaining = 0;
 800219c:	4b05      	ldr	r3, [pc, #20]	; (80021b4 <init_task+0x1f4>)
 800219e:	681a      	ldr	r2, [r3, #0]
 80021a0:	68fb      	ldr	r3, [r7, #12]
 80021a2:	011b      	lsls	r3, r3, #4
 80021a4:	4413      	add	r3, r2
 80021a6:	2200      	movs	r2, #0
 80021a8:	60da      	str	r2, [r3, #12]
}
 80021aa:	bf00      	nop
 80021ac:	3714      	adds	r7, #20
 80021ae:	46bd      	mov	sp, r7
 80021b0:	bd90      	pop	{r4, r7, pc}
 80021b2:	bf00      	nop
 80021b4:	20000d04 	.word	0x20000d04

080021b8 <tasker_tick>:

void tasker_tick() {
 80021b8:	b480      	push	{r7}
 80021ba:	b083      	sub	sp, #12
 80021bc:	af00      	add	r7, sp, #0
	tasks[current_task].ticks_remaining--;
 80021be:	4b23      	ldr	r3, [pc, #140]	; (800224c <tasker_tick+0x94>)
 80021c0:	681a      	ldr	r2, [r3, #0]
 80021c2:	4b23      	ldr	r3, [pc, #140]	; (8002250 <tasker_tick+0x98>)
 80021c4:	681b      	ldr	r3, [r3, #0]
 80021c6:	011b      	lsls	r3, r3, #4
 80021c8:	4413      	add	r3, r2
 80021ca:	68da      	ldr	r2, [r3, #12]
 80021cc:	3a01      	subs	r2, #1
 80021ce:	60da      	str	r2, [r3, #12]

	if(tasks[current_task].ticks_remaining == 0) {
 80021d0:	4b1e      	ldr	r3, [pc, #120]	; (800224c <tasker_tick+0x94>)
 80021d2:	681a      	ldr	r2, [r3, #0]
 80021d4:	4b1e      	ldr	r3, [pc, #120]	; (8002250 <tasker_tick+0x98>)
 80021d6:	681b      	ldr	r3, [r3, #0]
 80021d8:	011b      	lsls	r3, r3, #4
 80021da:	4413      	add	r3, r2
 80021dc:	68db      	ldr	r3, [r3, #12]
 80021de:	2b00      	cmp	r3, #0
 80021e0:	d12f      	bne.n	8002242 <tasker_tick+0x8a>
		uint32_t i = 1;
 80021e2:	2301      	movs	r3, #1
 80021e4:	607b      	str	r3, [r7, #4]
		while(tasks[(next_task=(current_task+i)%num_tasks)].state!=ACTIVE) {
 80021e6:	e002      	b.n	80021ee <tasker_tick+0x36>
			i++;
 80021e8:	687b      	ldr	r3, [r7, #4]
 80021ea:	3301      	adds	r3, #1
 80021ec:	607b      	str	r3, [r7, #4]
		while(tasks[(next_task=(current_task+i)%num_tasks)].state!=ACTIVE) {
 80021ee:	4b17      	ldr	r3, [pc, #92]	; (800224c <tasker_tick+0x94>)
 80021f0:	6819      	ldr	r1, [r3, #0]
 80021f2:	4b17      	ldr	r3, [pc, #92]	; (8002250 <tasker_tick+0x98>)
 80021f4:	681a      	ldr	r2, [r3, #0]
 80021f6:	687b      	ldr	r3, [r7, #4]
 80021f8:	4413      	add	r3, r2
 80021fa:	4a16      	ldr	r2, [pc, #88]	; (8002254 <tasker_tick+0x9c>)
 80021fc:	6812      	ldr	r2, [r2, #0]
 80021fe:	fbb3 f0f2 	udiv	r0, r3, r2
 8002202:	fb02 f200 	mul.w	r2, r2, r0
 8002206:	1a9b      	subs	r3, r3, r2
 8002208:	4a13      	ldr	r2, [pc, #76]	; (8002258 <tasker_tick+0xa0>)
 800220a:	6013      	str	r3, [r2, #0]
 800220c:	4b12      	ldr	r3, [pc, #72]	; (8002258 <tasker_tick+0xa0>)
 800220e:	681b      	ldr	r3, [r3, #0]
 8002210:	011b      	lsls	r3, r3, #4
 8002212:	440b      	add	r3, r1
 8002214:	791b      	ldrb	r3, [r3, #4]
 8002216:	2b01      	cmp	r3, #1
 8002218:	d1e6      	bne.n	80021e8 <tasker_tick+0x30>
		}

		tasks[next_task].ticks_remaining = tasks[next_task].ticks_starting;
 800221a:	4b0c      	ldr	r3, [pc, #48]	; (800224c <tasker_tick+0x94>)
 800221c:	681a      	ldr	r2, [r3, #0]
 800221e:	4b0e      	ldr	r3, [pc, #56]	; (8002258 <tasker_tick+0xa0>)
 8002220:	681b      	ldr	r3, [r3, #0]
 8002222:	011b      	lsls	r3, r3, #4
 8002224:	441a      	add	r2, r3
 8002226:	4b09      	ldr	r3, [pc, #36]	; (800224c <tasker_tick+0x94>)
 8002228:	6819      	ldr	r1, [r3, #0]
 800222a:	4b0b      	ldr	r3, [pc, #44]	; (8002258 <tasker_tick+0xa0>)
 800222c:	681b      	ldr	r3, [r3, #0]
 800222e:	011b      	lsls	r3, r3, #4
 8002230:	440b      	add	r3, r1
 8002232:	6892      	ldr	r2, [r2, #8]
 8002234:	60da      	str	r2, [r3, #12]

		*SCB_ICSR |= 1<<PENDSVSET;
 8002236:	4b09      	ldr	r3, [pc, #36]	; (800225c <tasker_tick+0xa4>)
 8002238:	681b      	ldr	r3, [r3, #0]
 800223a:	4a08      	ldr	r2, [pc, #32]	; (800225c <tasker_tick+0xa4>)
 800223c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002240:	6013      	str	r3, [r2, #0]
	}
}
 8002242:	bf00      	nop
 8002244:	370c      	adds	r7, #12
 8002246:	46bd      	mov	sp, r7
 8002248:	bc80      	pop	{r7}
 800224a:	4770      	bx	lr
 800224c:	20000d04 	.word	0x20000d04
 8002250:	20000d0c 	.word	0x20000d0c
 8002254:	20000d08 	.word	0x20000d08
 8002258:	20000d10 	.word	0x20000d10
 800225c:	e000ed04 	.word	0xe000ed04

08002260 <PendSV_Handler>:

// ISR to swap tasks
void PendSV_Handler(void) {
	register uint32_t* stack_pointer asm("sp");
	asm volatile ("push {R4-R11,LR}");
 8002260:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

	tasks[current_task].stack_pointer = stack_pointer;
 8002264:	4b0b      	ldr	r3, [pc, #44]	; (8002294 <PendSV_Handler+0x34>)
 8002266:	681a      	ldr	r2, [r3, #0]
 8002268:	4b0b      	ldr	r3, [pc, #44]	; (8002298 <PendSV_Handler+0x38>)
 800226a:	681b      	ldr	r3, [r3, #0]
 800226c:	011b      	lsls	r3, r3, #4
 800226e:	4413      	add	r3, r2
 8002270:	466a      	mov	r2, sp
 8002272:	601a      	str	r2, [r3, #0]
	current_task = next_task;
 8002274:	4b09      	ldr	r3, [pc, #36]	; (800229c <PendSV_Handler+0x3c>)
 8002276:	681b      	ldr	r3, [r3, #0]
 8002278:	4a07      	ldr	r2, [pc, #28]	; (8002298 <PendSV_Handler+0x38>)
 800227a:	6013      	str	r3, [r2, #0]
	stack_pointer = tasks[current_task].stack_pointer;
 800227c:	4b05      	ldr	r3, [pc, #20]	; (8002294 <PendSV_Handler+0x34>)
 800227e:	681a      	ldr	r2, [r3, #0]
 8002280:	4b05      	ldr	r3, [pc, #20]	; (8002298 <PendSV_Handler+0x38>)
 8002282:	681b      	ldr	r3, [r3, #0]
 8002284:	011b      	lsls	r3, r3, #4
 8002286:	4413      	add	r3, r2
 8002288:	681b      	ldr	r3, [r3, #0]
 800228a:	469d      	mov	sp, r3

	asm volatile("pop {R4-R11,LR}\n\t" "BX LR");
 800228c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002290:	4770      	bx	lr
}
 8002292:	bf00      	nop
 8002294:	20000d04 	.word	0x20000d04
 8002298:	20000d0c 	.word	0x20000d0c
 800229c:	20000d10 	.word	0x20000d10

080022a0 <SysTick_Handler>:



void SysTick_Handler() {
 80022a0:	b580      	push	{r7, lr}
 80022a2:	b082      	sub	sp, #8
 80022a4:	af00      	add	r7, sp, #0
	volatile SYSTICK* STK = (SYSTICK*)STK_BASE;
 80022a6:	4b05      	ldr	r3, [pc, #20]	; (80022bc <SysTick_Handler+0x1c>)
 80022a8:	607b      	str	r3, [r7, #4]
	STK->VAL = 0;
 80022aa:	687b      	ldr	r3, [r7, #4]
 80022ac:	2200      	movs	r2, #0
 80022ae:	609a      	str	r2, [r3, #8]
	tasker_tick();
 80022b0:	f7ff ff82 	bl	80021b8 <tasker_tick>
}
 80022b4:	bf00      	nop
 80022b6:	3708      	adds	r7, #8
 80022b8:	46bd      	mov	sp, r7
 80022ba:	bd80      	pop	{r7, pc}
 80022bc:	e000e010 	.word	0xe000e010

080022c0 <note_Play>:
static uint8_t backgroundPlaying = 0;

/**
 * Plays individual notes using a busy wait
 */
void note_Play(uint32_t period, uint32_t duration) {
 80022c0:	b580      	push	{r7, lr}
 80022c2:	b084      	sub	sp, #16
 80022c4:	af00      	add	r7, sp, #0
 80022c6:	6078      	str	r0, [r7, #4]
 80022c8:	6039      	str	r1, [r7, #0]
	volatile TIMER* TIM3 = (TIMER*) TIM3_BASE;
 80022ca:	4b12      	ldr	r3, [pc, #72]	; (8002314 <note_Play+0x54>)
 80022cc:	60fb      	str	r3, [r7, #12]
	if(period == 0) {
 80022ce:	687b      	ldr	r3, [r7, #4]
 80022d0:	2b00      	cmp	r3, #0
 80022d2:	d103      	bne.n	80022dc <note_Play+0x1c>
		// If period = 0, just do a delay
		delay_us(duration);
 80022d4:	6838      	ldr	r0, [r7, #0]
 80022d6:	f7ff fafa 	bl	80018ce <delay_us>

		// Stop playing note
		TIM3->CR1 &= ~(1);
	}

	return;
 80022da:	e017      	b.n	800230c <note_Play+0x4c>
		TIM3->CCR1 = period >> 1;
 80022dc:	687b      	ldr	r3, [r7, #4]
 80022de:	085a      	lsrs	r2, r3, #1
 80022e0:	68fb      	ldr	r3, [r7, #12]
 80022e2:	635a      	str	r2, [r3, #52]	; 0x34
		TIM3->ARR = period - 1;
 80022e4:	687b      	ldr	r3, [r7, #4]
 80022e6:	1e5a      	subs	r2, r3, #1
 80022e8:	68fb      	ldr	r3, [r7, #12]
 80022ea:	62da      	str	r2, [r3, #44]	; 0x2c
		TIM3->CR1 |= 1;
 80022ec:	68fb      	ldr	r3, [r7, #12]
 80022ee:	681b      	ldr	r3, [r3, #0]
 80022f0:	f043 0201 	orr.w	r2, r3, #1
 80022f4:	68fb      	ldr	r3, [r7, #12]
 80022f6:	601a      	str	r2, [r3, #0]
		delay_us(duration);
 80022f8:	6838      	ldr	r0, [r7, #0]
 80022fa:	f7ff fae8 	bl	80018ce <delay_us>
		TIM3->CR1 &= ~(1);
 80022fe:	68fb      	ldr	r3, [r7, #12]
 8002300:	681b      	ldr	r3, [r3, #0]
 8002302:	f023 0201 	bic.w	r2, r3, #1
 8002306:	68fb      	ldr	r3, [r7, #12]
 8002308:	601a      	str	r2, [r3, #0]
	return;
 800230a:	bf00      	nop
}
 800230c:	3710      	adds	r7, #16
 800230e:	46bd      	mov	sp, r7
 8002310:	bd80      	pop	{r7, pc}
 8002312:	bf00      	nop
 8002314:	40000400 	.word	0x40000400

08002318 <music_Init>:

/**
 * Initializes the appropriate timers and GPIO port
 */
void music_Init() {
 8002318:	b480      	push	{r7}
 800231a:	b087      	sub	sp, #28
 800231c:	af00      	add	r7, sp, #0
	// Pointers for all used peripherals
	// TIM5 will be a simple down-counter which will trigger interrupts
	// 	each time a note completes playing in the background.
	volatile RCC* RCC_Target = (RCC*) RCC_BASE;
 800231e:	4b31      	ldr	r3, [pc, #196]	; (80023e4 <music_Init+0xcc>)
 8002320:	617b      	str	r3, [r7, #20]
	volatile GPIO* GPIOB = (GPIO*) GPIOB_BASE;
 8002322:	4b31      	ldr	r3, [pc, #196]	; (80023e8 <music_Init+0xd0>)
 8002324:	613b      	str	r3, [r7, #16]
	volatile TIMER* TIM3 = (TIMER*) TIM3_BASE;
 8002326:	4b31      	ldr	r3, [pc, #196]	; (80023ec <music_Init+0xd4>)
 8002328:	60fb      	str	r3, [r7, #12]
	volatile TIMER* TIM5 = (TIMER*) TIM5_BASE;
 800232a:	4b31      	ldr	r3, [pc, #196]	; (80023f0 <music_Init+0xd8>)
 800232c:	60bb      	str	r3, [r7, #8]
	volatile NVIC* NVIC_Target = (NVIC*) NVIC_BASE;
 800232e:	4b31      	ldr	r3, [pc, #196]	; (80023f4 <music_Init+0xdc>)
 8002330:	607b      	str	r3, [r7, #4]

	// Enable GPIOB in RCC
	RCC_Target->AHB1ENR |= RCC_GPIOBEN;
 8002332:	697b      	ldr	r3, [r7, #20]
 8002334:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002336:	f043 0202 	orr.w	r2, r3, #2
 800233a:	697b      	ldr	r3, [r7, #20]
 800233c:	631a      	str	r2, [r3, #48]	; 0x30

	// Enable TIM3 and TIM5 in RCC
	RCC_Target->APB1ENR |= (RCC_TIM3EN | RCC_TIM5EN);
 800233e:	697b      	ldr	r3, [r7, #20]
 8002340:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002342:	f043 020a 	orr.w	r2, r3, #10
 8002346:	697b      	ldr	r3, [r7, #20]
 8002348:	641a      	str	r2, [r3, #64]	; 0x40

	// Set PB4 to alternate function
	GPIOB->MODER = GPIO_ALTFUN << 8;
 800234a:	693b      	ldr	r3, [r7, #16]
 800234c:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002350:	601a      	str	r2, [r3, #0]

	// Set AFRL such that PB4 is connected to TIM3
	GPIOB->AFRL = PB4_PIEZO;
 8002352:	693b      	ldr	r3, [r7, #16]
 8002354:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8002358:	621a      	str	r2, [r3, #32]

	// Set TIM3 & TIM5 prescale to 16, AKA 1 count = 1us
	TIM3->PSC = 16;
 800235a:	68fb      	ldr	r3, [r7, #12]
 800235c:	2210      	movs	r2, #16
 800235e:	629a      	str	r2, [r3, #40]	; 0x28
	TIM5->PSC = 16;
 8002360:	68bb      	ldr	r3, [r7, #8]
 8002362:	2210      	movs	r2, #16
 8002364:	629a      	str	r2, [r3, #40]	; 0x28

	// Prescale fix
	// Forces an event to be generated and then
	// clears it right away which tricks the timer
	// into applying the prescale somehow
	TIM3->EGR = 1;
 8002366:	68fb      	ldr	r3, [r7, #12]
 8002368:	2201      	movs	r2, #1
 800236a:	615a      	str	r2, [r3, #20]
	TIM3->SR &= ~(1);
 800236c:	68fb      	ldr	r3, [r7, #12]
 800236e:	691b      	ldr	r3, [r3, #16]
 8002370:	f023 0201 	bic.w	r2, r3, #1
 8002374:	68fb      	ldr	r3, [r7, #12]
 8002376:	611a      	str	r2, [r3, #16]
	TIM5->EGR = 1;
 8002378:	68bb      	ldr	r3, [r7, #8]
 800237a:	2201      	movs	r2, #1
 800237c:	615a      	str	r2, [r3, #20]
	TIM5->SR &= ~(1);
 800237e:	68bb      	ldr	r3, [r7, #8]
 8002380:	691b      	ldr	r3, [r3, #16]
 8002382:	f023 0201 	bic.w	r2, r3, #1
 8002386:	68bb      	ldr	r3, [r7, #8]
 8002388:	611a      	str	r2, [r3, #16]

	// Configure CCMR for PWM mode
	TIM3->CCMR1 |= (OC1M_PWM | OC1M_PE);
 800238a:	68fb      	ldr	r3, [r7, #12]
 800238c:	699b      	ldr	r3, [r3, #24]
 800238e:	f043 0268 	orr.w	r2, r3, #104	; 0x68
 8002392:	68fb      	ldr	r3, [r7, #12]
 8002394:	619a      	str	r2, [r3, #24]

	// Enable in CCER
	TIM3->CCER |= CCER_CC1E;
 8002396:	68fb      	ldr	r3, [r7, #12]
 8002398:	6a1b      	ldr	r3, [r3, #32]
 800239a:	f043 0201 	orr.w	r2, r3, #1
 800239e:	68fb      	ldr	r3, [r7, #12]
 80023a0:	621a      	str	r2, [r3, #32]

	// Assert not counting in CR1
	TIM3->CR1 &= ~(TIM_CEN);
 80023a2:	68fb      	ldr	r3, [r7, #12]
 80023a4:	681b      	ldr	r3, [r3, #0]
 80023a6:	f023 0201 	bic.w	r2, r3, #1
 80023aa:	68fb      	ldr	r3, [r7, #12]
 80023ac:	601a      	str	r2, [r3, #0]
	TIM5->CR1 &= ~(TIM_CEN);
 80023ae:	68bb      	ldr	r3, [r7, #8]
 80023b0:	681b      	ldr	r3, [r3, #0]
 80023b2:	f023 0201 	bic.w	r2, r3, #1
 80023b6:	68bb      	ldr	r3, [r7, #8]
 80023b8:	601a      	str	r2, [r3, #0]

	// Enable interrupts for TIM5
	TIM5->DIER |= TIM_UIE;
 80023ba:	68bb      	ldr	r3, [r7, #8]
 80023bc:	68db      	ldr	r3, [r3, #12]
 80023be:	f043 0201 	orr.w	r2, r3, #1
 80023c2:	68bb      	ldr	r3, [r7, #8]
 80023c4:	60da      	str	r2, [r3, #12]

	// Set TIM5 to count-down and one-pulse
	TIM5->CR1 |= (TIM_OPM | TIM_DIR);
 80023c6:	68bb      	ldr	r3, [r7, #8]
 80023c8:	681b      	ldr	r3, [r3, #0]
 80023ca:	f043 0218 	orr.w	r2, r3, #24
 80023ce:	68bb      	ldr	r3, [r7, #8]
 80023d0:	601a      	str	r2, [r3, #0]

	// Enable the TIM5 interrupt in ISER, slot 50
	//	aka 1<<18 in ISER1
	NVIC_Target->ISER[1] = 1<<18;
 80023d2:	687b      	ldr	r3, [r7, #4]
 80023d4:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 80023d8:	605a      	str	r2, [r3, #4]

	return;
 80023da:	bf00      	nop
}
 80023dc:	371c      	adds	r7, #28
 80023de:	46bd      	mov	sp, r7
 80023e0:	bc80      	pop	{r7}
 80023e2:	4770      	bx	lr
 80023e4:	40023800 	.word	0x40023800
 80023e8:	40020400 	.word	0x40020400
 80023ec:	40000400 	.word	0x40000400
 80023f0:	40000c00 	.word	0x40000c00
 80023f4:	e000e100 	.word	0xe000e100

080023f8 <music_Play>:

/**
 * Iterates through the provided array of notes until a null
 * note is found
 */
void music_Play(const note song[]) {
 80023f8:	b5b0      	push	{r4, r5, r7, lr}
 80023fa:	b084      	sub	sp, #16
 80023fc:	af00      	add	r7, sp, #0
 80023fe:	6078      	str	r0, [r7, #4]
	// Index counter
	int i = 0;
 8002400:	2300      	movs	r3, #0
 8002402:	60fb      	str	r3, [r7, #12]

	if(backgroundPlaying == 0) {
 8002404:	4b23      	ldr	r3, [pc, #140]	; (8002494 <music_Play+0x9c>)
 8002406:	781b      	ldrb	r3, [r3, #0]
 8002408:	2b00      	cmp	r3, #0
 800240a:	d13c      	bne.n	8002486 <music_Play+0x8e>
		// Loop through array until we find a note with 0 period and 0 length
		while(!(song[i].period == 0 && song[i].length == 0)) {
 800240c:	e024      	b.n	8002458 <music_Play+0x60>
			// Attempt to put these in a register for passing to the funct
			register uint32_t length = song[i].length;
 800240e:	68fa      	ldr	r2, [r7, #12]
 8002410:	4613      	mov	r3, r2
 8002412:	005b      	lsls	r3, r3, #1
 8002414:	4413      	add	r3, r2
 8002416:	009b      	lsls	r3, r3, #2
 8002418:	461a      	mov	r2, r3
 800241a:	687b      	ldr	r3, [r7, #4]
 800241c:	4413      	add	r3, r2
 800241e:	689d      	ldr	r5, [r3, #8]
			register uint32_t period = song[i].period;
 8002420:	68fa      	ldr	r2, [r7, #12]
 8002422:	4613      	mov	r3, r2
 8002424:	005b      	lsls	r3, r3, #1
 8002426:	4413      	add	r3, r2
 8002428:	009b      	lsls	r3, r3, #2
 800242a:	461a      	mov	r2, r3
 800242c:	687b      	ldr	r3, [r7, #4]
 800242e:	4413      	add	r3, r2
 8002430:	681c      	ldr	r4, [r3, #0]

			uint32_t octave = song[i].octave;
 8002432:	68fa      	ldr	r2, [r7, #12]
 8002434:	4613      	mov	r3, r2
 8002436:	005b      	lsls	r3, r3, #1
 8002438:	4413      	add	r3, r2
 800243a:	009b      	lsls	r3, r3, #2
 800243c:	461a      	mov	r2, r3
 800243e:	687b      	ldr	r3, [r7, #4]
 8002440:	4413      	add	r3, r2
 8002442:	685b      	ldr	r3, [r3, #4]
 8002444:	60bb      	str	r3, [r7, #8]
			period = period >> octave;
 8002446:	68bb      	ldr	r3, [r7, #8]
 8002448:	40dc      	lsrs	r4, r3
			note_Play(period, length);
 800244a:	4629      	mov	r1, r5
 800244c:	4620      	mov	r0, r4
 800244e:	f7ff ff37 	bl	80022c0 <note_Play>
			i++;
 8002452:	68fb      	ldr	r3, [r7, #12]
 8002454:	3301      	adds	r3, #1
 8002456:	60fb      	str	r3, [r7, #12]
		while(!(song[i].period == 0 && song[i].length == 0)) {
 8002458:	68fa      	ldr	r2, [r7, #12]
 800245a:	4613      	mov	r3, r2
 800245c:	005b      	lsls	r3, r3, #1
 800245e:	4413      	add	r3, r2
 8002460:	009b      	lsls	r3, r3, #2
 8002462:	461a      	mov	r2, r3
 8002464:	687b      	ldr	r3, [r7, #4]
 8002466:	4413      	add	r3, r2
 8002468:	681b      	ldr	r3, [r3, #0]
 800246a:	2b00      	cmp	r3, #0
 800246c:	d1cf      	bne.n	800240e <music_Play+0x16>
 800246e:	68fa      	ldr	r2, [r7, #12]
 8002470:	4613      	mov	r3, r2
 8002472:	005b      	lsls	r3, r3, #1
 8002474:	4413      	add	r3, r2
 8002476:	009b      	lsls	r3, r3, #2
 8002478:	461a      	mov	r2, r3
 800247a:	687b      	ldr	r3, [r7, #4]
 800247c:	4413      	add	r3, r2
 800247e:	689b      	ldr	r3, [r3, #8]
 8002480:	2b00      	cmp	r3, #0
 8002482:	d1c4      	bne.n	800240e <music_Play+0x16>
		}
	} else {
		printf("Cannot play a song while one is playing in the background\n");
	}

	return;
 8002484:	e003      	b.n	800248e <music_Play+0x96>
		printf("Cannot play a song while one is playing in the background\n");
 8002486:	4804      	ldr	r0, [pc, #16]	; (8002498 <music_Play+0xa0>)
 8002488:	f001 ffcc 	bl	8004424 <puts>
	return;
 800248c:	bf00      	nop
}
 800248e:	3710      	adds	r7, #16
 8002490:	46bd      	mov	sp, r7
 8002492:	bdb0      	pop	{r4, r5, r7, pc}
 8002494:	20000d1c 	.word	0x20000d1c
 8002498:	0800a2bc 	.word	0x0800a2bc

0800249c <music_StopBackground>:

/**
 * Stops a background song that is playing
 */
void music_StopBackground() {
 800249c:	b480      	push	{r7}
 800249e:	b083      	sub	sp, #12
 80024a0:	af00      	add	r7, sp, #0
	volatile TIMER* TIM3 = (TIMER*) TIM3_BASE;
 80024a2:	4b0d      	ldr	r3, [pc, #52]	; (80024d8 <music_StopBackground+0x3c>)
 80024a4:	607b      	str	r3, [r7, #4]
	volatile TIMER* TIM5 = (TIMER*) TIM5_BASE;
 80024a6:	4b0d      	ldr	r3, [pc, #52]	; (80024dc <music_StopBackground+0x40>)
 80024a8:	603b      	str	r3, [r7, #0]

	// Stop the timers
	TIM5->CR1 &= ~(TIM_CEN);
 80024aa:	683b      	ldr	r3, [r7, #0]
 80024ac:	681b      	ldr	r3, [r3, #0]
 80024ae:	f023 0201 	bic.w	r2, r3, #1
 80024b2:	683b      	ldr	r3, [r7, #0]
 80024b4:	601a      	str	r2, [r3, #0]
	TIM3->CR1 &= ~(TIM_CEN);
 80024b6:	687b      	ldr	r3, [r7, #4]
 80024b8:	681b      	ldr	r3, [r3, #0]
 80024ba:	f023 0201 	bic.w	r2, r3, #1
 80024be:	687b      	ldr	r3, [r7, #4]
 80024c0:	601a      	str	r2, [r3, #0]

	// Reset controls
	backgroundPlaying = 0;
 80024c2:	4b07      	ldr	r3, [pc, #28]	; (80024e0 <music_StopBackground+0x44>)
 80024c4:	2200      	movs	r2, #0
 80024c6:	701a      	strb	r2, [r3, #0]
	musicIndex = 0;
 80024c8:	4b06      	ldr	r3, [pc, #24]	; (80024e4 <music_StopBackground+0x48>)
 80024ca:	2200      	movs	r2, #0
 80024cc:	601a      	str	r2, [r3, #0]

	return;
 80024ce:	bf00      	nop
}
 80024d0:	370c      	adds	r7, #12
 80024d2:	46bd      	mov	sp, r7
 80024d4:	bc80      	pop	{r7}
 80024d6:	4770      	bx	lr
 80024d8:	40000400 	.word	0x40000400
 80024dc:	40000c00 	.word	0x40000c00
 80024e0:	20000d1c 	.word	0x20000d1c
 80024e4:	20000d14 	.word	0x20000d14

080024e8 <music_Background>:

/**
 * Starts the provided song playing in the background
 */
void music_Background(note song[]) {
 80024e8:	b580      	push	{r7, lr}
 80024ea:	b086      	sub	sp, #24
 80024ec:	af00      	add	r7, sp, #0
 80024ee:	6078      	str	r0, [r7, #4]
	volatile TIMER* TIM3 = (TIMER*) TIM3_BASE;
 80024f0:	4b1d      	ldr	r3, [pc, #116]	; (8002568 <music_Background+0x80>)
 80024f2:	617b      	str	r3, [r7, #20]
	volatile TIMER* TIM5 = (TIMER*) TIM5_BASE;
 80024f4:	4b1d      	ldr	r3, [pc, #116]	; (800256c <music_Background+0x84>)
 80024f6:	613b      	str	r3, [r7, #16]

	// Stop background song
	music_StopBackground();
 80024f8:	f7ff ffd0 	bl	800249c <music_StopBackground>

	// Set flag to show music is playing
	backgroundPlaying = 1;
 80024fc:	4b1c      	ldr	r3, [pc, #112]	; (8002570 <music_Background+0x88>)
 80024fe:	2201      	movs	r2, #1
 8002500:	701a      	strb	r2, [r3, #0]

	// Set new address and reset note index
	// note index gets set to one because this method
	// plays the 0th note on its own, then the interrupts
	// take over
	backgroundSong = song;
 8002502:	4a1c      	ldr	r2, [pc, #112]	; (8002574 <music_Background+0x8c>)
 8002504:	687b      	ldr	r3, [r7, #4]
 8002506:	6013      	str	r3, [r2, #0]
	musicIndex = 1;
 8002508:	4b1b      	ldr	r3, [pc, #108]	; (8002578 <music_Background+0x90>)
 800250a:	2201      	movs	r2, #1
 800250c:	601a      	str	r2, [r3, #0]

	// Load the period and length
	uint32_t period = song[0].period;
 800250e:	687b      	ldr	r3, [r7, #4]
 8002510:	681b      	ldr	r3, [r3, #0]
 8002512:	60fb      	str	r3, [r7, #12]
	period = period >> song[0].octave;
 8002514:	687b      	ldr	r3, [r7, #4]
 8002516:	685b      	ldr	r3, [r3, #4]
 8002518:	68fa      	ldr	r2, [r7, #12]
 800251a:	fa22 f303 	lsr.w	r3, r2, r3
 800251e:	60fb      	str	r3, [r7, #12]
	uint32_t length = song[0].length;
 8002520:	687b      	ldr	r3, [r7, #4]
 8002522:	689b      	ldr	r3, [r3, #8]
 8002524:	60bb      	str	r3, [r7, #8]

	// Write values
	TIM5->CNT = length;
 8002526:	693b      	ldr	r3, [r7, #16]
 8002528:	68ba      	ldr	r2, [r7, #8]
 800252a:	625a      	str	r2, [r3, #36]	; 0x24
	TIM3->ARR = period - 1;
 800252c:	68fb      	ldr	r3, [r7, #12]
 800252e:	1e5a      	subs	r2, r3, #1
 8002530:	697b      	ldr	r3, [r7, #20]
 8002532:	62da      	str	r2, [r3, #44]	; 0x2c
	TIM3->CCR1= period >> 1;
 8002534:	68fb      	ldr	r3, [r7, #12]
 8002536:	085a      	lsrs	r2, r3, #1
 8002538:	697b      	ldr	r3, [r7, #20]
 800253a:	635a      	str	r2, [r3, #52]	; 0x34

	// Start timers
	TIM5->DIER|= TIM_UIE;
 800253c:	693b      	ldr	r3, [r7, #16]
 800253e:	68db      	ldr	r3, [r3, #12]
 8002540:	f043 0201 	orr.w	r2, r3, #1
 8002544:	693b      	ldr	r3, [r7, #16]
 8002546:	60da      	str	r2, [r3, #12]
	TIM3->CR1 |= TIM_CEN;
 8002548:	697b      	ldr	r3, [r7, #20]
 800254a:	681b      	ldr	r3, [r3, #0]
 800254c:	f043 0201 	orr.w	r2, r3, #1
 8002550:	697b      	ldr	r3, [r7, #20]
 8002552:	601a      	str	r2, [r3, #0]
	TIM5->CR1 |= TIM_CEN;
 8002554:	693b      	ldr	r3, [r7, #16]
 8002556:	681b      	ldr	r3, [r3, #0]
 8002558:	f043 0201 	orr.w	r2, r3, #1
 800255c:	693b      	ldr	r3, [r7, #16]
 800255e:	601a      	str	r2, [r3, #0]

	return;
 8002560:	bf00      	nop
}
 8002562:	3718      	adds	r7, #24
 8002564:	46bd      	mov	sp, r7
 8002566:	bd80      	pop	{r7, pc}
 8002568:	40000400 	.word	0x40000400
 800256c:	40000c00 	.word	0x40000c00
 8002570:	20000d1c 	.word	0x20000d1c
 8002574:	20000d18 	.word	0x20000d18
 8002578:	20000d14 	.word	0x20000d14

0800257c <TIM5_IRQHandler>:
 * ISR
 * Triggers when TIM5 hits zero;
 * loads next note from the global song array into appropriate
 * timers and increments the global note index
 */
void TIM5_IRQHandler() {
 800257c:	b480      	push	{r7}
 800257e:	b089      	sub	sp, #36	; 0x24
 8002580:	af00      	add	r7, sp, #0
	volatile TIMER* TIM3 = (TIMER*) TIM3_BASE;
 8002582:	4b33      	ldr	r3, [pc, #204]	; (8002650 <TIM5_IRQHandler+0xd4>)
 8002584:	61fb      	str	r3, [r7, #28]
	volatile TIMER* TIM5 = (TIMER*) TIM5_BASE;
 8002586:	4b33      	ldr	r3, [pc, #204]	; (8002654 <TIM5_IRQHandler+0xd8>)
 8002588:	61bb      	str	r3, [r7, #24]


	// Clear the register that triggers interrupts
	TIM5->SR = 0;
 800258a:	69bb      	ldr	r3, [r7, #24]
 800258c:	2200      	movs	r2, #0
 800258e:	611a      	str	r2, [r3, #16]

	// Stop the frequency timer
	TIM3->CR1 &= ~(TIM_CEN);
 8002590:	69fb      	ldr	r3, [r7, #28]
 8002592:	681b      	ldr	r3, [r3, #0]
 8002594:	f023 0201 	bic.w	r2, r3, #1
 8002598:	69fb      	ldr	r3, [r7, #28]
 800259a:	601a      	str	r2, [r3, #0]

	// Load current note info
	note current = backgroundSong[musicIndex];
 800259c:	4b2e      	ldr	r3, [pc, #184]	; (8002658 <TIM5_IRQHandler+0xdc>)
 800259e:	6819      	ldr	r1, [r3, #0]
 80025a0:	4b2e      	ldr	r3, [pc, #184]	; (800265c <TIM5_IRQHandler+0xe0>)
 80025a2:	681a      	ldr	r2, [r3, #0]
 80025a4:	4613      	mov	r3, r2
 80025a6:	005b      	lsls	r3, r3, #1
 80025a8:	4413      	add	r3, r2
 80025aa:	009b      	lsls	r3, r3, #2
 80025ac:	18ca      	adds	r2, r1, r3
 80025ae:	1d3b      	adds	r3, r7, #4
 80025b0:	ca07      	ldmia	r2, {r0, r1, r2}
 80025b2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
	uint32_t period = current.period;
 80025b6:	687b      	ldr	r3, [r7, #4]
 80025b8:	617b      	str	r3, [r7, #20]
	period = period >> current.octave;
 80025ba:	68bb      	ldr	r3, [r7, #8]
 80025bc:	697a      	ldr	r2, [r7, #20]
 80025be:	fa22 f303 	lsr.w	r3, r2, r3
 80025c2:	617b      	str	r3, [r7, #20]
	uint32_t length = current.length;
 80025c4:	68fb      	ldr	r3, [r7, #12]
 80025c6:	613b      	str	r3, [r7, #16]

	// If the note isn't a terminator
	if(!(period == 0 && length == 0)) {
 80025c8:	697b      	ldr	r3, [r7, #20]
 80025ca:	2b00      	cmp	r3, #0
 80025cc:	d102      	bne.n	80025d4 <TIM5_IRQHandler+0x58>
 80025ce:	693b      	ldr	r3, [r7, #16]
 80025d0:	2b00      	cmp	r3, #0
 80025d2:	d01c      	beq.n	800260e <TIM5_IRQHandler+0x92>
		// Write the period values accordingly
		TIM3->ARR = period - 1;
 80025d4:	697b      	ldr	r3, [r7, #20]
 80025d6:	1e5a      	subs	r2, r3, #1
 80025d8:	69fb      	ldr	r3, [r7, #28]
 80025da:	62da      	str	r2, [r3, #44]	; 0x2c
		TIM3->CCR1 = period >> 1;
 80025dc:	697b      	ldr	r3, [r7, #20]
 80025de:	085a      	lsrs	r2, r3, #1
 80025e0:	69fb      	ldr	r3, [r7, #28]
 80025e2:	635a      	str	r2, [r3, #52]	; 0x34
		// Write the note duration
		TIM5->CNT = length;
 80025e4:	69bb      	ldr	r3, [r7, #24]
 80025e6:	693a      	ldr	r2, [r7, #16]
 80025e8:	625a      	str	r2, [r3, #36]	; 0x24

		// Increment the note counter
		musicIndex++;
 80025ea:	4b1c      	ldr	r3, [pc, #112]	; (800265c <TIM5_IRQHandler+0xe0>)
 80025ec:	681b      	ldr	r3, [r3, #0]
 80025ee:	3301      	adds	r3, #1
 80025f0:	4a1a      	ldr	r2, [pc, #104]	; (800265c <TIM5_IRQHandler+0xe0>)
 80025f2:	6013      	str	r3, [r2, #0]

		// Enable both timers
		TIM3->CR1 |= TIM_CEN;
 80025f4:	69fb      	ldr	r3, [r7, #28]
 80025f6:	681b      	ldr	r3, [r3, #0]
 80025f8:	f043 0201 	orr.w	r2, r3, #1
 80025fc:	69fb      	ldr	r3, [r7, #28]
 80025fe:	601a      	str	r2, [r3, #0]
		TIM5->CR1 |= TIM_CEN;
 8002600:	69bb      	ldr	r3, [r7, #24]
 8002602:	681b      	ldr	r3, [r3, #0]
 8002604:	f043 0201 	orr.w	r2, r3, #1
 8002608:	69bb      	ldr	r3, [r7, #24]
 800260a:	601a      	str	r2, [r3, #0]
 800260c:	e01a      	b.n	8002644 <TIM5_IRQHandler+0xc8>

	// If the note is a terminator
	} else if(period == 0 && length == 0) {
 800260e:	697b      	ldr	r3, [r7, #20]
 8002610:	2b00      	cmp	r3, #0
 8002612:	d118      	bne.n	8002646 <TIM5_IRQHandler+0xca>
 8002614:	693b      	ldr	r3, [r7, #16]
 8002616:	2b00      	cmp	r3, #0
 8002618:	d115      	bne.n	8002646 <TIM5_IRQHandler+0xca>
		// Clear the note counter
		musicIndex = 0;
 800261a:	4b10      	ldr	r3, [pc, #64]	; (800265c <TIM5_IRQHandler+0xe0>)
 800261c:	2200      	movs	r2, #0
 800261e:	601a      	str	r2, [r3, #0]

		// Clear the flag for background songs
		backgroundPlaying = 0;
 8002620:	4b0f      	ldr	r3, [pc, #60]	; (8002660 <TIM5_IRQHandler+0xe4>)
 8002622:	2200      	movs	r2, #0
 8002624:	701a      	strb	r2, [r3, #0]

		// Disable timer 5's interrupts
		TIM5->DIER &= ~(TIM_UIE);
 8002626:	69bb      	ldr	r3, [r7, #24]
 8002628:	68db      	ldr	r3, [r3, #12]
 800262a:	f023 0201 	bic.w	r2, r3, #1
 800262e:	69bb      	ldr	r3, [r7, #24]
 8002630:	60da      	str	r2, [r3, #12]

		// Clear the timers
		TIM3->ARR = 0;
 8002632:	69fb      	ldr	r3, [r7, #28]
 8002634:	2200      	movs	r2, #0
 8002636:	62da      	str	r2, [r3, #44]	; 0x2c
		TIM3->CCR1 = 0;
 8002638:	69fb      	ldr	r3, [r7, #28]
 800263a:	2200      	movs	r2, #0
 800263c:	635a      	str	r2, [r3, #52]	; 0x34
		TIM5->CNT = 0;
 800263e:	69bb      	ldr	r3, [r7, #24]
 8002640:	2200      	movs	r2, #0
 8002642:	625a      	str	r2, [r3, #36]	; 0x24
	}

	return;
 8002644:	bf00      	nop
 8002646:	bf00      	nop
}
 8002648:	3724      	adds	r7, #36	; 0x24
 800264a:	46bd      	mov	sp, r7
 800264c:	bc80      	pop	{r7}
 800264e:	4770      	bx	lr
 8002650:	40000400 	.word	0x40000400
 8002654:	40000c00 	.word	0x40000c00
 8002658:	20000d18 	.word	0x20000d18
 800265c:	20000d14 	.word	0x20000d14
 8002660:	20000d1c 	.word	0x20000d1c
 8002664:	00000000 	.word	0x00000000

08002668 <period_Measure>:
	NVIC_Target->ISER[0] |= (1<<30);

	return;
}

double period_Measure() {
 8002668:	b580      	push	{r7, lr}
 800266a:	b08a      	sub	sp, #40	; 0x28
 800266c:	af00      	add	r7, sp, #0
	volatile TIMER* TIM4 = (TIMER*)TIM4_BASE;
 800266e:	4b52      	ldr	r3, [pc, #328]	; (80027b8 <period_Measure+0x150>)
 8002670:	60bb      	str	r3, [r7, #8]

	double average = 0;
 8002672:	f04f 0200 	mov.w	r2, #0
 8002676:	f04f 0300 	mov.w	r3, #0
 800267a:	e9c7 2308 	strd	r2, r3, [r7, #32]

	// This method takes the main thread of execution, but still
	if(!period_Status) {
 800267e:	4b4f      	ldr	r3, [pc, #316]	; (80027bc <period_Measure+0x154>)
 8002680:	781b      	ldrb	r3, [r3, #0]
 8002682:	2b00      	cmp	r3, #0
 8002684:	f040 808b 	bne.w	800279e <period_Measure+0x136>
		// Enable interrupt and counter, set flag
		period_Status = 1;
 8002688:	4b4c      	ldr	r3, [pc, #304]	; (80027bc <period_Measure+0x154>)
 800268a:	2201      	movs	r2, #1
 800268c:	701a      	strb	r2, [r3, #0]
		TIM4->DIER |= (1<<6);
 800268e:	68bb      	ldr	r3, [r7, #8]
 8002690:	68db      	ldr	r3, [r3, #12]
 8002692:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8002696:	68bb      	ldr	r3, [r7, #8]
 8002698:	60da      	str	r2, [r3, #12]

		// Busy wait until measurements are done
		while(period_Status) {}
 800269a:	bf00      	nop
 800269c:	4b47      	ldr	r3, [pc, #284]	; (80027bc <period_Measure+0x154>)
 800269e:	781b      	ldrb	r3, [r3, #0]
 80026a0:	2b00      	cmp	r3, #0
 80026a2:	d1fb      	bne.n	800269c <period_Measure+0x34>

		double minimum = 131072;
 80026a4:	f04f 0200 	mov.w	r2, #0
 80026a8:	f04f 4382 	mov.w	r3, #1090519040	; 0x41000000
 80026ac:	e9c7 2306 	strd	r2, r3, [r7, #24]
		double maximum = 0;
 80026b0:	f04f 0200 	mov.w	r2, #0
 80026b4:	f04f 0300 	mov.w	r3, #0
 80026b8:	e9c7 2304 	strd	r2, r3, [r7, #16]

		// Calculate the average period
		for(int i = 0; i < 10; i++) {
 80026bc:	2300      	movs	r3, #0
 80026be:	60fb      	str	r3, [r7, #12]
 80026c0:	e03f      	b.n	8002742 <period_Measure+0xda>
			uint16_t value = readings[i];
 80026c2:	4a3f      	ldr	r2, [pc, #252]	; (80027c0 <period_Measure+0x158>)
 80026c4:	68fb      	ldr	r3, [r7, #12]
 80026c6:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80026ca:	80fb      	strh	r3, [r7, #6]

			// Record min/max
			if((double)value >= maximum) {
 80026cc:	88fb      	ldrh	r3, [r7, #6]
 80026ce:	4618      	mov	r0, r3
 80026d0:	f7fd ff42 	bl	8000558 <__aeabi_ui2d>
 80026d4:	4602      	mov	r2, r0
 80026d6:	460b      	mov	r3, r1
 80026d8:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 80026dc:	f7fe fa32 	bl	8000b44 <__aeabi_dcmple>
 80026e0:	4603      	mov	r3, r0
 80026e2:	2b00      	cmp	r3, #0
 80026e4:	d007      	beq.n	80026f6 <period_Measure+0x8e>
				maximum = value;
 80026e6:	88fb      	ldrh	r3, [r7, #6]
 80026e8:	4618      	mov	r0, r3
 80026ea:	f7fd ff35 	bl	8000558 <__aeabi_ui2d>
 80026ee:	4602      	mov	r2, r0
 80026f0:	460b      	mov	r3, r1
 80026f2:	e9c7 2304 	strd	r2, r3, [r7, #16]
			}
			if((double)value <= minimum) {
 80026f6:	88fb      	ldrh	r3, [r7, #6]
 80026f8:	4618      	mov	r0, r3
 80026fa:	f7fd ff2d 	bl	8000558 <__aeabi_ui2d>
 80026fe:	4602      	mov	r2, r0
 8002700:	460b      	mov	r3, r1
 8002702:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8002706:	f7fe fa27 	bl	8000b58 <__aeabi_dcmpge>
 800270a:	4603      	mov	r3, r0
 800270c:	2b00      	cmp	r3, #0
 800270e:	d007      	beq.n	8002720 <period_Measure+0xb8>
				minimum = value;
 8002710:	88fb      	ldrh	r3, [r7, #6]
 8002712:	4618      	mov	r0, r3
 8002714:	f7fd ff20 	bl	8000558 <__aeabi_ui2d>
 8002718:	4602      	mov	r2, r0
 800271a:	460b      	mov	r3, r1
 800271c:	e9c7 2306 	strd	r2, r3, [r7, #24]
			}

			average += value;
 8002720:	88fb      	ldrh	r3, [r7, #6]
 8002722:	4618      	mov	r0, r3
 8002724:	f7fd ff28 	bl	8000578 <__aeabi_i2d>
 8002728:	4602      	mov	r2, r0
 800272a:	460b      	mov	r3, r1
 800272c:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8002730:	f7fd fdd6 	bl	80002e0 <__adddf3>
 8002734:	4602      	mov	r2, r0
 8002736:	460b      	mov	r3, r1
 8002738:	e9c7 2308 	strd	r2, r3, [r7, #32]
		for(int i = 0; i < 10; i++) {
 800273c:	68fb      	ldr	r3, [r7, #12]
 800273e:	3301      	adds	r3, #1
 8002740:	60fb      	str	r3, [r7, #12]
 8002742:	68fb      	ldr	r3, [r7, #12]
 8002744:	2b09      	cmp	r3, #9
 8002746:	ddbc      	ble.n	80026c2 <period_Measure+0x5a>
		}

		// Calculate average period in us
		average = average / 10;
 8002748:	f04f 0200 	mov.w	r2, #0
 800274c:	4b1d      	ldr	r3, [pc, #116]	; (80027c4 <period_Measure+0x15c>)
 800274e:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8002752:	f7fe f8a5 	bl	80008a0 <__aeabi_ddiv>
 8002756:	4602      	mov	r2, r0
 8002758:	460b      	mov	r3, r1
 800275a:	e9c7 2308 	strd	r2, r3, [r7, #32]

		// Convert to period in seconds
		average *= (1E-6);
 800275e:	a314      	add	r3, pc, #80	; (adr r3, 80027b0 <period_Measure+0x148>)
 8002760:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002764:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8002768:	f7fd ff70 	bl	800064c <__aeabi_dmul>
 800276c:	4602      	mov	r2, r0
 800276e:	460b      	mov	r3, r1
 8002770:	e9c7 2308 	strd	r2, r3, [r7, #32]

		// Convert period to frequency
		average = 1/average;
 8002774:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8002778:	f04f 0000 	mov.w	r0, #0
 800277c:	4912      	ldr	r1, [pc, #72]	; (80027c8 <period_Measure+0x160>)
 800277e:	f7fe f88f 	bl	80008a0 <__aeabi_ddiv>
 8002782:	4602      	mov	r2, r0
 8002784:	460b      	mov	r3, r1
 8002786:	e9c7 2308 	strd	r2, r3, [r7, #32]
		printf("Smallest recorded pulse was %.2f nanoseconds\n", minimum);
 800278a:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800278e:	480f      	ldr	r0, [pc, #60]	; (80027cc <period_Measure+0x164>)
 8002790:	f001 fdc2 	bl	8004318 <iprintf>
		printf("Largest recorded pulse was %.2f nanoseconds\n", maximum);
 8002794:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8002798:	480d      	ldr	r0, [pc, #52]	; (80027d0 <period_Measure+0x168>)
 800279a:	f001 fdbd 	bl	8004318 <iprintf>
	}

	return average;
 800279e:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
}
 80027a2:	4610      	mov	r0, r2
 80027a4:	4619      	mov	r1, r3
 80027a6:	3728      	adds	r7, #40	; 0x28
 80027a8:	46bd      	mov	sp, r7
 80027aa:	bd80      	pop	{r7, pc}
 80027ac:	f3af 8000 	nop.w
 80027b0:	a0b5ed8d 	.word	0xa0b5ed8d
 80027b4:	3eb0c6f7 	.word	0x3eb0c6f7
 80027b8:	40000800 	.word	0x40000800
 80027bc:	20000d1d 	.word	0x20000d1d
 80027c0:	20000d20 	.word	0x20000d20
 80027c4:	40240000 	.word	0x40240000
 80027c8:	3ff00000 	.word	0x3ff00000
 80027cc:	0800a2f8 	.word	0x0800a2f8
 80027d0:	0800a328 	.word	0x0800a328

080027d4 <TIM4_IRQHandler>:

void TIM4_IRQHandler(void) {
 80027d4:	b490      	push	{r4, r7}
 80027d6:	b082      	sub	sp, #8
 80027d8:	af00      	add	r7, sp, #0
	// Timer object
	// CCR1 stores period in units of 1us
	volatile TIMER* TIM4 = (TIMER*) TIM4_BASE;
 80027da:	4b15      	ldr	r3, [pc, #84]	; (8002830 <TIM4_IRQHandler+0x5c>)
 80027dc:	607b      	str	r3, [r7, #4]

	// Clear status register so this doesn't keep triggering
	TIM4->SR = 0;
 80027de:	687b      	ldr	r3, [r7, #4]
 80027e0:	2200      	movs	r2, #0
 80027e2:	611a      	str	r2, [r3, #16]

	// Static to retain count between calls, but not file-scope
	static uint8_t count;

	// Partially for debugging purposes to see what value was read
	register uint16_t value = TIM4->CCR1;
 80027e4:	687b      	ldr	r3, [r7, #4]
 80027e6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80027e8:	b29c      	uxth	r4, r3

	if(count < 10) {
 80027ea:	4b12      	ldr	r3, [pc, #72]	; (8002834 <TIM4_IRQHandler+0x60>)
 80027ec:	781b      	ldrb	r3, [r3, #0]
 80027ee:	2b09      	cmp	r3, #9
 80027f0:	d80d      	bhi.n	800280e <TIM4_IRQHandler+0x3a>
		// Store recorded value and increment counter
		readings[count] = value;
 80027f2:	4b10      	ldr	r3, [pc, #64]	; (8002834 <TIM4_IRQHandler+0x60>)
 80027f4:	781b      	ldrb	r3, [r3, #0]
 80027f6:	461a      	mov	r2, r3
 80027f8:	4b0f      	ldr	r3, [pc, #60]	; (8002838 <TIM4_IRQHandler+0x64>)
 80027fa:	4621      	mov	r1, r4
 80027fc:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
		count++;
 8002800:	4b0c      	ldr	r3, [pc, #48]	; (8002834 <TIM4_IRQHandler+0x60>)
 8002802:	781b      	ldrb	r3, [r3, #0]
 8002804:	3301      	adds	r3, #1
 8002806:	b2da      	uxtb	r2, r3
 8002808:	4b0a      	ldr	r3, [pc, #40]	; (8002834 <TIM4_IRQHandler+0x60>)
 800280a:	701a      	strb	r2, [r3, #0]
		TIM4->DIER &= ~(1<<6);
		period_Status = 0;
		count = 0;
	}

	return;
 800280c:	e00c      	b.n	8002828 <TIM4_IRQHandler+0x54>
		TIM4->DIER &= ~(1<<6);
 800280e:	687b      	ldr	r3, [r7, #4]
 8002810:	68db      	ldr	r3, [r3, #12]
 8002812:	f023 0240 	bic.w	r2, r3, #64	; 0x40
 8002816:	687b      	ldr	r3, [r7, #4]
 8002818:	60da      	str	r2, [r3, #12]
		period_Status = 0;
 800281a:	4b08      	ldr	r3, [pc, #32]	; (800283c <TIM4_IRQHandler+0x68>)
 800281c:	2200      	movs	r2, #0
 800281e:	701a      	strb	r2, [r3, #0]
		count = 0;
 8002820:	4b04      	ldr	r3, [pc, #16]	; (8002834 <TIM4_IRQHandler+0x60>)
 8002822:	2200      	movs	r2, #0
 8002824:	701a      	strb	r2, [r3, #0]
	return;
 8002826:	bf00      	nop
}
 8002828:	3708      	adds	r7, #8
 800282a:	46bd      	mov	sp, r7
 800282c:	bc90      	pop	{r4, r7}
 800282e:	4770      	bx	lr
 8002830:	40000800 	.word	0x40000800
 8002834:	20000d34 	.word	0x20000d34
 8002838:	20000d20 	.word	0x20000d20
 800283c:	20000d1d 	.word	0x20000d1d

08002840 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8002840:	b480      	push	{r7}
 8002842:	af00      	add	r7, sp, #0
	return 1;
 8002844:	2301      	movs	r3, #1
}
 8002846:	4618      	mov	r0, r3
 8002848:	46bd      	mov	sp, r7
 800284a:	bc80      	pop	{r7}
 800284c:	4770      	bx	lr

0800284e <_kill>:

int _kill(int pid, int sig)
{
 800284e:	b580      	push	{r7, lr}
 8002850:	b082      	sub	sp, #8
 8002852:	af00      	add	r7, sp, #0
 8002854:	6078      	str	r0, [r7, #4]
 8002856:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 8002858:	f000 fc3e 	bl	80030d8 <__errno>
 800285c:	4603      	mov	r3, r0
 800285e:	2216      	movs	r2, #22
 8002860:	601a      	str	r2, [r3, #0]
	return -1;
 8002862:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002866:	4618      	mov	r0, r3
 8002868:	3708      	adds	r7, #8
 800286a:	46bd      	mov	sp, r7
 800286c:	bd80      	pop	{r7, pc}

0800286e <_exit>:

void _exit (int status)
{
 800286e:	b580      	push	{r7, lr}
 8002870:	b082      	sub	sp, #8
 8002872:	af00      	add	r7, sp, #0
 8002874:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 8002876:	f04f 31ff 	mov.w	r1, #4294967295
 800287a:	6878      	ldr	r0, [r7, #4]
 800287c:	f7ff ffe7 	bl	800284e <_kill>
	while (1) {}		/* Make sure we hang here */
 8002880:	e7fe      	b.n	8002880 <_exit+0x12>

08002882 <_close>:
	}
	return len;
}

int _close(int file)
{
 8002882:	b480      	push	{r7}
 8002884:	b083      	sub	sp, #12
 8002886:	af00      	add	r7, sp, #0
 8002888:	6078      	str	r0, [r7, #4]
	return -1;
 800288a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800288e:	4618      	mov	r0, r3
 8002890:	370c      	adds	r7, #12
 8002892:	46bd      	mov	sp, r7
 8002894:	bc80      	pop	{r7}
 8002896:	4770      	bx	lr

08002898 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8002898:	b480      	push	{r7}
 800289a:	b083      	sub	sp, #12
 800289c:	af00      	add	r7, sp, #0
 800289e:	6078      	str	r0, [r7, #4]
 80028a0:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80028a2:	683b      	ldr	r3, [r7, #0]
 80028a4:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80028a8:	605a      	str	r2, [r3, #4]
	return 0;
 80028aa:	2300      	movs	r3, #0
}
 80028ac:	4618      	mov	r0, r3
 80028ae:	370c      	adds	r7, #12
 80028b0:	46bd      	mov	sp, r7
 80028b2:	bc80      	pop	{r7}
 80028b4:	4770      	bx	lr

080028b6 <_isatty>:

int _isatty(int file)
{
 80028b6:	b480      	push	{r7}
 80028b8:	b083      	sub	sp, #12
 80028ba:	af00      	add	r7, sp, #0
 80028bc:	6078      	str	r0, [r7, #4]
	return 1;
 80028be:	2301      	movs	r3, #1
}
 80028c0:	4618      	mov	r0, r3
 80028c2:	370c      	adds	r7, #12
 80028c4:	46bd      	mov	sp, r7
 80028c6:	bc80      	pop	{r7}
 80028c8:	4770      	bx	lr

080028ca <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80028ca:	b480      	push	{r7}
 80028cc:	b085      	sub	sp, #20
 80028ce:	af00      	add	r7, sp, #0
 80028d0:	60f8      	str	r0, [r7, #12]
 80028d2:	60b9      	str	r1, [r7, #8]
 80028d4:	607a      	str	r2, [r7, #4]
	return 0;
 80028d6:	2300      	movs	r3, #0
}
 80028d8:	4618      	mov	r0, r3
 80028da:	3714      	adds	r7, #20
 80028dc:	46bd      	mov	sp, r7
 80028de:	bc80      	pop	{r7}
 80028e0:	4770      	bx	lr
	...

080028e4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80028e4:	b580      	push	{r7, lr}
 80028e6:	b086      	sub	sp, #24
 80028e8:	af00      	add	r7, sp, #0
 80028ea:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80028ec:	4a14      	ldr	r2, [pc, #80]	; (8002940 <_sbrk+0x5c>)
 80028ee:	4b15      	ldr	r3, [pc, #84]	; (8002944 <_sbrk+0x60>)
 80028f0:	1ad3      	subs	r3, r2, r3
 80028f2:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80028f4:	697b      	ldr	r3, [r7, #20]
 80028f6:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80028f8:	4b13      	ldr	r3, [pc, #76]	; (8002948 <_sbrk+0x64>)
 80028fa:	681b      	ldr	r3, [r3, #0]
 80028fc:	2b00      	cmp	r3, #0
 80028fe:	d102      	bne.n	8002906 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8002900:	4b11      	ldr	r3, [pc, #68]	; (8002948 <_sbrk+0x64>)
 8002902:	4a12      	ldr	r2, [pc, #72]	; (800294c <_sbrk+0x68>)
 8002904:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002906:	4b10      	ldr	r3, [pc, #64]	; (8002948 <_sbrk+0x64>)
 8002908:	681a      	ldr	r2, [r3, #0]
 800290a:	687b      	ldr	r3, [r7, #4]
 800290c:	4413      	add	r3, r2
 800290e:	693a      	ldr	r2, [r7, #16]
 8002910:	429a      	cmp	r2, r3
 8002912:	d207      	bcs.n	8002924 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002914:	f000 fbe0 	bl	80030d8 <__errno>
 8002918:	4603      	mov	r3, r0
 800291a:	220c      	movs	r2, #12
 800291c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800291e:	f04f 33ff 	mov.w	r3, #4294967295
 8002922:	e009      	b.n	8002938 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002924:	4b08      	ldr	r3, [pc, #32]	; (8002948 <_sbrk+0x64>)
 8002926:	681b      	ldr	r3, [r3, #0]
 8002928:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800292a:	4b07      	ldr	r3, [pc, #28]	; (8002948 <_sbrk+0x64>)
 800292c:	681a      	ldr	r2, [r3, #0]
 800292e:	687b      	ldr	r3, [r7, #4]
 8002930:	4413      	add	r3, r2
 8002932:	4a05      	ldr	r2, [pc, #20]	; (8002948 <_sbrk+0x64>)
 8002934:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8002936:	68fb      	ldr	r3, [r7, #12]
}
 8002938:	4618      	mov	r0, r3
 800293a:	3718      	adds	r7, #24
 800293c:	46bd      	mov	sp, r7
 800293e:	bd80      	pop	{r7, pc}
 8002940:	20020000 	.word	0x20020000
 8002944:	00000400 	.word	0x00000400
 8002948:	20000d38 	.word	0x20000d38
 800294c:	20000d60 	.word	0x20000d60

08002950 <_read>:


// These will override _read and _write in syscalls.c, which are
// prototyped as weak
int _read(int file, char *ptr, int len)
{
 8002950:	b580      	push	{r7, lr}
 8002952:	b086      	sub	sp, #24
 8002954:	af00      	add	r7, sp, #0
 8002956:	60f8      	str	r0, [r7, #12]
 8002958:	60b9      	str	r1, [r7, #8]
 800295a:	607a      	str	r2, [r7, #4]
	int DataIdx;
	// Modified the for loop in order to get the correct behavior for fgets
	int byteCnt = 0;
 800295c:	2300      	movs	r3, #0
 800295e:	613b      	str	r3, [r7, #16]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002960:	2300      	movs	r3, #0
 8002962:	617b      	str	r3, [r7, #20]
 8002964:	e012      	b.n	800298c <_read+0x3c>
	{
		//*ptr++ = __io_getchar();
		byteCnt++;
 8002966:	693b      	ldr	r3, [r7, #16]
 8002968:	3301      	adds	r3, #1
 800296a:	613b      	str	r3, [r7, #16]
		//*ptr++ = usart2_getch();
		*ptr = usart2_getch();
 800296c:	f000 f836 	bl	80029dc <usart2_getch>
 8002970:	4603      	mov	r3, r0
 8002972:	461a      	mov	r2, r3
 8002974:	68bb      	ldr	r3, [r7, #8]
 8002976:	701a      	strb	r2, [r3, #0]
		if(*ptr == '\n') break;
 8002978:	68bb      	ldr	r3, [r7, #8]
 800297a:	781b      	ldrb	r3, [r3, #0]
 800297c:	2b0a      	cmp	r3, #10
 800297e:	d00a      	beq.n	8002996 <_read+0x46>
		ptr++;
 8002980:	68bb      	ldr	r3, [r7, #8]
 8002982:	3301      	adds	r3, #1
 8002984:	60bb      	str	r3, [r7, #8]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002986:	697b      	ldr	r3, [r7, #20]
 8002988:	3301      	adds	r3, #1
 800298a:	617b      	str	r3, [r7, #20]
 800298c:	697a      	ldr	r2, [r7, #20]
 800298e:	687b      	ldr	r3, [r7, #4]
 8002990:	429a      	cmp	r2, r3
 8002992:	dbe8      	blt.n	8002966 <_read+0x16>
 8002994:	e000      	b.n	8002998 <_read+0x48>
		if(*ptr == '\n') break;
 8002996:	bf00      	nop
	}

	//return len;
	return byteCnt; // Return byte count
 8002998:	693b      	ldr	r3, [r7, #16]
}
 800299a:	4618      	mov	r0, r3
 800299c:	3718      	adds	r7, #24
 800299e:	46bd      	mov	sp, r7
 80029a0:	bd80      	pop	{r7, pc}

080029a2 <_write>:

int _write(int file, char *ptr, int len)
{
 80029a2:	b580      	push	{r7, lr}
 80029a4:	b086      	sub	sp, #24
 80029a6:	af00      	add	r7, sp, #0
 80029a8:	60f8      	str	r0, [r7, #12]
 80029aa:	60b9      	str	r1, [r7, #8]
 80029ac:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80029ae:	2300      	movs	r3, #0
 80029b0:	617b      	str	r3, [r7, #20]
 80029b2:	e009      	b.n	80029c8 <_write+0x26>
	{
		usart2_putch(*ptr++);
 80029b4:	68bb      	ldr	r3, [r7, #8]
 80029b6:	1c5a      	adds	r2, r3, #1
 80029b8:	60ba      	str	r2, [r7, #8]
 80029ba:	781b      	ldrb	r3, [r3, #0]
 80029bc:	4618      	mov	r0, r3
 80029be:	f000 f82f 	bl	8002a20 <usart2_putch>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80029c2:	697b      	ldr	r3, [r7, #20]
 80029c4:	3301      	adds	r3, #1
 80029c6:	617b      	str	r3, [r7, #20]
 80029c8:	697a      	ldr	r2, [r7, #20]
 80029ca:	687b      	ldr	r3, [r7, #4]
 80029cc:	429a      	cmp	r2, r3
 80029ce:	dbf1      	blt.n	80029b4 <_write+0x12>
	}
	return len;
 80029d0:	687b      	ldr	r3, [r7, #4]
}
 80029d2:	4618      	mov	r0, r3
 80029d4:	3718      	adds	r7, #24
 80029d6:	46bd      	mov	sp, r7
 80029d8:	bd80      	pop	{r7, pc}
	...

080029dc <usart2_getch>:



char usart2_getch(){
 80029dc:	b580      	push	{r7, lr}
 80029de:	b082      	sub	sp, #8
 80029e0:	af00      	add	r7, sp, #0
	char c;
	while((*(USART_SR)&(1<<RXNE)) != (1<<RXNE));
 80029e2:	bf00      	nop
 80029e4:	4b0c      	ldr	r3, [pc, #48]	; (8002a18 <usart2_getch+0x3c>)
 80029e6:	681b      	ldr	r3, [r3, #0]
 80029e8:	f003 0320 	and.w	r3, r3, #32
 80029ec:	2b20      	cmp	r3, #32
 80029ee:	d1f9      	bne.n	80029e4 <usart2_getch+0x8>
	c = ((char) *USART_DR);  // Read character from usart
 80029f0:	4b0a      	ldr	r3, [pc, #40]	; (8002a1c <usart2_getch+0x40>)
 80029f2:	681b      	ldr	r3, [r3, #0]
 80029f4:	71fb      	strb	r3, [r7, #7]
	usart2_putch(c);  // Echo back
 80029f6:	79fb      	ldrb	r3, [r7, #7]
 80029f8:	4618      	mov	r0, r3
 80029fa:	f000 f811 	bl	8002a20 <usart2_putch>

	if (c == '\r'){  // If character is CR
 80029fe:	79fb      	ldrb	r3, [r7, #7]
 8002a00:	2b0d      	cmp	r3, #13
 8002a02:	d104      	bne.n	8002a0e <usart2_getch+0x32>
		usart2_putch('\n');  // send it
 8002a04:	200a      	movs	r0, #10
 8002a06:	f000 f80b 	bl	8002a20 <usart2_putch>
		c = '\n';   // Return LF. fgets is terminated by LF
 8002a0a:	230a      	movs	r3, #10
 8002a0c:	71fb      	strb	r3, [r7, #7]
	}

	return c;
 8002a0e:	79fb      	ldrb	r3, [r7, #7]
}
 8002a10:	4618      	mov	r0, r3
 8002a12:	3708      	adds	r7, #8
 8002a14:	46bd      	mov	sp, r7
 8002a16:	bd80      	pop	{r7, pc}
 8002a18:	40004400 	.word	0x40004400
 8002a1c:	40004404 	.word	0x40004404

08002a20 <usart2_putch>:

void usart2_putch(char c){
 8002a20:	b480      	push	{r7}
 8002a22:	b083      	sub	sp, #12
 8002a24:	af00      	add	r7, sp, #0
 8002a26:	4603      	mov	r3, r0
 8002a28:	71fb      	strb	r3, [r7, #7]
	while((*(USART_SR)&(1<<TXE)) != (1<<TXE));
 8002a2a:	bf00      	nop
 8002a2c:	4b06      	ldr	r3, [pc, #24]	; (8002a48 <usart2_putch+0x28>)
 8002a2e:	681b      	ldr	r3, [r3, #0]
 8002a30:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002a34:	2b80      	cmp	r3, #128	; 0x80
 8002a36:	d1f9      	bne.n	8002a2c <usart2_putch+0xc>
	*(USART_DR) = c;
 8002a38:	4a04      	ldr	r2, [pc, #16]	; (8002a4c <usart2_putch+0x2c>)
 8002a3a:	79fb      	ldrb	r3, [r7, #7]
 8002a3c:	6013      	str	r3, [r2, #0]
}
 8002a3e:	bf00      	nop
 8002a40:	370c      	adds	r7, #12
 8002a42:	46bd      	mov	sp, r7
 8002a44:	bc80      	pop	{r7}
 8002a46:	4770      	bx	lr
 8002a48:	40004400 	.word	0x40004400
 8002a4c:	40004404 	.word	0x40004404

08002a50 <init_usart2>:

void init_usart2(uint32_t baud, uint32_t sysclk){
 8002a50:	b580      	push	{r7, lr}
 8002a52:	b082      	sub	sp, #8
 8002a54:	af00      	add	r7, sp, #0
 8002a56:	6078      	str	r0, [r7, #4]
 8002a58:	6039      	str	r1, [r7, #0]
	// Enable clocks for GPIOA and USART2
	*(RCC_AHB1ENR) |= (1<<GPIOAEN);
 8002a5a:	4b20      	ldr	r3, [pc, #128]	; (8002adc <init_usart2+0x8c>)
 8002a5c:	681b      	ldr	r3, [r3, #0]
 8002a5e:	4a1f      	ldr	r2, [pc, #124]	; (8002adc <init_usart2+0x8c>)
 8002a60:	f043 0301 	orr.w	r3, r3, #1
 8002a64:	6013      	str	r3, [r2, #0]
	*(RCC_APB1ENR) |= (1<<USART2EN);
 8002a66:	4b1e      	ldr	r3, [pc, #120]	; (8002ae0 <init_usart2+0x90>)
 8002a68:	681b      	ldr	r3, [r3, #0]
 8002a6a:	4a1d      	ldr	r2, [pc, #116]	; (8002ae0 <init_usart2+0x90>)
 8002a6c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002a70:	6013      	str	r3, [r2, #0]

	// Function 7 of PORTA pins is USART
	*(GPIOA_AFRL) &= (0xFFFF00FF); // Clear the bits associated with PA3 and PA2
 8002a72:	4b1c      	ldr	r3, [pc, #112]	; (8002ae4 <init_usart2+0x94>)
 8002a74:	681b      	ldr	r3, [r3, #0]
 8002a76:	4a1b      	ldr	r2, [pc, #108]	; (8002ae4 <init_usart2+0x94>)
 8002a78:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8002a7c:	6013      	str	r3, [r2, #0]
	*(GPIOA_AFRL) |= (0b01110111<<8);  // Choose function 7 for both PA3 and PA2
 8002a7e:	4b19      	ldr	r3, [pc, #100]	; (8002ae4 <init_usart2+0x94>)
 8002a80:	681b      	ldr	r3, [r3, #0]
 8002a82:	4a18      	ldr	r2, [pc, #96]	; (8002ae4 <init_usart2+0x94>)
 8002a84:	f443 43ee 	orr.w	r3, r3, #30464	; 0x7700
 8002a88:	6013      	str	r3, [r2, #0]
	*(GPIOA_MODER) &= (0xFFFFFF0F);  // Clear mode bits for PA3 and PA2
 8002a8a:	4b17      	ldr	r3, [pc, #92]	; (8002ae8 <init_usart2+0x98>)
 8002a8c:	681b      	ldr	r3, [r3, #0]
 8002a8e:	4a16      	ldr	r2, [pc, #88]	; (8002ae8 <init_usart2+0x98>)
 8002a90:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8002a94:	6013      	str	r3, [r2, #0]
	*(GPIOA_MODER) |= (0b1010<<4);  // Both PA3 and PA2 in alt function mode
 8002a96:	4b14      	ldr	r3, [pc, #80]	; (8002ae8 <init_usart2+0x98>)
 8002a98:	681b      	ldr	r3, [r3, #0]
 8002a9a:	4a13      	ldr	r2, [pc, #76]	; (8002ae8 <init_usart2+0x98>)
 8002a9c:	f043 03a0 	orr.w	r3, r3, #160	; 0xa0
 8002aa0:	6013      	str	r3, [r2, #0]
	//USART2_init();  //8n1 no flow control
	// over8 = 0..oversample by 16
	// M = 0..1 start bit, data size is 8, 1 stop bit
	// PCE= 0..Parity check not enabled
	// no interrupts... using polling
	*(USART_CR1) = (1<<UE)|(1<<TE)|(1<<RE); // Enable UART, Tx and Rx
 8002aa2:	4b12      	ldr	r3, [pc, #72]	; (8002aec <init_usart2+0x9c>)
 8002aa4:	f242 020c 	movw	r2, #8204	; 0x200c
 8002aa8:	601a      	str	r2, [r3, #0]
	*(USART_CR2) = 0;  // This is the default, but do it anyway
 8002aaa:	4b11      	ldr	r3, [pc, #68]	; (8002af0 <init_usart2+0xa0>)
 8002aac:	2200      	movs	r2, #0
 8002aae:	601a      	str	r2, [r3, #0]
	*(USART_CR3) = 0;  // This is the default, but do it anyway
 8002ab0:	4b10      	ldr	r3, [pc, #64]	; (8002af4 <init_usart2+0xa4>)
 8002ab2:	2200      	movs	r2, #0
 8002ab4:	601a      	str	r2, [r3, #0]
	*(USART_BRR) = sysclk/baud;
 8002ab6:	4910      	ldr	r1, [pc, #64]	; (8002af8 <init_usart2+0xa8>)
 8002ab8:	683a      	ldr	r2, [r7, #0]
 8002aba:	687b      	ldr	r3, [r7, #4]
 8002abc:	fbb2 f3f3 	udiv	r3, r2, r3
 8002ac0:	600b      	str	r3, [r1, #0]

	/* I'm not sure if this is needed for standard IO*/
	 //setvbuf(stderr, NULL, _IONBF, 0);
	 //setvbuf(stdin, NULL, _IONBF, 0);
	 setvbuf(stdout, NULL, _IONBF, 0);
 8002ac2:	4b0e      	ldr	r3, [pc, #56]	; (8002afc <init_usart2+0xac>)
 8002ac4:	681b      	ldr	r3, [r3, #0]
 8002ac6:	6898      	ldr	r0, [r3, #8]
 8002ac8:	2300      	movs	r3, #0
 8002aca:	2202      	movs	r2, #2
 8002acc:	2100      	movs	r1, #0
 8002ace:	f001 fd55 	bl	800457c <setvbuf>
}
 8002ad2:	bf00      	nop
 8002ad4:	3708      	adds	r7, #8
 8002ad6:	46bd      	mov	sp, r7
 8002ad8:	bd80      	pop	{r7, pc}
 8002ada:	bf00      	nop
 8002adc:	40023830 	.word	0x40023830
 8002ae0:	40023840 	.word	0x40023840
 8002ae4:	40020020 	.word	0x40020020
 8002ae8:	40020000 	.word	0x40020000
 8002aec:	4000440c 	.word	0x4000440c
 8002af0:	40004410 	.word	0x40004410
 8002af4:	40004414 	.word	0x40004414
 8002af8:	40004408 	.word	0x40004408
 8002afc:	20000b10 	.word	0x20000b10

08002b00 <sineWave>:
/**
 * Generates a dynamically allocated float array containing
 * samples of a sine/cosine wave with samples on the interval
 * [0,4095]
 */
uint16_t* sineWave(uint32_t samples) {
 8002b00:	b5b0      	push	{r4, r5, r7, lr}
 8002b02:	b086      	sub	sp, #24
 8002b04:	af00      	add	r7, sp, #0
 8002b06:	6078      	str	r0, [r7, #4]
	// Create a chunk of memory to dump the waveform with
	// one extra space for a terminator
	uint16_t* wave = (uint16_t*) malloc((samples+1) * sizeof(uint16_t));
 8002b08:	687b      	ldr	r3, [r7, #4]
 8002b0a:	3301      	adds	r3, #1
 8002b0c:	005b      	lsls	r3, r3, #1
 8002b0e:	4618      	mov	r0, r3
 8002b10:	f000 fcba 	bl	8003488 <malloc>
 8002b14:	4603      	mov	r3, r0
 8002b16:	613b      	str	r3, [r7, #16]

	for(int i = 0; i < samples; i++) {
 8002b18:	2300      	movs	r3, #0
 8002b1a:	617b      	str	r3, [r7, #20]
 8002b1c:	e04d      	b.n	8002bba <sineWave+0xba>
		// For speed purposes try to fit a float into a register or registers
		register float sample = (0.5) * cosf((2*PI*i)/(samples-1)) + (0.5);
 8002b1e:	6978      	ldr	r0, [r7, #20]
 8002b20:	f7fd fd2a 	bl	8000578 <__aeabi_i2d>
 8002b24:	a32e      	add	r3, pc, #184	; (adr r3, 8002be0 <sineWave+0xe0>)
 8002b26:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002b2a:	f7fd fd8f 	bl	800064c <__aeabi_dmul>
 8002b2e:	4602      	mov	r2, r0
 8002b30:	460b      	mov	r3, r1
 8002b32:	4614      	mov	r4, r2
 8002b34:	461d      	mov	r5, r3
 8002b36:	687b      	ldr	r3, [r7, #4]
 8002b38:	3b01      	subs	r3, #1
 8002b3a:	4618      	mov	r0, r3
 8002b3c:	f7fd fd0c 	bl	8000558 <__aeabi_ui2d>
 8002b40:	4602      	mov	r2, r0
 8002b42:	460b      	mov	r3, r1
 8002b44:	4620      	mov	r0, r4
 8002b46:	4629      	mov	r1, r5
 8002b48:	f7fd feaa 	bl	80008a0 <__aeabi_ddiv>
 8002b4c:	4602      	mov	r2, r0
 8002b4e:	460b      	mov	r3, r1
 8002b50:	4610      	mov	r0, r2
 8002b52:	4619      	mov	r1, r3
 8002b54:	f7fe f872 	bl	8000c3c <__aeabi_d2f>
 8002b58:	4603      	mov	r3, r0
 8002b5a:	4618      	mov	r0, r3
 8002b5c:	f005 ff50 	bl	8008a00 <cosf>
 8002b60:	4603      	mov	r3, r0
 8002b62:	4618      	mov	r0, r3
 8002b64:	f7fd fd1a 	bl	800059c <__aeabi_f2d>
 8002b68:	f04f 0200 	mov.w	r2, #0
 8002b6c:	4b1e      	ldr	r3, [pc, #120]	; (8002be8 <sineWave+0xe8>)
 8002b6e:	f7fd fd6d 	bl	800064c <__aeabi_dmul>
 8002b72:	4602      	mov	r2, r0
 8002b74:	460b      	mov	r3, r1
 8002b76:	4610      	mov	r0, r2
 8002b78:	4619      	mov	r1, r3
 8002b7a:	f04f 0200 	mov.w	r2, #0
 8002b7e:	4b1a      	ldr	r3, [pc, #104]	; (8002be8 <sineWave+0xe8>)
 8002b80:	f7fd fbae 	bl	80002e0 <__adddf3>
 8002b84:	4602      	mov	r2, r0
 8002b86:	460b      	mov	r3, r1
 8002b88:	4610      	mov	r0, r2
 8002b8a:	4619      	mov	r1, r3
 8002b8c:	f7fe f856 	bl	8000c3c <__aeabi_d2f>
 8002b90:	4603      	mov	r3, r0
 8002b92:	461c      	mov	r4, r3

		// Convert to a 16-bit int even though its artificially limited to 12-bit
		uint16_t conversion = sample * DAC_MAX;
 8002b94:	4915      	ldr	r1, [pc, #84]	; (8002bec <sineWave+0xec>)
 8002b96:	4620      	mov	r0, r4
 8002b98:	f7fe f9ae 	bl	8000ef8 <__aeabi_fmul>
 8002b9c:	4603      	mov	r3, r0
 8002b9e:	4618      	mov	r0, r3
 8002ba0:	f7fe fbac 	bl	80012fc <__aeabi_f2uiz>
 8002ba4:	4603      	mov	r3, r0
 8002ba6:	81fb      	strh	r3, [r7, #14]

		// Write
		wave[i] = conversion;
 8002ba8:	697b      	ldr	r3, [r7, #20]
 8002baa:	005b      	lsls	r3, r3, #1
 8002bac:	693a      	ldr	r2, [r7, #16]
 8002bae:	4413      	add	r3, r2
 8002bb0:	89fa      	ldrh	r2, [r7, #14]
 8002bb2:	801a      	strh	r2, [r3, #0]
	for(int i = 0; i < samples; i++) {
 8002bb4:	697b      	ldr	r3, [r7, #20]
 8002bb6:	3301      	adds	r3, #1
 8002bb8:	617b      	str	r3, [r7, #20]
 8002bba:	697b      	ldr	r3, [r7, #20]
 8002bbc:	687a      	ldr	r2, [r7, #4]
 8002bbe:	429a      	cmp	r2, r3
 8002bc0:	d8ad      	bhi.n	8002b1e <sineWave+0x1e>
	}

	// Terminator
	wave[samples] = -1;
 8002bc2:	687b      	ldr	r3, [r7, #4]
 8002bc4:	005b      	lsls	r3, r3, #1
 8002bc6:	693a      	ldr	r2, [r7, #16]
 8002bc8:	4413      	add	r3, r2
 8002bca:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8002bce:	801a      	strh	r2, [r3, #0]

	return wave;
 8002bd0:	693b      	ldr	r3, [r7, #16]
}
 8002bd2:	4618      	mov	r0, r3
 8002bd4:	3718      	adds	r7, #24
 8002bd6:	46bd      	mov	sp, r7
 8002bd8:	bdb0      	pop	{r4, r5, r7, pc}
 8002bda:	bf00      	nop
 8002bdc:	f3af 8000 	nop.w
 8002be0:	4d12d84a 	.word	0x4d12d84a
 8002be4:	401921fb 	.word	0x401921fb
 8002be8:	3fe00000 	.word	0x3fe00000
 8002bec:	457ff000 	.word	0x457ff000

08002bf0 <triWave>:
/**
 * Generates a dynamically allocated float array containing
 * samples of a triangle wave, with samples being on
 * the interval of [0,4095]
 */
uint16_t* triWave(uint32_t samples) {
 8002bf0:	b5b0      	push	{r4, r5, r7, lr}
 8002bf2:	b086      	sub	sp, #24
 8002bf4:	af00      	add	r7, sp, #0
 8002bf6:	6078      	str	r0, [r7, #4]
	// Create a chunk of memory to dump the waveform with
	// one extra space for a terminator
	uint16_t* wave = (uint16_t*) malloc((samples+1) * sizeof(uint16_t));
 8002bf8:	687b      	ldr	r3, [r7, #4]
 8002bfa:	3301      	adds	r3, #1
 8002bfc:	005b      	lsls	r3, r3, #1
 8002bfe:	4618      	mov	r0, r3
 8002c00:	f000 fc42 	bl	8003488 <malloc>
 8002c04:	4603      	mov	r3, r0
 8002c06:	613b      	str	r3, [r7, #16]

	for(int i = 0; i < samples; i++) {
 8002c08:	2300      	movs	r3, #0
 8002c0a:	617b      	str	r3, [r7, #20]
 8002c0c:	e051      	b.n	8002cb2 <triWave+0xc2>
		register float sample = (2/(2*PI)) * asinf(sinf((2*PI*i)/(samples-1))) + (0.5);
 8002c0e:	6978      	ldr	r0, [r7, #20]
 8002c10:	f7fd fcb2 	bl	8000578 <__aeabi_i2d>
 8002c14:	a330      	add	r3, pc, #192	; (adr r3, 8002cd8 <triWave+0xe8>)
 8002c16:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002c1a:	f7fd fd17 	bl	800064c <__aeabi_dmul>
 8002c1e:	4602      	mov	r2, r0
 8002c20:	460b      	mov	r3, r1
 8002c22:	4614      	mov	r4, r2
 8002c24:	461d      	mov	r5, r3
 8002c26:	687b      	ldr	r3, [r7, #4]
 8002c28:	3b01      	subs	r3, #1
 8002c2a:	4618      	mov	r0, r3
 8002c2c:	f7fd fc94 	bl	8000558 <__aeabi_ui2d>
 8002c30:	4602      	mov	r2, r0
 8002c32:	460b      	mov	r3, r1
 8002c34:	4620      	mov	r0, r4
 8002c36:	4629      	mov	r1, r5
 8002c38:	f7fd fe32 	bl	80008a0 <__aeabi_ddiv>
 8002c3c:	4602      	mov	r2, r0
 8002c3e:	460b      	mov	r3, r1
 8002c40:	4610      	mov	r0, r2
 8002c42:	4619      	mov	r1, r3
 8002c44:	f7fd fffa 	bl	8000c3c <__aeabi_d2f>
 8002c48:	4603      	mov	r3, r0
 8002c4a:	4618      	mov	r0, r3
 8002c4c:	f005 ff10 	bl	8008a70 <sinf>
 8002c50:	4603      	mov	r3, r0
 8002c52:	4618      	mov	r0, r3
 8002c54:	f005 ff64 	bl	8008b20 <asinf>
 8002c58:	4603      	mov	r3, r0
 8002c5a:	4618      	mov	r0, r3
 8002c5c:	f7fd fc9e 	bl	800059c <__aeabi_f2d>
 8002c60:	a31f      	add	r3, pc, #124	; (adr r3, 8002ce0 <triWave+0xf0>)
 8002c62:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002c66:	f7fd fcf1 	bl	800064c <__aeabi_dmul>
 8002c6a:	4602      	mov	r2, r0
 8002c6c:	460b      	mov	r3, r1
 8002c6e:	4610      	mov	r0, r2
 8002c70:	4619      	mov	r1, r3
 8002c72:	f04f 0200 	mov.w	r2, #0
 8002c76:	4b1c      	ldr	r3, [pc, #112]	; (8002ce8 <triWave+0xf8>)
 8002c78:	f7fd fb32 	bl	80002e0 <__adddf3>
 8002c7c:	4602      	mov	r2, r0
 8002c7e:	460b      	mov	r3, r1
 8002c80:	4610      	mov	r0, r2
 8002c82:	4619      	mov	r1, r3
 8002c84:	f7fd ffda 	bl	8000c3c <__aeabi_d2f>
 8002c88:	4603      	mov	r3, r0
 8002c8a:	461c      	mov	r4, r3

		uint16_t conversion = sample * DAC_MAX;
 8002c8c:	4917      	ldr	r1, [pc, #92]	; (8002cec <triWave+0xfc>)
 8002c8e:	4620      	mov	r0, r4
 8002c90:	f7fe f932 	bl	8000ef8 <__aeabi_fmul>
 8002c94:	4603      	mov	r3, r0
 8002c96:	4618      	mov	r0, r3
 8002c98:	f7fe fb30 	bl	80012fc <__aeabi_f2uiz>
 8002c9c:	4603      	mov	r3, r0
 8002c9e:	81fb      	strh	r3, [r7, #14]

		wave[i] = conversion;
 8002ca0:	697b      	ldr	r3, [r7, #20]
 8002ca2:	005b      	lsls	r3, r3, #1
 8002ca4:	693a      	ldr	r2, [r7, #16]
 8002ca6:	4413      	add	r3, r2
 8002ca8:	89fa      	ldrh	r2, [r7, #14]
 8002caa:	801a      	strh	r2, [r3, #0]
	for(int i = 0; i < samples; i++) {
 8002cac:	697b      	ldr	r3, [r7, #20]
 8002cae:	3301      	adds	r3, #1
 8002cb0:	617b      	str	r3, [r7, #20]
 8002cb2:	697b      	ldr	r3, [r7, #20]
 8002cb4:	687a      	ldr	r2, [r7, #4]
 8002cb6:	429a      	cmp	r2, r3
 8002cb8:	d8a9      	bhi.n	8002c0e <triWave+0x1e>
	}

	wave[samples] = -1;
 8002cba:	687b      	ldr	r3, [r7, #4]
 8002cbc:	005b      	lsls	r3, r3, #1
 8002cbe:	693a      	ldr	r2, [r7, #16]
 8002cc0:	4413      	add	r3, r2
 8002cc2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8002cc6:	801a      	strh	r2, [r3, #0]
	return wave;
 8002cc8:	693b      	ldr	r3, [r7, #16]

}
 8002cca:	4618      	mov	r0, r3
 8002ccc:	3718      	adds	r7, #24
 8002cce:	46bd      	mov	sp, r7
 8002cd0:	bdb0      	pop	{r4, r5, r7, pc}
 8002cd2:	bf00      	nop
 8002cd4:	f3af 8000 	nop.w
 8002cd8:	4d12d84a 	.word	0x4d12d84a
 8002cdc:	401921fb 	.word	0x401921fb
 8002ce0:	739e4f68 	.word	0x739e4f68
 8002ce4:	3fd45f30 	.word	0x3fd45f30
 8002ce8:	3fe00000 	.word	0x3fe00000
 8002cec:	457ff000 	.word	0x457ff000

08002cf0 <sawtoothWave>:
/**
 * Generates a dynamically allocated float array containing
 * samples of a sawtooth wave, with samples being on the
 * interval of [0,4095]
 */
uint16_t* sawtoothWave(uint32_t samples) {
 8002cf0:	b5b0      	push	{r4, r5, r7, lr}
 8002cf2:	b086      	sub	sp, #24
 8002cf4:	af00      	add	r7, sp, #0
 8002cf6:	6078      	str	r0, [r7, #4]
	// Create a chunk of memory to dump the waveform with
	// one extra space for a terminator
	uint16_t* wave = (uint16_t*) malloc((samples+1) * sizeof(uint16_t));
 8002cf8:	687b      	ldr	r3, [r7, #4]
 8002cfa:	3301      	adds	r3, #1
 8002cfc:	005b      	lsls	r3, r3, #1
 8002cfe:	4618      	mov	r0, r3
 8002d00:	f000 fbc2 	bl	8003488 <malloc>
 8002d04:	4603      	mov	r3, r0
 8002d06:	613b      	str	r3, [r7, #16]

	for(int i = 0; i < samples; i++) {
 8002d08:	2300      	movs	r3, #0
 8002d0a:	617b      	str	r3, [r7, #20]
 8002d0c:	e057      	b.n	8002dbe <sawtoothWave+0xce>
		register float sample = ((-1 / PI) * atanf((1/tanf((PI*i/(samples-1)))))) + 0.5;
 8002d0e:	6978      	ldr	r0, [r7, #20]
 8002d10:	f7fd fc32 	bl	8000578 <__aeabi_i2d>
 8002d14:	a332      	add	r3, pc, #200	; (adr r3, 8002de0 <sawtoothWave+0xf0>)
 8002d16:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002d1a:	f7fd fc97 	bl	800064c <__aeabi_dmul>
 8002d1e:	4602      	mov	r2, r0
 8002d20:	460b      	mov	r3, r1
 8002d22:	4614      	mov	r4, r2
 8002d24:	461d      	mov	r5, r3
 8002d26:	687b      	ldr	r3, [r7, #4]
 8002d28:	3b01      	subs	r3, #1
 8002d2a:	4618      	mov	r0, r3
 8002d2c:	f7fd fc14 	bl	8000558 <__aeabi_ui2d>
 8002d30:	4602      	mov	r2, r0
 8002d32:	460b      	mov	r3, r1
 8002d34:	4620      	mov	r0, r4
 8002d36:	4629      	mov	r1, r5
 8002d38:	f7fd fdb2 	bl	80008a0 <__aeabi_ddiv>
 8002d3c:	4602      	mov	r2, r0
 8002d3e:	460b      	mov	r3, r1
 8002d40:	4610      	mov	r0, r2
 8002d42:	4619      	mov	r1, r3
 8002d44:	f7fd ff7a 	bl	8000c3c <__aeabi_d2f>
 8002d48:	4603      	mov	r3, r0
 8002d4a:	4618      	mov	r0, r3
 8002d4c:	f005 fec6 	bl	8008adc <tanf>
 8002d50:	4603      	mov	r3, r0
 8002d52:	4619      	mov	r1, r3
 8002d54:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 8002d58:	f7fe f982 	bl	8001060 <__aeabi_fdiv>
 8002d5c:	4603      	mov	r3, r0
 8002d5e:	4618      	mov	r0, r3
 8002d60:	f005 fd42 	bl	80087e8 <atanf>
 8002d64:	4603      	mov	r3, r0
 8002d66:	4618      	mov	r0, r3
 8002d68:	f7fd fc18 	bl	800059c <__aeabi_f2d>
 8002d6c:	a31e      	add	r3, pc, #120	; (adr r3, 8002de8 <sawtoothWave+0xf8>)
 8002d6e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002d72:	f7fd fc6b 	bl	800064c <__aeabi_dmul>
 8002d76:	4602      	mov	r2, r0
 8002d78:	460b      	mov	r3, r1
 8002d7a:	4610      	mov	r0, r2
 8002d7c:	4619      	mov	r1, r3
 8002d7e:	f04f 0200 	mov.w	r2, #0
 8002d82:	4b1b      	ldr	r3, [pc, #108]	; (8002df0 <sawtoothWave+0x100>)
 8002d84:	f7fd faac 	bl	80002e0 <__adddf3>
 8002d88:	4602      	mov	r2, r0
 8002d8a:	460b      	mov	r3, r1
 8002d8c:	4610      	mov	r0, r2
 8002d8e:	4619      	mov	r1, r3
 8002d90:	f7fd ff54 	bl	8000c3c <__aeabi_d2f>
 8002d94:	4603      	mov	r3, r0
 8002d96:	461c      	mov	r4, r3

		uint16_t conversion = sample * DAC_MAX;
 8002d98:	4916      	ldr	r1, [pc, #88]	; (8002df4 <sawtoothWave+0x104>)
 8002d9a:	4620      	mov	r0, r4
 8002d9c:	f7fe f8ac 	bl	8000ef8 <__aeabi_fmul>
 8002da0:	4603      	mov	r3, r0
 8002da2:	4618      	mov	r0, r3
 8002da4:	f7fe faaa 	bl	80012fc <__aeabi_f2uiz>
 8002da8:	4603      	mov	r3, r0
 8002daa:	81fb      	strh	r3, [r7, #14]

		wave[i] = conversion;
 8002dac:	697b      	ldr	r3, [r7, #20]
 8002dae:	005b      	lsls	r3, r3, #1
 8002db0:	693a      	ldr	r2, [r7, #16]
 8002db2:	4413      	add	r3, r2
 8002db4:	89fa      	ldrh	r2, [r7, #14]
 8002db6:	801a      	strh	r2, [r3, #0]
	for(int i = 0; i < samples; i++) {
 8002db8:	697b      	ldr	r3, [r7, #20]
 8002dba:	3301      	adds	r3, #1
 8002dbc:	617b      	str	r3, [r7, #20]
 8002dbe:	697b      	ldr	r3, [r7, #20]
 8002dc0:	687a      	ldr	r2, [r7, #4]
 8002dc2:	429a      	cmp	r2, r3
 8002dc4:	d8a3      	bhi.n	8002d0e <sawtoothWave+0x1e>
	}

	// Terminator
	wave[samples] = -1;
 8002dc6:	687b      	ldr	r3, [r7, #4]
 8002dc8:	005b      	lsls	r3, r3, #1
 8002dca:	693a      	ldr	r2, [r7, #16]
 8002dcc:	4413      	add	r3, r2
 8002dce:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8002dd2:	801a      	strh	r2, [r3, #0]

	return wave;
 8002dd4:	693b      	ldr	r3, [r7, #16]
}
 8002dd6:	4618      	mov	r0, r3
 8002dd8:	3718      	adds	r7, #24
 8002dda:	46bd      	mov	sp, r7
 8002ddc:	bdb0      	pop	{r4, r5, r7, pc}
 8002dde:	bf00      	nop
 8002de0:	4d12d84a 	.word	0x4d12d84a
 8002de4:	400921fb 	.word	0x400921fb
 8002de8:	739e4f68 	.word	0x739e4f68
 8002dec:	bfd45f30 	.word	0xbfd45f30
 8002df0:	3fe00000 	.word	0x3fe00000
 8002df4:	457ff000 	.word	0x457ff000

08002df8 <wave_Init>:

void wave_Init() {
 8002df8:	b480      	push	{r7}
 8002dfa:	b087      	sub	sp, #28
 8002dfc:	af00      	add	r7, sp, #0
	// Use TIM6 (basic 16-bit timer) to sequence the waveform
	// NOTE: TIM6 is only an upcounter! Write period to ARR!
	// PA4 as analog output connected to DAC ch.1

	volatile RCC* RCC_Target = (RCC*) RCC_BASE;
 8002dfe:	4b2c      	ldr	r3, [pc, #176]	; (8002eb0 <wave_Init+0xb8>)
 8002e00:	617b      	str	r3, [r7, #20]
	volatile GPIO* GPIOA = (GPIO*) GPIOA_BASE;
 8002e02:	4b2c      	ldr	r3, [pc, #176]	; (8002eb4 <wave_Init+0xbc>)
 8002e04:	613b      	str	r3, [r7, #16]
	volatile TIMER_BASIC* TIM6 = (TIMER_BASIC*) TIM6_BASE;
 8002e06:	4b2c      	ldr	r3, [pc, #176]	; (8002eb8 <wave_Init+0xc0>)
 8002e08:	60fb      	str	r3, [r7, #12]
	volatile NVIC* NVIC_Target = (NVIC*) NVIC_BASE;
 8002e0a:	4b2c      	ldr	r3, [pc, #176]	; (8002ebc <wave_Init+0xc4>)
 8002e0c:	60bb      	str	r3, [r7, #8]
	volatile DAC* DAC_Target = (DAC*) DAC_BASE;
 8002e0e:	4b2c      	ldr	r3, [pc, #176]	; (8002ec0 <wave_Init+0xc8>)
 8002e10:	607b      	str	r3, [r7, #4]

	// Debugging purposes, set TIM6 to freeze in debugging mode
	uint32_t* DBG_APB1 = (uint32_t*)0xE0042008;
 8002e12:	4b2c      	ldr	r3, [pc, #176]	; (8002ec4 <wave_Init+0xcc>)
 8002e14:	603b      	str	r3, [r7, #0]
	*DBG_APB1 |= 1<<4;
 8002e16:	683b      	ldr	r3, [r7, #0]
 8002e18:	681b      	ldr	r3, [r3, #0]
 8002e1a:	f043 0210 	orr.w	r2, r3, #16
 8002e1e:	683b      	ldr	r3, [r7, #0]
 8002e20:	601a      	str	r2, [r3, #0]

	// Enable GPIOA
	RCC_Target->AHB1ENR |= RCC_GPIOAEN;
 8002e22:	697b      	ldr	r3, [r7, #20]
 8002e24:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002e26:	f043 0201 	orr.w	r2, r3, #1
 8002e2a:	697b      	ldr	r3, [r7, #20]
 8002e2c:	631a      	str	r2, [r3, #48]	; 0x30

	// Set PA4 as analog
	GPIOA->MODER |= (GPIO_ANALOG << 8);
 8002e2e:	693b      	ldr	r3, [r7, #16]
 8002e30:	681b      	ldr	r3, [r3, #0]
 8002e32:	f443 7240 	orr.w	r2, r3, #768	; 0x300
 8002e36:	693b      	ldr	r3, [r7, #16]
 8002e38:	601a      	str	r2, [r3, #0]

	// Enable TIM6
	RCC_Target->APB1ENR |= RCC_TIM6EN;
 8002e3a:	697b      	ldr	r3, [r7, #20]
 8002e3c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002e3e:	f043 0210 	orr.w	r2, r3, #16
 8002e42:	697b      	ldr	r3, [r7, #20]
 8002e44:	641a      	str	r2, [r3, #64]	; 0x40

	// Enable DAC
	RCC_Target->APB1ENR |= RCC_DACEN;
 8002e46:	697b      	ldr	r3, [r7, #20]
 8002e48:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002e4a:	f043 5200 	orr.w	r2, r3, #536870912	; 0x20000000
 8002e4e:	697b      	ldr	r3, [r7, #20]
 8002e50:	641a      	str	r2, [r3, #64]	; 0x40

	// Prescale TIM6 to 1us
	TIM6->PSC = 15;
 8002e52:	68fb      	ldr	r3, [r7, #12]
 8002e54:	220f      	movs	r2, #15
 8002e56:	629a      	str	r2, [r3, #40]	; 0x28

	// Prescale fix
	TIM6->EGR = 1;
 8002e58:	68fb      	ldr	r3, [r7, #12]
 8002e5a:	2201      	movs	r2, #1
 8002e5c:	615a      	str	r2, [r3, #20]
	TIM6->SR &= ~(1);
 8002e5e:	68fb      	ldr	r3, [r7, #12]
 8002e60:	691b      	ldr	r3, [r3, #16]
 8002e62:	f023 0201 	bic.w	r2, r3, #1
 8002e66:	68fb      	ldr	r3, [r7, #12]
 8002e68:	611a      	str	r2, [r3, #16]

	// Assert not one-pulse mode
	TIM6->CR1 &= ~(TIM_OPM);
 8002e6a:	68fb      	ldr	r3, [r7, #12]
 8002e6c:	681b      	ldr	r3, [r3, #0]
 8002e6e:	f023 0208 	bic.w	r2, r3, #8
 8002e72:	68fb      	ldr	r3, [r7, #12]
 8002e74:	601a      	str	r2, [r3, #0]

	// Enable DAC Ch1 & its Trigger
	DAC_Target->CR |= DAC_CH1EN;
 8002e76:	687b      	ldr	r3, [r7, #4]
 8002e78:	681b      	ldr	r3, [r3, #0]
 8002e7a:	f043 0201 	orr.w	r2, r3, #1
 8002e7e:	687b      	ldr	r3, [r7, #4]
 8002e80:	601a      	str	r2, [r3, #0]
	DAC_Target->CR |= (DAC_SWTGR << 3);
 8002e82:	687b      	ldr	r3, [r7, #4]
 8002e84:	681b      	ldr	r3, [r3, #0]
 8002e86:	f043 0238 	orr.w	r2, r3, #56	; 0x38
 8002e8a:	687b      	ldr	r3, [r7, #4]
 8002e8c:	601a      	str	r2, [r3, #0]
	DAC_Target->CR |= DAC_TEN1;
 8002e8e:	687b      	ldr	r3, [r7, #4]
 8002e90:	681b      	ldr	r3, [r3, #0]
 8002e92:	f043 0204 	orr.w	r2, r3, #4
 8002e96:	687b      	ldr	r3, [r7, #4]
 8002e98:	601a      	str	r2, [r3, #0]

	// Enable TIM6 interrupts in NVIC
	// NVIC_ISER1 bit 22
	NVIC_Target->ISER[1] |= 1<<22;
 8002e9a:	68bb      	ldr	r3, [r7, #8]
 8002e9c:	685b      	ldr	r3, [r3, #4]
 8002e9e:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 8002ea2:	68bb      	ldr	r3, [r7, #8]
 8002ea4:	605a      	str	r2, [r3, #4]

}
 8002ea6:	bf00      	nop
 8002ea8:	371c      	adds	r7, #28
 8002eaa:	46bd      	mov	sp, r7
 8002eac:	bc80      	pop	{r7}
 8002eae:	4770      	bx	lr
 8002eb0:	40023800 	.word	0x40023800
 8002eb4:	40020000 	.word	0x40020000
 8002eb8:	40001000 	.word	0x40001000
 8002ebc:	e000e100 	.word	0xe000e100
 8002ec0:	40007400 	.word	0x40007400
 8002ec4:	e0042008 	.word	0xe0042008

08002ec8 <wave_Start>:

void wave_Start(uint16_t* samples, uint32_t frequency, uint32_t numSamples) {
 8002ec8:	b580      	push	{r7, lr}
 8002eca:	b088      	sub	sp, #32
 8002ecc:	af00      	add	r7, sp, #0
 8002ece:	60f8      	str	r0, [r7, #12]
 8002ed0:	60b9      	str	r1, [r7, #8]
 8002ed2:	607a      	str	r2, [r7, #4]
	// If the generator is already running
	if(waveStatus != 0) {
 8002ed4:	4b2a      	ldr	r3, [pc, #168]	; (8002f80 <wave_Start+0xb8>)
 8002ed6:	781b      	ldrb	r3, [r3, #0]
 8002ed8:	2b00      	cmp	r3, #0
 8002eda:	d003      	beq.n	8002ee4 <wave_Start+0x1c>
		printf("Waveform generator is already running. Stop the current generator to continue\n");
 8002edc:	4829      	ldr	r0, [pc, #164]	; (8002f84 <wave_Start+0xbc>)
 8002ede:	f001 faa1 	bl	8004424 <puts>

		// Set TIM6_CEN
		TIM6->CR1 |= TIM_CEN;
	}

	return;
 8002ee2:	e043      	b.n	8002f6c <wave_Start+0xa4>
		volatile TIMER_BASIC* TIM6 = (TIMER_BASIC*) TIM6_BASE;
 8002ee4:	4b28      	ldr	r3, [pc, #160]	; (8002f88 <wave_Start+0xc0>)
 8002ee6:	61fb      	str	r3, [r7, #28]
		waveform = samples;
 8002ee8:	4a28      	ldr	r2, [pc, #160]	; (8002f8c <wave_Start+0xc4>)
 8002eea:	68fb      	ldr	r3, [r7, #12]
 8002eec:	6013      	str	r3, [r2, #0]
		waveStatus = 1;
 8002eee:	4b24      	ldr	r3, [pc, #144]	; (8002f80 <wave_Start+0xb8>)
 8002ef0:	2201      	movs	r2, #1
 8002ef2:	701a      	strb	r2, [r3, #0]
		double timePerSample = ((double)1) / frequency;
 8002ef4:	68b8      	ldr	r0, [r7, #8]
 8002ef6:	f7fd fb2f 	bl	8000558 <__aeabi_ui2d>
 8002efa:	4602      	mov	r2, r0
 8002efc:	460b      	mov	r3, r1
 8002efe:	f04f 0000 	mov.w	r0, #0
 8002f02:	4923      	ldr	r1, [pc, #140]	; (8002f90 <wave_Start+0xc8>)
 8002f04:	f7fd fccc 	bl	80008a0 <__aeabi_ddiv>
 8002f08:	4602      	mov	r2, r0
 8002f0a:	460b      	mov	r3, r1
 8002f0c:	e9c7 2304 	strd	r2, r3, [r7, #16]
		timePerSample *= 10E5;
 8002f10:	a319      	add	r3, pc, #100	; (adr r3, 8002f78 <wave_Start+0xb0>)
 8002f12:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002f16:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8002f1a:	f7fd fb97 	bl	800064c <__aeabi_dmul>
 8002f1e:	4602      	mov	r2, r0
 8002f20:	460b      	mov	r3, r1
 8002f22:	e9c7 2304 	strd	r2, r3, [r7, #16]
		timePerSample = timePerSample / numSamples;
 8002f26:	6878      	ldr	r0, [r7, #4]
 8002f28:	f7fd fb16 	bl	8000558 <__aeabi_ui2d>
 8002f2c:	4602      	mov	r2, r0
 8002f2e:	460b      	mov	r3, r1
 8002f30:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8002f34:	f7fd fcb4 	bl	80008a0 <__aeabi_ddiv>
 8002f38:	4602      	mov	r2, r0
 8002f3a:	460b      	mov	r3, r1
 8002f3c:	e9c7 2304 	strd	r2, r3, [r7, #16]
		TIM6->ARR = (uint16_t)timePerSample;
 8002f40:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8002f44:	f7fd fe5a 	bl	8000bfc <__aeabi_d2uiz>
 8002f48:	4603      	mov	r3, r0
 8002f4a:	b29b      	uxth	r3, r3
 8002f4c:	461a      	mov	r2, r3
 8002f4e:	69fb      	ldr	r3, [r7, #28]
 8002f50:	62da      	str	r2, [r3, #44]	; 0x2c
		TIM6->DIER |= TIM_UIE;
 8002f52:	69fb      	ldr	r3, [r7, #28]
 8002f54:	68db      	ldr	r3, [r3, #12]
 8002f56:	f043 0201 	orr.w	r2, r3, #1
 8002f5a:	69fb      	ldr	r3, [r7, #28]
 8002f5c:	60da      	str	r2, [r3, #12]
		TIM6->CR1 |= TIM_CEN;
 8002f5e:	69fb      	ldr	r3, [r7, #28]
 8002f60:	681b      	ldr	r3, [r3, #0]
 8002f62:	f043 0201 	orr.w	r2, r3, #1
 8002f66:	69fb      	ldr	r3, [r7, #28]
 8002f68:	601a      	str	r2, [r3, #0]
	return;
 8002f6a:	bf00      	nop
}
 8002f6c:	3720      	adds	r7, #32
 8002f6e:	46bd      	mov	sp, r7
 8002f70:	bd80      	pop	{r7, pc}
 8002f72:	bf00      	nop
 8002f74:	f3af 8000 	nop.w
 8002f78:	00000000 	.word	0x00000000
 8002f7c:	412e8480 	.word	0x412e8480
 8002f80:	20000d3c 	.word	0x20000d3c
 8002f84:	0800a358 	.word	0x0800a358
 8002f88:	40001000 	.word	0x40001000
 8002f8c:	20000d40 	.word	0x20000d40
 8002f90:	3ff00000 	.word	0x3ff00000

08002f94 <wave_Stop>:

void wave_Stop() {
 8002f94:	b580      	push	{r7, lr}
 8002f96:	b082      	sub	sp, #8
 8002f98:	af00      	add	r7, sp, #0
	// If the generator is not running
	if(waveStatus != 1) {
 8002f9a:	4b0e      	ldr	r3, [pc, #56]	; (8002fd4 <wave_Stop+0x40>)
 8002f9c:	781b      	ldrb	r3, [r3, #0]
 8002f9e:	2b01      	cmp	r3, #1
 8002fa0:	d003      	beq.n	8002faa <wave_Stop+0x16>
		printf("Waveform generator is not currently running. No changes made.\n");
 8002fa2:	480d      	ldr	r0, [pc, #52]	; (8002fd8 <wave_Stop+0x44>)
 8002fa4:	f001 fa3e 	bl	8004424 <puts>
		// Stop TIM6 interrupts
		TIM6->DIER &= ~(TIM_UIE);

		waveStatus = 0;
	}
	return;
 8002fa8:	e011      	b.n	8002fce <wave_Stop+0x3a>
		volatile TIMER_BASIC* TIM6 = (TIMER_BASIC*) TIM6_BASE;
 8002faa:	4b0c      	ldr	r3, [pc, #48]	; (8002fdc <wave_Stop+0x48>)
 8002fac:	607b      	str	r3, [r7, #4]
		TIM6->CR1 &= ~(TIM_CEN);
 8002fae:	687b      	ldr	r3, [r7, #4]
 8002fb0:	681b      	ldr	r3, [r3, #0]
 8002fb2:	f023 0201 	bic.w	r2, r3, #1
 8002fb6:	687b      	ldr	r3, [r7, #4]
 8002fb8:	601a      	str	r2, [r3, #0]
		TIM6->DIER &= ~(TIM_UIE);
 8002fba:	687b      	ldr	r3, [r7, #4]
 8002fbc:	68db      	ldr	r3, [r3, #12]
 8002fbe:	f023 0201 	bic.w	r2, r3, #1
 8002fc2:	687b      	ldr	r3, [r7, #4]
 8002fc4:	60da      	str	r2, [r3, #12]
		waveStatus = 0;
 8002fc6:	4b03      	ldr	r3, [pc, #12]	; (8002fd4 <wave_Stop+0x40>)
 8002fc8:	2200      	movs	r2, #0
 8002fca:	701a      	strb	r2, [r3, #0]
	return;
 8002fcc:	bf00      	nop
}
 8002fce:	3708      	adds	r7, #8
 8002fd0:	46bd      	mov	sp, r7
 8002fd2:	bd80      	pop	{r7, pc}
 8002fd4:	20000d3c 	.word	0x20000d3c
 8002fd8:	0800a3a8 	.word	0x0800a3a8
 8002fdc:	40001000 	.word	0x40001000

08002fe0 <TIM6_DAC_IRQHandler>:

void TIM6_DAC_IRQHandler(void) {
 8002fe0:	b490      	push	{r4, r7}
 8002fe2:	b082      	sub	sp, #8
 8002fe4:	af00      	add	r7, sp, #0
	// Clear status register
	volatile TIMER_BASIC* TIM6 = (TIMER_BASIC*) TIM6_BASE;
 8002fe6:	4b1f      	ldr	r3, [pc, #124]	; (8003064 <TIM6_DAC_IRQHandler+0x84>)
 8002fe8:	607b      	str	r3, [r7, #4]
	TIM6->SR = 0;
 8002fea:	687b      	ldr	r3, [r7, #4]
 8002fec:	2200      	movs	r2, #0
 8002fee:	611a      	str	r2, [r3, #16]

	volatile DAC* DAC_Target = (DAC*) DAC_BASE;
 8002ff0:	4b1d      	ldr	r3, [pc, #116]	; (8003068 <TIM6_DAC_IRQHandler+0x88>)
 8002ff2:	603b      	str	r3, [r7, #0]

	// Iterator
	static uint32_t i = 0;

	// Read sample
	register uint16_t sample = waveform[i];
 8002ff4:	4b1d      	ldr	r3, [pc, #116]	; (800306c <TIM6_DAC_IRQHandler+0x8c>)
 8002ff6:	681a      	ldr	r2, [r3, #0]
 8002ff8:	4b1d      	ldr	r3, [pc, #116]	; (8003070 <TIM6_DAC_IRQHandler+0x90>)
 8002ffa:	681b      	ldr	r3, [r3, #0]
 8002ffc:	005b      	lsls	r3, r3, #1
 8002ffe:	4413      	add	r3, r2
 8003000:	881c      	ldrh	r4, [r3, #0]

	// Check for terminator
	if(sample != 65535) {
 8003002:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003006:	429c      	cmp	r4, r3
 8003008:	d00e      	beq.n	8003028 <TIM6_DAC_IRQHandler+0x48>
		// Push sample to DAC
		// Samples are already limited to 12-bit, so just write
		DAC_Target->CH1_R12 = sample;
 800300a:	4622      	mov	r2, r4
 800300c:	683b      	ldr	r3, [r7, #0]
 800300e:	609a      	str	r2, [r3, #8]

		// Increment iterator
		i++;
 8003010:	4b17      	ldr	r3, [pc, #92]	; (8003070 <TIM6_DAC_IRQHandler+0x90>)
 8003012:	681b      	ldr	r3, [r3, #0]
 8003014:	3301      	adds	r3, #1
 8003016:	4a16      	ldr	r2, [pc, #88]	; (8003070 <TIM6_DAC_IRQHandler+0x90>)
 8003018:	6013      	str	r3, [r2, #0]

		// Trigger DAC Ch1
		DAC_Target->SW_TRIGR |= 1<<0;
 800301a:	683b      	ldr	r3, [r7, #0]
 800301c:	685b      	ldr	r3, [r3, #4]
 800301e:	f043 0201 	orr.w	r2, r3, #1
 8003022:	683b      	ldr	r3, [r7, #0]
 8003024:	605a      	str	r2, [r3, #4]

		// Trigger DAC Ch1
		DAC_Target->SW_TRIGR |= 1<<0;
	}

	return;
 8003026:	e018      	b.n	800305a <TIM6_DAC_IRQHandler+0x7a>
		i = 0;
 8003028:	4b11      	ldr	r3, [pc, #68]	; (8003070 <TIM6_DAC_IRQHandler+0x90>)
 800302a:	2200      	movs	r2, #0
 800302c:	601a      	str	r2, [r3, #0]
		sample = waveform[i];
 800302e:	4b0f      	ldr	r3, [pc, #60]	; (800306c <TIM6_DAC_IRQHandler+0x8c>)
 8003030:	681a      	ldr	r2, [r3, #0]
 8003032:	4b0f      	ldr	r3, [pc, #60]	; (8003070 <TIM6_DAC_IRQHandler+0x90>)
 8003034:	681b      	ldr	r3, [r3, #0]
 8003036:	005b      	lsls	r3, r3, #1
 8003038:	4413      	add	r3, r2
 800303a:	881c      	ldrh	r4, [r3, #0]
		DAC_Target->CH1_R12 = sample;
 800303c:	4622      	mov	r2, r4
 800303e:	683b      	ldr	r3, [r7, #0]
 8003040:	609a      	str	r2, [r3, #8]
		i++;
 8003042:	4b0b      	ldr	r3, [pc, #44]	; (8003070 <TIM6_DAC_IRQHandler+0x90>)
 8003044:	681b      	ldr	r3, [r3, #0]
 8003046:	3301      	adds	r3, #1
 8003048:	4a09      	ldr	r2, [pc, #36]	; (8003070 <TIM6_DAC_IRQHandler+0x90>)
 800304a:	6013      	str	r3, [r2, #0]
		DAC_Target->SW_TRIGR |= 1<<0;
 800304c:	683b      	ldr	r3, [r7, #0]
 800304e:	685b      	ldr	r3, [r3, #4]
 8003050:	f043 0201 	orr.w	r2, r3, #1
 8003054:	683b      	ldr	r3, [r7, #0]
 8003056:	605a      	str	r2, [r3, #4]
	return;
 8003058:	bf00      	nop
}
 800305a:	3708      	adds	r7, #8
 800305c:	46bd      	mov	sp, r7
 800305e:	bc90      	pop	{r4, r7}
 8003060:	4770      	bx	lr
 8003062:	bf00      	nop
 8003064:	40001000 	.word	0x40001000
 8003068:	40007400 	.word	0x40007400
 800306c:	20000d40 	.word	0x20000d40
 8003070:	20000d44 	.word	0x20000d44

08003074 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8003074:	480d      	ldr	r0, [pc, #52]	; (80030ac <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8003076:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8003078:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800307c:	480c      	ldr	r0, [pc, #48]	; (80030b0 <LoopForever+0x6>)
  ldr r1, =_edata
 800307e:	490d      	ldr	r1, [pc, #52]	; (80030b4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8003080:	4a0d      	ldr	r2, [pc, #52]	; (80030b8 <LoopForever+0xe>)
  movs r3, #0
 8003082:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8003084:	e002      	b.n	800308c <LoopCopyDataInit>

08003086 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8003086:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8003088:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800308a:	3304      	adds	r3, #4

0800308c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800308c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800308e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8003090:	d3f9      	bcc.n	8003086 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8003092:	4a0a      	ldr	r2, [pc, #40]	; (80030bc <LoopForever+0x12>)
  ldr r4, =_ebss
 8003094:	4c0a      	ldr	r4, [pc, #40]	; (80030c0 <LoopForever+0x16>)
  movs r3, #0
 8003096:	2300      	movs	r3, #0
  b LoopFillZerobss
 8003098:	e001      	b.n	800309e <LoopFillZerobss>

0800309a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800309a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800309c:	3204      	adds	r2, #4

0800309e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800309e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80030a0:	d3fb      	bcc.n	800309a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80030a2:	f000 f9c9 	bl	8003438 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80030a6:	f7fe fc71 	bl	800198c <main>

080030aa <LoopForever>:

LoopForever:
    b LoopForever
 80030aa:	e7fe      	b.n	80030aa <LoopForever>
  ldr   r0, =_estack
 80030ac:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80030b0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80030b4:	20000ce8 	.word	0x20000ce8
  ldr r2, =_sidata
 80030b8:	0800ad10 	.word	0x0800ad10
  ldr r2, =_sbss
 80030bc:	20000ce8 	.word	0x20000ce8
  ldr r4, =_ebss
 80030c0:	20000d60 	.word	0x20000d60

080030c4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80030c4:	e7fe      	b.n	80030c4 <ADC_IRQHandler>
	...

080030c8 <calloc>:
 80030c8:	4b02      	ldr	r3, [pc, #8]	; (80030d4 <calloc+0xc>)
 80030ca:	460a      	mov	r2, r1
 80030cc:	4601      	mov	r1, r0
 80030ce:	6818      	ldr	r0, [r3, #0]
 80030d0:	f000 ba00 	b.w	80034d4 <_calloc_r>
 80030d4:	20000b10 	.word	0x20000b10

080030d8 <__errno>:
 80030d8:	4b01      	ldr	r3, [pc, #4]	; (80030e0 <__errno+0x8>)
 80030da:	6818      	ldr	r0, [r3, #0]
 80030dc:	4770      	bx	lr
 80030de:	bf00      	nop
 80030e0:	20000b10 	.word	0x20000b10

080030e4 <exit>:
 80030e4:	b508      	push	{r3, lr}
 80030e6:	4b07      	ldr	r3, [pc, #28]	; (8003104 <exit+0x20>)
 80030e8:	4604      	mov	r4, r0
 80030ea:	b113      	cbz	r3, 80030f2 <exit+0xe>
 80030ec:	2100      	movs	r1, #0
 80030ee:	f3af 8000 	nop.w
 80030f2:	4b05      	ldr	r3, [pc, #20]	; (8003108 <exit+0x24>)
 80030f4:	6818      	ldr	r0, [r3, #0]
 80030f6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80030f8:	b103      	cbz	r3, 80030fc <exit+0x18>
 80030fa:	4798      	blx	r3
 80030fc:	4620      	mov	r0, r4
 80030fe:	f7ff fbb6 	bl	800286e <_exit>
 8003102:	bf00      	nop
 8003104:	00000000 	.word	0x00000000
 8003108:	0800a454 	.word	0x0800a454

0800310c <_fgets_r>:
 800310c:	2a01      	cmp	r2, #1
 800310e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003112:	4680      	mov	r8, r0
 8003114:	460d      	mov	r5, r1
 8003116:	4617      	mov	r7, r2
 8003118:	461c      	mov	r4, r3
 800311a:	dc03      	bgt.n	8003124 <_fgets_r+0x18>
 800311c:	2500      	movs	r5, #0
 800311e:	4628      	mov	r0, r5
 8003120:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003124:	b118      	cbz	r0, 800312e <_fgets_r+0x22>
 8003126:	6983      	ldr	r3, [r0, #24]
 8003128:	b90b      	cbnz	r3, 800312e <_fgets_r+0x22>
 800312a:	f000 f8cb 	bl	80032c4 <__sinit>
 800312e:	4b31      	ldr	r3, [pc, #196]	; (80031f4 <_fgets_r+0xe8>)
 8003130:	429c      	cmp	r4, r3
 8003132:	d120      	bne.n	8003176 <_fgets_r+0x6a>
 8003134:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8003138:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800313a:	07de      	lsls	r6, r3, #31
 800313c:	d405      	bmi.n	800314a <_fgets_r+0x3e>
 800313e:	89a3      	ldrh	r3, [r4, #12]
 8003140:	0598      	lsls	r0, r3, #22
 8003142:	d402      	bmi.n	800314a <_fgets_r+0x3e>
 8003144:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003146:	f000 f99c 	bl	8003482 <__retarget_lock_acquire_recursive>
 800314a:	3f01      	subs	r7, #1
 800314c:	46a9      	mov	r9, r5
 800314e:	6866      	ldr	r6, [r4, #4]
 8003150:	b9f6      	cbnz	r6, 8003190 <_fgets_r+0x84>
 8003152:	4621      	mov	r1, r4
 8003154:	4640      	mov	r0, r8
 8003156:	f001 f977 	bl	8004448 <__srefill_r>
 800315a:	b1c0      	cbz	r0, 800318e <_fgets_r+0x82>
 800315c:	45a9      	cmp	r9, r5
 800315e:	d145      	bne.n	80031ec <_fgets_r+0xe0>
 8003160:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8003162:	07d9      	lsls	r1, r3, #31
 8003164:	d4da      	bmi.n	800311c <_fgets_r+0x10>
 8003166:	89a5      	ldrh	r5, [r4, #12]
 8003168:	f415 7500 	ands.w	r5, r5, #512	; 0x200
 800316c:	d1d6      	bne.n	800311c <_fgets_r+0x10>
 800316e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003170:	f000 f988 	bl	8003484 <__retarget_lock_release_recursive>
 8003174:	e7d3      	b.n	800311e <_fgets_r+0x12>
 8003176:	4b20      	ldr	r3, [pc, #128]	; (80031f8 <_fgets_r+0xec>)
 8003178:	429c      	cmp	r4, r3
 800317a:	d102      	bne.n	8003182 <_fgets_r+0x76>
 800317c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8003180:	e7da      	b.n	8003138 <_fgets_r+0x2c>
 8003182:	4b1e      	ldr	r3, [pc, #120]	; (80031fc <_fgets_r+0xf0>)
 8003184:	429c      	cmp	r4, r3
 8003186:	bf08      	it	eq
 8003188:	f8d8 400c 	ldreq.w	r4, [r8, #12]
 800318c:	e7d4      	b.n	8003138 <_fgets_r+0x2c>
 800318e:	6866      	ldr	r6, [r4, #4]
 8003190:	f8d4 a000 	ldr.w	sl, [r4]
 8003194:	42be      	cmp	r6, r7
 8003196:	bf28      	it	cs
 8003198:	463e      	movcs	r6, r7
 800319a:	4632      	mov	r2, r6
 800319c:	210a      	movs	r1, #10
 800319e:	4650      	mov	r0, sl
 80031a0:	f7fd f836 	bl	8000210 <memchr>
 80031a4:	6863      	ldr	r3, [r4, #4]
 80031a6:	b1a0      	cbz	r0, 80031d2 <_fgets_r+0xc6>
 80031a8:	3001      	adds	r0, #1
 80031aa:	eba0 060a 	sub.w	r6, r0, sl
 80031ae:	1b9b      	subs	r3, r3, r6
 80031b0:	e9c4 0300 	strd	r0, r3, [r4]
 80031b4:	4632      	mov	r2, r6
 80031b6:	4651      	mov	r1, sl
 80031b8:	4648      	mov	r0, r9
 80031ba:	f000 f975 	bl	80034a8 <memcpy>
 80031be:	2300      	movs	r3, #0
 80031c0:	f809 3006 	strb.w	r3, [r9, r6]
 80031c4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80031c6:	07da      	lsls	r2, r3, #31
 80031c8:	d4a9      	bmi.n	800311e <_fgets_r+0x12>
 80031ca:	89a3      	ldrh	r3, [r4, #12]
 80031cc:	059b      	lsls	r3, r3, #22
 80031ce:	d4a6      	bmi.n	800311e <_fgets_r+0x12>
 80031d0:	e7cd      	b.n	800316e <_fgets_r+0x62>
 80031d2:	1b9b      	subs	r3, r3, r6
 80031d4:	6063      	str	r3, [r4, #4]
 80031d6:	6823      	ldr	r3, [r4, #0]
 80031d8:	4433      	add	r3, r6
 80031da:	4648      	mov	r0, r9
 80031dc:	6023      	str	r3, [r4, #0]
 80031de:	4632      	mov	r2, r6
 80031e0:	4651      	mov	r1, sl
 80031e2:	f000 f961 	bl	80034a8 <memcpy>
 80031e6:	1bbf      	subs	r7, r7, r6
 80031e8:	44b1      	add	r9, r6
 80031ea:	d1b0      	bne.n	800314e <_fgets_r+0x42>
 80031ec:	2300      	movs	r3, #0
 80031ee:	f889 3000 	strb.w	r3, [r9]
 80031f2:	e7e7      	b.n	80031c4 <_fgets_r+0xb8>
 80031f4:	0800a414 	.word	0x0800a414
 80031f8:	0800a434 	.word	0x0800a434
 80031fc:	0800a3f4 	.word	0x0800a3f4

08003200 <fgets>:
 8003200:	4613      	mov	r3, r2
 8003202:	460a      	mov	r2, r1
 8003204:	4601      	mov	r1, r0
 8003206:	4802      	ldr	r0, [pc, #8]	; (8003210 <fgets+0x10>)
 8003208:	6800      	ldr	r0, [r0, #0]
 800320a:	f7ff bf7f 	b.w	800310c <_fgets_r>
 800320e:	bf00      	nop
 8003210:	20000b10 	.word	0x20000b10

08003214 <std>:
 8003214:	2300      	movs	r3, #0
 8003216:	b510      	push	{r4, lr}
 8003218:	4604      	mov	r4, r0
 800321a:	e9c0 3300 	strd	r3, r3, [r0]
 800321e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8003222:	6083      	str	r3, [r0, #8]
 8003224:	8181      	strh	r1, [r0, #12]
 8003226:	6643      	str	r3, [r0, #100]	; 0x64
 8003228:	81c2      	strh	r2, [r0, #14]
 800322a:	6183      	str	r3, [r0, #24]
 800322c:	4619      	mov	r1, r3
 800322e:	2208      	movs	r2, #8
 8003230:	305c      	adds	r0, #92	; 0x5c
 8003232:	f000 f947 	bl	80034c4 <memset>
 8003236:	4b05      	ldr	r3, [pc, #20]	; (800324c <std+0x38>)
 8003238:	6263      	str	r3, [r4, #36]	; 0x24
 800323a:	4b05      	ldr	r3, [pc, #20]	; (8003250 <std+0x3c>)
 800323c:	62a3      	str	r3, [r4, #40]	; 0x28
 800323e:	4b05      	ldr	r3, [pc, #20]	; (8003254 <std+0x40>)
 8003240:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003242:	4b05      	ldr	r3, [pc, #20]	; (8003258 <std+0x44>)
 8003244:	6224      	str	r4, [r4, #32]
 8003246:	6323      	str	r3, [r4, #48]	; 0x30
 8003248:	bd10      	pop	{r4, pc}
 800324a:	bf00      	nop
 800324c:	080047a5 	.word	0x080047a5
 8003250:	080047cb 	.word	0x080047cb
 8003254:	08004803 	.word	0x08004803
 8003258:	08004827 	.word	0x08004827

0800325c <_cleanup_r>:
 800325c:	4901      	ldr	r1, [pc, #4]	; (8003264 <_cleanup_r+0x8>)
 800325e:	f000 b8cc 	b.w	80033fa <_fwalk_reent>
 8003262:	bf00      	nop
 8003264:	08006669 	.word	0x08006669

08003268 <__sfmoreglue>:
 8003268:	b570      	push	{r4, r5, r6, lr}
 800326a:	1e4a      	subs	r2, r1, #1
 800326c:	2568      	movs	r5, #104	; 0x68
 800326e:	4355      	muls	r5, r2
 8003270:	460e      	mov	r6, r1
 8003272:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8003276:	f000 f989 	bl	800358c <_malloc_r>
 800327a:	4604      	mov	r4, r0
 800327c:	b140      	cbz	r0, 8003290 <__sfmoreglue+0x28>
 800327e:	2100      	movs	r1, #0
 8003280:	e9c0 1600 	strd	r1, r6, [r0]
 8003284:	300c      	adds	r0, #12
 8003286:	60a0      	str	r0, [r4, #8]
 8003288:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800328c:	f000 f91a 	bl	80034c4 <memset>
 8003290:	4620      	mov	r0, r4
 8003292:	bd70      	pop	{r4, r5, r6, pc}

08003294 <__sfp_lock_acquire>:
 8003294:	4801      	ldr	r0, [pc, #4]	; (800329c <__sfp_lock_acquire+0x8>)
 8003296:	f000 b8f4 	b.w	8003482 <__retarget_lock_acquire_recursive>
 800329a:	bf00      	nop
 800329c:	20000d58 	.word	0x20000d58

080032a0 <__sfp_lock_release>:
 80032a0:	4801      	ldr	r0, [pc, #4]	; (80032a8 <__sfp_lock_release+0x8>)
 80032a2:	f000 b8ef 	b.w	8003484 <__retarget_lock_release_recursive>
 80032a6:	bf00      	nop
 80032a8:	20000d58 	.word	0x20000d58

080032ac <__sinit_lock_acquire>:
 80032ac:	4801      	ldr	r0, [pc, #4]	; (80032b4 <__sinit_lock_acquire+0x8>)
 80032ae:	f000 b8e8 	b.w	8003482 <__retarget_lock_acquire_recursive>
 80032b2:	bf00      	nop
 80032b4:	20000d53 	.word	0x20000d53

080032b8 <__sinit_lock_release>:
 80032b8:	4801      	ldr	r0, [pc, #4]	; (80032c0 <__sinit_lock_release+0x8>)
 80032ba:	f000 b8e3 	b.w	8003484 <__retarget_lock_release_recursive>
 80032be:	bf00      	nop
 80032c0:	20000d53 	.word	0x20000d53

080032c4 <__sinit>:
 80032c4:	b510      	push	{r4, lr}
 80032c6:	4604      	mov	r4, r0
 80032c8:	f7ff fff0 	bl	80032ac <__sinit_lock_acquire>
 80032cc:	69a3      	ldr	r3, [r4, #24]
 80032ce:	b11b      	cbz	r3, 80032d8 <__sinit+0x14>
 80032d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80032d4:	f7ff bff0 	b.w	80032b8 <__sinit_lock_release>
 80032d8:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80032dc:	6523      	str	r3, [r4, #80]	; 0x50
 80032de:	4b13      	ldr	r3, [pc, #76]	; (800332c <__sinit+0x68>)
 80032e0:	4a13      	ldr	r2, [pc, #76]	; (8003330 <__sinit+0x6c>)
 80032e2:	681b      	ldr	r3, [r3, #0]
 80032e4:	62a2      	str	r2, [r4, #40]	; 0x28
 80032e6:	42a3      	cmp	r3, r4
 80032e8:	bf04      	itt	eq
 80032ea:	2301      	moveq	r3, #1
 80032ec:	61a3      	streq	r3, [r4, #24]
 80032ee:	4620      	mov	r0, r4
 80032f0:	f000 f820 	bl	8003334 <__sfp>
 80032f4:	6060      	str	r0, [r4, #4]
 80032f6:	4620      	mov	r0, r4
 80032f8:	f000 f81c 	bl	8003334 <__sfp>
 80032fc:	60a0      	str	r0, [r4, #8]
 80032fe:	4620      	mov	r0, r4
 8003300:	f000 f818 	bl	8003334 <__sfp>
 8003304:	2200      	movs	r2, #0
 8003306:	60e0      	str	r0, [r4, #12]
 8003308:	2104      	movs	r1, #4
 800330a:	6860      	ldr	r0, [r4, #4]
 800330c:	f7ff ff82 	bl	8003214 <std>
 8003310:	68a0      	ldr	r0, [r4, #8]
 8003312:	2201      	movs	r2, #1
 8003314:	2109      	movs	r1, #9
 8003316:	f7ff ff7d 	bl	8003214 <std>
 800331a:	68e0      	ldr	r0, [r4, #12]
 800331c:	2202      	movs	r2, #2
 800331e:	2112      	movs	r1, #18
 8003320:	f7ff ff78 	bl	8003214 <std>
 8003324:	2301      	movs	r3, #1
 8003326:	61a3      	str	r3, [r4, #24]
 8003328:	e7d2      	b.n	80032d0 <__sinit+0xc>
 800332a:	bf00      	nop
 800332c:	0800a454 	.word	0x0800a454
 8003330:	0800325d 	.word	0x0800325d

08003334 <__sfp>:
 8003334:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003336:	4607      	mov	r7, r0
 8003338:	f7ff ffac 	bl	8003294 <__sfp_lock_acquire>
 800333c:	4b1e      	ldr	r3, [pc, #120]	; (80033b8 <__sfp+0x84>)
 800333e:	681e      	ldr	r6, [r3, #0]
 8003340:	69b3      	ldr	r3, [r6, #24]
 8003342:	b913      	cbnz	r3, 800334a <__sfp+0x16>
 8003344:	4630      	mov	r0, r6
 8003346:	f7ff ffbd 	bl	80032c4 <__sinit>
 800334a:	3648      	adds	r6, #72	; 0x48
 800334c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8003350:	3b01      	subs	r3, #1
 8003352:	d503      	bpl.n	800335c <__sfp+0x28>
 8003354:	6833      	ldr	r3, [r6, #0]
 8003356:	b30b      	cbz	r3, 800339c <__sfp+0x68>
 8003358:	6836      	ldr	r6, [r6, #0]
 800335a:	e7f7      	b.n	800334c <__sfp+0x18>
 800335c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8003360:	b9d5      	cbnz	r5, 8003398 <__sfp+0x64>
 8003362:	4b16      	ldr	r3, [pc, #88]	; (80033bc <__sfp+0x88>)
 8003364:	60e3      	str	r3, [r4, #12]
 8003366:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800336a:	6665      	str	r5, [r4, #100]	; 0x64
 800336c:	f000 f888 	bl	8003480 <__retarget_lock_init_recursive>
 8003370:	f7ff ff96 	bl	80032a0 <__sfp_lock_release>
 8003374:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8003378:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800337c:	6025      	str	r5, [r4, #0]
 800337e:	61a5      	str	r5, [r4, #24]
 8003380:	2208      	movs	r2, #8
 8003382:	4629      	mov	r1, r5
 8003384:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8003388:	f000 f89c 	bl	80034c4 <memset>
 800338c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8003390:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8003394:	4620      	mov	r0, r4
 8003396:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003398:	3468      	adds	r4, #104	; 0x68
 800339a:	e7d9      	b.n	8003350 <__sfp+0x1c>
 800339c:	2104      	movs	r1, #4
 800339e:	4638      	mov	r0, r7
 80033a0:	f7ff ff62 	bl	8003268 <__sfmoreglue>
 80033a4:	4604      	mov	r4, r0
 80033a6:	6030      	str	r0, [r6, #0]
 80033a8:	2800      	cmp	r0, #0
 80033aa:	d1d5      	bne.n	8003358 <__sfp+0x24>
 80033ac:	f7ff ff78 	bl	80032a0 <__sfp_lock_release>
 80033b0:	230c      	movs	r3, #12
 80033b2:	603b      	str	r3, [r7, #0]
 80033b4:	e7ee      	b.n	8003394 <__sfp+0x60>
 80033b6:	bf00      	nop
 80033b8:	0800a454 	.word	0x0800a454
 80033bc:	ffff0001 	.word	0xffff0001

080033c0 <_fwalk>:
 80033c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80033c4:	460f      	mov	r7, r1
 80033c6:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80033ca:	2600      	movs	r6, #0
 80033cc:	e9d4 8501 	ldrd	r8, r5, [r4, #4]
 80033d0:	f1b8 0801 	subs.w	r8, r8, #1
 80033d4:	d505      	bpl.n	80033e2 <_fwalk+0x22>
 80033d6:	6824      	ldr	r4, [r4, #0]
 80033d8:	2c00      	cmp	r4, #0
 80033da:	d1f7      	bne.n	80033cc <_fwalk+0xc>
 80033dc:	4630      	mov	r0, r6
 80033de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80033e2:	89ab      	ldrh	r3, [r5, #12]
 80033e4:	2b01      	cmp	r3, #1
 80033e6:	d906      	bls.n	80033f6 <_fwalk+0x36>
 80033e8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80033ec:	3301      	adds	r3, #1
 80033ee:	d002      	beq.n	80033f6 <_fwalk+0x36>
 80033f0:	4628      	mov	r0, r5
 80033f2:	47b8      	blx	r7
 80033f4:	4306      	orrs	r6, r0
 80033f6:	3568      	adds	r5, #104	; 0x68
 80033f8:	e7ea      	b.n	80033d0 <_fwalk+0x10>

080033fa <_fwalk_reent>:
 80033fa:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80033fe:	4606      	mov	r6, r0
 8003400:	4688      	mov	r8, r1
 8003402:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8003406:	2700      	movs	r7, #0
 8003408:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800340c:	f1b9 0901 	subs.w	r9, r9, #1
 8003410:	d505      	bpl.n	800341e <_fwalk_reent+0x24>
 8003412:	6824      	ldr	r4, [r4, #0]
 8003414:	2c00      	cmp	r4, #0
 8003416:	d1f7      	bne.n	8003408 <_fwalk_reent+0xe>
 8003418:	4638      	mov	r0, r7
 800341a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800341e:	89ab      	ldrh	r3, [r5, #12]
 8003420:	2b01      	cmp	r3, #1
 8003422:	d907      	bls.n	8003434 <_fwalk_reent+0x3a>
 8003424:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8003428:	3301      	adds	r3, #1
 800342a:	d003      	beq.n	8003434 <_fwalk_reent+0x3a>
 800342c:	4629      	mov	r1, r5
 800342e:	4630      	mov	r0, r6
 8003430:	47c0      	blx	r8
 8003432:	4307      	orrs	r7, r0
 8003434:	3568      	adds	r5, #104	; 0x68
 8003436:	e7e9      	b.n	800340c <_fwalk_reent+0x12>

08003438 <__libc_init_array>:
 8003438:	b570      	push	{r4, r5, r6, lr}
 800343a:	4d0d      	ldr	r5, [pc, #52]	; (8003470 <__libc_init_array+0x38>)
 800343c:	4c0d      	ldr	r4, [pc, #52]	; (8003474 <__libc_init_array+0x3c>)
 800343e:	1b64      	subs	r4, r4, r5
 8003440:	10a4      	asrs	r4, r4, #2
 8003442:	2600      	movs	r6, #0
 8003444:	42a6      	cmp	r6, r4
 8003446:	d109      	bne.n	800345c <__libc_init_array+0x24>
 8003448:	4d0b      	ldr	r5, [pc, #44]	; (8003478 <__libc_init_array+0x40>)
 800344a:	4c0c      	ldr	r4, [pc, #48]	; (800347c <__libc_init_array+0x44>)
 800344c:	f006 fbe8 	bl	8009c20 <_init>
 8003450:	1b64      	subs	r4, r4, r5
 8003452:	10a4      	asrs	r4, r4, #2
 8003454:	2600      	movs	r6, #0
 8003456:	42a6      	cmp	r6, r4
 8003458:	d105      	bne.n	8003466 <__libc_init_array+0x2e>
 800345a:	bd70      	pop	{r4, r5, r6, pc}
 800345c:	f855 3b04 	ldr.w	r3, [r5], #4
 8003460:	4798      	blx	r3
 8003462:	3601      	adds	r6, #1
 8003464:	e7ee      	b.n	8003444 <__libc_init_array+0xc>
 8003466:	f855 3b04 	ldr.w	r3, [r5], #4
 800346a:	4798      	blx	r3
 800346c:	3601      	adds	r6, #1
 800346e:	e7f2      	b.n	8003456 <__libc_init_array+0x1e>
 8003470:	0800ad08 	.word	0x0800ad08
 8003474:	0800ad08 	.word	0x0800ad08
 8003478:	0800ad08 	.word	0x0800ad08
 800347c:	0800ad0c 	.word	0x0800ad0c

08003480 <__retarget_lock_init_recursive>:
 8003480:	4770      	bx	lr

08003482 <__retarget_lock_acquire_recursive>:
 8003482:	4770      	bx	lr

08003484 <__retarget_lock_release_recursive>:
 8003484:	4770      	bx	lr
	...

08003488 <malloc>:
 8003488:	4b02      	ldr	r3, [pc, #8]	; (8003494 <malloc+0xc>)
 800348a:	4601      	mov	r1, r0
 800348c:	6818      	ldr	r0, [r3, #0]
 800348e:	f000 b87d 	b.w	800358c <_malloc_r>
 8003492:	bf00      	nop
 8003494:	20000b10 	.word	0x20000b10

08003498 <free>:
 8003498:	4b02      	ldr	r3, [pc, #8]	; (80034a4 <free+0xc>)
 800349a:	4601      	mov	r1, r0
 800349c:	6818      	ldr	r0, [r3, #0]
 800349e:	f000 b827 	b.w	80034f0 <_free_r>
 80034a2:	bf00      	nop
 80034a4:	20000b10 	.word	0x20000b10

080034a8 <memcpy>:
 80034a8:	440a      	add	r2, r1
 80034aa:	4291      	cmp	r1, r2
 80034ac:	f100 33ff 	add.w	r3, r0, #4294967295
 80034b0:	d100      	bne.n	80034b4 <memcpy+0xc>
 80034b2:	4770      	bx	lr
 80034b4:	b510      	push	{r4, lr}
 80034b6:	f811 4b01 	ldrb.w	r4, [r1], #1
 80034ba:	f803 4f01 	strb.w	r4, [r3, #1]!
 80034be:	4291      	cmp	r1, r2
 80034c0:	d1f9      	bne.n	80034b6 <memcpy+0xe>
 80034c2:	bd10      	pop	{r4, pc}

080034c4 <memset>:
 80034c4:	4402      	add	r2, r0
 80034c6:	4603      	mov	r3, r0
 80034c8:	4293      	cmp	r3, r2
 80034ca:	d100      	bne.n	80034ce <memset+0xa>
 80034cc:	4770      	bx	lr
 80034ce:	f803 1b01 	strb.w	r1, [r3], #1
 80034d2:	e7f9      	b.n	80034c8 <memset+0x4>

080034d4 <_calloc_r>:
 80034d4:	b538      	push	{r3, r4, r5, lr}
 80034d6:	fb02 f501 	mul.w	r5, r2, r1
 80034da:	4629      	mov	r1, r5
 80034dc:	f000 f856 	bl	800358c <_malloc_r>
 80034e0:	4604      	mov	r4, r0
 80034e2:	b118      	cbz	r0, 80034ec <_calloc_r+0x18>
 80034e4:	462a      	mov	r2, r5
 80034e6:	2100      	movs	r1, #0
 80034e8:	f7ff ffec 	bl	80034c4 <memset>
 80034ec:	4620      	mov	r0, r4
 80034ee:	bd38      	pop	{r3, r4, r5, pc}

080034f0 <_free_r>:
 80034f0:	b538      	push	{r3, r4, r5, lr}
 80034f2:	4605      	mov	r5, r0
 80034f4:	2900      	cmp	r1, #0
 80034f6:	d045      	beq.n	8003584 <_free_r+0x94>
 80034f8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80034fc:	1f0c      	subs	r4, r1, #4
 80034fe:	2b00      	cmp	r3, #0
 8003500:	bfb8      	it	lt
 8003502:	18e4      	addlt	r4, r4, r3
 8003504:	f003 fd00 	bl	8006f08 <__malloc_lock>
 8003508:	4a1f      	ldr	r2, [pc, #124]	; (8003588 <_free_r+0x98>)
 800350a:	6813      	ldr	r3, [r2, #0]
 800350c:	4610      	mov	r0, r2
 800350e:	b933      	cbnz	r3, 800351e <_free_r+0x2e>
 8003510:	6063      	str	r3, [r4, #4]
 8003512:	6014      	str	r4, [r2, #0]
 8003514:	4628      	mov	r0, r5
 8003516:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800351a:	f003 bcfb 	b.w	8006f14 <__malloc_unlock>
 800351e:	42a3      	cmp	r3, r4
 8003520:	d90b      	bls.n	800353a <_free_r+0x4a>
 8003522:	6821      	ldr	r1, [r4, #0]
 8003524:	1862      	adds	r2, r4, r1
 8003526:	4293      	cmp	r3, r2
 8003528:	bf04      	itt	eq
 800352a:	681a      	ldreq	r2, [r3, #0]
 800352c:	685b      	ldreq	r3, [r3, #4]
 800352e:	6063      	str	r3, [r4, #4]
 8003530:	bf04      	itt	eq
 8003532:	1852      	addeq	r2, r2, r1
 8003534:	6022      	streq	r2, [r4, #0]
 8003536:	6004      	str	r4, [r0, #0]
 8003538:	e7ec      	b.n	8003514 <_free_r+0x24>
 800353a:	461a      	mov	r2, r3
 800353c:	685b      	ldr	r3, [r3, #4]
 800353e:	b10b      	cbz	r3, 8003544 <_free_r+0x54>
 8003540:	42a3      	cmp	r3, r4
 8003542:	d9fa      	bls.n	800353a <_free_r+0x4a>
 8003544:	6811      	ldr	r1, [r2, #0]
 8003546:	1850      	adds	r0, r2, r1
 8003548:	42a0      	cmp	r0, r4
 800354a:	d10b      	bne.n	8003564 <_free_r+0x74>
 800354c:	6820      	ldr	r0, [r4, #0]
 800354e:	4401      	add	r1, r0
 8003550:	1850      	adds	r0, r2, r1
 8003552:	4283      	cmp	r3, r0
 8003554:	6011      	str	r1, [r2, #0]
 8003556:	d1dd      	bne.n	8003514 <_free_r+0x24>
 8003558:	6818      	ldr	r0, [r3, #0]
 800355a:	685b      	ldr	r3, [r3, #4]
 800355c:	6053      	str	r3, [r2, #4]
 800355e:	4401      	add	r1, r0
 8003560:	6011      	str	r1, [r2, #0]
 8003562:	e7d7      	b.n	8003514 <_free_r+0x24>
 8003564:	d902      	bls.n	800356c <_free_r+0x7c>
 8003566:	230c      	movs	r3, #12
 8003568:	602b      	str	r3, [r5, #0]
 800356a:	e7d3      	b.n	8003514 <_free_r+0x24>
 800356c:	6820      	ldr	r0, [r4, #0]
 800356e:	1821      	adds	r1, r4, r0
 8003570:	428b      	cmp	r3, r1
 8003572:	bf04      	itt	eq
 8003574:	6819      	ldreq	r1, [r3, #0]
 8003576:	685b      	ldreq	r3, [r3, #4]
 8003578:	6063      	str	r3, [r4, #4]
 800357a:	bf04      	itt	eq
 800357c:	1809      	addeq	r1, r1, r0
 800357e:	6021      	streq	r1, [r4, #0]
 8003580:	6054      	str	r4, [r2, #4]
 8003582:	e7c7      	b.n	8003514 <_free_r+0x24>
 8003584:	bd38      	pop	{r3, r4, r5, pc}
 8003586:	bf00      	nop
 8003588:	20000d48 	.word	0x20000d48

0800358c <_malloc_r>:
 800358c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800358e:	1ccd      	adds	r5, r1, #3
 8003590:	f025 0503 	bic.w	r5, r5, #3
 8003594:	3508      	adds	r5, #8
 8003596:	2d0c      	cmp	r5, #12
 8003598:	bf38      	it	cc
 800359a:	250c      	movcc	r5, #12
 800359c:	2d00      	cmp	r5, #0
 800359e:	4606      	mov	r6, r0
 80035a0:	db01      	blt.n	80035a6 <_malloc_r+0x1a>
 80035a2:	42a9      	cmp	r1, r5
 80035a4:	d903      	bls.n	80035ae <_malloc_r+0x22>
 80035a6:	230c      	movs	r3, #12
 80035a8:	6033      	str	r3, [r6, #0]
 80035aa:	2000      	movs	r0, #0
 80035ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80035ae:	f003 fcab 	bl	8006f08 <__malloc_lock>
 80035b2:	4921      	ldr	r1, [pc, #132]	; (8003638 <_malloc_r+0xac>)
 80035b4:	680a      	ldr	r2, [r1, #0]
 80035b6:	4614      	mov	r4, r2
 80035b8:	b99c      	cbnz	r4, 80035e2 <_malloc_r+0x56>
 80035ba:	4f20      	ldr	r7, [pc, #128]	; (800363c <_malloc_r+0xb0>)
 80035bc:	683b      	ldr	r3, [r7, #0]
 80035be:	b923      	cbnz	r3, 80035ca <_malloc_r+0x3e>
 80035c0:	4621      	mov	r1, r4
 80035c2:	4630      	mov	r0, r6
 80035c4:	f000 ffca 	bl	800455c <_sbrk_r>
 80035c8:	6038      	str	r0, [r7, #0]
 80035ca:	4629      	mov	r1, r5
 80035cc:	4630      	mov	r0, r6
 80035ce:	f000 ffc5 	bl	800455c <_sbrk_r>
 80035d2:	1c43      	adds	r3, r0, #1
 80035d4:	d123      	bne.n	800361e <_malloc_r+0x92>
 80035d6:	230c      	movs	r3, #12
 80035d8:	6033      	str	r3, [r6, #0]
 80035da:	4630      	mov	r0, r6
 80035dc:	f003 fc9a 	bl	8006f14 <__malloc_unlock>
 80035e0:	e7e3      	b.n	80035aa <_malloc_r+0x1e>
 80035e2:	6823      	ldr	r3, [r4, #0]
 80035e4:	1b5b      	subs	r3, r3, r5
 80035e6:	d417      	bmi.n	8003618 <_malloc_r+0x8c>
 80035e8:	2b0b      	cmp	r3, #11
 80035ea:	d903      	bls.n	80035f4 <_malloc_r+0x68>
 80035ec:	6023      	str	r3, [r4, #0]
 80035ee:	441c      	add	r4, r3
 80035f0:	6025      	str	r5, [r4, #0]
 80035f2:	e004      	b.n	80035fe <_malloc_r+0x72>
 80035f4:	6863      	ldr	r3, [r4, #4]
 80035f6:	42a2      	cmp	r2, r4
 80035f8:	bf0c      	ite	eq
 80035fa:	600b      	streq	r3, [r1, #0]
 80035fc:	6053      	strne	r3, [r2, #4]
 80035fe:	4630      	mov	r0, r6
 8003600:	f003 fc88 	bl	8006f14 <__malloc_unlock>
 8003604:	f104 000b 	add.w	r0, r4, #11
 8003608:	1d23      	adds	r3, r4, #4
 800360a:	f020 0007 	bic.w	r0, r0, #7
 800360e:	1ac2      	subs	r2, r0, r3
 8003610:	d0cc      	beq.n	80035ac <_malloc_r+0x20>
 8003612:	1a1b      	subs	r3, r3, r0
 8003614:	50a3      	str	r3, [r4, r2]
 8003616:	e7c9      	b.n	80035ac <_malloc_r+0x20>
 8003618:	4622      	mov	r2, r4
 800361a:	6864      	ldr	r4, [r4, #4]
 800361c:	e7cc      	b.n	80035b8 <_malloc_r+0x2c>
 800361e:	1cc4      	adds	r4, r0, #3
 8003620:	f024 0403 	bic.w	r4, r4, #3
 8003624:	42a0      	cmp	r0, r4
 8003626:	d0e3      	beq.n	80035f0 <_malloc_r+0x64>
 8003628:	1a21      	subs	r1, r4, r0
 800362a:	4630      	mov	r0, r6
 800362c:	f000 ff96 	bl	800455c <_sbrk_r>
 8003630:	3001      	adds	r0, #1
 8003632:	d1dd      	bne.n	80035f0 <_malloc_r+0x64>
 8003634:	e7cf      	b.n	80035d6 <_malloc_r+0x4a>
 8003636:	bf00      	nop
 8003638:	20000d48 	.word	0x20000d48
 800363c:	20000d4c 	.word	0x20000d4c

08003640 <__cvt>:
 8003640:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003644:	b088      	sub	sp, #32
 8003646:	2b00      	cmp	r3, #0
 8003648:	461f      	mov	r7, r3
 800364a:	4614      	mov	r4, r2
 800364c:	bfb8      	it	lt
 800364e:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 8003652:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8003654:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8003656:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
 800365a:	bfb6      	itet	lt
 800365c:	461f      	movlt	r7, r3
 800365e:	2300      	movge	r3, #0
 8003660:	232d      	movlt	r3, #45	; 0x2d
 8003662:	7013      	strb	r3, [r2, #0]
 8003664:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8003666:	f023 0820 	bic.w	r8, r3, #32
 800366a:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800366e:	d005      	beq.n	800367c <__cvt+0x3c>
 8003670:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 8003674:	d100      	bne.n	8003678 <__cvt+0x38>
 8003676:	3501      	adds	r5, #1
 8003678:	2302      	movs	r3, #2
 800367a:	e000      	b.n	800367e <__cvt+0x3e>
 800367c:	2303      	movs	r3, #3
 800367e:	aa07      	add	r2, sp, #28
 8003680:	9204      	str	r2, [sp, #16]
 8003682:	aa06      	add	r2, sp, #24
 8003684:	e9cd a202 	strd	sl, r2, [sp, #8]
 8003688:	e9cd 3500 	strd	r3, r5, [sp]
 800368c:	4622      	mov	r2, r4
 800368e:	463b      	mov	r3, r7
 8003690:	f002 f976 	bl	8005980 <_dtoa_r>
 8003694:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8003698:	4606      	mov	r6, r0
 800369a:	d102      	bne.n	80036a2 <__cvt+0x62>
 800369c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800369e:	07db      	lsls	r3, r3, #31
 80036a0:	d522      	bpl.n	80036e8 <__cvt+0xa8>
 80036a2:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80036a6:	eb06 0905 	add.w	r9, r6, r5
 80036aa:	d110      	bne.n	80036ce <__cvt+0x8e>
 80036ac:	7833      	ldrb	r3, [r6, #0]
 80036ae:	2b30      	cmp	r3, #48	; 0x30
 80036b0:	d10a      	bne.n	80036c8 <__cvt+0x88>
 80036b2:	2200      	movs	r2, #0
 80036b4:	2300      	movs	r3, #0
 80036b6:	4620      	mov	r0, r4
 80036b8:	4639      	mov	r1, r7
 80036ba:	f7fd fa2f 	bl	8000b1c <__aeabi_dcmpeq>
 80036be:	b918      	cbnz	r0, 80036c8 <__cvt+0x88>
 80036c0:	f1c5 0501 	rsb	r5, r5, #1
 80036c4:	f8ca 5000 	str.w	r5, [sl]
 80036c8:	f8da 3000 	ldr.w	r3, [sl]
 80036cc:	4499      	add	r9, r3
 80036ce:	2200      	movs	r2, #0
 80036d0:	2300      	movs	r3, #0
 80036d2:	4620      	mov	r0, r4
 80036d4:	4639      	mov	r1, r7
 80036d6:	f7fd fa21 	bl	8000b1c <__aeabi_dcmpeq>
 80036da:	b108      	cbz	r0, 80036e0 <__cvt+0xa0>
 80036dc:	f8cd 901c 	str.w	r9, [sp, #28]
 80036e0:	2230      	movs	r2, #48	; 0x30
 80036e2:	9b07      	ldr	r3, [sp, #28]
 80036e4:	454b      	cmp	r3, r9
 80036e6:	d307      	bcc.n	80036f8 <__cvt+0xb8>
 80036e8:	9b07      	ldr	r3, [sp, #28]
 80036ea:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80036ec:	1b9b      	subs	r3, r3, r6
 80036ee:	4630      	mov	r0, r6
 80036f0:	6013      	str	r3, [r2, #0]
 80036f2:	b008      	add	sp, #32
 80036f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80036f8:	1c59      	adds	r1, r3, #1
 80036fa:	9107      	str	r1, [sp, #28]
 80036fc:	701a      	strb	r2, [r3, #0]
 80036fe:	e7f0      	b.n	80036e2 <__cvt+0xa2>

08003700 <__exponent>:
 8003700:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003702:	4603      	mov	r3, r0
 8003704:	2900      	cmp	r1, #0
 8003706:	bfb8      	it	lt
 8003708:	4249      	neglt	r1, r1
 800370a:	f803 2b02 	strb.w	r2, [r3], #2
 800370e:	bfb4      	ite	lt
 8003710:	222d      	movlt	r2, #45	; 0x2d
 8003712:	222b      	movge	r2, #43	; 0x2b
 8003714:	2909      	cmp	r1, #9
 8003716:	7042      	strb	r2, [r0, #1]
 8003718:	dd2a      	ble.n	8003770 <__exponent+0x70>
 800371a:	f10d 0407 	add.w	r4, sp, #7
 800371e:	46a4      	mov	ip, r4
 8003720:	270a      	movs	r7, #10
 8003722:	46a6      	mov	lr, r4
 8003724:	460a      	mov	r2, r1
 8003726:	fb91 f6f7 	sdiv	r6, r1, r7
 800372a:	fb07 1516 	mls	r5, r7, r6, r1
 800372e:	3530      	adds	r5, #48	; 0x30
 8003730:	2a63      	cmp	r2, #99	; 0x63
 8003732:	f104 34ff 	add.w	r4, r4, #4294967295
 8003736:	f80e 5c01 	strb.w	r5, [lr, #-1]
 800373a:	4631      	mov	r1, r6
 800373c:	dcf1      	bgt.n	8003722 <__exponent+0x22>
 800373e:	3130      	adds	r1, #48	; 0x30
 8003740:	f1ae 0502 	sub.w	r5, lr, #2
 8003744:	f804 1c01 	strb.w	r1, [r4, #-1]
 8003748:	1c44      	adds	r4, r0, #1
 800374a:	4629      	mov	r1, r5
 800374c:	4561      	cmp	r1, ip
 800374e:	d30a      	bcc.n	8003766 <__exponent+0x66>
 8003750:	f10d 0209 	add.w	r2, sp, #9
 8003754:	eba2 020e 	sub.w	r2, r2, lr
 8003758:	4565      	cmp	r5, ip
 800375a:	bf88      	it	hi
 800375c:	2200      	movhi	r2, #0
 800375e:	4413      	add	r3, r2
 8003760:	1a18      	subs	r0, r3, r0
 8003762:	b003      	add	sp, #12
 8003764:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003766:	f811 2b01 	ldrb.w	r2, [r1], #1
 800376a:	f804 2f01 	strb.w	r2, [r4, #1]!
 800376e:	e7ed      	b.n	800374c <__exponent+0x4c>
 8003770:	2330      	movs	r3, #48	; 0x30
 8003772:	3130      	adds	r1, #48	; 0x30
 8003774:	7083      	strb	r3, [r0, #2]
 8003776:	70c1      	strb	r1, [r0, #3]
 8003778:	1d03      	adds	r3, r0, #4
 800377a:	e7f1      	b.n	8003760 <__exponent+0x60>

0800377c <_printf_float>:
 800377c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003780:	b091      	sub	sp, #68	; 0x44
 8003782:	460c      	mov	r4, r1
 8003784:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 8003788:	4616      	mov	r6, r2
 800378a:	461f      	mov	r7, r3
 800378c:	4605      	mov	r5, r0
 800378e:	f003 fb2f 	bl	8006df0 <_localeconv_r>
 8003792:	6803      	ldr	r3, [r0, #0]
 8003794:	9309      	str	r3, [sp, #36]	; 0x24
 8003796:	4618      	mov	r0, r3
 8003798:	f7fc fd94 	bl	80002c4 <strlen>
 800379c:	2300      	movs	r3, #0
 800379e:	930e      	str	r3, [sp, #56]	; 0x38
 80037a0:	f8d8 3000 	ldr.w	r3, [r8]
 80037a4:	900a      	str	r0, [sp, #40]	; 0x28
 80037a6:	3307      	adds	r3, #7
 80037a8:	f023 0307 	bic.w	r3, r3, #7
 80037ac:	f103 0208 	add.w	r2, r3, #8
 80037b0:	f894 9018 	ldrb.w	r9, [r4, #24]
 80037b4:	f8d4 b000 	ldr.w	fp, [r4]
 80037b8:	f8c8 2000 	str.w	r2, [r8]
 80037bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80037c0:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 80037c4:	e9d4 8a12 	ldrd	r8, sl, [r4, #72]	; 0x48
 80037c8:	f02a 4300 	bic.w	r3, sl, #2147483648	; 0x80000000
 80037cc:	930b      	str	r3, [sp, #44]	; 0x2c
 80037ce:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80037d0:	4b9c      	ldr	r3, [pc, #624]	; (8003a44 <_printf_float+0x2c8>)
 80037d2:	f04f 32ff 	mov.w	r2, #4294967295
 80037d6:	4640      	mov	r0, r8
 80037d8:	f7fd f9d2 	bl	8000b80 <__aeabi_dcmpun>
 80037dc:	bb70      	cbnz	r0, 800383c <_printf_float+0xc0>
 80037de:	4b99      	ldr	r3, [pc, #612]	; (8003a44 <_printf_float+0x2c8>)
 80037e0:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80037e2:	f04f 32ff 	mov.w	r2, #4294967295
 80037e6:	4640      	mov	r0, r8
 80037e8:	f7fd f9ac 	bl	8000b44 <__aeabi_dcmple>
 80037ec:	bb30      	cbnz	r0, 800383c <_printf_float+0xc0>
 80037ee:	2200      	movs	r2, #0
 80037f0:	2300      	movs	r3, #0
 80037f2:	4640      	mov	r0, r8
 80037f4:	4651      	mov	r1, sl
 80037f6:	f7fd f99b 	bl	8000b30 <__aeabi_dcmplt>
 80037fa:	b110      	cbz	r0, 8003802 <_printf_float+0x86>
 80037fc:	232d      	movs	r3, #45	; 0x2d
 80037fe:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8003802:	4b91      	ldr	r3, [pc, #580]	; (8003a48 <_printf_float+0x2cc>)
 8003804:	4891      	ldr	r0, [pc, #580]	; (8003a4c <_printf_float+0x2d0>)
 8003806:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
 800380a:	bf94      	ite	ls
 800380c:	4698      	movls	r8, r3
 800380e:	4680      	movhi	r8, r0
 8003810:	2303      	movs	r3, #3
 8003812:	6123      	str	r3, [r4, #16]
 8003814:	f02b 0304 	bic.w	r3, fp, #4
 8003818:	6023      	str	r3, [r4, #0]
 800381a:	f04f 0a00 	mov.w	sl, #0
 800381e:	9700      	str	r7, [sp, #0]
 8003820:	4633      	mov	r3, r6
 8003822:	aa0f      	add	r2, sp, #60	; 0x3c
 8003824:	4621      	mov	r1, r4
 8003826:	4628      	mov	r0, r5
 8003828:	f000 f9d2 	bl	8003bd0 <_printf_common>
 800382c:	3001      	adds	r0, #1
 800382e:	f040 808f 	bne.w	8003950 <_printf_float+0x1d4>
 8003832:	f04f 30ff 	mov.w	r0, #4294967295
 8003836:	b011      	add	sp, #68	; 0x44
 8003838:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800383c:	4642      	mov	r2, r8
 800383e:	4653      	mov	r3, sl
 8003840:	4640      	mov	r0, r8
 8003842:	4651      	mov	r1, sl
 8003844:	f7fd f99c 	bl	8000b80 <__aeabi_dcmpun>
 8003848:	b140      	cbz	r0, 800385c <_printf_float+0xe0>
 800384a:	f1ba 0f00 	cmp.w	sl, #0
 800384e:	bfbc      	itt	lt
 8003850:	232d      	movlt	r3, #45	; 0x2d
 8003852:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 8003856:	487e      	ldr	r0, [pc, #504]	; (8003a50 <_printf_float+0x2d4>)
 8003858:	4b7e      	ldr	r3, [pc, #504]	; (8003a54 <_printf_float+0x2d8>)
 800385a:	e7d4      	b.n	8003806 <_printf_float+0x8a>
 800385c:	6863      	ldr	r3, [r4, #4]
 800385e:	1c5a      	adds	r2, r3, #1
 8003860:	f009 01df 	and.w	r1, r9, #223	; 0xdf
 8003864:	d142      	bne.n	80038ec <_printf_float+0x170>
 8003866:	2306      	movs	r3, #6
 8003868:	6063      	str	r3, [r4, #4]
 800386a:	2200      	movs	r2, #0
 800386c:	9206      	str	r2, [sp, #24]
 800386e:	aa0e      	add	r2, sp, #56	; 0x38
 8003870:	e9cd 9204 	strd	r9, r2, [sp, #16]
 8003874:	aa0d      	add	r2, sp, #52	; 0x34
 8003876:	f44b 6380 	orr.w	r3, fp, #1024	; 0x400
 800387a:	9203      	str	r2, [sp, #12]
 800387c:	f10d 0233 	add.w	r2, sp, #51	; 0x33
 8003880:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8003884:	6023      	str	r3, [r4, #0]
 8003886:	6863      	ldr	r3, [r4, #4]
 8003888:	9300      	str	r3, [sp, #0]
 800388a:	4642      	mov	r2, r8
 800388c:	4653      	mov	r3, sl
 800388e:	4628      	mov	r0, r5
 8003890:	910b      	str	r1, [sp, #44]	; 0x2c
 8003892:	f7ff fed5 	bl	8003640 <__cvt>
 8003896:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8003898:	2947      	cmp	r1, #71	; 0x47
 800389a:	4680      	mov	r8, r0
 800389c:	990d      	ldr	r1, [sp, #52]	; 0x34
 800389e:	d108      	bne.n	80038b2 <_printf_float+0x136>
 80038a0:	1cc8      	adds	r0, r1, #3
 80038a2:	db02      	blt.n	80038aa <_printf_float+0x12e>
 80038a4:	6863      	ldr	r3, [r4, #4]
 80038a6:	4299      	cmp	r1, r3
 80038a8:	dd40      	ble.n	800392c <_printf_float+0x1b0>
 80038aa:	f1a9 0902 	sub.w	r9, r9, #2
 80038ae:	fa5f f989 	uxtb.w	r9, r9
 80038b2:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 80038b6:	d81f      	bhi.n	80038f8 <_printf_float+0x17c>
 80038b8:	3901      	subs	r1, #1
 80038ba:	464a      	mov	r2, r9
 80038bc:	f104 0050 	add.w	r0, r4, #80	; 0x50
 80038c0:	910d      	str	r1, [sp, #52]	; 0x34
 80038c2:	f7ff ff1d 	bl	8003700 <__exponent>
 80038c6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80038c8:	1813      	adds	r3, r2, r0
 80038ca:	2a01      	cmp	r2, #1
 80038cc:	4682      	mov	sl, r0
 80038ce:	6123      	str	r3, [r4, #16]
 80038d0:	dc02      	bgt.n	80038d8 <_printf_float+0x15c>
 80038d2:	6822      	ldr	r2, [r4, #0]
 80038d4:	07d2      	lsls	r2, r2, #31
 80038d6:	d501      	bpl.n	80038dc <_printf_float+0x160>
 80038d8:	3301      	adds	r3, #1
 80038da:	6123      	str	r3, [r4, #16]
 80038dc:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 80038e0:	2b00      	cmp	r3, #0
 80038e2:	d09c      	beq.n	800381e <_printf_float+0xa2>
 80038e4:	232d      	movs	r3, #45	; 0x2d
 80038e6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80038ea:	e798      	b.n	800381e <_printf_float+0xa2>
 80038ec:	2947      	cmp	r1, #71	; 0x47
 80038ee:	d1bc      	bne.n	800386a <_printf_float+0xee>
 80038f0:	2b00      	cmp	r3, #0
 80038f2:	d1ba      	bne.n	800386a <_printf_float+0xee>
 80038f4:	2301      	movs	r3, #1
 80038f6:	e7b7      	b.n	8003868 <_printf_float+0xec>
 80038f8:	f1b9 0f66 	cmp.w	r9, #102	; 0x66
 80038fc:	d118      	bne.n	8003930 <_printf_float+0x1b4>
 80038fe:	2900      	cmp	r1, #0
 8003900:	6863      	ldr	r3, [r4, #4]
 8003902:	dd0b      	ble.n	800391c <_printf_float+0x1a0>
 8003904:	6121      	str	r1, [r4, #16]
 8003906:	b913      	cbnz	r3, 800390e <_printf_float+0x192>
 8003908:	6822      	ldr	r2, [r4, #0]
 800390a:	07d0      	lsls	r0, r2, #31
 800390c:	d502      	bpl.n	8003914 <_printf_float+0x198>
 800390e:	3301      	adds	r3, #1
 8003910:	440b      	add	r3, r1
 8003912:	6123      	str	r3, [r4, #16]
 8003914:	65a1      	str	r1, [r4, #88]	; 0x58
 8003916:	f04f 0a00 	mov.w	sl, #0
 800391a:	e7df      	b.n	80038dc <_printf_float+0x160>
 800391c:	b913      	cbnz	r3, 8003924 <_printf_float+0x1a8>
 800391e:	6822      	ldr	r2, [r4, #0]
 8003920:	07d2      	lsls	r2, r2, #31
 8003922:	d501      	bpl.n	8003928 <_printf_float+0x1ac>
 8003924:	3302      	adds	r3, #2
 8003926:	e7f4      	b.n	8003912 <_printf_float+0x196>
 8003928:	2301      	movs	r3, #1
 800392a:	e7f2      	b.n	8003912 <_printf_float+0x196>
 800392c:	f04f 0967 	mov.w	r9, #103	; 0x67
 8003930:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003932:	4299      	cmp	r1, r3
 8003934:	db05      	blt.n	8003942 <_printf_float+0x1c6>
 8003936:	6823      	ldr	r3, [r4, #0]
 8003938:	6121      	str	r1, [r4, #16]
 800393a:	07d8      	lsls	r0, r3, #31
 800393c:	d5ea      	bpl.n	8003914 <_printf_float+0x198>
 800393e:	1c4b      	adds	r3, r1, #1
 8003940:	e7e7      	b.n	8003912 <_printf_float+0x196>
 8003942:	2900      	cmp	r1, #0
 8003944:	bfd4      	ite	le
 8003946:	f1c1 0202 	rsble	r2, r1, #2
 800394a:	2201      	movgt	r2, #1
 800394c:	4413      	add	r3, r2
 800394e:	e7e0      	b.n	8003912 <_printf_float+0x196>
 8003950:	6823      	ldr	r3, [r4, #0]
 8003952:	055a      	lsls	r2, r3, #21
 8003954:	d407      	bmi.n	8003966 <_printf_float+0x1ea>
 8003956:	6923      	ldr	r3, [r4, #16]
 8003958:	4642      	mov	r2, r8
 800395a:	4631      	mov	r1, r6
 800395c:	4628      	mov	r0, r5
 800395e:	47b8      	blx	r7
 8003960:	3001      	adds	r0, #1
 8003962:	d12b      	bne.n	80039bc <_printf_float+0x240>
 8003964:	e765      	b.n	8003832 <_printf_float+0xb6>
 8003966:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 800396a:	f240 80dc 	bls.w	8003b26 <_printf_float+0x3aa>
 800396e:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8003972:	2200      	movs	r2, #0
 8003974:	2300      	movs	r3, #0
 8003976:	f7fd f8d1 	bl	8000b1c <__aeabi_dcmpeq>
 800397a:	2800      	cmp	r0, #0
 800397c:	d033      	beq.n	80039e6 <_printf_float+0x26a>
 800397e:	4a36      	ldr	r2, [pc, #216]	; (8003a58 <_printf_float+0x2dc>)
 8003980:	2301      	movs	r3, #1
 8003982:	4631      	mov	r1, r6
 8003984:	4628      	mov	r0, r5
 8003986:	47b8      	blx	r7
 8003988:	3001      	adds	r0, #1
 800398a:	f43f af52 	beq.w	8003832 <_printf_float+0xb6>
 800398e:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8003992:	429a      	cmp	r2, r3
 8003994:	db02      	blt.n	800399c <_printf_float+0x220>
 8003996:	6823      	ldr	r3, [r4, #0]
 8003998:	07d8      	lsls	r0, r3, #31
 800399a:	d50f      	bpl.n	80039bc <_printf_float+0x240>
 800399c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80039a0:	4631      	mov	r1, r6
 80039a2:	4628      	mov	r0, r5
 80039a4:	47b8      	blx	r7
 80039a6:	3001      	adds	r0, #1
 80039a8:	f43f af43 	beq.w	8003832 <_printf_float+0xb6>
 80039ac:	f04f 0800 	mov.w	r8, #0
 80039b0:	f104 091a 	add.w	r9, r4, #26
 80039b4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80039b6:	3b01      	subs	r3, #1
 80039b8:	4543      	cmp	r3, r8
 80039ba:	dc09      	bgt.n	80039d0 <_printf_float+0x254>
 80039bc:	6823      	ldr	r3, [r4, #0]
 80039be:	079b      	lsls	r3, r3, #30
 80039c0:	f100 8101 	bmi.w	8003bc6 <_printf_float+0x44a>
 80039c4:	68e0      	ldr	r0, [r4, #12]
 80039c6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80039c8:	4298      	cmp	r0, r3
 80039ca:	bfb8      	it	lt
 80039cc:	4618      	movlt	r0, r3
 80039ce:	e732      	b.n	8003836 <_printf_float+0xba>
 80039d0:	2301      	movs	r3, #1
 80039d2:	464a      	mov	r2, r9
 80039d4:	4631      	mov	r1, r6
 80039d6:	4628      	mov	r0, r5
 80039d8:	47b8      	blx	r7
 80039da:	3001      	adds	r0, #1
 80039dc:	f43f af29 	beq.w	8003832 <_printf_float+0xb6>
 80039e0:	f108 0801 	add.w	r8, r8, #1
 80039e4:	e7e6      	b.n	80039b4 <_printf_float+0x238>
 80039e6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80039e8:	2b00      	cmp	r3, #0
 80039ea:	dc37      	bgt.n	8003a5c <_printf_float+0x2e0>
 80039ec:	4a1a      	ldr	r2, [pc, #104]	; (8003a58 <_printf_float+0x2dc>)
 80039ee:	2301      	movs	r3, #1
 80039f0:	4631      	mov	r1, r6
 80039f2:	4628      	mov	r0, r5
 80039f4:	47b8      	blx	r7
 80039f6:	3001      	adds	r0, #1
 80039f8:	f43f af1b 	beq.w	8003832 <_printf_float+0xb6>
 80039fc:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8003a00:	4313      	orrs	r3, r2
 8003a02:	d102      	bne.n	8003a0a <_printf_float+0x28e>
 8003a04:	6823      	ldr	r3, [r4, #0]
 8003a06:	07d9      	lsls	r1, r3, #31
 8003a08:	d5d8      	bpl.n	80039bc <_printf_float+0x240>
 8003a0a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8003a0e:	4631      	mov	r1, r6
 8003a10:	4628      	mov	r0, r5
 8003a12:	47b8      	blx	r7
 8003a14:	3001      	adds	r0, #1
 8003a16:	f43f af0c 	beq.w	8003832 <_printf_float+0xb6>
 8003a1a:	f04f 0900 	mov.w	r9, #0
 8003a1e:	f104 0a1a 	add.w	sl, r4, #26
 8003a22:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003a24:	425b      	negs	r3, r3
 8003a26:	454b      	cmp	r3, r9
 8003a28:	dc01      	bgt.n	8003a2e <_printf_float+0x2b2>
 8003a2a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003a2c:	e794      	b.n	8003958 <_printf_float+0x1dc>
 8003a2e:	2301      	movs	r3, #1
 8003a30:	4652      	mov	r2, sl
 8003a32:	4631      	mov	r1, r6
 8003a34:	4628      	mov	r0, r5
 8003a36:	47b8      	blx	r7
 8003a38:	3001      	adds	r0, #1
 8003a3a:	f43f aefa 	beq.w	8003832 <_printf_float+0xb6>
 8003a3e:	f109 0901 	add.w	r9, r9, #1
 8003a42:	e7ee      	b.n	8003a22 <_printf_float+0x2a6>
 8003a44:	7fefffff 	.word	0x7fefffff
 8003a48:	0800a458 	.word	0x0800a458
 8003a4c:	0800a45c 	.word	0x0800a45c
 8003a50:	0800a464 	.word	0x0800a464
 8003a54:	0800a460 	.word	0x0800a460
 8003a58:	0800a901 	.word	0x0800a901
 8003a5c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8003a5e:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8003a60:	429a      	cmp	r2, r3
 8003a62:	bfa8      	it	ge
 8003a64:	461a      	movge	r2, r3
 8003a66:	2a00      	cmp	r2, #0
 8003a68:	4691      	mov	r9, r2
 8003a6a:	dc37      	bgt.n	8003adc <_printf_float+0x360>
 8003a6c:	f04f 0b00 	mov.w	fp, #0
 8003a70:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8003a74:	f104 021a 	add.w	r2, r4, #26
 8003a78:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
 8003a7c:	ebaa 0309 	sub.w	r3, sl, r9
 8003a80:	455b      	cmp	r3, fp
 8003a82:	dc33      	bgt.n	8003aec <_printf_float+0x370>
 8003a84:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8003a88:	429a      	cmp	r2, r3
 8003a8a:	db3b      	blt.n	8003b04 <_printf_float+0x388>
 8003a8c:	6823      	ldr	r3, [r4, #0]
 8003a8e:	07da      	lsls	r2, r3, #31
 8003a90:	d438      	bmi.n	8003b04 <_printf_float+0x388>
 8003a92:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8003a94:	990d      	ldr	r1, [sp, #52]	; 0x34
 8003a96:	eba2 030a 	sub.w	r3, r2, sl
 8003a9a:	eba2 0901 	sub.w	r9, r2, r1
 8003a9e:	4599      	cmp	r9, r3
 8003aa0:	bfa8      	it	ge
 8003aa2:	4699      	movge	r9, r3
 8003aa4:	f1b9 0f00 	cmp.w	r9, #0
 8003aa8:	dc34      	bgt.n	8003b14 <_printf_float+0x398>
 8003aaa:	f04f 0800 	mov.w	r8, #0
 8003aae:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8003ab2:	f104 0a1a 	add.w	sl, r4, #26
 8003ab6:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8003aba:	1a9b      	subs	r3, r3, r2
 8003abc:	eba3 0309 	sub.w	r3, r3, r9
 8003ac0:	4543      	cmp	r3, r8
 8003ac2:	f77f af7b 	ble.w	80039bc <_printf_float+0x240>
 8003ac6:	2301      	movs	r3, #1
 8003ac8:	4652      	mov	r2, sl
 8003aca:	4631      	mov	r1, r6
 8003acc:	4628      	mov	r0, r5
 8003ace:	47b8      	blx	r7
 8003ad0:	3001      	adds	r0, #1
 8003ad2:	f43f aeae 	beq.w	8003832 <_printf_float+0xb6>
 8003ad6:	f108 0801 	add.w	r8, r8, #1
 8003ada:	e7ec      	b.n	8003ab6 <_printf_float+0x33a>
 8003adc:	4613      	mov	r3, r2
 8003ade:	4631      	mov	r1, r6
 8003ae0:	4642      	mov	r2, r8
 8003ae2:	4628      	mov	r0, r5
 8003ae4:	47b8      	blx	r7
 8003ae6:	3001      	adds	r0, #1
 8003ae8:	d1c0      	bne.n	8003a6c <_printf_float+0x2f0>
 8003aea:	e6a2      	b.n	8003832 <_printf_float+0xb6>
 8003aec:	2301      	movs	r3, #1
 8003aee:	4631      	mov	r1, r6
 8003af0:	4628      	mov	r0, r5
 8003af2:	920b      	str	r2, [sp, #44]	; 0x2c
 8003af4:	47b8      	blx	r7
 8003af6:	3001      	adds	r0, #1
 8003af8:	f43f ae9b 	beq.w	8003832 <_printf_float+0xb6>
 8003afc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8003afe:	f10b 0b01 	add.w	fp, fp, #1
 8003b02:	e7b9      	b.n	8003a78 <_printf_float+0x2fc>
 8003b04:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8003b08:	4631      	mov	r1, r6
 8003b0a:	4628      	mov	r0, r5
 8003b0c:	47b8      	blx	r7
 8003b0e:	3001      	adds	r0, #1
 8003b10:	d1bf      	bne.n	8003a92 <_printf_float+0x316>
 8003b12:	e68e      	b.n	8003832 <_printf_float+0xb6>
 8003b14:	464b      	mov	r3, r9
 8003b16:	eb08 020a 	add.w	r2, r8, sl
 8003b1a:	4631      	mov	r1, r6
 8003b1c:	4628      	mov	r0, r5
 8003b1e:	47b8      	blx	r7
 8003b20:	3001      	adds	r0, #1
 8003b22:	d1c2      	bne.n	8003aaa <_printf_float+0x32e>
 8003b24:	e685      	b.n	8003832 <_printf_float+0xb6>
 8003b26:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8003b28:	2a01      	cmp	r2, #1
 8003b2a:	dc01      	bgt.n	8003b30 <_printf_float+0x3b4>
 8003b2c:	07db      	lsls	r3, r3, #31
 8003b2e:	d537      	bpl.n	8003ba0 <_printf_float+0x424>
 8003b30:	2301      	movs	r3, #1
 8003b32:	4642      	mov	r2, r8
 8003b34:	4631      	mov	r1, r6
 8003b36:	4628      	mov	r0, r5
 8003b38:	47b8      	blx	r7
 8003b3a:	3001      	adds	r0, #1
 8003b3c:	f43f ae79 	beq.w	8003832 <_printf_float+0xb6>
 8003b40:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8003b44:	4631      	mov	r1, r6
 8003b46:	4628      	mov	r0, r5
 8003b48:	47b8      	blx	r7
 8003b4a:	3001      	adds	r0, #1
 8003b4c:	f43f ae71 	beq.w	8003832 <_printf_float+0xb6>
 8003b50:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8003b54:	2200      	movs	r2, #0
 8003b56:	2300      	movs	r3, #0
 8003b58:	f7fc ffe0 	bl	8000b1c <__aeabi_dcmpeq>
 8003b5c:	b9d8      	cbnz	r0, 8003b96 <_printf_float+0x41a>
 8003b5e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003b60:	f108 0201 	add.w	r2, r8, #1
 8003b64:	3b01      	subs	r3, #1
 8003b66:	4631      	mov	r1, r6
 8003b68:	4628      	mov	r0, r5
 8003b6a:	47b8      	blx	r7
 8003b6c:	3001      	adds	r0, #1
 8003b6e:	d10e      	bne.n	8003b8e <_printf_float+0x412>
 8003b70:	e65f      	b.n	8003832 <_printf_float+0xb6>
 8003b72:	2301      	movs	r3, #1
 8003b74:	464a      	mov	r2, r9
 8003b76:	4631      	mov	r1, r6
 8003b78:	4628      	mov	r0, r5
 8003b7a:	47b8      	blx	r7
 8003b7c:	3001      	adds	r0, #1
 8003b7e:	f43f ae58 	beq.w	8003832 <_printf_float+0xb6>
 8003b82:	f108 0801 	add.w	r8, r8, #1
 8003b86:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003b88:	3b01      	subs	r3, #1
 8003b8a:	4543      	cmp	r3, r8
 8003b8c:	dcf1      	bgt.n	8003b72 <_printf_float+0x3f6>
 8003b8e:	4653      	mov	r3, sl
 8003b90:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8003b94:	e6e1      	b.n	800395a <_printf_float+0x1de>
 8003b96:	f04f 0800 	mov.w	r8, #0
 8003b9a:	f104 091a 	add.w	r9, r4, #26
 8003b9e:	e7f2      	b.n	8003b86 <_printf_float+0x40a>
 8003ba0:	2301      	movs	r3, #1
 8003ba2:	4642      	mov	r2, r8
 8003ba4:	e7df      	b.n	8003b66 <_printf_float+0x3ea>
 8003ba6:	2301      	movs	r3, #1
 8003ba8:	464a      	mov	r2, r9
 8003baa:	4631      	mov	r1, r6
 8003bac:	4628      	mov	r0, r5
 8003bae:	47b8      	blx	r7
 8003bb0:	3001      	adds	r0, #1
 8003bb2:	f43f ae3e 	beq.w	8003832 <_printf_float+0xb6>
 8003bb6:	f108 0801 	add.w	r8, r8, #1
 8003bba:	68e3      	ldr	r3, [r4, #12]
 8003bbc:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8003bbe:	1a5b      	subs	r3, r3, r1
 8003bc0:	4543      	cmp	r3, r8
 8003bc2:	dcf0      	bgt.n	8003ba6 <_printf_float+0x42a>
 8003bc4:	e6fe      	b.n	80039c4 <_printf_float+0x248>
 8003bc6:	f04f 0800 	mov.w	r8, #0
 8003bca:	f104 0919 	add.w	r9, r4, #25
 8003bce:	e7f4      	b.n	8003bba <_printf_float+0x43e>

08003bd0 <_printf_common>:
 8003bd0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003bd4:	4616      	mov	r6, r2
 8003bd6:	4699      	mov	r9, r3
 8003bd8:	688a      	ldr	r2, [r1, #8]
 8003bda:	690b      	ldr	r3, [r1, #16]
 8003bdc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8003be0:	4293      	cmp	r3, r2
 8003be2:	bfb8      	it	lt
 8003be4:	4613      	movlt	r3, r2
 8003be6:	6033      	str	r3, [r6, #0]
 8003be8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8003bec:	4607      	mov	r7, r0
 8003bee:	460c      	mov	r4, r1
 8003bf0:	b10a      	cbz	r2, 8003bf6 <_printf_common+0x26>
 8003bf2:	3301      	adds	r3, #1
 8003bf4:	6033      	str	r3, [r6, #0]
 8003bf6:	6823      	ldr	r3, [r4, #0]
 8003bf8:	0699      	lsls	r1, r3, #26
 8003bfa:	bf42      	ittt	mi
 8003bfc:	6833      	ldrmi	r3, [r6, #0]
 8003bfe:	3302      	addmi	r3, #2
 8003c00:	6033      	strmi	r3, [r6, #0]
 8003c02:	6825      	ldr	r5, [r4, #0]
 8003c04:	f015 0506 	ands.w	r5, r5, #6
 8003c08:	d106      	bne.n	8003c18 <_printf_common+0x48>
 8003c0a:	f104 0a19 	add.w	sl, r4, #25
 8003c0e:	68e3      	ldr	r3, [r4, #12]
 8003c10:	6832      	ldr	r2, [r6, #0]
 8003c12:	1a9b      	subs	r3, r3, r2
 8003c14:	42ab      	cmp	r3, r5
 8003c16:	dc26      	bgt.n	8003c66 <_printf_common+0x96>
 8003c18:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8003c1c:	1e13      	subs	r3, r2, #0
 8003c1e:	6822      	ldr	r2, [r4, #0]
 8003c20:	bf18      	it	ne
 8003c22:	2301      	movne	r3, #1
 8003c24:	0692      	lsls	r2, r2, #26
 8003c26:	d42b      	bmi.n	8003c80 <_printf_common+0xb0>
 8003c28:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8003c2c:	4649      	mov	r1, r9
 8003c2e:	4638      	mov	r0, r7
 8003c30:	47c0      	blx	r8
 8003c32:	3001      	adds	r0, #1
 8003c34:	d01e      	beq.n	8003c74 <_printf_common+0xa4>
 8003c36:	6823      	ldr	r3, [r4, #0]
 8003c38:	68e5      	ldr	r5, [r4, #12]
 8003c3a:	6832      	ldr	r2, [r6, #0]
 8003c3c:	f003 0306 	and.w	r3, r3, #6
 8003c40:	2b04      	cmp	r3, #4
 8003c42:	bf08      	it	eq
 8003c44:	1aad      	subeq	r5, r5, r2
 8003c46:	68a3      	ldr	r3, [r4, #8]
 8003c48:	6922      	ldr	r2, [r4, #16]
 8003c4a:	bf0c      	ite	eq
 8003c4c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8003c50:	2500      	movne	r5, #0
 8003c52:	4293      	cmp	r3, r2
 8003c54:	bfc4      	itt	gt
 8003c56:	1a9b      	subgt	r3, r3, r2
 8003c58:	18ed      	addgt	r5, r5, r3
 8003c5a:	2600      	movs	r6, #0
 8003c5c:	341a      	adds	r4, #26
 8003c5e:	42b5      	cmp	r5, r6
 8003c60:	d11a      	bne.n	8003c98 <_printf_common+0xc8>
 8003c62:	2000      	movs	r0, #0
 8003c64:	e008      	b.n	8003c78 <_printf_common+0xa8>
 8003c66:	2301      	movs	r3, #1
 8003c68:	4652      	mov	r2, sl
 8003c6a:	4649      	mov	r1, r9
 8003c6c:	4638      	mov	r0, r7
 8003c6e:	47c0      	blx	r8
 8003c70:	3001      	adds	r0, #1
 8003c72:	d103      	bne.n	8003c7c <_printf_common+0xac>
 8003c74:	f04f 30ff 	mov.w	r0, #4294967295
 8003c78:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003c7c:	3501      	adds	r5, #1
 8003c7e:	e7c6      	b.n	8003c0e <_printf_common+0x3e>
 8003c80:	18e1      	adds	r1, r4, r3
 8003c82:	1c5a      	adds	r2, r3, #1
 8003c84:	2030      	movs	r0, #48	; 0x30
 8003c86:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8003c8a:	4422      	add	r2, r4
 8003c8c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8003c90:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8003c94:	3302      	adds	r3, #2
 8003c96:	e7c7      	b.n	8003c28 <_printf_common+0x58>
 8003c98:	2301      	movs	r3, #1
 8003c9a:	4622      	mov	r2, r4
 8003c9c:	4649      	mov	r1, r9
 8003c9e:	4638      	mov	r0, r7
 8003ca0:	47c0      	blx	r8
 8003ca2:	3001      	adds	r0, #1
 8003ca4:	d0e6      	beq.n	8003c74 <_printf_common+0xa4>
 8003ca6:	3601      	adds	r6, #1
 8003ca8:	e7d9      	b.n	8003c5e <_printf_common+0x8e>
	...

08003cac <_printf_i>:
 8003cac:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8003cb0:	460c      	mov	r4, r1
 8003cb2:	4691      	mov	r9, r2
 8003cb4:	7e27      	ldrb	r7, [r4, #24]
 8003cb6:	990c      	ldr	r1, [sp, #48]	; 0x30
 8003cb8:	2f78      	cmp	r7, #120	; 0x78
 8003cba:	4680      	mov	r8, r0
 8003cbc:	469a      	mov	sl, r3
 8003cbe:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8003cc2:	d807      	bhi.n	8003cd4 <_printf_i+0x28>
 8003cc4:	2f62      	cmp	r7, #98	; 0x62
 8003cc6:	d80a      	bhi.n	8003cde <_printf_i+0x32>
 8003cc8:	2f00      	cmp	r7, #0
 8003cca:	f000 80d8 	beq.w	8003e7e <_printf_i+0x1d2>
 8003cce:	2f58      	cmp	r7, #88	; 0x58
 8003cd0:	f000 80a3 	beq.w	8003e1a <_printf_i+0x16e>
 8003cd4:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8003cd8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8003cdc:	e03a      	b.n	8003d54 <_printf_i+0xa8>
 8003cde:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8003ce2:	2b15      	cmp	r3, #21
 8003ce4:	d8f6      	bhi.n	8003cd4 <_printf_i+0x28>
 8003ce6:	a001      	add	r0, pc, #4	; (adr r0, 8003cec <_printf_i+0x40>)
 8003ce8:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8003cec:	08003d45 	.word	0x08003d45
 8003cf0:	08003d59 	.word	0x08003d59
 8003cf4:	08003cd5 	.word	0x08003cd5
 8003cf8:	08003cd5 	.word	0x08003cd5
 8003cfc:	08003cd5 	.word	0x08003cd5
 8003d00:	08003cd5 	.word	0x08003cd5
 8003d04:	08003d59 	.word	0x08003d59
 8003d08:	08003cd5 	.word	0x08003cd5
 8003d0c:	08003cd5 	.word	0x08003cd5
 8003d10:	08003cd5 	.word	0x08003cd5
 8003d14:	08003cd5 	.word	0x08003cd5
 8003d18:	08003e65 	.word	0x08003e65
 8003d1c:	08003d89 	.word	0x08003d89
 8003d20:	08003e47 	.word	0x08003e47
 8003d24:	08003cd5 	.word	0x08003cd5
 8003d28:	08003cd5 	.word	0x08003cd5
 8003d2c:	08003e87 	.word	0x08003e87
 8003d30:	08003cd5 	.word	0x08003cd5
 8003d34:	08003d89 	.word	0x08003d89
 8003d38:	08003cd5 	.word	0x08003cd5
 8003d3c:	08003cd5 	.word	0x08003cd5
 8003d40:	08003e4f 	.word	0x08003e4f
 8003d44:	680b      	ldr	r3, [r1, #0]
 8003d46:	1d1a      	adds	r2, r3, #4
 8003d48:	681b      	ldr	r3, [r3, #0]
 8003d4a:	600a      	str	r2, [r1, #0]
 8003d4c:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8003d50:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8003d54:	2301      	movs	r3, #1
 8003d56:	e0a3      	b.n	8003ea0 <_printf_i+0x1f4>
 8003d58:	6825      	ldr	r5, [r4, #0]
 8003d5a:	6808      	ldr	r0, [r1, #0]
 8003d5c:	062e      	lsls	r6, r5, #24
 8003d5e:	f100 0304 	add.w	r3, r0, #4
 8003d62:	d50a      	bpl.n	8003d7a <_printf_i+0xce>
 8003d64:	6805      	ldr	r5, [r0, #0]
 8003d66:	600b      	str	r3, [r1, #0]
 8003d68:	2d00      	cmp	r5, #0
 8003d6a:	da03      	bge.n	8003d74 <_printf_i+0xc8>
 8003d6c:	232d      	movs	r3, #45	; 0x2d
 8003d6e:	426d      	negs	r5, r5
 8003d70:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8003d74:	485e      	ldr	r0, [pc, #376]	; (8003ef0 <_printf_i+0x244>)
 8003d76:	230a      	movs	r3, #10
 8003d78:	e019      	b.n	8003dae <_printf_i+0x102>
 8003d7a:	f015 0f40 	tst.w	r5, #64	; 0x40
 8003d7e:	6805      	ldr	r5, [r0, #0]
 8003d80:	600b      	str	r3, [r1, #0]
 8003d82:	bf18      	it	ne
 8003d84:	b22d      	sxthne	r5, r5
 8003d86:	e7ef      	b.n	8003d68 <_printf_i+0xbc>
 8003d88:	680b      	ldr	r3, [r1, #0]
 8003d8a:	6825      	ldr	r5, [r4, #0]
 8003d8c:	1d18      	adds	r0, r3, #4
 8003d8e:	6008      	str	r0, [r1, #0]
 8003d90:	0628      	lsls	r0, r5, #24
 8003d92:	d501      	bpl.n	8003d98 <_printf_i+0xec>
 8003d94:	681d      	ldr	r5, [r3, #0]
 8003d96:	e002      	b.n	8003d9e <_printf_i+0xf2>
 8003d98:	0669      	lsls	r1, r5, #25
 8003d9a:	d5fb      	bpl.n	8003d94 <_printf_i+0xe8>
 8003d9c:	881d      	ldrh	r5, [r3, #0]
 8003d9e:	4854      	ldr	r0, [pc, #336]	; (8003ef0 <_printf_i+0x244>)
 8003da0:	2f6f      	cmp	r7, #111	; 0x6f
 8003da2:	bf0c      	ite	eq
 8003da4:	2308      	moveq	r3, #8
 8003da6:	230a      	movne	r3, #10
 8003da8:	2100      	movs	r1, #0
 8003daa:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8003dae:	6866      	ldr	r6, [r4, #4]
 8003db0:	60a6      	str	r6, [r4, #8]
 8003db2:	2e00      	cmp	r6, #0
 8003db4:	bfa2      	ittt	ge
 8003db6:	6821      	ldrge	r1, [r4, #0]
 8003db8:	f021 0104 	bicge.w	r1, r1, #4
 8003dbc:	6021      	strge	r1, [r4, #0]
 8003dbe:	b90d      	cbnz	r5, 8003dc4 <_printf_i+0x118>
 8003dc0:	2e00      	cmp	r6, #0
 8003dc2:	d04d      	beq.n	8003e60 <_printf_i+0x1b4>
 8003dc4:	4616      	mov	r6, r2
 8003dc6:	fbb5 f1f3 	udiv	r1, r5, r3
 8003dca:	fb03 5711 	mls	r7, r3, r1, r5
 8003dce:	5dc7      	ldrb	r7, [r0, r7]
 8003dd0:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8003dd4:	462f      	mov	r7, r5
 8003dd6:	42bb      	cmp	r3, r7
 8003dd8:	460d      	mov	r5, r1
 8003dda:	d9f4      	bls.n	8003dc6 <_printf_i+0x11a>
 8003ddc:	2b08      	cmp	r3, #8
 8003dde:	d10b      	bne.n	8003df8 <_printf_i+0x14c>
 8003de0:	6823      	ldr	r3, [r4, #0]
 8003de2:	07df      	lsls	r7, r3, #31
 8003de4:	d508      	bpl.n	8003df8 <_printf_i+0x14c>
 8003de6:	6923      	ldr	r3, [r4, #16]
 8003de8:	6861      	ldr	r1, [r4, #4]
 8003dea:	4299      	cmp	r1, r3
 8003dec:	bfde      	ittt	le
 8003dee:	2330      	movle	r3, #48	; 0x30
 8003df0:	f806 3c01 	strble.w	r3, [r6, #-1]
 8003df4:	f106 36ff 	addle.w	r6, r6, #4294967295
 8003df8:	1b92      	subs	r2, r2, r6
 8003dfa:	6122      	str	r2, [r4, #16]
 8003dfc:	f8cd a000 	str.w	sl, [sp]
 8003e00:	464b      	mov	r3, r9
 8003e02:	aa03      	add	r2, sp, #12
 8003e04:	4621      	mov	r1, r4
 8003e06:	4640      	mov	r0, r8
 8003e08:	f7ff fee2 	bl	8003bd0 <_printf_common>
 8003e0c:	3001      	adds	r0, #1
 8003e0e:	d14c      	bne.n	8003eaa <_printf_i+0x1fe>
 8003e10:	f04f 30ff 	mov.w	r0, #4294967295
 8003e14:	b004      	add	sp, #16
 8003e16:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003e1a:	4835      	ldr	r0, [pc, #212]	; (8003ef0 <_printf_i+0x244>)
 8003e1c:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8003e20:	6823      	ldr	r3, [r4, #0]
 8003e22:	680e      	ldr	r6, [r1, #0]
 8003e24:	061f      	lsls	r7, r3, #24
 8003e26:	f856 5b04 	ldr.w	r5, [r6], #4
 8003e2a:	600e      	str	r6, [r1, #0]
 8003e2c:	d514      	bpl.n	8003e58 <_printf_i+0x1ac>
 8003e2e:	07d9      	lsls	r1, r3, #31
 8003e30:	bf44      	itt	mi
 8003e32:	f043 0320 	orrmi.w	r3, r3, #32
 8003e36:	6023      	strmi	r3, [r4, #0]
 8003e38:	b91d      	cbnz	r5, 8003e42 <_printf_i+0x196>
 8003e3a:	6823      	ldr	r3, [r4, #0]
 8003e3c:	f023 0320 	bic.w	r3, r3, #32
 8003e40:	6023      	str	r3, [r4, #0]
 8003e42:	2310      	movs	r3, #16
 8003e44:	e7b0      	b.n	8003da8 <_printf_i+0xfc>
 8003e46:	6823      	ldr	r3, [r4, #0]
 8003e48:	f043 0320 	orr.w	r3, r3, #32
 8003e4c:	6023      	str	r3, [r4, #0]
 8003e4e:	2378      	movs	r3, #120	; 0x78
 8003e50:	4828      	ldr	r0, [pc, #160]	; (8003ef4 <_printf_i+0x248>)
 8003e52:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8003e56:	e7e3      	b.n	8003e20 <_printf_i+0x174>
 8003e58:	065e      	lsls	r6, r3, #25
 8003e5a:	bf48      	it	mi
 8003e5c:	b2ad      	uxthmi	r5, r5
 8003e5e:	e7e6      	b.n	8003e2e <_printf_i+0x182>
 8003e60:	4616      	mov	r6, r2
 8003e62:	e7bb      	b.n	8003ddc <_printf_i+0x130>
 8003e64:	680b      	ldr	r3, [r1, #0]
 8003e66:	6826      	ldr	r6, [r4, #0]
 8003e68:	6960      	ldr	r0, [r4, #20]
 8003e6a:	1d1d      	adds	r5, r3, #4
 8003e6c:	600d      	str	r5, [r1, #0]
 8003e6e:	0635      	lsls	r5, r6, #24
 8003e70:	681b      	ldr	r3, [r3, #0]
 8003e72:	d501      	bpl.n	8003e78 <_printf_i+0x1cc>
 8003e74:	6018      	str	r0, [r3, #0]
 8003e76:	e002      	b.n	8003e7e <_printf_i+0x1d2>
 8003e78:	0671      	lsls	r1, r6, #25
 8003e7a:	d5fb      	bpl.n	8003e74 <_printf_i+0x1c8>
 8003e7c:	8018      	strh	r0, [r3, #0]
 8003e7e:	2300      	movs	r3, #0
 8003e80:	6123      	str	r3, [r4, #16]
 8003e82:	4616      	mov	r6, r2
 8003e84:	e7ba      	b.n	8003dfc <_printf_i+0x150>
 8003e86:	680b      	ldr	r3, [r1, #0]
 8003e88:	1d1a      	adds	r2, r3, #4
 8003e8a:	600a      	str	r2, [r1, #0]
 8003e8c:	681e      	ldr	r6, [r3, #0]
 8003e8e:	6862      	ldr	r2, [r4, #4]
 8003e90:	2100      	movs	r1, #0
 8003e92:	4630      	mov	r0, r6
 8003e94:	f7fc f9bc 	bl	8000210 <memchr>
 8003e98:	b108      	cbz	r0, 8003e9e <_printf_i+0x1f2>
 8003e9a:	1b80      	subs	r0, r0, r6
 8003e9c:	6060      	str	r0, [r4, #4]
 8003e9e:	6863      	ldr	r3, [r4, #4]
 8003ea0:	6123      	str	r3, [r4, #16]
 8003ea2:	2300      	movs	r3, #0
 8003ea4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8003ea8:	e7a8      	b.n	8003dfc <_printf_i+0x150>
 8003eaa:	6923      	ldr	r3, [r4, #16]
 8003eac:	4632      	mov	r2, r6
 8003eae:	4649      	mov	r1, r9
 8003eb0:	4640      	mov	r0, r8
 8003eb2:	47d0      	blx	sl
 8003eb4:	3001      	adds	r0, #1
 8003eb6:	d0ab      	beq.n	8003e10 <_printf_i+0x164>
 8003eb8:	6823      	ldr	r3, [r4, #0]
 8003eba:	079b      	lsls	r3, r3, #30
 8003ebc:	d413      	bmi.n	8003ee6 <_printf_i+0x23a>
 8003ebe:	68e0      	ldr	r0, [r4, #12]
 8003ec0:	9b03      	ldr	r3, [sp, #12]
 8003ec2:	4298      	cmp	r0, r3
 8003ec4:	bfb8      	it	lt
 8003ec6:	4618      	movlt	r0, r3
 8003ec8:	e7a4      	b.n	8003e14 <_printf_i+0x168>
 8003eca:	2301      	movs	r3, #1
 8003ecc:	4632      	mov	r2, r6
 8003ece:	4649      	mov	r1, r9
 8003ed0:	4640      	mov	r0, r8
 8003ed2:	47d0      	blx	sl
 8003ed4:	3001      	adds	r0, #1
 8003ed6:	d09b      	beq.n	8003e10 <_printf_i+0x164>
 8003ed8:	3501      	adds	r5, #1
 8003eda:	68e3      	ldr	r3, [r4, #12]
 8003edc:	9903      	ldr	r1, [sp, #12]
 8003ede:	1a5b      	subs	r3, r3, r1
 8003ee0:	42ab      	cmp	r3, r5
 8003ee2:	dcf2      	bgt.n	8003eca <_printf_i+0x21e>
 8003ee4:	e7eb      	b.n	8003ebe <_printf_i+0x212>
 8003ee6:	2500      	movs	r5, #0
 8003ee8:	f104 0619 	add.w	r6, r4, #25
 8003eec:	e7f5      	b.n	8003eda <_printf_i+0x22e>
 8003eee:	bf00      	nop
 8003ef0:	0800a468 	.word	0x0800a468
 8003ef4:	0800a479 	.word	0x0800a479

08003ef8 <_scanf_float>:
 8003ef8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003efc:	b087      	sub	sp, #28
 8003efe:	4617      	mov	r7, r2
 8003f00:	9303      	str	r3, [sp, #12]
 8003f02:	688b      	ldr	r3, [r1, #8]
 8003f04:	1e5a      	subs	r2, r3, #1
 8003f06:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 8003f0a:	bf83      	ittte	hi
 8003f0c:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 8003f10:	195b      	addhi	r3, r3, r5
 8003f12:	9302      	strhi	r3, [sp, #8]
 8003f14:	2300      	movls	r3, #0
 8003f16:	bf86      	itte	hi
 8003f18:	f240 135d 	movwhi	r3, #349	; 0x15d
 8003f1c:	608b      	strhi	r3, [r1, #8]
 8003f1e:	9302      	strls	r3, [sp, #8]
 8003f20:	680b      	ldr	r3, [r1, #0]
 8003f22:	468b      	mov	fp, r1
 8003f24:	2500      	movs	r5, #0
 8003f26:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 8003f2a:	f84b 3b1c 	str.w	r3, [fp], #28
 8003f2e:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8003f32:	4680      	mov	r8, r0
 8003f34:	460c      	mov	r4, r1
 8003f36:	465e      	mov	r6, fp
 8003f38:	46aa      	mov	sl, r5
 8003f3a:	46a9      	mov	r9, r5
 8003f3c:	9501      	str	r5, [sp, #4]
 8003f3e:	68a2      	ldr	r2, [r4, #8]
 8003f40:	b152      	cbz	r2, 8003f58 <_scanf_float+0x60>
 8003f42:	683b      	ldr	r3, [r7, #0]
 8003f44:	781b      	ldrb	r3, [r3, #0]
 8003f46:	2b4e      	cmp	r3, #78	; 0x4e
 8003f48:	d864      	bhi.n	8004014 <_scanf_float+0x11c>
 8003f4a:	2b40      	cmp	r3, #64	; 0x40
 8003f4c:	d83c      	bhi.n	8003fc8 <_scanf_float+0xd0>
 8003f4e:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 8003f52:	b2c8      	uxtb	r0, r1
 8003f54:	280e      	cmp	r0, #14
 8003f56:	d93a      	bls.n	8003fce <_scanf_float+0xd6>
 8003f58:	f1b9 0f00 	cmp.w	r9, #0
 8003f5c:	d003      	beq.n	8003f66 <_scanf_float+0x6e>
 8003f5e:	6823      	ldr	r3, [r4, #0]
 8003f60:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8003f64:	6023      	str	r3, [r4, #0]
 8003f66:	f10a 3aff 	add.w	sl, sl, #4294967295
 8003f6a:	f1ba 0f01 	cmp.w	sl, #1
 8003f6e:	f200 8113 	bhi.w	8004198 <_scanf_float+0x2a0>
 8003f72:	455e      	cmp	r6, fp
 8003f74:	f200 8105 	bhi.w	8004182 <_scanf_float+0x28a>
 8003f78:	2501      	movs	r5, #1
 8003f7a:	4628      	mov	r0, r5
 8003f7c:	b007      	add	sp, #28
 8003f7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003f82:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 8003f86:	2a0d      	cmp	r2, #13
 8003f88:	d8e6      	bhi.n	8003f58 <_scanf_float+0x60>
 8003f8a:	a101      	add	r1, pc, #4	; (adr r1, 8003f90 <_scanf_float+0x98>)
 8003f8c:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8003f90:	080040cf 	.word	0x080040cf
 8003f94:	08003f59 	.word	0x08003f59
 8003f98:	08003f59 	.word	0x08003f59
 8003f9c:	08003f59 	.word	0x08003f59
 8003fa0:	0800412f 	.word	0x0800412f
 8003fa4:	08004107 	.word	0x08004107
 8003fa8:	08003f59 	.word	0x08003f59
 8003fac:	08003f59 	.word	0x08003f59
 8003fb0:	080040dd 	.word	0x080040dd
 8003fb4:	08003f59 	.word	0x08003f59
 8003fb8:	08003f59 	.word	0x08003f59
 8003fbc:	08003f59 	.word	0x08003f59
 8003fc0:	08003f59 	.word	0x08003f59
 8003fc4:	08004095 	.word	0x08004095
 8003fc8:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003fcc:	e7db      	b.n	8003f86 <_scanf_float+0x8e>
 8003fce:	290e      	cmp	r1, #14
 8003fd0:	d8c2      	bhi.n	8003f58 <_scanf_float+0x60>
 8003fd2:	a001      	add	r0, pc, #4	; (adr r0, 8003fd8 <_scanf_float+0xe0>)
 8003fd4:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8003fd8:	08004087 	.word	0x08004087
 8003fdc:	08003f59 	.word	0x08003f59
 8003fe0:	08004087 	.word	0x08004087
 8003fe4:	0800411b 	.word	0x0800411b
 8003fe8:	08003f59 	.word	0x08003f59
 8003fec:	08004035 	.word	0x08004035
 8003ff0:	08004071 	.word	0x08004071
 8003ff4:	08004071 	.word	0x08004071
 8003ff8:	08004071 	.word	0x08004071
 8003ffc:	08004071 	.word	0x08004071
 8004000:	08004071 	.word	0x08004071
 8004004:	08004071 	.word	0x08004071
 8004008:	08004071 	.word	0x08004071
 800400c:	08004071 	.word	0x08004071
 8004010:	08004071 	.word	0x08004071
 8004014:	2b6e      	cmp	r3, #110	; 0x6e
 8004016:	d809      	bhi.n	800402c <_scanf_float+0x134>
 8004018:	2b60      	cmp	r3, #96	; 0x60
 800401a:	d8b2      	bhi.n	8003f82 <_scanf_float+0x8a>
 800401c:	2b54      	cmp	r3, #84	; 0x54
 800401e:	d077      	beq.n	8004110 <_scanf_float+0x218>
 8004020:	2b59      	cmp	r3, #89	; 0x59
 8004022:	d199      	bne.n	8003f58 <_scanf_float+0x60>
 8004024:	2d07      	cmp	r5, #7
 8004026:	d197      	bne.n	8003f58 <_scanf_float+0x60>
 8004028:	2508      	movs	r5, #8
 800402a:	e029      	b.n	8004080 <_scanf_float+0x188>
 800402c:	2b74      	cmp	r3, #116	; 0x74
 800402e:	d06f      	beq.n	8004110 <_scanf_float+0x218>
 8004030:	2b79      	cmp	r3, #121	; 0x79
 8004032:	e7f6      	b.n	8004022 <_scanf_float+0x12a>
 8004034:	6821      	ldr	r1, [r4, #0]
 8004036:	05c8      	lsls	r0, r1, #23
 8004038:	d51a      	bpl.n	8004070 <_scanf_float+0x178>
 800403a:	9b02      	ldr	r3, [sp, #8]
 800403c:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8004040:	6021      	str	r1, [r4, #0]
 8004042:	f109 0901 	add.w	r9, r9, #1
 8004046:	b11b      	cbz	r3, 8004050 <_scanf_float+0x158>
 8004048:	3b01      	subs	r3, #1
 800404a:	3201      	adds	r2, #1
 800404c:	9302      	str	r3, [sp, #8]
 800404e:	60a2      	str	r2, [r4, #8]
 8004050:	68a3      	ldr	r3, [r4, #8]
 8004052:	3b01      	subs	r3, #1
 8004054:	60a3      	str	r3, [r4, #8]
 8004056:	6923      	ldr	r3, [r4, #16]
 8004058:	3301      	adds	r3, #1
 800405a:	6123      	str	r3, [r4, #16]
 800405c:	687b      	ldr	r3, [r7, #4]
 800405e:	3b01      	subs	r3, #1
 8004060:	2b00      	cmp	r3, #0
 8004062:	607b      	str	r3, [r7, #4]
 8004064:	f340 8084 	ble.w	8004170 <_scanf_float+0x278>
 8004068:	683b      	ldr	r3, [r7, #0]
 800406a:	3301      	adds	r3, #1
 800406c:	603b      	str	r3, [r7, #0]
 800406e:	e766      	b.n	8003f3e <_scanf_float+0x46>
 8004070:	eb1a 0f05 	cmn.w	sl, r5
 8004074:	f47f af70 	bne.w	8003f58 <_scanf_float+0x60>
 8004078:	6822      	ldr	r2, [r4, #0]
 800407a:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 800407e:	6022      	str	r2, [r4, #0]
 8004080:	f806 3b01 	strb.w	r3, [r6], #1
 8004084:	e7e4      	b.n	8004050 <_scanf_float+0x158>
 8004086:	6822      	ldr	r2, [r4, #0]
 8004088:	0610      	lsls	r0, r2, #24
 800408a:	f57f af65 	bpl.w	8003f58 <_scanf_float+0x60>
 800408e:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8004092:	e7f4      	b.n	800407e <_scanf_float+0x186>
 8004094:	f1ba 0f00 	cmp.w	sl, #0
 8004098:	d10e      	bne.n	80040b8 <_scanf_float+0x1c0>
 800409a:	f1b9 0f00 	cmp.w	r9, #0
 800409e:	d10e      	bne.n	80040be <_scanf_float+0x1c6>
 80040a0:	6822      	ldr	r2, [r4, #0]
 80040a2:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 80040a6:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 80040aa:	d108      	bne.n	80040be <_scanf_float+0x1c6>
 80040ac:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 80040b0:	6022      	str	r2, [r4, #0]
 80040b2:	f04f 0a01 	mov.w	sl, #1
 80040b6:	e7e3      	b.n	8004080 <_scanf_float+0x188>
 80040b8:	f1ba 0f02 	cmp.w	sl, #2
 80040bc:	d055      	beq.n	800416a <_scanf_float+0x272>
 80040be:	2d01      	cmp	r5, #1
 80040c0:	d002      	beq.n	80040c8 <_scanf_float+0x1d0>
 80040c2:	2d04      	cmp	r5, #4
 80040c4:	f47f af48 	bne.w	8003f58 <_scanf_float+0x60>
 80040c8:	3501      	adds	r5, #1
 80040ca:	b2ed      	uxtb	r5, r5
 80040cc:	e7d8      	b.n	8004080 <_scanf_float+0x188>
 80040ce:	f1ba 0f01 	cmp.w	sl, #1
 80040d2:	f47f af41 	bne.w	8003f58 <_scanf_float+0x60>
 80040d6:	f04f 0a02 	mov.w	sl, #2
 80040da:	e7d1      	b.n	8004080 <_scanf_float+0x188>
 80040dc:	b97d      	cbnz	r5, 80040fe <_scanf_float+0x206>
 80040de:	f1b9 0f00 	cmp.w	r9, #0
 80040e2:	f47f af3c 	bne.w	8003f5e <_scanf_float+0x66>
 80040e6:	6822      	ldr	r2, [r4, #0]
 80040e8:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 80040ec:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 80040f0:	f47f af39 	bne.w	8003f66 <_scanf_float+0x6e>
 80040f4:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 80040f8:	6022      	str	r2, [r4, #0]
 80040fa:	2501      	movs	r5, #1
 80040fc:	e7c0      	b.n	8004080 <_scanf_float+0x188>
 80040fe:	2d03      	cmp	r5, #3
 8004100:	d0e2      	beq.n	80040c8 <_scanf_float+0x1d0>
 8004102:	2d05      	cmp	r5, #5
 8004104:	e7de      	b.n	80040c4 <_scanf_float+0x1cc>
 8004106:	2d02      	cmp	r5, #2
 8004108:	f47f af26 	bne.w	8003f58 <_scanf_float+0x60>
 800410c:	2503      	movs	r5, #3
 800410e:	e7b7      	b.n	8004080 <_scanf_float+0x188>
 8004110:	2d06      	cmp	r5, #6
 8004112:	f47f af21 	bne.w	8003f58 <_scanf_float+0x60>
 8004116:	2507      	movs	r5, #7
 8004118:	e7b2      	b.n	8004080 <_scanf_float+0x188>
 800411a:	6822      	ldr	r2, [r4, #0]
 800411c:	0591      	lsls	r1, r2, #22
 800411e:	f57f af1b 	bpl.w	8003f58 <_scanf_float+0x60>
 8004122:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 8004126:	6022      	str	r2, [r4, #0]
 8004128:	f8cd 9004 	str.w	r9, [sp, #4]
 800412c:	e7a8      	b.n	8004080 <_scanf_float+0x188>
 800412e:	6822      	ldr	r2, [r4, #0]
 8004130:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 8004134:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 8004138:	d006      	beq.n	8004148 <_scanf_float+0x250>
 800413a:	0550      	lsls	r0, r2, #21
 800413c:	f57f af0c 	bpl.w	8003f58 <_scanf_float+0x60>
 8004140:	f1b9 0f00 	cmp.w	r9, #0
 8004144:	f43f af0f 	beq.w	8003f66 <_scanf_float+0x6e>
 8004148:	0591      	lsls	r1, r2, #22
 800414a:	bf58      	it	pl
 800414c:	9901      	ldrpl	r1, [sp, #4]
 800414e:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8004152:	bf58      	it	pl
 8004154:	eba9 0101 	subpl.w	r1, r9, r1
 8004158:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 800415c:	bf58      	it	pl
 800415e:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 8004162:	6022      	str	r2, [r4, #0]
 8004164:	f04f 0900 	mov.w	r9, #0
 8004168:	e78a      	b.n	8004080 <_scanf_float+0x188>
 800416a:	f04f 0a03 	mov.w	sl, #3
 800416e:	e787      	b.n	8004080 <_scanf_float+0x188>
 8004170:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8004174:	4639      	mov	r1, r7
 8004176:	4640      	mov	r0, r8
 8004178:	4798      	blx	r3
 800417a:	2800      	cmp	r0, #0
 800417c:	f43f aedf 	beq.w	8003f3e <_scanf_float+0x46>
 8004180:	e6ea      	b.n	8003f58 <_scanf_float+0x60>
 8004182:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8004186:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800418a:	463a      	mov	r2, r7
 800418c:	4640      	mov	r0, r8
 800418e:	4798      	blx	r3
 8004190:	6923      	ldr	r3, [r4, #16]
 8004192:	3b01      	subs	r3, #1
 8004194:	6123      	str	r3, [r4, #16]
 8004196:	e6ec      	b.n	8003f72 <_scanf_float+0x7a>
 8004198:	1e6b      	subs	r3, r5, #1
 800419a:	2b06      	cmp	r3, #6
 800419c:	d825      	bhi.n	80041ea <_scanf_float+0x2f2>
 800419e:	2d02      	cmp	r5, #2
 80041a0:	d836      	bhi.n	8004210 <_scanf_float+0x318>
 80041a2:	455e      	cmp	r6, fp
 80041a4:	f67f aee8 	bls.w	8003f78 <_scanf_float+0x80>
 80041a8:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80041ac:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 80041b0:	463a      	mov	r2, r7
 80041b2:	4640      	mov	r0, r8
 80041b4:	4798      	blx	r3
 80041b6:	6923      	ldr	r3, [r4, #16]
 80041b8:	3b01      	subs	r3, #1
 80041ba:	6123      	str	r3, [r4, #16]
 80041bc:	e7f1      	b.n	80041a2 <_scanf_float+0x2aa>
 80041be:	9802      	ldr	r0, [sp, #8]
 80041c0:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80041c4:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 80041c8:	9002      	str	r0, [sp, #8]
 80041ca:	463a      	mov	r2, r7
 80041cc:	4640      	mov	r0, r8
 80041ce:	4798      	blx	r3
 80041d0:	6923      	ldr	r3, [r4, #16]
 80041d2:	3b01      	subs	r3, #1
 80041d4:	6123      	str	r3, [r4, #16]
 80041d6:	f10a 3aff 	add.w	sl, sl, #4294967295
 80041da:	fa5f fa8a 	uxtb.w	sl, sl
 80041de:	f1ba 0f02 	cmp.w	sl, #2
 80041e2:	d1ec      	bne.n	80041be <_scanf_float+0x2c6>
 80041e4:	3d03      	subs	r5, #3
 80041e6:	b2ed      	uxtb	r5, r5
 80041e8:	1b76      	subs	r6, r6, r5
 80041ea:	6823      	ldr	r3, [r4, #0]
 80041ec:	05da      	lsls	r2, r3, #23
 80041ee:	d52f      	bpl.n	8004250 <_scanf_float+0x358>
 80041f0:	055b      	lsls	r3, r3, #21
 80041f2:	d510      	bpl.n	8004216 <_scanf_float+0x31e>
 80041f4:	455e      	cmp	r6, fp
 80041f6:	f67f aebf 	bls.w	8003f78 <_scanf_float+0x80>
 80041fa:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80041fe:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8004202:	463a      	mov	r2, r7
 8004204:	4640      	mov	r0, r8
 8004206:	4798      	blx	r3
 8004208:	6923      	ldr	r3, [r4, #16]
 800420a:	3b01      	subs	r3, #1
 800420c:	6123      	str	r3, [r4, #16]
 800420e:	e7f1      	b.n	80041f4 <_scanf_float+0x2fc>
 8004210:	46aa      	mov	sl, r5
 8004212:	9602      	str	r6, [sp, #8]
 8004214:	e7df      	b.n	80041d6 <_scanf_float+0x2de>
 8004216:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 800421a:	6923      	ldr	r3, [r4, #16]
 800421c:	2965      	cmp	r1, #101	; 0x65
 800421e:	f103 33ff 	add.w	r3, r3, #4294967295
 8004222:	f106 35ff 	add.w	r5, r6, #4294967295
 8004226:	6123      	str	r3, [r4, #16]
 8004228:	d00c      	beq.n	8004244 <_scanf_float+0x34c>
 800422a:	2945      	cmp	r1, #69	; 0x45
 800422c:	d00a      	beq.n	8004244 <_scanf_float+0x34c>
 800422e:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8004232:	463a      	mov	r2, r7
 8004234:	4640      	mov	r0, r8
 8004236:	4798      	blx	r3
 8004238:	6923      	ldr	r3, [r4, #16]
 800423a:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 800423e:	3b01      	subs	r3, #1
 8004240:	1eb5      	subs	r5, r6, #2
 8004242:	6123      	str	r3, [r4, #16]
 8004244:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8004248:	463a      	mov	r2, r7
 800424a:	4640      	mov	r0, r8
 800424c:	4798      	blx	r3
 800424e:	462e      	mov	r6, r5
 8004250:	6825      	ldr	r5, [r4, #0]
 8004252:	f015 0510 	ands.w	r5, r5, #16
 8004256:	d159      	bne.n	800430c <_scanf_float+0x414>
 8004258:	7035      	strb	r5, [r6, #0]
 800425a:	6823      	ldr	r3, [r4, #0]
 800425c:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8004260:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8004264:	d11c      	bne.n	80042a0 <_scanf_float+0x3a8>
 8004266:	9b01      	ldr	r3, [sp, #4]
 8004268:	454b      	cmp	r3, r9
 800426a:	eba3 0209 	sub.w	r2, r3, r9
 800426e:	d124      	bne.n	80042ba <_scanf_float+0x3c2>
 8004270:	2200      	movs	r2, #0
 8004272:	4659      	mov	r1, fp
 8004274:	4640      	mov	r0, r8
 8004276:	f001 f90b 	bl	8005490 <_strtod_r>
 800427a:	f8d4 c000 	ldr.w	ip, [r4]
 800427e:	9b03      	ldr	r3, [sp, #12]
 8004280:	f01c 0f02 	tst.w	ip, #2
 8004284:	681b      	ldr	r3, [r3, #0]
 8004286:	4606      	mov	r6, r0
 8004288:	460f      	mov	r7, r1
 800428a:	d021      	beq.n	80042d0 <_scanf_float+0x3d8>
 800428c:	9903      	ldr	r1, [sp, #12]
 800428e:	1d1a      	adds	r2, r3, #4
 8004290:	600a      	str	r2, [r1, #0]
 8004292:	681b      	ldr	r3, [r3, #0]
 8004294:	e9c3 6700 	strd	r6, r7, [r3]
 8004298:	68e3      	ldr	r3, [r4, #12]
 800429a:	3301      	adds	r3, #1
 800429c:	60e3      	str	r3, [r4, #12]
 800429e:	e66c      	b.n	8003f7a <_scanf_float+0x82>
 80042a0:	9b04      	ldr	r3, [sp, #16]
 80042a2:	2b00      	cmp	r3, #0
 80042a4:	d0e4      	beq.n	8004270 <_scanf_float+0x378>
 80042a6:	9905      	ldr	r1, [sp, #20]
 80042a8:	230a      	movs	r3, #10
 80042aa:	462a      	mov	r2, r5
 80042ac:	3101      	adds	r1, #1
 80042ae:	4640      	mov	r0, r8
 80042b0:	f001 f9d6 	bl	8005660 <_strtol_r>
 80042b4:	9b04      	ldr	r3, [sp, #16]
 80042b6:	9e05      	ldr	r6, [sp, #20]
 80042b8:	1ac2      	subs	r2, r0, r3
 80042ba:	f204 136f 	addw	r3, r4, #367	; 0x16f
 80042be:	429e      	cmp	r6, r3
 80042c0:	bf28      	it	cs
 80042c2:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 80042c6:	4912      	ldr	r1, [pc, #72]	; (8004310 <_scanf_float+0x418>)
 80042c8:	4630      	mov	r0, r6
 80042ca:	f000 fa21 	bl	8004710 <siprintf>
 80042ce:	e7cf      	b.n	8004270 <_scanf_float+0x378>
 80042d0:	f01c 0f04 	tst.w	ip, #4
 80042d4:	f103 0e04 	add.w	lr, r3, #4
 80042d8:	d003      	beq.n	80042e2 <_scanf_float+0x3ea>
 80042da:	9903      	ldr	r1, [sp, #12]
 80042dc:	f8c1 e000 	str.w	lr, [r1]
 80042e0:	e7d7      	b.n	8004292 <_scanf_float+0x39a>
 80042e2:	9a03      	ldr	r2, [sp, #12]
 80042e4:	f8c2 e000 	str.w	lr, [r2]
 80042e8:	f8d3 8000 	ldr.w	r8, [r3]
 80042ec:	4602      	mov	r2, r0
 80042ee:	460b      	mov	r3, r1
 80042f0:	f7fc fc46 	bl	8000b80 <__aeabi_dcmpun>
 80042f4:	b128      	cbz	r0, 8004302 <_scanf_float+0x40a>
 80042f6:	4807      	ldr	r0, [pc, #28]	; (8004314 <_scanf_float+0x41c>)
 80042f8:	f000 fa06 	bl	8004708 <nanf>
 80042fc:	f8c8 0000 	str.w	r0, [r8]
 8004300:	e7ca      	b.n	8004298 <_scanf_float+0x3a0>
 8004302:	4630      	mov	r0, r6
 8004304:	4639      	mov	r1, r7
 8004306:	f7fc fc99 	bl	8000c3c <__aeabi_d2f>
 800430a:	e7f7      	b.n	80042fc <_scanf_float+0x404>
 800430c:	2500      	movs	r5, #0
 800430e:	e634      	b.n	8003f7a <_scanf_float+0x82>
 8004310:	0800a48a 	.word	0x0800a48a
 8004314:	0800a593 	.word	0x0800a593

08004318 <iprintf>:
 8004318:	b40f      	push	{r0, r1, r2, r3}
 800431a:	4b0a      	ldr	r3, [pc, #40]	; (8004344 <iprintf+0x2c>)
 800431c:	b513      	push	{r0, r1, r4, lr}
 800431e:	681c      	ldr	r4, [r3, #0]
 8004320:	b124      	cbz	r4, 800432c <iprintf+0x14>
 8004322:	69a3      	ldr	r3, [r4, #24]
 8004324:	b913      	cbnz	r3, 800432c <iprintf+0x14>
 8004326:	4620      	mov	r0, r4
 8004328:	f7fe ffcc 	bl	80032c4 <__sinit>
 800432c:	ab05      	add	r3, sp, #20
 800432e:	9a04      	ldr	r2, [sp, #16]
 8004330:	68a1      	ldr	r1, [r4, #8]
 8004332:	9301      	str	r3, [sp, #4]
 8004334:	4620      	mov	r0, r4
 8004336:	f003 fdfd 	bl	8007f34 <_vfiprintf_r>
 800433a:	b002      	add	sp, #8
 800433c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004340:	b004      	add	sp, #16
 8004342:	4770      	bx	lr
 8004344:	20000b10 	.word	0x20000b10

08004348 <_puts_r>:
 8004348:	b570      	push	{r4, r5, r6, lr}
 800434a:	460e      	mov	r6, r1
 800434c:	4605      	mov	r5, r0
 800434e:	b118      	cbz	r0, 8004358 <_puts_r+0x10>
 8004350:	6983      	ldr	r3, [r0, #24]
 8004352:	b90b      	cbnz	r3, 8004358 <_puts_r+0x10>
 8004354:	f7fe ffb6 	bl	80032c4 <__sinit>
 8004358:	69ab      	ldr	r3, [r5, #24]
 800435a:	68ac      	ldr	r4, [r5, #8]
 800435c:	b913      	cbnz	r3, 8004364 <_puts_r+0x1c>
 800435e:	4628      	mov	r0, r5
 8004360:	f7fe ffb0 	bl	80032c4 <__sinit>
 8004364:	4b2c      	ldr	r3, [pc, #176]	; (8004418 <_puts_r+0xd0>)
 8004366:	429c      	cmp	r4, r3
 8004368:	d120      	bne.n	80043ac <_puts_r+0x64>
 800436a:	686c      	ldr	r4, [r5, #4]
 800436c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800436e:	07db      	lsls	r3, r3, #31
 8004370:	d405      	bmi.n	800437e <_puts_r+0x36>
 8004372:	89a3      	ldrh	r3, [r4, #12]
 8004374:	0598      	lsls	r0, r3, #22
 8004376:	d402      	bmi.n	800437e <_puts_r+0x36>
 8004378:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800437a:	f7ff f882 	bl	8003482 <__retarget_lock_acquire_recursive>
 800437e:	89a3      	ldrh	r3, [r4, #12]
 8004380:	0719      	lsls	r1, r3, #28
 8004382:	d51d      	bpl.n	80043c0 <_puts_r+0x78>
 8004384:	6923      	ldr	r3, [r4, #16]
 8004386:	b1db      	cbz	r3, 80043c0 <_puts_r+0x78>
 8004388:	3e01      	subs	r6, #1
 800438a:	68a3      	ldr	r3, [r4, #8]
 800438c:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8004390:	3b01      	subs	r3, #1
 8004392:	60a3      	str	r3, [r4, #8]
 8004394:	bb39      	cbnz	r1, 80043e6 <_puts_r+0x9e>
 8004396:	2b00      	cmp	r3, #0
 8004398:	da38      	bge.n	800440c <_puts_r+0xc4>
 800439a:	4622      	mov	r2, r4
 800439c:	210a      	movs	r1, #10
 800439e:	4628      	mov	r0, r5
 80043a0:	f001 f960 	bl	8005664 <__swbuf_r>
 80043a4:	3001      	adds	r0, #1
 80043a6:	d011      	beq.n	80043cc <_puts_r+0x84>
 80043a8:	250a      	movs	r5, #10
 80043aa:	e011      	b.n	80043d0 <_puts_r+0x88>
 80043ac:	4b1b      	ldr	r3, [pc, #108]	; (800441c <_puts_r+0xd4>)
 80043ae:	429c      	cmp	r4, r3
 80043b0:	d101      	bne.n	80043b6 <_puts_r+0x6e>
 80043b2:	68ac      	ldr	r4, [r5, #8]
 80043b4:	e7da      	b.n	800436c <_puts_r+0x24>
 80043b6:	4b1a      	ldr	r3, [pc, #104]	; (8004420 <_puts_r+0xd8>)
 80043b8:	429c      	cmp	r4, r3
 80043ba:	bf08      	it	eq
 80043bc:	68ec      	ldreq	r4, [r5, #12]
 80043be:	e7d5      	b.n	800436c <_puts_r+0x24>
 80043c0:	4621      	mov	r1, r4
 80043c2:	4628      	mov	r0, r5
 80043c4:	f001 f9b2 	bl	800572c <__swsetup_r>
 80043c8:	2800      	cmp	r0, #0
 80043ca:	d0dd      	beq.n	8004388 <_puts_r+0x40>
 80043cc:	f04f 35ff 	mov.w	r5, #4294967295
 80043d0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80043d2:	07da      	lsls	r2, r3, #31
 80043d4:	d405      	bmi.n	80043e2 <_puts_r+0x9a>
 80043d6:	89a3      	ldrh	r3, [r4, #12]
 80043d8:	059b      	lsls	r3, r3, #22
 80043da:	d402      	bmi.n	80043e2 <_puts_r+0x9a>
 80043dc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80043de:	f7ff f851 	bl	8003484 <__retarget_lock_release_recursive>
 80043e2:	4628      	mov	r0, r5
 80043e4:	bd70      	pop	{r4, r5, r6, pc}
 80043e6:	2b00      	cmp	r3, #0
 80043e8:	da04      	bge.n	80043f4 <_puts_r+0xac>
 80043ea:	69a2      	ldr	r2, [r4, #24]
 80043ec:	429a      	cmp	r2, r3
 80043ee:	dc06      	bgt.n	80043fe <_puts_r+0xb6>
 80043f0:	290a      	cmp	r1, #10
 80043f2:	d004      	beq.n	80043fe <_puts_r+0xb6>
 80043f4:	6823      	ldr	r3, [r4, #0]
 80043f6:	1c5a      	adds	r2, r3, #1
 80043f8:	6022      	str	r2, [r4, #0]
 80043fa:	7019      	strb	r1, [r3, #0]
 80043fc:	e7c5      	b.n	800438a <_puts_r+0x42>
 80043fe:	4622      	mov	r2, r4
 8004400:	4628      	mov	r0, r5
 8004402:	f001 f92f 	bl	8005664 <__swbuf_r>
 8004406:	3001      	adds	r0, #1
 8004408:	d1bf      	bne.n	800438a <_puts_r+0x42>
 800440a:	e7df      	b.n	80043cc <_puts_r+0x84>
 800440c:	6823      	ldr	r3, [r4, #0]
 800440e:	250a      	movs	r5, #10
 8004410:	1c5a      	adds	r2, r3, #1
 8004412:	6022      	str	r2, [r4, #0]
 8004414:	701d      	strb	r5, [r3, #0]
 8004416:	e7db      	b.n	80043d0 <_puts_r+0x88>
 8004418:	0800a414 	.word	0x0800a414
 800441c:	0800a434 	.word	0x0800a434
 8004420:	0800a3f4 	.word	0x0800a3f4

08004424 <puts>:
 8004424:	4b02      	ldr	r3, [pc, #8]	; (8004430 <puts+0xc>)
 8004426:	4601      	mov	r1, r0
 8004428:	6818      	ldr	r0, [r3, #0]
 800442a:	f7ff bf8d 	b.w	8004348 <_puts_r>
 800442e:	bf00      	nop
 8004430:	20000b10 	.word	0x20000b10

08004434 <lflush>:
 8004434:	8983      	ldrh	r3, [r0, #12]
 8004436:	f003 0309 	and.w	r3, r3, #9
 800443a:	2b09      	cmp	r3, #9
 800443c:	d101      	bne.n	8004442 <lflush+0xe>
 800443e:	f002 b94f 	b.w	80066e0 <fflush>
 8004442:	2000      	movs	r0, #0
 8004444:	4770      	bx	lr
	...

08004448 <__srefill_r>:
 8004448:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800444a:	460c      	mov	r4, r1
 800444c:	4605      	mov	r5, r0
 800444e:	b118      	cbz	r0, 8004458 <__srefill_r+0x10>
 8004450:	6983      	ldr	r3, [r0, #24]
 8004452:	b90b      	cbnz	r3, 8004458 <__srefill_r+0x10>
 8004454:	f7fe ff36 	bl	80032c4 <__sinit>
 8004458:	4b3b      	ldr	r3, [pc, #236]	; (8004548 <__srefill_r+0x100>)
 800445a:	429c      	cmp	r4, r3
 800445c:	d10a      	bne.n	8004474 <__srefill_r+0x2c>
 800445e:	686c      	ldr	r4, [r5, #4]
 8004460:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004464:	2300      	movs	r3, #0
 8004466:	6063      	str	r3, [r4, #4]
 8004468:	89a3      	ldrh	r3, [r4, #12]
 800446a:	069e      	lsls	r6, r3, #26
 800446c:	d50c      	bpl.n	8004488 <__srefill_r+0x40>
 800446e:	f04f 30ff 	mov.w	r0, #4294967295
 8004472:	e066      	b.n	8004542 <__srefill_r+0xfa>
 8004474:	4b35      	ldr	r3, [pc, #212]	; (800454c <__srefill_r+0x104>)
 8004476:	429c      	cmp	r4, r3
 8004478:	d101      	bne.n	800447e <__srefill_r+0x36>
 800447a:	68ac      	ldr	r4, [r5, #8]
 800447c:	e7f0      	b.n	8004460 <__srefill_r+0x18>
 800447e:	4b34      	ldr	r3, [pc, #208]	; (8004550 <__srefill_r+0x108>)
 8004480:	429c      	cmp	r4, r3
 8004482:	bf08      	it	eq
 8004484:	68ec      	ldreq	r4, [r5, #12]
 8004486:	e7eb      	b.n	8004460 <__srefill_r+0x18>
 8004488:	0758      	lsls	r0, r3, #29
 800448a:	d448      	bmi.n	800451e <__srefill_r+0xd6>
 800448c:	06d9      	lsls	r1, r3, #27
 800448e:	d405      	bmi.n	800449c <__srefill_r+0x54>
 8004490:	2309      	movs	r3, #9
 8004492:	602b      	str	r3, [r5, #0]
 8004494:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8004498:	81a3      	strh	r3, [r4, #12]
 800449a:	e7e8      	b.n	800446e <__srefill_r+0x26>
 800449c:	071a      	lsls	r2, r3, #28
 800449e:	d50b      	bpl.n	80044b8 <__srefill_r+0x70>
 80044a0:	4621      	mov	r1, r4
 80044a2:	4628      	mov	r0, r5
 80044a4:	f002 f8e0 	bl	8006668 <_fflush_r>
 80044a8:	2800      	cmp	r0, #0
 80044aa:	d1e0      	bne.n	800446e <__srefill_r+0x26>
 80044ac:	89a3      	ldrh	r3, [r4, #12]
 80044ae:	60a0      	str	r0, [r4, #8]
 80044b0:	f023 0308 	bic.w	r3, r3, #8
 80044b4:	81a3      	strh	r3, [r4, #12]
 80044b6:	61a0      	str	r0, [r4, #24]
 80044b8:	89a3      	ldrh	r3, [r4, #12]
 80044ba:	f043 0304 	orr.w	r3, r3, #4
 80044be:	81a3      	strh	r3, [r4, #12]
 80044c0:	6923      	ldr	r3, [r4, #16]
 80044c2:	b91b      	cbnz	r3, 80044cc <__srefill_r+0x84>
 80044c4:	4621      	mov	r1, r4
 80044c6:	4628      	mov	r0, r5
 80044c8:	f002 fccc 	bl	8006e64 <__smakebuf_r>
 80044cc:	89a6      	ldrh	r6, [r4, #12]
 80044ce:	f9b4 700c 	ldrsh.w	r7, [r4, #12]
 80044d2:	07b3      	lsls	r3, r6, #30
 80044d4:	d00f      	beq.n	80044f6 <__srefill_r+0xae>
 80044d6:	2301      	movs	r3, #1
 80044d8:	81a3      	strh	r3, [r4, #12]
 80044da:	4b1e      	ldr	r3, [pc, #120]	; (8004554 <__srefill_r+0x10c>)
 80044dc:	491e      	ldr	r1, [pc, #120]	; (8004558 <__srefill_r+0x110>)
 80044de:	6818      	ldr	r0, [r3, #0]
 80044e0:	f006 0609 	and.w	r6, r6, #9
 80044e4:	f7fe ff6c 	bl	80033c0 <_fwalk>
 80044e8:	2e09      	cmp	r6, #9
 80044ea:	81a7      	strh	r7, [r4, #12]
 80044ec:	d103      	bne.n	80044f6 <__srefill_r+0xae>
 80044ee:	4621      	mov	r1, r4
 80044f0:	4628      	mov	r0, r5
 80044f2:	f002 f833 	bl	800655c <__sflush_r>
 80044f6:	6922      	ldr	r2, [r4, #16]
 80044f8:	6a66      	ldr	r6, [r4, #36]	; 0x24
 80044fa:	6963      	ldr	r3, [r4, #20]
 80044fc:	6a21      	ldr	r1, [r4, #32]
 80044fe:	6022      	str	r2, [r4, #0]
 8004500:	4628      	mov	r0, r5
 8004502:	47b0      	blx	r6
 8004504:	2800      	cmp	r0, #0
 8004506:	6060      	str	r0, [r4, #4]
 8004508:	dc1c      	bgt.n	8004544 <__srefill_r+0xfc>
 800450a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800450e:	bf17      	itett	ne
 8004510:	2200      	movne	r2, #0
 8004512:	f043 0320 	orreq.w	r3, r3, #32
 8004516:	6062      	strne	r2, [r4, #4]
 8004518:	f043 0340 	orrne.w	r3, r3, #64	; 0x40
 800451c:	e7bc      	b.n	8004498 <__srefill_r+0x50>
 800451e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8004520:	2900      	cmp	r1, #0
 8004522:	d0cd      	beq.n	80044c0 <__srefill_r+0x78>
 8004524:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8004528:	4299      	cmp	r1, r3
 800452a:	d002      	beq.n	8004532 <__srefill_r+0xea>
 800452c:	4628      	mov	r0, r5
 800452e:	f7fe ffdf 	bl	80034f0 <_free_r>
 8004532:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004534:	6063      	str	r3, [r4, #4]
 8004536:	2000      	movs	r0, #0
 8004538:	6360      	str	r0, [r4, #52]	; 0x34
 800453a:	2b00      	cmp	r3, #0
 800453c:	d0c0      	beq.n	80044c0 <__srefill_r+0x78>
 800453e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004540:	6023      	str	r3, [r4, #0]
 8004542:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004544:	2000      	movs	r0, #0
 8004546:	e7fc      	b.n	8004542 <__srefill_r+0xfa>
 8004548:	0800a414 	.word	0x0800a414
 800454c:	0800a434 	.word	0x0800a434
 8004550:	0800a3f4 	.word	0x0800a3f4
 8004554:	0800a454 	.word	0x0800a454
 8004558:	08004435 	.word	0x08004435

0800455c <_sbrk_r>:
 800455c:	b538      	push	{r3, r4, r5, lr}
 800455e:	4d06      	ldr	r5, [pc, #24]	; (8004578 <_sbrk_r+0x1c>)
 8004560:	2300      	movs	r3, #0
 8004562:	4604      	mov	r4, r0
 8004564:	4608      	mov	r0, r1
 8004566:	602b      	str	r3, [r5, #0]
 8004568:	f7fe f9bc 	bl	80028e4 <_sbrk>
 800456c:	1c43      	adds	r3, r0, #1
 800456e:	d102      	bne.n	8004576 <_sbrk_r+0x1a>
 8004570:	682b      	ldr	r3, [r5, #0]
 8004572:	b103      	cbz	r3, 8004576 <_sbrk_r+0x1a>
 8004574:	6023      	str	r3, [r4, #0]
 8004576:	bd38      	pop	{r3, r4, r5, pc}
 8004578:	20000d5c 	.word	0x20000d5c

0800457c <setvbuf>:
 800457c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8004580:	461d      	mov	r5, r3
 8004582:	4b5d      	ldr	r3, [pc, #372]	; (80046f8 <setvbuf+0x17c>)
 8004584:	681f      	ldr	r7, [r3, #0]
 8004586:	4604      	mov	r4, r0
 8004588:	460e      	mov	r6, r1
 800458a:	4690      	mov	r8, r2
 800458c:	b127      	cbz	r7, 8004598 <setvbuf+0x1c>
 800458e:	69bb      	ldr	r3, [r7, #24]
 8004590:	b913      	cbnz	r3, 8004598 <setvbuf+0x1c>
 8004592:	4638      	mov	r0, r7
 8004594:	f7fe fe96 	bl	80032c4 <__sinit>
 8004598:	4b58      	ldr	r3, [pc, #352]	; (80046fc <setvbuf+0x180>)
 800459a:	429c      	cmp	r4, r3
 800459c:	d167      	bne.n	800466e <setvbuf+0xf2>
 800459e:	687c      	ldr	r4, [r7, #4]
 80045a0:	f1b8 0f02 	cmp.w	r8, #2
 80045a4:	d006      	beq.n	80045b4 <setvbuf+0x38>
 80045a6:	f1b8 0f01 	cmp.w	r8, #1
 80045aa:	f200 809f 	bhi.w	80046ec <setvbuf+0x170>
 80045ae:	2d00      	cmp	r5, #0
 80045b0:	f2c0 809c 	blt.w	80046ec <setvbuf+0x170>
 80045b4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80045b6:	07db      	lsls	r3, r3, #31
 80045b8:	d405      	bmi.n	80045c6 <setvbuf+0x4a>
 80045ba:	89a3      	ldrh	r3, [r4, #12]
 80045bc:	0598      	lsls	r0, r3, #22
 80045be:	d402      	bmi.n	80045c6 <setvbuf+0x4a>
 80045c0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80045c2:	f7fe ff5e 	bl	8003482 <__retarget_lock_acquire_recursive>
 80045c6:	4621      	mov	r1, r4
 80045c8:	4638      	mov	r0, r7
 80045ca:	f002 f84d 	bl	8006668 <_fflush_r>
 80045ce:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80045d0:	b141      	cbz	r1, 80045e4 <setvbuf+0x68>
 80045d2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80045d6:	4299      	cmp	r1, r3
 80045d8:	d002      	beq.n	80045e0 <setvbuf+0x64>
 80045da:	4638      	mov	r0, r7
 80045dc:	f7fe ff88 	bl	80034f0 <_free_r>
 80045e0:	2300      	movs	r3, #0
 80045e2:	6363      	str	r3, [r4, #52]	; 0x34
 80045e4:	2300      	movs	r3, #0
 80045e6:	61a3      	str	r3, [r4, #24]
 80045e8:	6063      	str	r3, [r4, #4]
 80045ea:	89a3      	ldrh	r3, [r4, #12]
 80045ec:	0619      	lsls	r1, r3, #24
 80045ee:	d503      	bpl.n	80045f8 <setvbuf+0x7c>
 80045f0:	6921      	ldr	r1, [r4, #16]
 80045f2:	4638      	mov	r0, r7
 80045f4:	f7fe ff7c 	bl	80034f0 <_free_r>
 80045f8:	89a3      	ldrh	r3, [r4, #12]
 80045fa:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
 80045fe:	f023 0303 	bic.w	r3, r3, #3
 8004602:	f1b8 0f02 	cmp.w	r8, #2
 8004606:	81a3      	strh	r3, [r4, #12]
 8004608:	d06c      	beq.n	80046e4 <setvbuf+0x168>
 800460a:	ab01      	add	r3, sp, #4
 800460c:	466a      	mov	r2, sp
 800460e:	4621      	mov	r1, r4
 8004610:	4638      	mov	r0, r7
 8004612:	f002 fc03 	bl	8006e1c <__swhatbuf_r>
 8004616:	89a3      	ldrh	r3, [r4, #12]
 8004618:	4318      	orrs	r0, r3
 800461a:	81a0      	strh	r0, [r4, #12]
 800461c:	2d00      	cmp	r5, #0
 800461e:	d130      	bne.n	8004682 <setvbuf+0x106>
 8004620:	9d00      	ldr	r5, [sp, #0]
 8004622:	4628      	mov	r0, r5
 8004624:	f7fe ff30 	bl	8003488 <malloc>
 8004628:	4606      	mov	r6, r0
 800462a:	2800      	cmp	r0, #0
 800462c:	d155      	bne.n	80046da <setvbuf+0x15e>
 800462e:	f8dd 9000 	ldr.w	r9, [sp]
 8004632:	45a9      	cmp	r9, r5
 8004634:	d14a      	bne.n	80046cc <setvbuf+0x150>
 8004636:	f04f 35ff 	mov.w	r5, #4294967295
 800463a:	2200      	movs	r2, #0
 800463c:	60a2      	str	r2, [r4, #8]
 800463e:	f104 0247 	add.w	r2, r4, #71	; 0x47
 8004642:	6022      	str	r2, [r4, #0]
 8004644:	6122      	str	r2, [r4, #16]
 8004646:	2201      	movs	r2, #1
 8004648:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800464c:	6162      	str	r2, [r4, #20]
 800464e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8004650:	f043 0302 	orr.w	r3, r3, #2
 8004654:	07d2      	lsls	r2, r2, #31
 8004656:	81a3      	strh	r3, [r4, #12]
 8004658:	d405      	bmi.n	8004666 <setvbuf+0xea>
 800465a:	f413 7f00 	tst.w	r3, #512	; 0x200
 800465e:	d102      	bne.n	8004666 <setvbuf+0xea>
 8004660:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8004662:	f7fe ff0f 	bl	8003484 <__retarget_lock_release_recursive>
 8004666:	4628      	mov	r0, r5
 8004668:	b003      	add	sp, #12
 800466a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800466e:	4b24      	ldr	r3, [pc, #144]	; (8004700 <setvbuf+0x184>)
 8004670:	429c      	cmp	r4, r3
 8004672:	d101      	bne.n	8004678 <setvbuf+0xfc>
 8004674:	68bc      	ldr	r4, [r7, #8]
 8004676:	e793      	b.n	80045a0 <setvbuf+0x24>
 8004678:	4b22      	ldr	r3, [pc, #136]	; (8004704 <setvbuf+0x188>)
 800467a:	429c      	cmp	r4, r3
 800467c:	bf08      	it	eq
 800467e:	68fc      	ldreq	r4, [r7, #12]
 8004680:	e78e      	b.n	80045a0 <setvbuf+0x24>
 8004682:	2e00      	cmp	r6, #0
 8004684:	d0cd      	beq.n	8004622 <setvbuf+0xa6>
 8004686:	69bb      	ldr	r3, [r7, #24]
 8004688:	b913      	cbnz	r3, 8004690 <setvbuf+0x114>
 800468a:	4638      	mov	r0, r7
 800468c:	f7fe fe1a 	bl	80032c4 <__sinit>
 8004690:	f1b8 0f01 	cmp.w	r8, #1
 8004694:	bf08      	it	eq
 8004696:	89a3      	ldrheq	r3, [r4, #12]
 8004698:	6026      	str	r6, [r4, #0]
 800469a:	bf04      	itt	eq
 800469c:	f043 0301 	orreq.w	r3, r3, #1
 80046a0:	81a3      	strheq	r3, [r4, #12]
 80046a2:	89a2      	ldrh	r2, [r4, #12]
 80046a4:	f012 0308 	ands.w	r3, r2, #8
 80046a8:	e9c4 6504 	strd	r6, r5, [r4, #16]
 80046ac:	d01c      	beq.n	80046e8 <setvbuf+0x16c>
 80046ae:	07d3      	lsls	r3, r2, #31
 80046b0:	bf41      	itttt	mi
 80046b2:	2300      	movmi	r3, #0
 80046b4:	426d      	negmi	r5, r5
 80046b6:	60a3      	strmi	r3, [r4, #8]
 80046b8:	61a5      	strmi	r5, [r4, #24]
 80046ba:	bf58      	it	pl
 80046bc:	60a5      	strpl	r5, [r4, #8]
 80046be:	6e65      	ldr	r5, [r4, #100]	; 0x64
 80046c0:	f015 0501 	ands.w	r5, r5, #1
 80046c4:	d115      	bne.n	80046f2 <setvbuf+0x176>
 80046c6:	f412 7f00 	tst.w	r2, #512	; 0x200
 80046ca:	e7c8      	b.n	800465e <setvbuf+0xe2>
 80046cc:	4648      	mov	r0, r9
 80046ce:	f7fe fedb 	bl	8003488 <malloc>
 80046d2:	4606      	mov	r6, r0
 80046d4:	2800      	cmp	r0, #0
 80046d6:	d0ae      	beq.n	8004636 <setvbuf+0xba>
 80046d8:	464d      	mov	r5, r9
 80046da:	89a3      	ldrh	r3, [r4, #12]
 80046dc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80046e0:	81a3      	strh	r3, [r4, #12]
 80046e2:	e7d0      	b.n	8004686 <setvbuf+0x10a>
 80046e4:	2500      	movs	r5, #0
 80046e6:	e7a8      	b.n	800463a <setvbuf+0xbe>
 80046e8:	60a3      	str	r3, [r4, #8]
 80046ea:	e7e8      	b.n	80046be <setvbuf+0x142>
 80046ec:	f04f 35ff 	mov.w	r5, #4294967295
 80046f0:	e7b9      	b.n	8004666 <setvbuf+0xea>
 80046f2:	2500      	movs	r5, #0
 80046f4:	e7b7      	b.n	8004666 <setvbuf+0xea>
 80046f6:	bf00      	nop
 80046f8:	20000b10 	.word	0x20000b10
 80046fc:	0800a414 	.word	0x0800a414
 8004700:	0800a434 	.word	0x0800a434
 8004704:	0800a3f4 	.word	0x0800a3f4

08004708 <nanf>:
 8004708:	4800      	ldr	r0, [pc, #0]	; (800470c <nanf+0x4>)
 800470a:	4770      	bx	lr
 800470c:	7fc00000 	.word	0x7fc00000

08004710 <siprintf>:
 8004710:	b40e      	push	{r1, r2, r3}
 8004712:	b500      	push	{lr}
 8004714:	b09c      	sub	sp, #112	; 0x70
 8004716:	ab1d      	add	r3, sp, #116	; 0x74
 8004718:	9002      	str	r0, [sp, #8]
 800471a:	9006      	str	r0, [sp, #24]
 800471c:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8004720:	4809      	ldr	r0, [pc, #36]	; (8004748 <siprintf+0x38>)
 8004722:	9107      	str	r1, [sp, #28]
 8004724:	9104      	str	r1, [sp, #16]
 8004726:	4909      	ldr	r1, [pc, #36]	; (800474c <siprintf+0x3c>)
 8004728:	f853 2b04 	ldr.w	r2, [r3], #4
 800472c:	9105      	str	r1, [sp, #20]
 800472e:	6800      	ldr	r0, [r0, #0]
 8004730:	9301      	str	r3, [sp, #4]
 8004732:	a902      	add	r1, sp, #8
 8004734:	f003 f904 	bl	8007940 <_svfiprintf_r>
 8004738:	9b02      	ldr	r3, [sp, #8]
 800473a:	2200      	movs	r2, #0
 800473c:	701a      	strb	r2, [r3, #0]
 800473e:	b01c      	add	sp, #112	; 0x70
 8004740:	f85d eb04 	ldr.w	lr, [sp], #4
 8004744:	b003      	add	sp, #12
 8004746:	4770      	bx	lr
 8004748:	20000b10 	.word	0x20000b10
 800474c:	ffff0208 	.word	0xffff0208

08004750 <siscanf>:
 8004750:	b40e      	push	{r1, r2, r3}
 8004752:	b530      	push	{r4, r5, lr}
 8004754:	b09c      	sub	sp, #112	; 0x70
 8004756:	ac1f      	add	r4, sp, #124	; 0x7c
 8004758:	f44f 7201 	mov.w	r2, #516	; 0x204
 800475c:	f854 5b04 	ldr.w	r5, [r4], #4
 8004760:	f8ad 2014 	strh.w	r2, [sp, #20]
 8004764:	9002      	str	r0, [sp, #8]
 8004766:	9006      	str	r0, [sp, #24]
 8004768:	f7fb fdac 	bl	80002c4 <strlen>
 800476c:	4b0b      	ldr	r3, [pc, #44]	; (800479c <siscanf+0x4c>)
 800476e:	9003      	str	r0, [sp, #12]
 8004770:	9007      	str	r0, [sp, #28]
 8004772:	930b      	str	r3, [sp, #44]	; 0x2c
 8004774:	480a      	ldr	r0, [pc, #40]	; (80047a0 <siscanf+0x50>)
 8004776:	9401      	str	r4, [sp, #4]
 8004778:	2300      	movs	r3, #0
 800477a:	930f      	str	r3, [sp, #60]	; 0x3c
 800477c:	9314      	str	r3, [sp, #80]	; 0x50
 800477e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8004782:	f8ad 3016 	strh.w	r3, [sp, #22]
 8004786:	462a      	mov	r2, r5
 8004788:	4623      	mov	r3, r4
 800478a:	a902      	add	r1, sp, #8
 800478c:	6800      	ldr	r0, [r0, #0]
 800478e:	f003 fa31 	bl	8007bf4 <__ssvfiscanf_r>
 8004792:	b01c      	add	sp, #112	; 0x70
 8004794:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8004798:	b003      	add	sp, #12
 800479a:	4770      	bx	lr
 800479c:	080047c7 	.word	0x080047c7
 80047a0:	20000b10 	.word	0x20000b10

080047a4 <__sread>:
 80047a4:	b510      	push	{r4, lr}
 80047a6:	460c      	mov	r4, r1
 80047a8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80047ac:	f003 fe3e 	bl	800842c <_read_r>
 80047b0:	2800      	cmp	r0, #0
 80047b2:	bfab      	itete	ge
 80047b4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80047b6:	89a3      	ldrhlt	r3, [r4, #12]
 80047b8:	181b      	addge	r3, r3, r0
 80047ba:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80047be:	bfac      	ite	ge
 80047c0:	6563      	strge	r3, [r4, #84]	; 0x54
 80047c2:	81a3      	strhlt	r3, [r4, #12]
 80047c4:	bd10      	pop	{r4, pc}

080047c6 <__seofread>:
 80047c6:	2000      	movs	r0, #0
 80047c8:	4770      	bx	lr

080047ca <__swrite>:
 80047ca:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80047ce:	461f      	mov	r7, r3
 80047d0:	898b      	ldrh	r3, [r1, #12]
 80047d2:	05db      	lsls	r3, r3, #23
 80047d4:	4605      	mov	r5, r0
 80047d6:	460c      	mov	r4, r1
 80047d8:	4616      	mov	r6, r2
 80047da:	d505      	bpl.n	80047e8 <__swrite+0x1e>
 80047dc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80047e0:	2302      	movs	r3, #2
 80047e2:	2200      	movs	r2, #0
 80047e4:	f002 fb08 	bl	8006df8 <_lseek_r>
 80047e8:	89a3      	ldrh	r3, [r4, #12]
 80047ea:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80047ee:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80047f2:	81a3      	strh	r3, [r4, #12]
 80047f4:	4632      	mov	r2, r6
 80047f6:	463b      	mov	r3, r7
 80047f8:	4628      	mov	r0, r5
 80047fa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80047fe:	f000 bf83 	b.w	8005708 <_write_r>

08004802 <__sseek>:
 8004802:	b510      	push	{r4, lr}
 8004804:	460c      	mov	r4, r1
 8004806:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800480a:	f002 faf5 	bl	8006df8 <_lseek_r>
 800480e:	1c43      	adds	r3, r0, #1
 8004810:	89a3      	ldrh	r3, [r4, #12]
 8004812:	bf15      	itete	ne
 8004814:	6560      	strne	r0, [r4, #84]	; 0x54
 8004816:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800481a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800481e:	81a3      	strheq	r3, [r4, #12]
 8004820:	bf18      	it	ne
 8004822:	81a3      	strhne	r3, [r4, #12]
 8004824:	bd10      	pop	{r4, pc}

08004826 <__sclose>:
 8004826:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800482a:	f001 b80b 	b.w	8005844 <_close_r>

0800482e <strcat>:
 800482e:	b510      	push	{r4, lr}
 8004830:	4602      	mov	r2, r0
 8004832:	7814      	ldrb	r4, [r2, #0]
 8004834:	4613      	mov	r3, r2
 8004836:	3201      	adds	r2, #1
 8004838:	2c00      	cmp	r4, #0
 800483a:	d1fa      	bne.n	8004832 <strcat+0x4>
 800483c:	3b01      	subs	r3, #1
 800483e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8004842:	f803 2f01 	strb.w	r2, [r3, #1]!
 8004846:	2a00      	cmp	r2, #0
 8004848:	d1f9      	bne.n	800483e <strcat+0x10>
 800484a:	bd10      	pop	{r4, pc}

0800484c <strnlen>:
 800484c:	b510      	push	{r4, lr}
 800484e:	4602      	mov	r2, r0
 8004850:	4401      	add	r1, r0
 8004852:	428a      	cmp	r2, r1
 8004854:	4613      	mov	r3, r2
 8004856:	d101      	bne.n	800485c <strnlen+0x10>
 8004858:	1a18      	subs	r0, r3, r0
 800485a:	bd10      	pop	{r4, pc}
 800485c:	781c      	ldrb	r4, [r3, #0]
 800485e:	3201      	adds	r2, #1
 8004860:	2c00      	cmp	r4, #0
 8004862:	d1f6      	bne.n	8004852 <strnlen+0x6>
 8004864:	e7f8      	b.n	8004858 <strnlen+0xc>

08004866 <sulp>:
 8004866:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800486a:	460f      	mov	r7, r1
 800486c:	4690      	mov	r8, r2
 800486e:	f002 fec3 	bl	80075f8 <__ulp>
 8004872:	4604      	mov	r4, r0
 8004874:	460d      	mov	r5, r1
 8004876:	f1b8 0f00 	cmp.w	r8, #0
 800487a:	d011      	beq.n	80048a0 <sulp+0x3a>
 800487c:	f3c7 530a 	ubfx	r3, r7, #20, #11
 8004880:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8004884:	2b00      	cmp	r3, #0
 8004886:	dd0b      	ble.n	80048a0 <sulp+0x3a>
 8004888:	051b      	lsls	r3, r3, #20
 800488a:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 800488e:	2400      	movs	r4, #0
 8004890:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 8004894:	4622      	mov	r2, r4
 8004896:	462b      	mov	r3, r5
 8004898:	f7fb fed8 	bl	800064c <__aeabi_dmul>
 800489c:	4604      	mov	r4, r0
 800489e:	460d      	mov	r5, r1
 80048a0:	4620      	mov	r0, r4
 80048a2:	4629      	mov	r1, r5
 80048a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080048a8 <_strtod_l>:
 80048a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80048ac:	b0a1      	sub	sp, #132	; 0x84
 80048ae:	469b      	mov	fp, r3
 80048b0:	2300      	movs	r3, #0
 80048b2:	931c      	str	r3, [sp, #112]	; 0x70
 80048b4:	4ba1      	ldr	r3, [pc, #644]	; (8004b3c <_strtod_l+0x294>)
 80048b6:	9217      	str	r2, [sp, #92]	; 0x5c
 80048b8:	681f      	ldr	r7, [r3, #0]
 80048ba:	4682      	mov	sl, r0
 80048bc:	4638      	mov	r0, r7
 80048be:	460e      	mov	r6, r1
 80048c0:	f7fb fd00 	bl	80002c4 <strlen>
 80048c4:	f04f 0800 	mov.w	r8, #0
 80048c8:	4604      	mov	r4, r0
 80048ca:	f04f 0900 	mov.w	r9, #0
 80048ce:	961b      	str	r6, [sp, #108]	; 0x6c
 80048d0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80048d2:	781a      	ldrb	r2, [r3, #0]
 80048d4:	2a2b      	cmp	r2, #43	; 0x2b
 80048d6:	d04c      	beq.n	8004972 <_strtod_l+0xca>
 80048d8:	d83a      	bhi.n	8004950 <_strtod_l+0xa8>
 80048da:	2a0d      	cmp	r2, #13
 80048dc:	d833      	bhi.n	8004946 <_strtod_l+0x9e>
 80048de:	2a08      	cmp	r2, #8
 80048e0:	d833      	bhi.n	800494a <_strtod_l+0xa2>
 80048e2:	2a00      	cmp	r2, #0
 80048e4:	d03d      	beq.n	8004962 <_strtod_l+0xba>
 80048e6:	2300      	movs	r3, #0
 80048e8:	930c      	str	r3, [sp, #48]	; 0x30
 80048ea:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 80048ec:	782b      	ldrb	r3, [r5, #0]
 80048ee:	2b30      	cmp	r3, #48	; 0x30
 80048f0:	f040 80af 	bne.w	8004a52 <_strtod_l+0x1aa>
 80048f4:	786b      	ldrb	r3, [r5, #1]
 80048f6:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 80048fa:	2b58      	cmp	r3, #88	; 0x58
 80048fc:	d16c      	bne.n	80049d8 <_strtod_l+0x130>
 80048fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004900:	9301      	str	r3, [sp, #4]
 8004902:	ab1c      	add	r3, sp, #112	; 0x70
 8004904:	9300      	str	r3, [sp, #0]
 8004906:	4a8e      	ldr	r2, [pc, #568]	; (8004b40 <_strtod_l+0x298>)
 8004908:	f8cd b008 	str.w	fp, [sp, #8]
 800490c:	ab1d      	add	r3, sp, #116	; 0x74
 800490e:	a91b      	add	r1, sp, #108	; 0x6c
 8004910:	4650      	mov	r0, sl
 8004912:	f001 ff71 	bl	80067f8 <__gethex>
 8004916:	f010 0607 	ands.w	r6, r0, #7
 800491a:	4604      	mov	r4, r0
 800491c:	d005      	beq.n	800492a <_strtod_l+0x82>
 800491e:	2e06      	cmp	r6, #6
 8004920:	d129      	bne.n	8004976 <_strtod_l+0xce>
 8004922:	3501      	adds	r5, #1
 8004924:	2300      	movs	r3, #0
 8004926:	951b      	str	r5, [sp, #108]	; 0x6c
 8004928:	930c      	str	r3, [sp, #48]	; 0x30
 800492a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800492c:	2b00      	cmp	r3, #0
 800492e:	f040 8596 	bne.w	800545e <_strtod_l+0xbb6>
 8004932:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004934:	b1d3      	cbz	r3, 800496c <_strtod_l+0xc4>
 8004936:	4642      	mov	r2, r8
 8004938:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 800493c:	4610      	mov	r0, r2
 800493e:	4619      	mov	r1, r3
 8004940:	b021      	add	sp, #132	; 0x84
 8004942:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004946:	2a20      	cmp	r2, #32
 8004948:	d1cd      	bne.n	80048e6 <_strtod_l+0x3e>
 800494a:	3301      	adds	r3, #1
 800494c:	931b      	str	r3, [sp, #108]	; 0x6c
 800494e:	e7bf      	b.n	80048d0 <_strtod_l+0x28>
 8004950:	2a2d      	cmp	r2, #45	; 0x2d
 8004952:	d1c8      	bne.n	80048e6 <_strtod_l+0x3e>
 8004954:	2201      	movs	r2, #1
 8004956:	920c      	str	r2, [sp, #48]	; 0x30
 8004958:	1c5a      	adds	r2, r3, #1
 800495a:	921b      	str	r2, [sp, #108]	; 0x6c
 800495c:	785b      	ldrb	r3, [r3, #1]
 800495e:	2b00      	cmp	r3, #0
 8004960:	d1c3      	bne.n	80048ea <_strtod_l+0x42>
 8004962:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004964:	961b      	str	r6, [sp, #108]	; 0x6c
 8004966:	2b00      	cmp	r3, #0
 8004968:	f040 8577 	bne.w	800545a <_strtod_l+0xbb2>
 800496c:	4642      	mov	r2, r8
 800496e:	464b      	mov	r3, r9
 8004970:	e7e4      	b.n	800493c <_strtod_l+0x94>
 8004972:	2200      	movs	r2, #0
 8004974:	e7ef      	b.n	8004956 <_strtod_l+0xae>
 8004976:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8004978:	b13a      	cbz	r2, 800498a <_strtod_l+0xe2>
 800497a:	2135      	movs	r1, #53	; 0x35
 800497c:	a81e      	add	r0, sp, #120	; 0x78
 800497e:	f002 ff3f 	bl	8007800 <__copybits>
 8004982:	991c      	ldr	r1, [sp, #112]	; 0x70
 8004984:	4650      	mov	r0, sl
 8004986:	f002 fb0b 	bl	8006fa0 <_Bfree>
 800498a:	3e01      	subs	r6, #1
 800498c:	2e05      	cmp	r6, #5
 800498e:	d807      	bhi.n	80049a0 <_strtod_l+0xf8>
 8004990:	e8df f006 	tbb	[pc, r6]
 8004994:	1d180b0e 	.word	0x1d180b0e
 8004998:	030e      	.short	0x030e
 800499a:	f04f 0900 	mov.w	r9, #0
 800499e:	46c8      	mov	r8, r9
 80049a0:	0721      	lsls	r1, r4, #28
 80049a2:	d5c2      	bpl.n	800492a <_strtod_l+0x82>
 80049a4:	f049 4900 	orr.w	r9, r9, #2147483648	; 0x80000000
 80049a8:	e7bf      	b.n	800492a <_strtod_l+0x82>
 80049aa:	e9dd 891e 	ldrd	r8, r9, [sp, #120]	; 0x78
 80049ae:	e7f7      	b.n	80049a0 <_strtod_l+0xf8>
 80049b0:	e9dd 831e 	ldrd	r8, r3, [sp, #120]	; 0x78
 80049b4:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80049b6:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 80049ba:	f202 4233 	addw	r2, r2, #1075	; 0x433
 80049be:	ea43 5902 	orr.w	r9, r3, r2, lsl #20
 80049c2:	e7ed      	b.n	80049a0 <_strtod_l+0xf8>
 80049c4:	f8df 917c 	ldr.w	r9, [pc, #380]	; 8004b44 <_strtod_l+0x29c>
 80049c8:	f04f 0800 	mov.w	r8, #0
 80049cc:	e7e8      	b.n	80049a0 <_strtod_l+0xf8>
 80049ce:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
 80049d2:	f04f 38ff 	mov.w	r8, #4294967295
 80049d6:	e7e3      	b.n	80049a0 <_strtod_l+0xf8>
 80049d8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80049da:	1c5a      	adds	r2, r3, #1
 80049dc:	921b      	str	r2, [sp, #108]	; 0x6c
 80049de:	785b      	ldrb	r3, [r3, #1]
 80049e0:	2b30      	cmp	r3, #48	; 0x30
 80049e2:	d0f9      	beq.n	80049d8 <_strtod_l+0x130>
 80049e4:	2b00      	cmp	r3, #0
 80049e6:	d0a0      	beq.n	800492a <_strtod_l+0x82>
 80049e8:	2301      	movs	r3, #1
 80049ea:	9307      	str	r3, [sp, #28]
 80049ec:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80049ee:	9308      	str	r3, [sp, #32]
 80049f0:	2300      	movs	r3, #0
 80049f2:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80049f6:	469b      	mov	fp, r3
 80049f8:	220a      	movs	r2, #10
 80049fa:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80049fc:	7805      	ldrb	r5, [r0, #0]
 80049fe:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
 8004a02:	b2d9      	uxtb	r1, r3
 8004a04:	2909      	cmp	r1, #9
 8004a06:	d926      	bls.n	8004a56 <_strtod_l+0x1ae>
 8004a08:	4622      	mov	r2, r4
 8004a0a:	4639      	mov	r1, r7
 8004a0c:	f003 fd60 	bl	80084d0 <strncmp>
 8004a10:	2800      	cmp	r0, #0
 8004a12:	d032      	beq.n	8004a7a <_strtod_l+0x1d2>
 8004a14:	2000      	movs	r0, #0
 8004a16:	462b      	mov	r3, r5
 8004a18:	465c      	mov	r4, fp
 8004a1a:	9004      	str	r0, [sp, #16]
 8004a1c:	4602      	mov	r2, r0
 8004a1e:	2b65      	cmp	r3, #101	; 0x65
 8004a20:	d001      	beq.n	8004a26 <_strtod_l+0x17e>
 8004a22:	2b45      	cmp	r3, #69	; 0x45
 8004a24:	d113      	bne.n	8004a4e <_strtod_l+0x1a6>
 8004a26:	b91c      	cbnz	r4, 8004a30 <_strtod_l+0x188>
 8004a28:	9b07      	ldr	r3, [sp, #28]
 8004a2a:	4303      	orrs	r3, r0
 8004a2c:	d099      	beq.n	8004962 <_strtod_l+0xba>
 8004a2e:	2400      	movs	r4, #0
 8004a30:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
 8004a32:	1c73      	adds	r3, r6, #1
 8004a34:	931b      	str	r3, [sp, #108]	; 0x6c
 8004a36:	7873      	ldrb	r3, [r6, #1]
 8004a38:	2b2b      	cmp	r3, #43	; 0x2b
 8004a3a:	d078      	beq.n	8004b2e <_strtod_l+0x286>
 8004a3c:	2b2d      	cmp	r3, #45	; 0x2d
 8004a3e:	d07b      	beq.n	8004b38 <_strtod_l+0x290>
 8004a40:	2700      	movs	r7, #0
 8004a42:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8004a46:	2909      	cmp	r1, #9
 8004a48:	f240 8082 	bls.w	8004b50 <_strtod_l+0x2a8>
 8004a4c:	961b      	str	r6, [sp, #108]	; 0x6c
 8004a4e:	2500      	movs	r5, #0
 8004a50:	e09e      	b.n	8004b90 <_strtod_l+0x2e8>
 8004a52:	2300      	movs	r3, #0
 8004a54:	e7c9      	b.n	80049ea <_strtod_l+0x142>
 8004a56:	f1bb 0f08 	cmp.w	fp, #8
 8004a5a:	bfd5      	itete	le
 8004a5c:	9906      	ldrle	r1, [sp, #24]
 8004a5e:	9905      	ldrgt	r1, [sp, #20]
 8004a60:	fb02 3301 	mlale	r3, r2, r1, r3
 8004a64:	fb02 3301 	mlagt	r3, r2, r1, r3
 8004a68:	f100 0001 	add.w	r0, r0, #1
 8004a6c:	bfd4      	ite	le
 8004a6e:	9306      	strle	r3, [sp, #24]
 8004a70:	9305      	strgt	r3, [sp, #20]
 8004a72:	f10b 0b01 	add.w	fp, fp, #1
 8004a76:	901b      	str	r0, [sp, #108]	; 0x6c
 8004a78:	e7bf      	b.n	80049fa <_strtod_l+0x152>
 8004a7a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8004a7c:	191a      	adds	r2, r3, r4
 8004a7e:	921b      	str	r2, [sp, #108]	; 0x6c
 8004a80:	5d1b      	ldrb	r3, [r3, r4]
 8004a82:	f1bb 0f00 	cmp.w	fp, #0
 8004a86:	d036      	beq.n	8004af6 <_strtod_l+0x24e>
 8004a88:	9004      	str	r0, [sp, #16]
 8004a8a:	465c      	mov	r4, fp
 8004a8c:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 8004a90:	2a09      	cmp	r2, #9
 8004a92:	d912      	bls.n	8004aba <_strtod_l+0x212>
 8004a94:	2201      	movs	r2, #1
 8004a96:	e7c2      	b.n	8004a1e <_strtod_l+0x176>
 8004a98:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8004a9a:	1c5a      	adds	r2, r3, #1
 8004a9c:	921b      	str	r2, [sp, #108]	; 0x6c
 8004a9e:	785b      	ldrb	r3, [r3, #1]
 8004aa0:	3001      	adds	r0, #1
 8004aa2:	2b30      	cmp	r3, #48	; 0x30
 8004aa4:	d0f8      	beq.n	8004a98 <_strtod_l+0x1f0>
 8004aa6:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
 8004aaa:	2a08      	cmp	r2, #8
 8004aac:	f200 84dc 	bhi.w	8005468 <_strtod_l+0xbc0>
 8004ab0:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8004ab2:	9004      	str	r0, [sp, #16]
 8004ab4:	2000      	movs	r0, #0
 8004ab6:	9208      	str	r2, [sp, #32]
 8004ab8:	4604      	mov	r4, r0
 8004aba:	3b30      	subs	r3, #48	; 0x30
 8004abc:	f100 0201 	add.w	r2, r0, #1
 8004ac0:	d013      	beq.n	8004aea <_strtod_l+0x242>
 8004ac2:	9904      	ldr	r1, [sp, #16]
 8004ac4:	4411      	add	r1, r2
 8004ac6:	9104      	str	r1, [sp, #16]
 8004ac8:	4622      	mov	r2, r4
 8004aca:	1905      	adds	r5, r0, r4
 8004acc:	210a      	movs	r1, #10
 8004ace:	42aa      	cmp	r2, r5
 8004ad0:	d113      	bne.n	8004afa <_strtod_l+0x252>
 8004ad2:	1822      	adds	r2, r4, r0
 8004ad4:	2a08      	cmp	r2, #8
 8004ad6:	f104 0401 	add.w	r4, r4, #1
 8004ada:	4404      	add	r4, r0
 8004adc:	dc1b      	bgt.n	8004b16 <_strtod_l+0x26e>
 8004ade:	9906      	ldr	r1, [sp, #24]
 8004ae0:	220a      	movs	r2, #10
 8004ae2:	fb02 3301 	mla	r3, r2, r1, r3
 8004ae6:	9306      	str	r3, [sp, #24]
 8004ae8:	2200      	movs	r2, #0
 8004aea:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8004aec:	1c59      	adds	r1, r3, #1
 8004aee:	911b      	str	r1, [sp, #108]	; 0x6c
 8004af0:	785b      	ldrb	r3, [r3, #1]
 8004af2:	4610      	mov	r0, r2
 8004af4:	e7ca      	b.n	8004a8c <_strtod_l+0x1e4>
 8004af6:	4658      	mov	r0, fp
 8004af8:	e7d3      	b.n	8004aa2 <_strtod_l+0x1fa>
 8004afa:	2a08      	cmp	r2, #8
 8004afc:	dc04      	bgt.n	8004b08 <_strtod_l+0x260>
 8004afe:	9f06      	ldr	r7, [sp, #24]
 8004b00:	434f      	muls	r7, r1
 8004b02:	9706      	str	r7, [sp, #24]
 8004b04:	3201      	adds	r2, #1
 8004b06:	e7e2      	b.n	8004ace <_strtod_l+0x226>
 8004b08:	1c57      	adds	r7, r2, #1
 8004b0a:	2f10      	cmp	r7, #16
 8004b0c:	bfde      	ittt	le
 8004b0e:	9f05      	ldrle	r7, [sp, #20]
 8004b10:	434f      	mulle	r7, r1
 8004b12:	9705      	strle	r7, [sp, #20]
 8004b14:	e7f6      	b.n	8004b04 <_strtod_l+0x25c>
 8004b16:	2c10      	cmp	r4, #16
 8004b18:	bfdf      	itttt	le
 8004b1a:	9905      	ldrle	r1, [sp, #20]
 8004b1c:	220a      	movle	r2, #10
 8004b1e:	fb02 3301 	mlale	r3, r2, r1, r3
 8004b22:	9305      	strle	r3, [sp, #20]
 8004b24:	e7e0      	b.n	8004ae8 <_strtod_l+0x240>
 8004b26:	2300      	movs	r3, #0
 8004b28:	9304      	str	r3, [sp, #16]
 8004b2a:	2201      	movs	r2, #1
 8004b2c:	e77c      	b.n	8004a28 <_strtod_l+0x180>
 8004b2e:	2700      	movs	r7, #0
 8004b30:	1cb3      	adds	r3, r6, #2
 8004b32:	931b      	str	r3, [sp, #108]	; 0x6c
 8004b34:	78b3      	ldrb	r3, [r6, #2]
 8004b36:	e784      	b.n	8004a42 <_strtod_l+0x19a>
 8004b38:	2701      	movs	r7, #1
 8004b3a:	e7f9      	b.n	8004b30 <_strtod_l+0x288>
 8004b3c:	0800a77c 	.word	0x0800a77c
 8004b40:	0800a490 	.word	0x0800a490
 8004b44:	7ff00000 	.word	0x7ff00000
 8004b48:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8004b4a:	1c59      	adds	r1, r3, #1
 8004b4c:	911b      	str	r1, [sp, #108]	; 0x6c
 8004b4e:	785b      	ldrb	r3, [r3, #1]
 8004b50:	2b30      	cmp	r3, #48	; 0x30
 8004b52:	d0f9      	beq.n	8004b48 <_strtod_l+0x2a0>
 8004b54:	f1a3 0131 	sub.w	r1, r3, #49	; 0x31
 8004b58:	2908      	cmp	r1, #8
 8004b5a:	f63f af78 	bhi.w	8004a4e <_strtod_l+0x1a6>
 8004b5e:	f1a3 0c30 	sub.w	ip, r3, #48	; 0x30
 8004b62:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8004b64:	9309      	str	r3, [sp, #36]	; 0x24
 8004b66:	f04f 0e0a 	mov.w	lr, #10
 8004b6a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8004b6c:	1c59      	adds	r1, r3, #1
 8004b6e:	911b      	str	r1, [sp, #108]	; 0x6c
 8004b70:	785b      	ldrb	r3, [r3, #1]
 8004b72:	f1a3 0530 	sub.w	r5, r3, #48	; 0x30
 8004b76:	2d09      	cmp	r5, #9
 8004b78:	d935      	bls.n	8004be6 <_strtod_l+0x33e>
 8004b7a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8004b7c:	1b49      	subs	r1, r1, r5
 8004b7e:	2908      	cmp	r1, #8
 8004b80:	f644 651f 	movw	r5, #19999	; 0x4e1f
 8004b84:	dc02      	bgt.n	8004b8c <_strtod_l+0x2e4>
 8004b86:	4565      	cmp	r5, ip
 8004b88:	bfa8      	it	ge
 8004b8a:	4665      	movge	r5, ip
 8004b8c:	b107      	cbz	r7, 8004b90 <_strtod_l+0x2e8>
 8004b8e:	426d      	negs	r5, r5
 8004b90:	2c00      	cmp	r4, #0
 8004b92:	d14c      	bne.n	8004c2e <_strtod_l+0x386>
 8004b94:	9907      	ldr	r1, [sp, #28]
 8004b96:	4301      	orrs	r1, r0
 8004b98:	f47f aec7 	bne.w	800492a <_strtod_l+0x82>
 8004b9c:	2a00      	cmp	r2, #0
 8004b9e:	f47f aee0 	bne.w	8004962 <_strtod_l+0xba>
 8004ba2:	2b69      	cmp	r3, #105	; 0x69
 8004ba4:	d026      	beq.n	8004bf4 <_strtod_l+0x34c>
 8004ba6:	dc23      	bgt.n	8004bf0 <_strtod_l+0x348>
 8004ba8:	2b49      	cmp	r3, #73	; 0x49
 8004baa:	d023      	beq.n	8004bf4 <_strtod_l+0x34c>
 8004bac:	2b4e      	cmp	r3, #78	; 0x4e
 8004bae:	f47f aed8 	bne.w	8004962 <_strtod_l+0xba>
 8004bb2:	499c      	ldr	r1, [pc, #624]	; (8004e24 <_strtod_l+0x57c>)
 8004bb4:	a81b      	add	r0, sp, #108	; 0x6c
 8004bb6:	f002 f86b 	bl	8006c90 <__match>
 8004bba:	2800      	cmp	r0, #0
 8004bbc:	f43f aed1 	beq.w	8004962 <_strtod_l+0xba>
 8004bc0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8004bc2:	781b      	ldrb	r3, [r3, #0]
 8004bc4:	2b28      	cmp	r3, #40	; 0x28
 8004bc6:	d12c      	bne.n	8004c22 <_strtod_l+0x37a>
 8004bc8:	4997      	ldr	r1, [pc, #604]	; (8004e28 <_strtod_l+0x580>)
 8004bca:	aa1e      	add	r2, sp, #120	; 0x78
 8004bcc:	a81b      	add	r0, sp, #108	; 0x6c
 8004bce:	f002 f873 	bl	8006cb8 <__hexnan>
 8004bd2:	2805      	cmp	r0, #5
 8004bd4:	d125      	bne.n	8004c22 <_strtod_l+0x37a>
 8004bd6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8004bd8:	f8dd 8078 	ldr.w	r8, [sp, #120]	; 0x78
 8004bdc:	f043 49ff 	orr.w	r9, r3, #2139095040	; 0x7f800000
 8004be0:	f449 09e0 	orr.w	r9, r9, #7340032	; 0x700000
 8004be4:	e6a1      	b.n	800492a <_strtod_l+0x82>
 8004be6:	fb0e 3c0c 	mla	ip, lr, ip, r3
 8004bea:	f1ac 0c30 	sub.w	ip, ip, #48	; 0x30
 8004bee:	e7bc      	b.n	8004b6a <_strtod_l+0x2c2>
 8004bf0:	2b6e      	cmp	r3, #110	; 0x6e
 8004bf2:	e7dc      	b.n	8004bae <_strtod_l+0x306>
 8004bf4:	498d      	ldr	r1, [pc, #564]	; (8004e2c <_strtod_l+0x584>)
 8004bf6:	a81b      	add	r0, sp, #108	; 0x6c
 8004bf8:	f002 f84a 	bl	8006c90 <__match>
 8004bfc:	2800      	cmp	r0, #0
 8004bfe:	f43f aeb0 	beq.w	8004962 <_strtod_l+0xba>
 8004c02:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8004c04:	498a      	ldr	r1, [pc, #552]	; (8004e30 <_strtod_l+0x588>)
 8004c06:	3b01      	subs	r3, #1
 8004c08:	a81b      	add	r0, sp, #108	; 0x6c
 8004c0a:	931b      	str	r3, [sp, #108]	; 0x6c
 8004c0c:	f002 f840 	bl	8006c90 <__match>
 8004c10:	b910      	cbnz	r0, 8004c18 <_strtod_l+0x370>
 8004c12:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8004c14:	3301      	adds	r3, #1
 8004c16:	931b      	str	r3, [sp, #108]	; 0x6c
 8004c18:	f8df 9224 	ldr.w	r9, [pc, #548]	; 8004e40 <_strtod_l+0x598>
 8004c1c:	f04f 0800 	mov.w	r8, #0
 8004c20:	e683      	b.n	800492a <_strtod_l+0x82>
 8004c22:	4884      	ldr	r0, [pc, #528]	; (8004e34 <_strtod_l+0x58c>)
 8004c24:	f003 fc14 	bl	8008450 <nan>
 8004c28:	4680      	mov	r8, r0
 8004c2a:	4689      	mov	r9, r1
 8004c2c:	e67d      	b.n	800492a <_strtod_l+0x82>
 8004c2e:	9b04      	ldr	r3, [sp, #16]
 8004c30:	9806      	ldr	r0, [sp, #24]
 8004c32:	1aeb      	subs	r3, r5, r3
 8004c34:	f1bb 0f00 	cmp.w	fp, #0
 8004c38:	bf08      	it	eq
 8004c3a:	46a3      	moveq	fp, r4
 8004c3c:	2c10      	cmp	r4, #16
 8004c3e:	9307      	str	r3, [sp, #28]
 8004c40:	4626      	mov	r6, r4
 8004c42:	bfa8      	it	ge
 8004c44:	2610      	movge	r6, #16
 8004c46:	f7fb fc87 	bl	8000558 <__aeabi_ui2d>
 8004c4a:	2c09      	cmp	r4, #9
 8004c4c:	4680      	mov	r8, r0
 8004c4e:	4689      	mov	r9, r1
 8004c50:	dd13      	ble.n	8004c7a <_strtod_l+0x3d2>
 8004c52:	4b79      	ldr	r3, [pc, #484]	; (8004e38 <_strtod_l+0x590>)
 8004c54:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8004c58:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 8004c5c:	f7fb fcf6 	bl	800064c <__aeabi_dmul>
 8004c60:	4680      	mov	r8, r0
 8004c62:	9805      	ldr	r0, [sp, #20]
 8004c64:	4689      	mov	r9, r1
 8004c66:	f7fb fc77 	bl	8000558 <__aeabi_ui2d>
 8004c6a:	4602      	mov	r2, r0
 8004c6c:	460b      	mov	r3, r1
 8004c6e:	4640      	mov	r0, r8
 8004c70:	4649      	mov	r1, r9
 8004c72:	f7fb fb35 	bl	80002e0 <__adddf3>
 8004c76:	4680      	mov	r8, r0
 8004c78:	4689      	mov	r9, r1
 8004c7a:	2c0f      	cmp	r4, #15
 8004c7c:	dc36      	bgt.n	8004cec <_strtod_l+0x444>
 8004c7e:	9b07      	ldr	r3, [sp, #28]
 8004c80:	2b00      	cmp	r3, #0
 8004c82:	f43f ae52 	beq.w	800492a <_strtod_l+0x82>
 8004c86:	dd22      	ble.n	8004cce <_strtod_l+0x426>
 8004c88:	2b16      	cmp	r3, #22
 8004c8a:	dc09      	bgt.n	8004ca0 <_strtod_l+0x3f8>
 8004c8c:	4c6a      	ldr	r4, [pc, #424]	; (8004e38 <_strtod_l+0x590>)
 8004c8e:	eb04 04c3 	add.w	r4, r4, r3, lsl #3
 8004c92:	e9d4 0100 	ldrd	r0, r1, [r4]
 8004c96:	4642      	mov	r2, r8
 8004c98:	464b      	mov	r3, r9
 8004c9a:	f7fb fcd7 	bl	800064c <__aeabi_dmul>
 8004c9e:	e7c3      	b.n	8004c28 <_strtod_l+0x380>
 8004ca0:	9a07      	ldr	r2, [sp, #28]
 8004ca2:	f1c4 0325 	rsb	r3, r4, #37	; 0x25
 8004ca6:	4293      	cmp	r3, r2
 8004ca8:	db20      	blt.n	8004cec <_strtod_l+0x444>
 8004caa:	4d63      	ldr	r5, [pc, #396]	; (8004e38 <_strtod_l+0x590>)
 8004cac:	f1c4 040f 	rsb	r4, r4, #15
 8004cb0:	eb05 01c4 	add.w	r1, r5, r4, lsl #3
 8004cb4:	4642      	mov	r2, r8
 8004cb6:	464b      	mov	r3, r9
 8004cb8:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004cbc:	f7fb fcc6 	bl	800064c <__aeabi_dmul>
 8004cc0:	9b07      	ldr	r3, [sp, #28]
 8004cc2:	1b1c      	subs	r4, r3, r4
 8004cc4:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
 8004cc8:	e9d5 2300 	ldrd	r2, r3, [r5]
 8004ccc:	e7e5      	b.n	8004c9a <_strtod_l+0x3f2>
 8004cce:	9b07      	ldr	r3, [sp, #28]
 8004cd0:	3316      	adds	r3, #22
 8004cd2:	db0b      	blt.n	8004cec <_strtod_l+0x444>
 8004cd4:	9b04      	ldr	r3, [sp, #16]
 8004cd6:	4a58      	ldr	r2, [pc, #352]	; (8004e38 <_strtod_l+0x590>)
 8004cd8:	1b5d      	subs	r5, r3, r5
 8004cda:	eb02 05c5 	add.w	r5, r2, r5, lsl #3
 8004cde:	e9d5 2300 	ldrd	r2, r3, [r5]
 8004ce2:	4640      	mov	r0, r8
 8004ce4:	4649      	mov	r1, r9
 8004ce6:	f7fb fddb 	bl	80008a0 <__aeabi_ddiv>
 8004cea:	e79d      	b.n	8004c28 <_strtod_l+0x380>
 8004cec:	9b07      	ldr	r3, [sp, #28]
 8004cee:	1ba6      	subs	r6, r4, r6
 8004cf0:	441e      	add	r6, r3
 8004cf2:	2e00      	cmp	r6, #0
 8004cf4:	dd71      	ble.n	8004dda <_strtod_l+0x532>
 8004cf6:	f016 030f 	ands.w	r3, r6, #15
 8004cfa:	d00a      	beq.n	8004d12 <_strtod_l+0x46a>
 8004cfc:	494e      	ldr	r1, [pc, #312]	; (8004e38 <_strtod_l+0x590>)
 8004cfe:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8004d02:	4642      	mov	r2, r8
 8004d04:	464b      	mov	r3, r9
 8004d06:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004d0a:	f7fb fc9f 	bl	800064c <__aeabi_dmul>
 8004d0e:	4680      	mov	r8, r0
 8004d10:	4689      	mov	r9, r1
 8004d12:	f036 060f 	bics.w	r6, r6, #15
 8004d16:	d050      	beq.n	8004dba <_strtod_l+0x512>
 8004d18:	f5b6 7f9a 	cmp.w	r6, #308	; 0x134
 8004d1c:	dd27      	ble.n	8004d6e <_strtod_l+0x4c6>
 8004d1e:	f04f 0b00 	mov.w	fp, #0
 8004d22:	f8cd b010 	str.w	fp, [sp, #16]
 8004d26:	f8cd b020 	str.w	fp, [sp, #32]
 8004d2a:	f8cd b018 	str.w	fp, [sp, #24]
 8004d2e:	2322      	movs	r3, #34	; 0x22
 8004d30:	f8df 910c 	ldr.w	r9, [pc, #268]	; 8004e40 <_strtod_l+0x598>
 8004d34:	f8ca 3000 	str.w	r3, [sl]
 8004d38:	f04f 0800 	mov.w	r8, #0
 8004d3c:	9b08      	ldr	r3, [sp, #32]
 8004d3e:	2b00      	cmp	r3, #0
 8004d40:	f43f adf3 	beq.w	800492a <_strtod_l+0x82>
 8004d44:	991c      	ldr	r1, [sp, #112]	; 0x70
 8004d46:	4650      	mov	r0, sl
 8004d48:	f002 f92a 	bl	8006fa0 <_Bfree>
 8004d4c:	9906      	ldr	r1, [sp, #24]
 8004d4e:	4650      	mov	r0, sl
 8004d50:	f002 f926 	bl	8006fa0 <_Bfree>
 8004d54:	9904      	ldr	r1, [sp, #16]
 8004d56:	4650      	mov	r0, sl
 8004d58:	f002 f922 	bl	8006fa0 <_Bfree>
 8004d5c:	9908      	ldr	r1, [sp, #32]
 8004d5e:	4650      	mov	r0, sl
 8004d60:	f002 f91e 	bl	8006fa0 <_Bfree>
 8004d64:	4659      	mov	r1, fp
 8004d66:	4650      	mov	r0, sl
 8004d68:	f002 f91a 	bl	8006fa0 <_Bfree>
 8004d6c:	e5dd      	b.n	800492a <_strtod_l+0x82>
 8004d6e:	2300      	movs	r3, #0
 8004d70:	1136      	asrs	r6, r6, #4
 8004d72:	4640      	mov	r0, r8
 8004d74:	4649      	mov	r1, r9
 8004d76:	461f      	mov	r7, r3
 8004d78:	2e01      	cmp	r6, #1
 8004d7a:	dc21      	bgt.n	8004dc0 <_strtod_l+0x518>
 8004d7c:	b10b      	cbz	r3, 8004d82 <_strtod_l+0x4da>
 8004d7e:	4680      	mov	r8, r0
 8004d80:	4689      	mov	r9, r1
 8004d82:	4b2e      	ldr	r3, [pc, #184]	; (8004e3c <_strtod_l+0x594>)
 8004d84:	f1a9 7954 	sub.w	r9, r9, #55574528	; 0x3500000
 8004d88:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 8004d8c:	4642      	mov	r2, r8
 8004d8e:	464b      	mov	r3, r9
 8004d90:	e9d7 0100 	ldrd	r0, r1, [r7]
 8004d94:	f7fb fc5a 	bl	800064c <__aeabi_dmul>
 8004d98:	4b29      	ldr	r3, [pc, #164]	; (8004e40 <_strtod_l+0x598>)
 8004d9a:	460a      	mov	r2, r1
 8004d9c:	400b      	ands	r3, r1
 8004d9e:	4929      	ldr	r1, [pc, #164]	; (8004e44 <_strtod_l+0x59c>)
 8004da0:	428b      	cmp	r3, r1
 8004da2:	4680      	mov	r8, r0
 8004da4:	d8bb      	bhi.n	8004d1e <_strtod_l+0x476>
 8004da6:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 8004daa:	428b      	cmp	r3, r1
 8004dac:	bf86      	itte	hi
 8004dae:	f8df 9098 	ldrhi.w	r9, [pc, #152]	; 8004e48 <_strtod_l+0x5a0>
 8004db2:	f04f 38ff 	movhi.w	r8, #4294967295
 8004db6:	f102 7954 	addls.w	r9, r2, #55574528	; 0x3500000
 8004dba:	2300      	movs	r3, #0
 8004dbc:	9305      	str	r3, [sp, #20]
 8004dbe:	e07e      	b.n	8004ebe <_strtod_l+0x616>
 8004dc0:	07f2      	lsls	r2, r6, #31
 8004dc2:	d507      	bpl.n	8004dd4 <_strtod_l+0x52c>
 8004dc4:	4b1d      	ldr	r3, [pc, #116]	; (8004e3c <_strtod_l+0x594>)
 8004dc6:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8004dca:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004dce:	f7fb fc3d 	bl	800064c <__aeabi_dmul>
 8004dd2:	2301      	movs	r3, #1
 8004dd4:	3701      	adds	r7, #1
 8004dd6:	1076      	asrs	r6, r6, #1
 8004dd8:	e7ce      	b.n	8004d78 <_strtod_l+0x4d0>
 8004dda:	d0ee      	beq.n	8004dba <_strtod_l+0x512>
 8004ddc:	4276      	negs	r6, r6
 8004dde:	f016 020f 	ands.w	r2, r6, #15
 8004de2:	d00a      	beq.n	8004dfa <_strtod_l+0x552>
 8004de4:	4b14      	ldr	r3, [pc, #80]	; (8004e38 <_strtod_l+0x590>)
 8004de6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8004dea:	4640      	mov	r0, r8
 8004dec:	4649      	mov	r1, r9
 8004dee:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004df2:	f7fb fd55 	bl	80008a0 <__aeabi_ddiv>
 8004df6:	4680      	mov	r8, r0
 8004df8:	4689      	mov	r9, r1
 8004dfa:	1136      	asrs	r6, r6, #4
 8004dfc:	d0dd      	beq.n	8004dba <_strtod_l+0x512>
 8004dfe:	2e1f      	cmp	r6, #31
 8004e00:	dd24      	ble.n	8004e4c <_strtod_l+0x5a4>
 8004e02:	f04f 0b00 	mov.w	fp, #0
 8004e06:	f8cd b010 	str.w	fp, [sp, #16]
 8004e0a:	f8cd b020 	str.w	fp, [sp, #32]
 8004e0e:	f8cd b018 	str.w	fp, [sp, #24]
 8004e12:	2322      	movs	r3, #34	; 0x22
 8004e14:	f04f 0800 	mov.w	r8, #0
 8004e18:	f04f 0900 	mov.w	r9, #0
 8004e1c:	f8ca 3000 	str.w	r3, [sl]
 8004e20:	e78c      	b.n	8004d3c <_strtod_l+0x494>
 8004e22:	bf00      	nop
 8004e24:	0800a465 	.word	0x0800a465
 8004e28:	0800a4a4 	.word	0x0800a4a4
 8004e2c:	0800a45d 	.word	0x0800a45d
 8004e30:	0800a698 	.word	0x0800a698
 8004e34:	0800a593 	.word	0x0800a593
 8004e38:	0800a818 	.word	0x0800a818
 8004e3c:	0800a7f0 	.word	0x0800a7f0
 8004e40:	7ff00000 	.word	0x7ff00000
 8004e44:	7ca00000 	.word	0x7ca00000
 8004e48:	7fefffff 	.word	0x7fefffff
 8004e4c:	f016 0310 	ands.w	r3, r6, #16
 8004e50:	bf18      	it	ne
 8004e52:	236a      	movne	r3, #106	; 0x6a
 8004e54:	4fb3      	ldr	r7, [pc, #716]	; (8005124 <_strtod_l+0x87c>)
 8004e56:	9305      	str	r3, [sp, #20]
 8004e58:	4640      	mov	r0, r8
 8004e5a:	4649      	mov	r1, r9
 8004e5c:	2300      	movs	r3, #0
 8004e5e:	07f2      	lsls	r2, r6, #31
 8004e60:	d504      	bpl.n	8004e6c <_strtod_l+0x5c4>
 8004e62:	e9d7 2300 	ldrd	r2, r3, [r7]
 8004e66:	f7fb fbf1 	bl	800064c <__aeabi_dmul>
 8004e6a:	2301      	movs	r3, #1
 8004e6c:	1076      	asrs	r6, r6, #1
 8004e6e:	f107 0708 	add.w	r7, r7, #8
 8004e72:	d1f4      	bne.n	8004e5e <_strtod_l+0x5b6>
 8004e74:	b10b      	cbz	r3, 8004e7a <_strtod_l+0x5d2>
 8004e76:	4680      	mov	r8, r0
 8004e78:	4689      	mov	r9, r1
 8004e7a:	9b05      	ldr	r3, [sp, #20]
 8004e7c:	b1bb      	cbz	r3, 8004eae <_strtod_l+0x606>
 8004e7e:	f3c9 530a 	ubfx	r3, r9, #20, #11
 8004e82:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8004e86:	2b00      	cmp	r3, #0
 8004e88:	4649      	mov	r1, r9
 8004e8a:	dd10      	ble.n	8004eae <_strtod_l+0x606>
 8004e8c:	2b1f      	cmp	r3, #31
 8004e8e:	f340 8128 	ble.w	80050e2 <_strtod_l+0x83a>
 8004e92:	2b34      	cmp	r3, #52	; 0x34
 8004e94:	bfde      	ittt	le
 8004e96:	3b20      	suble	r3, #32
 8004e98:	f04f 32ff 	movle.w	r2, #4294967295
 8004e9c:	fa02 f303 	lslle.w	r3, r2, r3
 8004ea0:	f04f 0800 	mov.w	r8, #0
 8004ea4:	bfcc      	ite	gt
 8004ea6:	f04f 795c 	movgt.w	r9, #57671680	; 0x3700000
 8004eaa:	ea03 0901 	andle.w	r9, r3, r1
 8004eae:	2200      	movs	r2, #0
 8004eb0:	2300      	movs	r3, #0
 8004eb2:	4640      	mov	r0, r8
 8004eb4:	4649      	mov	r1, r9
 8004eb6:	f7fb fe31 	bl	8000b1c <__aeabi_dcmpeq>
 8004eba:	2800      	cmp	r0, #0
 8004ebc:	d1a1      	bne.n	8004e02 <_strtod_l+0x55a>
 8004ebe:	9b06      	ldr	r3, [sp, #24]
 8004ec0:	9300      	str	r3, [sp, #0]
 8004ec2:	9908      	ldr	r1, [sp, #32]
 8004ec4:	4623      	mov	r3, r4
 8004ec6:	465a      	mov	r2, fp
 8004ec8:	4650      	mov	r0, sl
 8004eca:	f002 f8d5 	bl	8007078 <__s2b>
 8004ece:	9008      	str	r0, [sp, #32]
 8004ed0:	2800      	cmp	r0, #0
 8004ed2:	f43f af24 	beq.w	8004d1e <_strtod_l+0x476>
 8004ed6:	9b04      	ldr	r3, [sp, #16]
 8004ed8:	1b5d      	subs	r5, r3, r5
 8004eda:	9b07      	ldr	r3, [sp, #28]
 8004edc:	2b00      	cmp	r3, #0
 8004ede:	bfb4      	ite	lt
 8004ee0:	462b      	movlt	r3, r5
 8004ee2:	2300      	movge	r3, #0
 8004ee4:	930e      	str	r3, [sp, #56]	; 0x38
 8004ee6:	9b07      	ldr	r3, [sp, #28]
 8004ee8:	f04f 0b00 	mov.w	fp, #0
 8004eec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8004ef0:	9316      	str	r3, [sp, #88]	; 0x58
 8004ef2:	f8cd b010 	str.w	fp, [sp, #16]
 8004ef6:	9b08      	ldr	r3, [sp, #32]
 8004ef8:	4650      	mov	r0, sl
 8004efa:	6859      	ldr	r1, [r3, #4]
 8004efc:	f002 f810 	bl	8006f20 <_Balloc>
 8004f00:	9006      	str	r0, [sp, #24]
 8004f02:	2800      	cmp	r0, #0
 8004f04:	f43f af13 	beq.w	8004d2e <_strtod_l+0x486>
 8004f08:	9b08      	ldr	r3, [sp, #32]
 8004f0a:	691a      	ldr	r2, [r3, #16]
 8004f0c:	3202      	adds	r2, #2
 8004f0e:	f103 010c 	add.w	r1, r3, #12
 8004f12:	0092      	lsls	r2, r2, #2
 8004f14:	300c      	adds	r0, #12
 8004f16:	f7fe fac7 	bl	80034a8 <memcpy>
 8004f1a:	ab1e      	add	r3, sp, #120	; 0x78
 8004f1c:	9301      	str	r3, [sp, #4]
 8004f1e:	ab1d      	add	r3, sp, #116	; 0x74
 8004f20:	9300      	str	r3, [sp, #0]
 8004f22:	4642      	mov	r2, r8
 8004f24:	464b      	mov	r3, r9
 8004f26:	4650      	mov	r0, sl
 8004f28:	e9cd 890a 	strd	r8, r9, [sp, #40]	; 0x28
 8004f2c:	f002 fbde 	bl	80076ec <__d2b>
 8004f30:	901c      	str	r0, [sp, #112]	; 0x70
 8004f32:	2800      	cmp	r0, #0
 8004f34:	f43f aefb 	beq.w	8004d2e <_strtod_l+0x486>
 8004f38:	2101      	movs	r1, #1
 8004f3a:	4650      	mov	r0, sl
 8004f3c:	f002 f934 	bl	80071a8 <__i2b>
 8004f40:	9004      	str	r0, [sp, #16]
 8004f42:	4603      	mov	r3, r0
 8004f44:	2800      	cmp	r0, #0
 8004f46:	f43f aef2 	beq.w	8004d2e <_strtod_l+0x486>
 8004f4a:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8004f4c:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8004f4e:	2d00      	cmp	r5, #0
 8004f50:	bfab      	itete	ge
 8004f52:	9b0e      	ldrge	r3, [sp, #56]	; 0x38
 8004f54:	9b16      	ldrlt	r3, [sp, #88]	; 0x58
 8004f56:	9c16      	ldrge	r4, [sp, #88]	; 0x58
 8004f58:	9e0e      	ldrlt	r6, [sp, #56]	; 0x38
 8004f5a:	bfac      	ite	ge
 8004f5c:	18ee      	addge	r6, r5, r3
 8004f5e:	1b5c      	sublt	r4, r3, r5
 8004f60:	9b05      	ldr	r3, [sp, #20]
 8004f62:	1aed      	subs	r5, r5, r3
 8004f64:	4415      	add	r5, r2
 8004f66:	4b70      	ldr	r3, [pc, #448]	; (8005128 <_strtod_l+0x880>)
 8004f68:	3d01      	subs	r5, #1
 8004f6a:	429d      	cmp	r5, r3
 8004f6c:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 8004f70:	f280 80c9 	bge.w	8005106 <_strtod_l+0x85e>
 8004f74:	1b5b      	subs	r3, r3, r5
 8004f76:	2b1f      	cmp	r3, #31
 8004f78:	eba2 0203 	sub.w	r2, r2, r3
 8004f7c:	f04f 0701 	mov.w	r7, #1
 8004f80:	f300 80b6 	bgt.w	80050f0 <_strtod_l+0x848>
 8004f84:	fa07 f303 	lsl.w	r3, r7, r3
 8004f88:	930f      	str	r3, [sp, #60]	; 0x3c
 8004f8a:	2500      	movs	r5, #0
 8004f8c:	18b7      	adds	r7, r6, r2
 8004f8e:	9b05      	ldr	r3, [sp, #20]
 8004f90:	42be      	cmp	r6, r7
 8004f92:	4414      	add	r4, r2
 8004f94:	441c      	add	r4, r3
 8004f96:	4633      	mov	r3, r6
 8004f98:	bfa8      	it	ge
 8004f9a:	463b      	movge	r3, r7
 8004f9c:	42a3      	cmp	r3, r4
 8004f9e:	bfa8      	it	ge
 8004fa0:	4623      	movge	r3, r4
 8004fa2:	2b00      	cmp	r3, #0
 8004fa4:	bfc2      	ittt	gt
 8004fa6:	1aff      	subgt	r7, r7, r3
 8004fa8:	1ae4      	subgt	r4, r4, r3
 8004faa:	1af6      	subgt	r6, r6, r3
 8004fac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004fae:	2b00      	cmp	r3, #0
 8004fb0:	dd17      	ble.n	8004fe2 <_strtod_l+0x73a>
 8004fb2:	9904      	ldr	r1, [sp, #16]
 8004fb4:	461a      	mov	r2, r3
 8004fb6:	4650      	mov	r0, sl
 8004fb8:	f002 f9b2 	bl	8007320 <__pow5mult>
 8004fbc:	9004      	str	r0, [sp, #16]
 8004fbe:	2800      	cmp	r0, #0
 8004fc0:	f43f aeb5 	beq.w	8004d2e <_strtod_l+0x486>
 8004fc4:	4601      	mov	r1, r0
 8004fc6:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8004fc8:	4650      	mov	r0, sl
 8004fca:	f002 f903 	bl	80071d4 <__multiply>
 8004fce:	9009      	str	r0, [sp, #36]	; 0x24
 8004fd0:	2800      	cmp	r0, #0
 8004fd2:	f43f aeac 	beq.w	8004d2e <_strtod_l+0x486>
 8004fd6:	991c      	ldr	r1, [sp, #112]	; 0x70
 8004fd8:	4650      	mov	r0, sl
 8004fda:	f001 ffe1 	bl	8006fa0 <_Bfree>
 8004fde:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004fe0:	931c      	str	r3, [sp, #112]	; 0x70
 8004fe2:	2f00      	cmp	r7, #0
 8004fe4:	f300 8093 	bgt.w	800510e <_strtod_l+0x866>
 8004fe8:	9b07      	ldr	r3, [sp, #28]
 8004fea:	2b00      	cmp	r3, #0
 8004fec:	dd08      	ble.n	8005000 <_strtod_l+0x758>
 8004fee:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8004ff0:	9906      	ldr	r1, [sp, #24]
 8004ff2:	4650      	mov	r0, sl
 8004ff4:	f002 f994 	bl	8007320 <__pow5mult>
 8004ff8:	9006      	str	r0, [sp, #24]
 8004ffa:	2800      	cmp	r0, #0
 8004ffc:	f43f ae97 	beq.w	8004d2e <_strtod_l+0x486>
 8005000:	2c00      	cmp	r4, #0
 8005002:	dd08      	ble.n	8005016 <_strtod_l+0x76e>
 8005004:	9906      	ldr	r1, [sp, #24]
 8005006:	4622      	mov	r2, r4
 8005008:	4650      	mov	r0, sl
 800500a:	f002 f9e3 	bl	80073d4 <__lshift>
 800500e:	9006      	str	r0, [sp, #24]
 8005010:	2800      	cmp	r0, #0
 8005012:	f43f ae8c 	beq.w	8004d2e <_strtod_l+0x486>
 8005016:	2e00      	cmp	r6, #0
 8005018:	dd08      	ble.n	800502c <_strtod_l+0x784>
 800501a:	9904      	ldr	r1, [sp, #16]
 800501c:	4632      	mov	r2, r6
 800501e:	4650      	mov	r0, sl
 8005020:	f002 f9d8 	bl	80073d4 <__lshift>
 8005024:	9004      	str	r0, [sp, #16]
 8005026:	2800      	cmp	r0, #0
 8005028:	f43f ae81 	beq.w	8004d2e <_strtod_l+0x486>
 800502c:	9a06      	ldr	r2, [sp, #24]
 800502e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8005030:	4650      	mov	r0, sl
 8005032:	f002 fa57 	bl	80074e4 <__mdiff>
 8005036:	4683      	mov	fp, r0
 8005038:	2800      	cmp	r0, #0
 800503a:	f43f ae78 	beq.w	8004d2e <_strtod_l+0x486>
 800503e:	2400      	movs	r4, #0
 8005040:	68c3      	ldr	r3, [r0, #12]
 8005042:	9904      	ldr	r1, [sp, #16]
 8005044:	60c4      	str	r4, [r0, #12]
 8005046:	930d      	str	r3, [sp, #52]	; 0x34
 8005048:	f002 fa30 	bl	80074ac <__mcmp>
 800504c:	42a0      	cmp	r0, r4
 800504e:	da71      	bge.n	8005134 <_strtod_l+0x88c>
 8005050:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005052:	ea53 0308 	orrs.w	r3, r3, r8
 8005056:	f040 8097 	bne.w	8005188 <_strtod_l+0x8e0>
 800505a:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800505e:	2b00      	cmp	r3, #0
 8005060:	f040 8092 	bne.w	8005188 <_strtod_l+0x8e0>
 8005064:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8005068:	0d1b      	lsrs	r3, r3, #20
 800506a:	051b      	lsls	r3, r3, #20
 800506c:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 8005070:	f240 808a 	bls.w	8005188 <_strtod_l+0x8e0>
 8005074:	f8db 3014 	ldr.w	r3, [fp, #20]
 8005078:	b923      	cbnz	r3, 8005084 <_strtod_l+0x7dc>
 800507a:	f8db 3010 	ldr.w	r3, [fp, #16]
 800507e:	2b01      	cmp	r3, #1
 8005080:	f340 8082 	ble.w	8005188 <_strtod_l+0x8e0>
 8005084:	4659      	mov	r1, fp
 8005086:	2201      	movs	r2, #1
 8005088:	4650      	mov	r0, sl
 800508a:	f002 f9a3 	bl	80073d4 <__lshift>
 800508e:	9904      	ldr	r1, [sp, #16]
 8005090:	4683      	mov	fp, r0
 8005092:	f002 fa0b 	bl	80074ac <__mcmp>
 8005096:	2800      	cmp	r0, #0
 8005098:	dd76      	ble.n	8005188 <_strtod_l+0x8e0>
 800509a:	9905      	ldr	r1, [sp, #20]
 800509c:	4a23      	ldr	r2, [pc, #140]	; (800512c <_strtod_l+0x884>)
 800509e:	464b      	mov	r3, r9
 80050a0:	2900      	cmp	r1, #0
 80050a2:	f000 8092 	beq.w	80051ca <_strtod_l+0x922>
 80050a6:	ea02 0109 	and.w	r1, r2, r9
 80050aa:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 80050ae:	f300 808c 	bgt.w	80051ca <_strtod_l+0x922>
 80050b2:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 80050b6:	f77f aeac 	ble.w	8004e12 <_strtod_l+0x56a>
 80050ba:	4a1d      	ldr	r2, [pc, #116]	; (8005130 <_strtod_l+0x888>)
 80050bc:	2300      	movs	r3, #0
 80050be:	e9cd 3214 	strd	r3, r2, [sp, #80]	; 0x50
 80050c2:	4640      	mov	r0, r8
 80050c4:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 80050c8:	4649      	mov	r1, r9
 80050ca:	f7fb fabf 	bl	800064c <__aeabi_dmul>
 80050ce:	460b      	mov	r3, r1
 80050d0:	4303      	orrs	r3, r0
 80050d2:	bf08      	it	eq
 80050d4:	2322      	moveq	r3, #34	; 0x22
 80050d6:	4680      	mov	r8, r0
 80050d8:	4689      	mov	r9, r1
 80050da:	bf08      	it	eq
 80050dc:	f8ca 3000 	streq.w	r3, [sl]
 80050e0:	e630      	b.n	8004d44 <_strtod_l+0x49c>
 80050e2:	f04f 32ff 	mov.w	r2, #4294967295
 80050e6:	fa02 f303 	lsl.w	r3, r2, r3
 80050ea:	ea03 0808 	and.w	r8, r3, r8
 80050ee:	e6de      	b.n	8004eae <_strtod_l+0x606>
 80050f0:	f1c5 457f 	rsb	r5, r5, #4278190080	; 0xff000000
 80050f4:	f505 057f 	add.w	r5, r5, #16711680	; 0xff0000
 80050f8:	f505 457b 	add.w	r5, r5, #64256	; 0xfb00
 80050fc:	35e2      	adds	r5, #226	; 0xe2
 80050fe:	fa07 f505 	lsl.w	r5, r7, r5
 8005102:	970f      	str	r7, [sp, #60]	; 0x3c
 8005104:	e742      	b.n	8004f8c <_strtod_l+0x6e4>
 8005106:	2301      	movs	r3, #1
 8005108:	2500      	movs	r5, #0
 800510a:	930f      	str	r3, [sp, #60]	; 0x3c
 800510c:	e73e      	b.n	8004f8c <_strtod_l+0x6e4>
 800510e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8005110:	463a      	mov	r2, r7
 8005112:	4650      	mov	r0, sl
 8005114:	f002 f95e 	bl	80073d4 <__lshift>
 8005118:	901c      	str	r0, [sp, #112]	; 0x70
 800511a:	2800      	cmp	r0, #0
 800511c:	f47f af64 	bne.w	8004fe8 <_strtod_l+0x740>
 8005120:	e605      	b.n	8004d2e <_strtod_l+0x486>
 8005122:	bf00      	nop
 8005124:	0800a4b8 	.word	0x0800a4b8
 8005128:	fffffc02 	.word	0xfffffc02
 800512c:	7ff00000 	.word	0x7ff00000
 8005130:	39500000 	.word	0x39500000
 8005134:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 8005138:	d166      	bne.n	8005208 <_strtod_l+0x960>
 800513a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800513c:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8005140:	b35a      	cbz	r2, 800519a <_strtod_l+0x8f2>
 8005142:	4a9d      	ldr	r2, [pc, #628]	; (80053b8 <_strtod_l+0xb10>)
 8005144:	4293      	cmp	r3, r2
 8005146:	d12c      	bne.n	80051a2 <_strtod_l+0x8fa>
 8005148:	9b05      	ldr	r3, [sp, #20]
 800514a:	4640      	mov	r0, r8
 800514c:	b303      	cbz	r3, 8005190 <_strtod_l+0x8e8>
 800514e:	4a9b      	ldr	r2, [pc, #620]	; (80053bc <_strtod_l+0xb14>)
 8005150:	464b      	mov	r3, r9
 8005152:	401a      	ands	r2, r3
 8005154:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
 8005158:	f04f 31ff 	mov.w	r1, #4294967295
 800515c:	d81b      	bhi.n	8005196 <_strtod_l+0x8ee>
 800515e:	0d12      	lsrs	r2, r2, #20
 8005160:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 8005164:	fa01 f303 	lsl.w	r3, r1, r3
 8005168:	4298      	cmp	r0, r3
 800516a:	d11a      	bne.n	80051a2 <_strtod_l+0x8fa>
 800516c:	4b94      	ldr	r3, [pc, #592]	; (80053c0 <_strtod_l+0xb18>)
 800516e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005170:	429a      	cmp	r2, r3
 8005172:	d102      	bne.n	800517a <_strtod_l+0x8d2>
 8005174:	3001      	adds	r0, #1
 8005176:	f43f adda 	beq.w	8004d2e <_strtod_l+0x486>
 800517a:	4b90      	ldr	r3, [pc, #576]	; (80053bc <_strtod_l+0xb14>)
 800517c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800517e:	401a      	ands	r2, r3
 8005180:	f502 1980 	add.w	r9, r2, #1048576	; 0x100000
 8005184:	f04f 0800 	mov.w	r8, #0
 8005188:	9b05      	ldr	r3, [sp, #20]
 800518a:	2b00      	cmp	r3, #0
 800518c:	d195      	bne.n	80050ba <_strtod_l+0x812>
 800518e:	e5d9      	b.n	8004d44 <_strtod_l+0x49c>
 8005190:	f04f 33ff 	mov.w	r3, #4294967295
 8005194:	e7e8      	b.n	8005168 <_strtod_l+0x8c0>
 8005196:	460b      	mov	r3, r1
 8005198:	e7e6      	b.n	8005168 <_strtod_l+0x8c0>
 800519a:	ea53 0308 	orrs.w	r3, r3, r8
 800519e:	f43f af7c 	beq.w	800509a <_strtod_l+0x7f2>
 80051a2:	b1e5      	cbz	r5, 80051de <_strtod_l+0x936>
 80051a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80051a6:	421d      	tst	r5, r3
 80051a8:	d0ee      	beq.n	8005188 <_strtod_l+0x8e0>
 80051aa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80051ac:	9a05      	ldr	r2, [sp, #20]
 80051ae:	4640      	mov	r0, r8
 80051b0:	4649      	mov	r1, r9
 80051b2:	b1c3      	cbz	r3, 80051e6 <_strtod_l+0x93e>
 80051b4:	f7ff fb57 	bl	8004866 <sulp>
 80051b8:	4602      	mov	r2, r0
 80051ba:	460b      	mov	r3, r1
 80051bc:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 80051c0:	f7fb f88e 	bl	80002e0 <__adddf3>
 80051c4:	4680      	mov	r8, r0
 80051c6:	4689      	mov	r9, r1
 80051c8:	e7de      	b.n	8005188 <_strtod_l+0x8e0>
 80051ca:	4013      	ands	r3, r2
 80051cc:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 80051d0:	ea6f 5913 	mvn.w	r9, r3, lsr #20
 80051d4:	ea6f 5909 	mvn.w	r9, r9, lsl #20
 80051d8:	f04f 38ff 	mov.w	r8, #4294967295
 80051dc:	e7d4      	b.n	8005188 <_strtod_l+0x8e0>
 80051de:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80051e0:	ea13 0f08 	tst.w	r3, r8
 80051e4:	e7e0      	b.n	80051a8 <_strtod_l+0x900>
 80051e6:	f7ff fb3e 	bl	8004866 <sulp>
 80051ea:	4602      	mov	r2, r0
 80051ec:	460b      	mov	r3, r1
 80051ee:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 80051f2:	f7fb f873 	bl	80002dc <__aeabi_dsub>
 80051f6:	2200      	movs	r2, #0
 80051f8:	2300      	movs	r3, #0
 80051fa:	4680      	mov	r8, r0
 80051fc:	4689      	mov	r9, r1
 80051fe:	f7fb fc8d 	bl	8000b1c <__aeabi_dcmpeq>
 8005202:	2800      	cmp	r0, #0
 8005204:	d0c0      	beq.n	8005188 <_strtod_l+0x8e0>
 8005206:	e604      	b.n	8004e12 <_strtod_l+0x56a>
 8005208:	9904      	ldr	r1, [sp, #16]
 800520a:	4658      	mov	r0, fp
 800520c:	f002 faca 	bl	80077a4 <__ratio>
 8005210:	2200      	movs	r2, #0
 8005212:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8005216:	4606      	mov	r6, r0
 8005218:	460f      	mov	r7, r1
 800521a:	f7fb fc93 	bl	8000b44 <__aeabi_dcmple>
 800521e:	2800      	cmp	r0, #0
 8005220:	d075      	beq.n	800530e <_strtod_l+0xa66>
 8005222:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005224:	2b00      	cmp	r3, #0
 8005226:	d047      	beq.n	80052b8 <_strtod_l+0xa10>
 8005228:	4f66      	ldr	r7, [pc, #408]	; (80053c4 <_strtod_l+0xb1c>)
 800522a:	2600      	movs	r6, #0
 800522c:	4d65      	ldr	r5, [pc, #404]	; (80053c4 <_strtod_l+0xb1c>)
 800522e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005230:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8005234:	0d1b      	lsrs	r3, r3, #20
 8005236:	051b      	lsls	r3, r3, #20
 8005238:	930f      	str	r3, [sp, #60]	; 0x3c
 800523a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800523c:	4b62      	ldr	r3, [pc, #392]	; (80053c8 <_strtod_l+0xb20>)
 800523e:	429a      	cmp	r2, r3
 8005240:	f040 80ca 	bne.w	80053d8 <_strtod_l+0xb30>
 8005244:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8005248:	e9cd 2314 	strd	r2, r3, [sp, #80]	; 0x50
 800524c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800524e:	f1a3 7954 	sub.w	r9, r3, #55574528	; 0x3500000
 8005252:	4640      	mov	r0, r8
 8005254:	4649      	mov	r1, r9
 8005256:	f002 f9cf 	bl	80075f8 <__ulp>
 800525a:	4602      	mov	r2, r0
 800525c:	460b      	mov	r3, r1
 800525e:	4630      	mov	r0, r6
 8005260:	4639      	mov	r1, r7
 8005262:	f7fb f9f3 	bl	800064c <__aeabi_dmul>
 8005266:	4642      	mov	r2, r8
 8005268:	464b      	mov	r3, r9
 800526a:	f7fb f839 	bl	80002e0 <__adddf3>
 800526e:	460b      	mov	r3, r1
 8005270:	4952      	ldr	r1, [pc, #328]	; (80053bc <_strtod_l+0xb14>)
 8005272:	4a56      	ldr	r2, [pc, #344]	; (80053cc <_strtod_l+0xb24>)
 8005274:	4019      	ands	r1, r3
 8005276:	4291      	cmp	r1, r2
 8005278:	4680      	mov	r8, r0
 800527a:	d95e      	bls.n	800533a <_strtod_l+0xa92>
 800527c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800527e:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 8005282:	4293      	cmp	r3, r2
 8005284:	d103      	bne.n	800528e <_strtod_l+0x9e6>
 8005286:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005288:	3301      	adds	r3, #1
 800528a:	f43f ad50 	beq.w	8004d2e <_strtod_l+0x486>
 800528e:	f8df 9130 	ldr.w	r9, [pc, #304]	; 80053c0 <_strtod_l+0xb18>
 8005292:	f04f 38ff 	mov.w	r8, #4294967295
 8005296:	991c      	ldr	r1, [sp, #112]	; 0x70
 8005298:	4650      	mov	r0, sl
 800529a:	f001 fe81 	bl	8006fa0 <_Bfree>
 800529e:	9906      	ldr	r1, [sp, #24]
 80052a0:	4650      	mov	r0, sl
 80052a2:	f001 fe7d 	bl	8006fa0 <_Bfree>
 80052a6:	9904      	ldr	r1, [sp, #16]
 80052a8:	4650      	mov	r0, sl
 80052aa:	f001 fe79 	bl	8006fa0 <_Bfree>
 80052ae:	4659      	mov	r1, fp
 80052b0:	4650      	mov	r0, sl
 80052b2:	f001 fe75 	bl	8006fa0 <_Bfree>
 80052b6:	e61e      	b.n	8004ef6 <_strtod_l+0x64e>
 80052b8:	f1b8 0f00 	cmp.w	r8, #0
 80052bc:	d119      	bne.n	80052f2 <_strtod_l+0xa4a>
 80052be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80052c0:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80052c4:	b9e3      	cbnz	r3, 8005300 <_strtod_l+0xa58>
 80052c6:	4b3f      	ldr	r3, [pc, #252]	; (80053c4 <_strtod_l+0xb1c>)
 80052c8:	2200      	movs	r2, #0
 80052ca:	4630      	mov	r0, r6
 80052cc:	4639      	mov	r1, r7
 80052ce:	f7fb fc2f 	bl	8000b30 <__aeabi_dcmplt>
 80052d2:	b9c8      	cbnz	r0, 8005308 <_strtod_l+0xa60>
 80052d4:	4b3e      	ldr	r3, [pc, #248]	; (80053d0 <_strtod_l+0xb28>)
 80052d6:	2200      	movs	r2, #0
 80052d8:	4630      	mov	r0, r6
 80052da:	4639      	mov	r1, r7
 80052dc:	f7fb f9b6 	bl	800064c <__aeabi_dmul>
 80052e0:	4604      	mov	r4, r0
 80052e2:	460d      	mov	r5, r1
 80052e4:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 80052e8:	9418      	str	r4, [sp, #96]	; 0x60
 80052ea:	9319      	str	r3, [sp, #100]	; 0x64
 80052ec:	e9dd 6718 	ldrd	r6, r7, [sp, #96]	; 0x60
 80052f0:	e79d      	b.n	800522e <_strtod_l+0x986>
 80052f2:	f1b8 0f01 	cmp.w	r8, #1
 80052f6:	d103      	bne.n	8005300 <_strtod_l+0xa58>
 80052f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80052fa:	2b00      	cmp	r3, #0
 80052fc:	f43f ad89 	beq.w	8004e12 <_strtod_l+0x56a>
 8005300:	4f34      	ldr	r7, [pc, #208]	; (80053d4 <_strtod_l+0xb2c>)
 8005302:	2600      	movs	r6, #0
 8005304:	2400      	movs	r4, #0
 8005306:	e791      	b.n	800522c <_strtod_l+0x984>
 8005308:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800530a:	4d31      	ldr	r5, [pc, #196]	; (80053d0 <_strtod_l+0xb28>)
 800530c:	e7ea      	b.n	80052e4 <_strtod_l+0xa3c>
 800530e:	4b30      	ldr	r3, [pc, #192]	; (80053d0 <_strtod_l+0xb28>)
 8005310:	2200      	movs	r2, #0
 8005312:	4630      	mov	r0, r6
 8005314:	4639      	mov	r1, r7
 8005316:	f7fb f999 	bl	800064c <__aeabi_dmul>
 800531a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800531c:	4604      	mov	r4, r0
 800531e:	460d      	mov	r5, r1
 8005320:	b933      	cbnz	r3, 8005330 <_strtod_l+0xa88>
 8005322:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8005326:	9010      	str	r0, [sp, #64]	; 0x40
 8005328:	9311      	str	r3, [sp, #68]	; 0x44
 800532a:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 800532e:	e77e      	b.n	800522e <_strtod_l+0x986>
 8005330:	4602      	mov	r2, r0
 8005332:	460b      	mov	r3, r1
 8005334:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 8005338:	e7f7      	b.n	800532a <_strtod_l+0xa82>
 800533a:	f103 7954 	add.w	r9, r3, #55574528	; 0x3500000
 800533e:	9b05      	ldr	r3, [sp, #20]
 8005340:	2b00      	cmp	r3, #0
 8005342:	d1a8      	bne.n	8005296 <_strtod_l+0x9ee>
 8005344:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8005348:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800534a:	0d1b      	lsrs	r3, r3, #20
 800534c:	051b      	lsls	r3, r3, #20
 800534e:	429a      	cmp	r2, r3
 8005350:	d1a1      	bne.n	8005296 <_strtod_l+0x9ee>
 8005352:	4620      	mov	r0, r4
 8005354:	4629      	mov	r1, r5
 8005356:	f7fb fff1 	bl	800133c <__aeabi_d2lz>
 800535a:	f7fb f949 	bl	80005f0 <__aeabi_l2d>
 800535e:	4602      	mov	r2, r0
 8005360:	460b      	mov	r3, r1
 8005362:	4620      	mov	r0, r4
 8005364:	4629      	mov	r1, r5
 8005366:	f7fa ffb9 	bl	80002dc <__aeabi_dsub>
 800536a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800536c:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8005370:	ea43 0308 	orr.w	r3, r3, r8
 8005374:	4313      	orrs	r3, r2
 8005376:	4604      	mov	r4, r0
 8005378:	460d      	mov	r5, r1
 800537a:	d068      	beq.n	800544e <_strtod_l+0xba6>
 800537c:	a30a      	add	r3, pc, #40	; (adr r3, 80053a8 <_strtod_l+0xb00>)
 800537e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005382:	f7fb fbd5 	bl	8000b30 <__aeabi_dcmplt>
 8005386:	2800      	cmp	r0, #0
 8005388:	f47f acdc 	bne.w	8004d44 <_strtod_l+0x49c>
 800538c:	a308      	add	r3, pc, #32	; (adr r3, 80053b0 <_strtod_l+0xb08>)
 800538e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005392:	4620      	mov	r0, r4
 8005394:	4629      	mov	r1, r5
 8005396:	f7fb fbe9 	bl	8000b6c <__aeabi_dcmpgt>
 800539a:	2800      	cmp	r0, #0
 800539c:	f43f af7b 	beq.w	8005296 <_strtod_l+0x9ee>
 80053a0:	e4d0      	b.n	8004d44 <_strtod_l+0x49c>
 80053a2:	bf00      	nop
 80053a4:	f3af 8000 	nop.w
 80053a8:	94a03595 	.word	0x94a03595
 80053ac:	3fdfffff 	.word	0x3fdfffff
 80053b0:	35afe535 	.word	0x35afe535
 80053b4:	3fe00000 	.word	0x3fe00000
 80053b8:	000fffff 	.word	0x000fffff
 80053bc:	7ff00000 	.word	0x7ff00000
 80053c0:	7fefffff 	.word	0x7fefffff
 80053c4:	3ff00000 	.word	0x3ff00000
 80053c8:	7fe00000 	.word	0x7fe00000
 80053cc:	7c9fffff 	.word	0x7c9fffff
 80053d0:	3fe00000 	.word	0x3fe00000
 80053d4:	bff00000 	.word	0xbff00000
 80053d8:	9b05      	ldr	r3, [sp, #20]
 80053da:	b313      	cbz	r3, 8005422 <_strtod_l+0xb7a>
 80053dc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80053de:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 80053e2:	d81e      	bhi.n	8005422 <_strtod_l+0xb7a>
 80053e4:	a326      	add	r3, pc, #152	; (adr r3, 8005480 <_strtod_l+0xbd8>)
 80053e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80053ea:	4620      	mov	r0, r4
 80053ec:	4629      	mov	r1, r5
 80053ee:	f7fb fba9 	bl	8000b44 <__aeabi_dcmple>
 80053f2:	b190      	cbz	r0, 800541a <_strtod_l+0xb72>
 80053f4:	4629      	mov	r1, r5
 80053f6:	4620      	mov	r0, r4
 80053f8:	f7fb fc00 	bl	8000bfc <__aeabi_d2uiz>
 80053fc:	2801      	cmp	r0, #1
 80053fe:	bf38      	it	cc
 8005400:	2001      	movcc	r0, #1
 8005402:	f7fb f8a9 	bl	8000558 <__aeabi_ui2d>
 8005406:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005408:	4604      	mov	r4, r0
 800540a:	460d      	mov	r5, r1
 800540c:	b9d3      	cbnz	r3, 8005444 <_strtod_l+0xb9c>
 800540e:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8005412:	9012      	str	r0, [sp, #72]	; 0x48
 8005414:	9313      	str	r3, [sp, #76]	; 0x4c
 8005416:	e9dd 6712 	ldrd	r6, r7, [sp, #72]	; 0x48
 800541a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800541c:	f107 63d6 	add.w	r3, r7, #112197632	; 0x6b00000
 8005420:	1a9f      	subs	r7, r3, r2
 8005422:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8005426:	f002 f8e7 	bl	80075f8 <__ulp>
 800542a:	4602      	mov	r2, r0
 800542c:	460b      	mov	r3, r1
 800542e:	4630      	mov	r0, r6
 8005430:	4639      	mov	r1, r7
 8005432:	f7fb f90b 	bl	800064c <__aeabi_dmul>
 8005436:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800543a:	f7fa ff51 	bl	80002e0 <__adddf3>
 800543e:	4680      	mov	r8, r0
 8005440:	4689      	mov	r9, r1
 8005442:	e77c      	b.n	800533e <_strtod_l+0xa96>
 8005444:	4602      	mov	r2, r0
 8005446:	460b      	mov	r3, r1
 8005448:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
 800544c:	e7e3      	b.n	8005416 <_strtod_l+0xb6e>
 800544e:	a30e      	add	r3, pc, #56	; (adr r3, 8005488 <_strtod_l+0xbe0>)
 8005450:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005454:	f7fb fb6c 	bl	8000b30 <__aeabi_dcmplt>
 8005458:	e79f      	b.n	800539a <_strtod_l+0xaf2>
 800545a:	2300      	movs	r3, #0
 800545c:	930c      	str	r3, [sp, #48]	; 0x30
 800545e:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8005460:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8005462:	6013      	str	r3, [r2, #0]
 8005464:	f7ff ba65 	b.w	8004932 <_strtod_l+0x8a>
 8005468:	2b65      	cmp	r3, #101	; 0x65
 800546a:	f43f ab5c 	beq.w	8004b26 <_strtod_l+0x27e>
 800546e:	2b45      	cmp	r3, #69	; 0x45
 8005470:	f43f ab59 	beq.w	8004b26 <_strtod_l+0x27e>
 8005474:	2201      	movs	r2, #1
 8005476:	f7ff bb8d 	b.w	8004b94 <_strtod_l+0x2ec>
 800547a:	bf00      	nop
 800547c:	f3af 8000 	nop.w
 8005480:	ffc00000 	.word	0xffc00000
 8005484:	41dfffff 	.word	0x41dfffff
 8005488:	94a03595 	.word	0x94a03595
 800548c:	3fcfffff 	.word	0x3fcfffff

08005490 <_strtod_r>:
 8005490:	4b01      	ldr	r3, [pc, #4]	; (8005498 <_strtod_r+0x8>)
 8005492:	f7ff ba09 	b.w	80048a8 <_strtod_l>
 8005496:	bf00      	nop
 8005498:	20000b78 	.word	0x20000b78

0800549c <strtok>:
 800549c:	4b16      	ldr	r3, [pc, #88]	; (80054f8 <strtok+0x5c>)
 800549e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80054a2:	681f      	ldr	r7, [r3, #0]
 80054a4:	6dbc      	ldr	r4, [r7, #88]	; 0x58
 80054a6:	4605      	mov	r5, r0
 80054a8:	460e      	mov	r6, r1
 80054aa:	b9ec      	cbnz	r4, 80054e8 <strtok+0x4c>
 80054ac:	2050      	movs	r0, #80	; 0x50
 80054ae:	f7fd ffeb 	bl	8003488 <malloc>
 80054b2:	4602      	mov	r2, r0
 80054b4:	65b8      	str	r0, [r7, #88]	; 0x58
 80054b6:	b920      	cbnz	r0, 80054c2 <strtok+0x26>
 80054b8:	4b10      	ldr	r3, [pc, #64]	; (80054fc <strtok+0x60>)
 80054ba:	4811      	ldr	r0, [pc, #68]	; (8005500 <strtok+0x64>)
 80054bc:	2157      	movs	r1, #87	; 0x57
 80054be:	f000 f9a3 	bl	8005808 <__assert_func>
 80054c2:	e9c0 4400 	strd	r4, r4, [r0]
 80054c6:	e9c0 4402 	strd	r4, r4, [r0, #8]
 80054ca:	e9c0 4404 	strd	r4, r4, [r0, #16]
 80054ce:	e9c0 440a 	strd	r4, r4, [r0, #40]	; 0x28
 80054d2:	e9c0 440c 	strd	r4, r4, [r0, #48]	; 0x30
 80054d6:	e9c0 440e 	strd	r4, r4, [r0, #56]	; 0x38
 80054da:	e9c0 4410 	strd	r4, r4, [r0, #64]	; 0x40
 80054de:	e9c0 4412 	strd	r4, r4, [r0, #72]	; 0x48
 80054e2:	6184      	str	r4, [r0, #24]
 80054e4:	7704      	strb	r4, [r0, #28]
 80054e6:	6244      	str	r4, [r0, #36]	; 0x24
 80054e8:	6dba      	ldr	r2, [r7, #88]	; 0x58
 80054ea:	4631      	mov	r1, r6
 80054ec:	4628      	mov	r0, r5
 80054ee:	2301      	movs	r3, #1
 80054f0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80054f4:	f000 b806 	b.w	8005504 <__strtok_r>
 80054f8:	20000b10 	.word	0x20000b10
 80054fc:	0800a4e0 	.word	0x0800a4e0
 8005500:	0800a4f7 	.word	0x0800a4f7

08005504 <__strtok_r>:
 8005504:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005506:	b908      	cbnz	r0, 800550c <__strtok_r+0x8>
 8005508:	6810      	ldr	r0, [r2, #0]
 800550a:	b188      	cbz	r0, 8005530 <__strtok_r+0x2c>
 800550c:	4604      	mov	r4, r0
 800550e:	4620      	mov	r0, r4
 8005510:	f814 5b01 	ldrb.w	r5, [r4], #1
 8005514:	460f      	mov	r7, r1
 8005516:	f817 6b01 	ldrb.w	r6, [r7], #1
 800551a:	b91e      	cbnz	r6, 8005524 <__strtok_r+0x20>
 800551c:	b965      	cbnz	r5, 8005538 <__strtok_r+0x34>
 800551e:	6015      	str	r5, [r2, #0]
 8005520:	4628      	mov	r0, r5
 8005522:	e005      	b.n	8005530 <__strtok_r+0x2c>
 8005524:	42b5      	cmp	r5, r6
 8005526:	d1f6      	bne.n	8005516 <__strtok_r+0x12>
 8005528:	2b00      	cmp	r3, #0
 800552a:	d1f0      	bne.n	800550e <__strtok_r+0xa>
 800552c:	6014      	str	r4, [r2, #0]
 800552e:	7003      	strb	r3, [r0, #0]
 8005530:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005532:	461c      	mov	r4, r3
 8005534:	e00c      	b.n	8005550 <__strtok_r+0x4c>
 8005536:	b915      	cbnz	r5, 800553e <__strtok_r+0x3a>
 8005538:	f814 3b01 	ldrb.w	r3, [r4], #1
 800553c:	460e      	mov	r6, r1
 800553e:	f816 5b01 	ldrb.w	r5, [r6], #1
 8005542:	42ab      	cmp	r3, r5
 8005544:	d1f7      	bne.n	8005536 <__strtok_r+0x32>
 8005546:	2b00      	cmp	r3, #0
 8005548:	d0f3      	beq.n	8005532 <__strtok_r+0x2e>
 800554a:	2300      	movs	r3, #0
 800554c:	f804 3c01 	strb.w	r3, [r4, #-1]
 8005550:	6014      	str	r4, [r2, #0]
 8005552:	e7ed      	b.n	8005530 <__strtok_r+0x2c>

08005554 <_strtol_l.isra.0>:
 8005554:	2b01      	cmp	r3, #1
 8005556:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800555a:	4686      	mov	lr, r0
 800555c:	d001      	beq.n	8005562 <_strtol_l.isra.0+0xe>
 800555e:	2b24      	cmp	r3, #36	; 0x24
 8005560:	d906      	bls.n	8005570 <_strtol_l.isra.0+0x1c>
 8005562:	f7fd fdb9 	bl	80030d8 <__errno>
 8005566:	2316      	movs	r3, #22
 8005568:	6003      	str	r3, [r0, #0]
 800556a:	2000      	movs	r0, #0
 800556c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005570:	4e3a      	ldr	r6, [pc, #232]	; (800565c <_strtol_l.isra.0+0x108>)
 8005572:	468c      	mov	ip, r1
 8005574:	4660      	mov	r0, ip
 8005576:	f81c 4b01 	ldrb.w	r4, [ip], #1
 800557a:	5da5      	ldrb	r5, [r4, r6]
 800557c:	f015 0508 	ands.w	r5, r5, #8
 8005580:	d1f8      	bne.n	8005574 <_strtol_l.isra.0+0x20>
 8005582:	2c2d      	cmp	r4, #45	; 0x2d
 8005584:	d133      	bne.n	80055ee <_strtol_l.isra.0+0x9a>
 8005586:	f89c 4000 	ldrb.w	r4, [ip]
 800558a:	f04f 0801 	mov.w	r8, #1
 800558e:	f100 0c02 	add.w	ip, r0, #2
 8005592:	2b00      	cmp	r3, #0
 8005594:	d05d      	beq.n	8005652 <_strtol_l.isra.0+0xfe>
 8005596:	2b10      	cmp	r3, #16
 8005598:	d10c      	bne.n	80055b4 <_strtol_l.isra.0+0x60>
 800559a:	2c30      	cmp	r4, #48	; 0x30
 800559c:	d10a      	bne.n	80055b4 <_strtol_l.isra.0+0x60>
 800559e:	f89c 0000 	ldrb.w	r0, [ip]
 80055a2:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 80055a6:	2858      	cmp	r0, #88	; 0x58
 80055a8:	d14e      	bne.n	8005648 <_strtol_l.isra.0+0xf4>
 80055aa:	f89c 4001 	ldrb.w	r4, [ip, #1]
 80055ae:	2310      	movs	r3, #16
 80055b0:	f10c 0c02 	add.w	ip, ip, #2
 80055b4:	f108 4700 	add.w	r7, r8, #2147483648	; 0x80000000
 80055b8:	3f01      	subs	r7, #1
 80055ba:	2500      	movs	r5, #0
 80055bc:	fbb7 f9f3 	udiv	r9, r7, r3
 80055c0:	4628      	mov	r0, r5
 80055c2:	fb03 7a19 	mls	sl, r3, r9, r7
 80055c6:	f1a4 0630 	sub.w	r6, r4, #48	; 0x30
 80055ca:	2e09      	cmp	r6, #9
 80055cc:	d818      	bhi.n	8005600 <_strtol_l.isra.0+0xac>
 80055ce:	4634      	mov	r4, r6
 80055d0:	42a3      	cmp	r3, r4
 80055d2:	dd24      	ble.n	800561e <_strtol_l.isra.0+0xca>
 80055d4:	2d00      	cmp	r5, #0
 80055d6:	db1f      	blt.n	8005618 <_strtol_l.isra.0+0xc4>
 80055d8:	4581      	cmp	r9, r0
 80055da:	d31d      	bcc.n	8005618 <_strtol_l.isra.0+0xc4>
 80055dc:	d101      	bne.n	80055e2 <_strtol_l.isra.0+0x8e>
 80055de:	45a2      	cmp	sl, r4
 80055e0:	db1a      	blt.n	8005618 <_strtol_l.isra.0+0xc4>
 80055e2:	fb00 4003 	mla	r0, r0, r3, r4
 80055e6:	2501      	movs	r5, #1
 80055e8:	f81c 4b01 	ldrb.w	r4, [ip], #1
 80055ec:	e7eb      	b.n	80055c6 <_strtol_l.isra.0+0x72>
 80055ee:	2c2b      	cmp	r4, #43	; 0x2b
 80055f0:	bf08      	it	eq
 80055f2:	f89c 4000 	ldrbeq.w	r4, [ip]
 80055f6:	46a8      	mov	r8, r5
 80055f8:	bf08      	it	eq
 80055fa:	f100 0c02 	addeq.w	ip, r0, #2
 80055fe:	e7c8      	b.n	8005592 <_strtol_l.isra.0+0x3e>
 8005600:	f1a4 0641 	sub.w	r6, r4, #65	; 0x41
 8005604:	2e19      	cmp	r6, #25
 8005606:	d801      	bhi.n	800560c <_strtol_l.isra.0+0xb8>
 8005608:	3c37      	subs	r4, #55	; 0x37
 800560a:	e7e1      	b.n	80055d0 <_strtol_l.isra.0+0x7c>
 800560c:	f1a4 0661 	sub.w	r6, r4, #97	; 0x61
 8005610:	2e19      	cmp	r6, #25
 8005612:	d804      	bhi.n	800561e <_strtol_l.isra.0+0xca>
 8005614:	3c57      	subs	r4, #87	; 0x57
 8005616:	e7db      	b.n	80055d0 <_strtol_l.isra.0+0x7c>
 8005618:	f04f 35ff 	mov.w	r5, #4294967295
 800561c:	e7e4      	b.n	80055e8 <_strtol_l.isra.0+0x94>
 800561e:	2d00      	cmp	r5, #0
 8005620:	da08      	bge.n	8005634 <_strtol_l.isra.0+0xe0>
 8005622:	2322      	movs	r3, #34	; 0x22
 8005624:	f8ce 3000 	str.w	r3, [lr]
 8005628:	4638      	mov	r0, r7
 800562a:	2a00      	cmp	r2, #0
 800562c:	d09e      	beq.n	800556c <_strtol_l.isra.0+0x18>
 800562e:	f10c 31ff 	add.w	r1, ip, #4294967295
 8005632:	e007      	b.n	8005644 <_strtol_l.isra.0+0xf0>
 8005634:	f1b8 0f00 	cmp.w	r8, #0
 8005638:	d000      	beq.n	800563c <_strtol_l.isra.0+0xe8>
 800563a:	4240      	negs	r0, r0
 800563c:	2a00      	cmp	r2, #0
 800563e:	d095      	beq.n	800556c <_strtol_l.isra.0+0x18>
 8005640:	2d00      	cmp	r5, #0
 8005642:	d1f4      	bne.n	800562e <_strtol_l.isra.0+0xda>
 8005644:	6011      	str	r1, [r2, #0]
 8005646:	e791      	b.n	800556c <_strtol_l.isra.0+0x18>
 8005648:	2430      	movs	r4, #48	; 0x30
 800564a:	2b00      	cmp	r3, #0
 800564c:	d1b2      	bne.n	80055b4 <_strtol_l.isra.0+0x60>
 800564e:	2308      	movs	r3, #8
 8005650:	e7b0      	b.n	80055b4 <_strtol_l.isra.0+0x60>
 8005652:	2c30      	cmp	r4, #48	; 0x30
 8005654:	d0a3      	beq.n	800559e <_strtol_l.isra.0+0x4a>
 8005656:	230a      	movs	r3, #10
 8005658:	e7ac      	b.n	80055b4 <_strtol_l.isra.0+0x60>
 800565a:	bf00      	nop
 800565c:	0800a595 	.word	0x0800a595

08005660 <_strtol_r>:
 8005660:	f7ff bf78 	b.w	8005554 <_strtol_l.isra.0>

08005664 <__swbuf_r>:
 8005664:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005666:	460e      	mov	r6, r1
 8005668:	4614      	mov	r4, r2
 800566a:	4605      	mov	r5, r0
 800566c:	b118      	cbz	r0, 8005676 <__swbuf_r+0x12>
 800566e:	6983      	ldr	r3, [r0, #24]
 8005670:	b90b      	cbnz	r3, 8005676 <__swbuf_r+0x12>
 8005672:	f7fd fe27 	bl	80032c4 <__sinit>
 8005676:	4b21      	ldr	r3, [pc, #132]	; (80056fc <__swbuf_r+0x98>)
 8005678:	429c      	cmp	r4, r3
 800567a:	d12b      	bne.n	80056d4 <__swbuf_r+0x70>
 800567c:	686c      	ldr	r4, [r5, #4]
 800567e:	69a3      	ldr	r3, [r4, #24]
 8005680:	60a3      	str	r3, [r4, #8]
 8005682:	89a3      	ldrh	r3, [r4, #12]
 8005684:	071a      	lsls	r2, r3, #28
 8005686:	d52f      	bpl.n	80056e8 <__swbuf_r+0x84>
 8005688:	6923      	ldr	r3, [r4, #16]
 800568a:	b36b      	cbz	r3, 80056e8 <__swbuf_r+0x84>
 800568c:	6923      	ldr	r3, [r4, #16]
 800568e:	6820      	ldr	r0, [r4, #0]
 8005690:	1ac0      	subs	r0, r0, r3
 8005692:	6963      	ldr	r3, [r4, #20]
 8005694:	b2f6      	uxtb	r6, r6
 8005696:	4283      	cmp	r3, r0
 8005698:	4637      	mov	r7, r6
 800569a:	dc04      	bgt.n	80056a6 <__swbuf_r+0x42>
 800569c:	4621      	mov	r1, r4
 800569e:	4628      	mov	r0, r5
 80056a0:	f000 ffe2 	bl	8006668 <_fflush_r>
 80056a4:	bb30      	cbnz	r0, 80056f4 <__swbuf_r+0x90>
 80056a6:	68a3      	ldr	r3, [r4, #8]
 80056a8:	3b01      	subs	r3, #1
 80056aa:	60a3      	str	r3, [r4, #8]
 80056ac:	6823      	ldr	r3, [r4, #0]
 80056ae:	1c5a      	adds	r2, r3, #1
 80056b0:	6022      	str	r2, [r4, #0]
 80056b2:	701e      	strb	r6, [r3, #0]
 80056b4:	6963      	ldr	r3, [r4, #20]
 80056b6:	3001      	adds	r0, #1
 80056b8:	4283      	cmp	r3, r0
 80056ba:	d004      	beq.n	80056c6 <__swbuf_r+0x62>
 80056bc:	89a3      	ldrh	r3, [r4, #12]
 80056be:	07db      	lsls	r3, r3, #31
 80056c0:	d506      	bpl.n	80056d0 <__swbuf_r+0x6c>
 80056c2:	2e0a      	cmp	r6, #10
 80056c4:	d104      	bne.n	80056d0 <__swbuf_r+0x6c>
 80056c6:	4621      	mov	r1, r4
 80056c8:	4628      	mov	r0, r5
 80056ca:	f000 ffcd 	bl	8006668 <_fflush_r>
 80056ce:	b988      	cbnz	r0, 80056f4 <__swbuf_r+0x90>
 80056d0:	4638      	mov	r0, r7
 80056d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80056d4:	4b0a      	ldr	r3, [pc, #40]	; (8005700 <__swbuf_r+0x9c>)
 80056d6:	429c      	cmp	r4, r3
 80056d8:	d101      	bne.n	80056de <__swbuf_r+0x7a>
 80056da:	68ac      	ldr	r4, [r5, #8]
 80056dc:	e7cf      	b.n	800567e <__swbuf_r+0x1a>
 80056de:	4b09      	ldr	r3, [pc, #36]	; (8005704 <__swbuf_r+0xa0>)
 80056e0:	429c      	cmp	r4, r3
 80056e2:	bf08      	it	eq
 80056e4:	68ec      	ldreq	r4, [r5, #12]
 80056e6:	e7ca      	b.n	800567e <__swbuf_r+0x1a>
 80056e8:	4621      	mov	r1, r4
 80056ea:	4628      	mov	r0, r5
 80056ec:	f000 f81e 	bl	800572c <__swsetup_r>
 80056f0:	2800      	cmp	r0, #0
 80056f2:	d0cb      	beq.n	800568c <__swbuf_r+0x28>
 80056f4:	f04f 37ff 	mov.w	r7, #4294967295
 80056f8:	e7ea      	b.n	80056d0 <__swbuf_r+0x6c>
 80056fa:	bf00      	nop
 80056fc:	0800a414 	.word	0x0800a414
 8005700:	0800a434 	.word	0x0800a434
 8005704:	0800a3f4 	.word	0x0800a3f4

08005708 <_write_r>:
 8005708:	b538      	push	{r3, r4, r5, lr}
 800570a:	4d07      	ldr	r5, [pc, #28]	; (8005728 <_write_r+0x20>)
 800570c:	4604      	mov	r4, r0
 800570e:	4608      	mov	r0, r1
 8005710:	4611      	mov	r1, r2
 8005712:	2200      	movs	r2, #0
 8005714:	602a      	str	r2, [r5, #0]
 8005716:	461a      	mov	r2, r3
 8005718:	f7fd f943 	bl	80029a2 <_write>
 800571c:	1c43      	adds	r3, r0, #1
 800571e:	d102      	bne.n	8005726 <_write_r+0x1e>
 8005720:	682b      	ldr	r3, [r5, #0]
 8005722:	b103      	cbz	r3, 8005726 <_write_r+0x1e>
 8005724:	6023      	str	r3, [r4, #0]
 8005726:	bd38      	pop	{r3, r4, r5, pc}
 8005728:	20000d5c 	.word	0x20000d5c

0800572c <__swsetup_r>:
 800572c:	4b32      	ldr	r3, [pc, #200]	; (80057f8 <__swsetup_r+0xcc>)
 800572e:	b570      	push	{r4, r5, r6, lr}
 8005730:	681d      	ldr	r5, [r3, #0]
 8005732:	4606      	mov	r6, r0
 8005734:	460c      	mov	r4, r1
 8005736:	b125      	cbz	r5, 8005742 <__swsetup_r+0x16>
 8005738:	69ab      	ldr	r3, [r5, #24]
 800573a:	b913      	cbnz	r3, 8005742 <__swsetup_r+0x16>
 800573c:	4628      	mov	r0, r5
 800573e:	f7fd fdc1 	bl	80032c4 <__sinit>
 8005742:	4b2e      	ldr	r3, [pc, #184]	; (80057fc <__swsetup_r+0xd0>)
 8005744:	429c      	cmp	r4, r3
 8005746:	d10f      	bne.n	8005768 <__swsetup_r+0x3c>
 8005748:	686c      	ldr	r4, [r5, #4]
 800574a:	89a3      	ldrh	r3, [r4, #12]
 800574c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8005750:	0719      	lsls	r1, r3, #28
 8005752:	d42c      	bmi.n	80057ae <__swsetup_r+0x82>
 8005754:	06dd      	lsls	r5, r3, #27
 8005756:	d411      	bmi.n	800577c <__swsetup_r+0x50>
 8005758:	2309      	movs	r3, #9
 800575a:	6033      	str	r3, [r6, #0]
 800575c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8005760:	81a3      	strh	r3, [r4, #12]
 8005762:	f04f 30ff 	mov.w	r0, #4294967295
 8005766:	e03e      	b.n	80057e6 <__swsetup_r+0xba>
 8005768:	4b25      	ldr	r3, [pc, #148]	; (8005800 <__swsetup_r+0xd4>)
 800576a:	429c      	cmp	r4, r3
 800576c:	d101      	bne.n	8005772 <__swsetup_r+0x46>
 800576e:	68ac      	ldr	r4, [r5, #8]
 8005770:	e7eb      	b.n	800574a <__swsetup_r+0x1e>
 8005772:	4b24      	ldr	r3, [pc, #144]	; (8005804 <__swsetup_r+0xd8>)
 8005774:	429c      	cmp	r4, r3
 8005776:	bf08      	it	eq
 8005778:	68ec      	ldreq	r4, [r5, #12]
 800577a:	e7e6      	b.n	800574a <__swsetup_r+0x1e>
 800577c:	0758      	lsls	r0, r3, #29
 800577e:	d512      	bpl.n	80057a6 <__swsetup_r+0x7a>
 8005780:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8005782:	b141      	cbz	r1, 8005796 <__swsetup_r+0x6a>
 8005784:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8005788:	4299      	cmp	r1, r3
 800578a:	d002      	beq.n	8005792 <__swsetup_r+0x66>
 800578c:	4630      	mov	r0, r6
 800578e:	f7fd feaf 	bl	80034f0 <_free_r>
 8005792:	2300      	movs	r3, #0
 8005794:	6363      	str	r3, [r4, #52]	; 0x34
 8005796:	89a3      	ldrh	r3, [r4, #12]
 8005798:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800579c:	81a3      	strh	r3, [r4, #12]
 800579e:	2300      	movs	r3, #0
 80057a0:	6063      	str	r3, [r4, #4]
 80057a2:	6923      	ldr	r3, [r4, #16]
 80057a4:	6023      	str	r3, [r4, #0]
 80057a6:	89a3      	ldrh	r3, [r4, #12]
 80057a8:	f043 0308 	orr.w	r3, r3, #8
 80057ac:	81a3      	strh	r3, [r4, #12]
 80057ae:	6923      	ldr	r3, [r4, #16]
 80057b0:	b94b      	cbnz	r3, 80057c6 <__swsetup_r+0x9a>
 80057b2:	89a3      	ldrh	r3, [r4, #12]
 80057b4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80057b8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80057bc:	d003      	beq.n	80057c6 <__swsetup_r+0x9a>
 80057be:	4621      	mov	r1, r4
 80057c0:	4630      	mov	r0, r6
 80057c2:	f001 fb4f 	bl	8006e64 <__smakebuf_r>
 80057c6:	89a0      	ldrh	r0, [r4, #12]
 80057c8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80057cc:	f010 0301 	ands.w	r3, r0, #1
 80057d0:	d00a      	beq.n	80057e8 <__swsetup_r+0xbc>
 80057d2:	2300      	movs	r3, #0
 80057d4:	60a3      	str	r3, [r4, #8]
 80057d6:	6963      	ldr	r3, [r4, #20]
 80057d8:	425b      	negs	r3, r3
 80057da:	61a3      	str	r3, [r4, #24]
 80057dc:	6923      	ldr	r3, [r4, #16]
 80057de:	b943      	cbnz	r3, 80057f2 <__swsetup_r+0xc6>
 80057e0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80057e4:	d1ba      	bne.n	800575c <__swsetup_r+0x30>
 80057e6:	bd70      	pop	{r4, r5, r6, pc}
 80057e8:	0781      	lsls	r1, r0, #30
 80057ea:	bf58      	it	pl
 80057ec:	6963      	ldrpl	r3, [r4, #20]
 80057ee:	60a3      	str	r3, [r4, #8]
 80057f0:	e7f4      	b.n	80057dc <__swsetup_r+0xb0>
 80057f2:	2000      	movs	r0, #0
 80057f4:	e7f7      	b.n	80057e6 <__swsetup_r+0xba>
 80057f6:	bf00      	nop
 80057f8:	20000b10 	.word	0x20000b10
 80057fc:	0800a414 	.word	0x0800a414
 8005800:	0800a434 	.word	0x0800a434
 8005804:	0800a3f4 	.word	0x0800a3f4

08005808 <__assert_func>:
 8005808:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800580a:	4614      	mov	r4, r2
 800580c:	461a      	mov	r2, r3
 800580e:	4b09      	ldr	r3, [pc, #36]	; (8005834 <__assert_func+0x2c>)
 8005810:	681b      	ldr	r3, [r3, #0]
 8005812:	4605      	mov	r5, r0
 8005814:	68d8      	ldr	r0, [r3, #12]
 8005816:	b14c      	cbz	r4, 800582c <__assert_func+0x24>
 8005818:	4b07      	ldr	r3, [pc, #28]	; (8005838 <__assert_func+0x30>)
 800581a:	9100      	str	r1, [sp, #0]
 800581c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8005820:	4906      	ldr	r1, [pc, #24]	; (800583c <__assert_func+0x34>)
 8005822:	462b      	mov	r3, r5
 8005824:	f000 ff6e 	bl	8006704 <fiprintf>
 8005828:	f002 ff29 	bl	800867e <abort>
 800582c:	4b04      	ldr	r3, [pc, #16]	; (8005840 <__assert_func+0x38>)
 800582e:	461c      	mov	r4, r3
 8005830:	e7f3      	b.n	800581a <__assert_func+0x12>
 8005832:	bf00      	nop
 8005834:	20000b10 	.word	0x20000b10
 8005838:	0800a558 	.word	0x0800a558
 800583c:	0800a565 	.word	0x0800a565
 8005840:	0800a593 	.word	0x0800a593

08005844 <_close_r>:
 8005844:	b538      	push	{r3, r4, r5, lr}
 8005846:	4d06      	ldr	r5, [pc, #24]	; (8005860 <_close_r+0x1c>)
 8005848:	2300      	movs	r3, #0
 800584a:	4604      	mov	r4, r0
 800584c:	4608      	mov	r0, r1
 800584e:	602b      	str	r3, [r5, #0]
 8005850:	f7fd f817 	bl	8002882 <_close>
 8005854:	1c43      	adds	r3, r0, #1
 8005856:	d102      	bne.n	800585e <_close_r+0x1a>
 8005858:	682b      	ldr	r3, [r5, #0]
 800585a:	b103      	cbz	r3, 800585e <_close_r+0x1a>
 800585c:	6023      	str	r3, [r4, #0]
 800585e:	bd38      	pop	{r3, r4, r5, pc}
 8005860:	20000d5c 	.word	0x20000d5c

08005864 <quorem>:
 8005864:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005868:	6903      	ldr	r3, [r0, #16]
 800586a:	690c      	ldr	r4, [r1, #16]
 800586c:	42a3      	cmp	r3, r4
 800586e:	4607      	mov	r7, r0
 8005870:	f2c0 8081 	blt.w	8005976 <quorem+0x112>
 8005874:	3c01      	subs	r4, #1
 8005876:	f101 0814 	add.w	r8, r1, #20
 800587a:	f100 0514 	add.w	r5, r0, #20
 800587e:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8005882:	9301      	str	r3, [sp, #4]
 8005884:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8005888:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800588c:	3301      	adds	r3, #1
 800588e:	429a      	cmp	r2, r3
 8005890:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8005894:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8005898:	fbb2 f6f3 	udiv	r6, r2, r3
 800589c:	d331      	bcc.n	8005902 <quorem+0x9e>
 800589e:	f04f 0e00 	mov.w	lr, #0
 80058a2:	4640      	mov	r0, r8
 80058a4:	46ac      	mov	ip, r5
 80058a6:	46f2      	mov	sl, lr
 80058a8:	f850 2b04 	ldr.w	r2, [r0], #4
 80058ac:	b293      	uxth	r3, r2
 80058ae:	fb06 e303 	mla	r3, r6, r3, lr
 80058b2:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 80058b6:	b29b      	uxth	r3, r3
 80058b8:	ebaa 0303 	sub.w	r3, sl, r3
 80058bc:	0c12      	lsrs	r2, r2, #16
 80058be:	f8dc a000 	ldr.w	sl, [ip]
 80058c2:	fb06 e202 	mla	r2, r6, r2, lr
 80058c6:	fa13 f38a 	uxtah	r3, r3, sl
 80058ca:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 80058ce:	fa1f fa82 	uxth.w	sl, r2
 80058d2:	f8dc 2000 	ldr.w	r2, [ip]
 80058d6:	ebca 4212 	rsb	r2, sl, r2, lsr #16
 80058da:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80058de:	b29b      	uxth	r3, r3
 80058e0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80058e4:	4581      	cmp	r9, r0
 80058e6:	f84c 3b04 	str.w	r3, [ip], #4
 80058ea:	ea4f 4a22 	mov.w	sl, r2, asr #16
 80058ee:	d2db      	bcs.n	80058a8 <quorem+0x44>
 80058f0:	f855 300b 	ldr.w	r3, [r5, fp]
 80058f4:	b92b      	cbnz	r3, 8005902 <quorem+0x9e>
 80058f6:	9b01      	ldr	r3, [sp, #4]
 80058f8:	3b04      	subs	r3, #4
 80058fa:	429d      	cmp	r5, r3
 80058fc:	461a      	mov	r2, r3
 80058fe:	d32e      	bcc.n	800595e <quorem+0xfa>
 8005900:	613c      	str	r4, [r7, #16]
 8005902:	4638      	mov	r0, r7
 8005904:	f001 fdd2 	bl	80074ac <__mcmp>
 8005908:	2800      	cmp	r0, #0
 800590a:	db24      	blt.n	8005956 <quorem+0xf2>
 800590c:	3601      	adds	r6, #1
 800590e:	4628      	mov	r0, r5
 8005910:	f04f 0c00 	mov.w	ip, #0
 8005914:	f858 2b04 	ldr.w	r2, [r8], #4
 8005918:	f8d0 e000 	ldr.w	lr, [r0]
 800591c:	b293      	uxth	r3, r2
 800591e:	ebac 0303 	sub.w	r3, ip, r3
 8005922:	0c12      	lsrs	r2, r2, #16
 8005924:	fa13 f38e 	uxtah	r3, r3, lr
 8005928:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 800592c:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8005930:	b29b      	uxth	r3, r3
 8005932:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8005936:	45c1      	cmp	r9, r8
 8005938:	f840 3b04 	str.w	r3, [r0], #4
 800593c:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8005940:	d2e8      	bcs.n	8005914 <quorem+0xb0>
 8005942:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8005946:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800594a:	b922      	cbnz	r2, 8005956 <quorem+0xf2>
 800594c:	3b04      	subs	r3, #4
 800594e:	429d      	cmp	r5, r3
 8005950:	461a      	mov	r2, r3
 8005952:	d30a      	bcc.n	800596a <quorem+0x106>
 8005954:	613c      	str	r4, [r7, #16]
 8005956:	4630      	mov	r0, r6
 8005958:	b003      	add	sp, #12
 800595a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800595e:	6812      	ldr	r2, [r2, #0]
 8005960:	3b04      	subs	r3, #4
 8005962:	2a00      	cmp	r2, #0
 8005964:	d1cc      	bne.n	8005900 <quorem+0x9c>
 8005966:	3c01      	subs	r4, #1
 8005968:	e7c7      	b.n	80058fa <quorem+0x96>
 800596a:	6812      	ldr	r2, [r2, #0]
 800596c:	3b04      	subs	r3, #4
 800596e:	2a00      	cmp	r2, #0
 8005970:	d1f0      	bne.n	8005954 <quorem+0xf0>
 8005972:	3c01      	subs	r4, #1
 8005974:	e7eb      	b.n	800594e <quorem+0xea>
 8005976:	2000      	movs	r0, #0
 8005978:	e7ee      	b.n	8005958 <quorem+0xf4>
 800597a:	0000      	movs	r0, r0
 800597c:	0000      	movs	r0, r0
	...

08005980 <_dtoa_r>:
 8005980:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005984:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8005986:	b099      	sub	sp, #100	; 0x64
 8005988:	4616      	mov	r6, r2
 800598a:	461f      	mov	r7, r3
 800598c:	e9cd 6704 	strd	r6, r7, [sp, #16]
 8005990:	f8dd 8094 	ldr.w	r8, [sp, #148]	; 0x94
 8005994:	4605      	mov	r5, r0
 8005996:	b974      	cbnz	r4, 80059b6 <_dtoa_r+0x36>
 8005998:	2010      	movs	r0, #16
 800599a:	f7fd fd75 	bl	8003488 <malloc>
 800599e:	4602      	mov	r2, r0
 80059a0:	6268      	str	r0, [r5, #36]	; 0x24
 80059a2:	b920      	cbnz	r0, 80059ae <_dtoa_r+0x2e>
 80059a4:	4ba8      	ldr	r3, [pc, #672]	; (8005c48 <_dtoa_r+0x2c8>)
 80059a6:	21ea      	movs	r1, #234	; 0xea
 80059a8:	48a8      	ldr	r0, [pc, #672]	; (8005c4c <_dtoa_r+0x2cc>)
 80059aa:	f7ff ff2d 	bl	8005808 <__assert_func>
 80059ae:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80059b2:	6004      	str	r4, [r0, #0]
 80059b4:	60c4      	str	r4, [r0, #12]
 80059b6:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 80059b8:	6819      	ldr	r1, [r3, #0]
 80059ba:	b151      	cbz	r1, 80059d2 <_dtoa_r+0x52>
 80059bc:	685a      	ldr	r2, [r3, #4]
 80059be:	604a      	str	r2, [r1, #4]
 80059c0:	2301      	movs	r3, #1
 80059c2:	4093      	lsls	r3, r2
 80059c4:	608b      	str	r3, [r1, #8]
 80059c6:	4628      	mov	r0, r5
 80059c8:	f001 faea 	bl	8006fa0 <_Bfree>
 80059cc:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 80059ce:	2200      	movs	r2, #0
 80059d0:	601a      	str	r2, [r3, #0]
 80059d2:	1e3b      	subs	r3, r7, #0
 80059d4:	bfb9      	ittee	lt
 80059d6:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 80059da:	9305      	strlt	r3, [sp, #20]
 80059dc:	2300      	movge	r3, #0
 80059de:	f8c8 3000 	strge.w	r3, [r8]
 80059e2:	f8dd 9014 	ldr.w	r9, [sp, #20]
 80059e6:	4b9a      	ldr	r3, [pc, #616]	; (8005c50 <_dtoa_r+0x2d0>)
 80059e8:	bfbc      	itt	lt
 80059ea:	2201      	movlt	r2, #1
 80059ec:	f8c8 2000 	strlt.w	r2, [r8]
 80059f0:	ea33 0309 	bics.w	r3, r3, r9
 80059f4:	d119      	bne.n	8005a2a <_dtoa_r+0xaa>
 80059f6:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80059f8:	f242 730f 	movw	r3, #9999	; 0x270f
 80059fc:	6013      	str	r3, [r2, #0]
 80059fe:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8005a02:	4333      	orrs	r3, r6
 8005a04:	f000 8581 	beq.w	800650a <_dtoa_r+0xb8a>
 8005a08:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8005a0a:	b953      	cbnz	r3, 8005a22 <_dtoa_r+0xa2>
 8005a0c:	4b91      	ldr	r3, [pc, #580]	; (8005c54 <_dtoa_r+0x2d4>)
 8005a0e:	e022      	b.n	8005a56 <_dtoa_r+0xd6>
 8005a10:	4b91      	ldr	r3, [pc, #580]	; (8005c58 <_dtoa_r+0x2d8>)
 8005a12:	9308      	str	r3, [sp, #32]
 8005a14:	3308      	adds	r3, #8
 8005a16:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8005a18:	6013      	str	r3, [r2, #0]
 8005a1a:	9808      	ldr	r0, [sp, #32]
 8005a1c:	b019      	add	sp, #100	; 0x64
 8005a1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005a22:	4b8c      	ldr	r3, [pc, #560]	; (8005c54 <_dtoa_r+0x2d4>)
 8005a24:	9308      	str	r3, [sp, #32]
 8005a26:	3303      	adds	r3, #3
 8005a28:	e7f5      	b.n	8005a16 <_dtoa_r+0x96>
 8005a2a:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 8005a2e:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 8005a32:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8005a36:	2200      	movs	r2, #0
 8005a38:	2300      	movs	r3, #0
 8005a3a:	f7fb f86f 	bl	8000b1c <__aeabi_dcmpeq>
 8005a3e:	4680      	mov	r8, r0
 8005a40:	b158      	cbz	r0, 8005a5a <_dtoa_r+0xda>
 8005a42:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8005a44:	2301      	movs	r3, #1
 8005a46:	6013      	str	r3, [r2, #0]
 8005a48:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8005a4a:	2b00      	cmp	r3, #0
 8005a4c:	f000 855a 	beq.w	8006504 <_dtoa_r+0xb84>
 8005a50:	4882      	ldr	r0, [pc, #520]	; (8005c5c <_dtoa_r+0x2dc>)
 8005a52:	6018      	str	r0, [r3, #0]
 8005a54:	1e43      	subs	r3, r0, #1
 8005a56:	9308      	str	r3, [sp, #32]
 8005a58:	e7df      	b.n	8005a1a <_dtoa_r+0x9a>
 8005a5a:	ab16      	add	r3, sp, #88	; 0x58
 8005a5c:	9301      	str	r3, [sp, #4]
 8005a5e:	ab17      	add	r3, sp, #92	; 0x5c
 8005a60:	9300      	str	r3, [sp, #0]
 8005a62:	4628      	mov	r0, r5
 8005a64:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8005a68:	f001 fe40 	bl	80076ec <__d2b>
 8005a6c:	f3c9 540a 	ubfx	r4, r9, #20, #11
 8005a70:	4682      	mov	sl, r0
 8005a72:	2c00      	cmp	r4, #0
 8005a74:	d07e      	beq.n	8005b74 <_dtoa_r+0x1f4>
 8005a76:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005a78:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
 8005a7c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8005a80:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8005a84:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
 8005a88:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 8005a8c:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
 8005a90:	4b73      	ldr	r3, [pc, #460]	; (8005c60 <_dtoa_r+0x2e0>)
 8005a92:	2200      	movs	r2, #0
 8005a94:	f7fa fc22 	bl	80002dc <__aeabi_dsub>
 8005a98:	a365      	add	r3, pc, #404	; (adr r3, 8005c30 <_dtoa_r+0x2b0>)
 8005a9a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005a9e:	f7fa fdd5 	bl	800064c <__aeabi_dmul>
 8005aa2:	a365      	add	r3, pc, #404	; (adr r3, 8005c38 <_dtoa_r+0x2b8>)
 8005aa4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005aa8:	f7fa fc1a 	bl	80002e0 <__adddf3>
 8005aac:	4606      	mov	r6, r0
 8005aae:	4620      	mov	r0, r4
 8005ab0:	460f      	mov	r7, r1
 8005ab2:	f7fa fd61 	bl	8000578 <__aeabi_i2d>
 8005ab6:	a362      	add	r3, pc, #392	; (adr r3, 8005c40 <_dtoa_r+0x2c0>)
 8005ab8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005abc:	f7fa fdc6 	bl	800064c <__aeabi_dmul>
 8005ac0:	4602      	mov	r2, r0
 8005ac2:	460b      	mov	r3, r1
 8005ac4:	4630      	mov	r0, r6
 8005ac6:	4639      	mov	r1, r7
 8005ac8:	f7fa fc0a 	bl	80002e0 <__adddf3>
 8005acc:	4606      	mov	r6, r0
 8005ace:	460f      	mov	r7, r1
 8005ad0:	f7fb f86c 	bl	8000bac <__aeabi_d2iz>
 8005ad4:	2200      	movs	r2, #0
 8005ad6:	4681      	mov	r9, r0
 8005ad8:	2300      	movs	r3, #0
 8005ada:	4630      	mov	r0, r6
 8005adc:	4639      	mov	r1, r7
 8005ade:	f7fb f827 	bl	8000b30 <__aeabi_dcmplt>
 8005ae2:	b148      	cbz	r0, 8005af8 <_dtoa_r+0x178>
 8005ae4:	4648      	mov	r0, r9
 8005ae6:	f7fa fd47 	bl	8000578 <__aeabi_i2d>
 8005aea:	4632      	mov	r2, r6
 8005aec:	463b      	mov	r3, r7
 8005aee:	f7fb f815 	bl	8000b1c <__aeabi_dcmpeq>
 8005af2:	b908      	cbnz	r0, 8005af8 <_dtoa_r+0x178>
 8005af4:	f109 39ff 	add.w	r9, r9, #4294967295
 8005af8:	f1b9 0f16 	cmp.w	r9, #22
 8005afc:	d857      	bhi.n	8005bae <_dtoa_r+0x22e>
 8005afe:	4b59      	ldr	r3, [pc, #356]	; (8005c64 <_dtoa_r+0x2e4>)
 8005b00:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
 8005b04:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005b08:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8005b0c:	f7fb f810 	bl	8000b30 <__aeabi_dcmplt>
 8005b10:	2800      	cmp	r0, #0
 8005b12:	d04e      	beq.n	8005bb2 <_dtoa_r+0x232>
 8005b14:	f109 39ff 	add.w	r9, r9, #4294967295
 8005b18:	2300      	movs	r3, #0
 8005b1a:	930f      	str	r3, [sp, #60]	; 0x3c
 8005b1c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8005b1e:	1b1c      	subs	r4, r3, r4
 8005b20:	1e63      	subs	r3, r4, #1
 8005b22:	9309      	str	r3, [sp, #36]	; 0x24
 8005b24:	bf45      	ittet	mi
 8005b26:	f1c4 0301 	rsbmi	r3, r4, #1
 8005b2a:	9306      	strmi	r3, [sp, #24]
 8005b2c:	2300      	movpl	r3, #0
 8005b2e:	2300      	movmi	r3, #0
 8005b30:	bf4c      	ite	mi
 8005b32:	9309      	strmi	r3, [sp, #36]	; 0x24
 8005b34:	9306      	strpl	r3, [sp, #24]
 8005b36:	f1b9 0f00 	cmp.w	r9, #0
 8005b3a:	db3c      	blt.n	8005bb6 <_dtoa_r+0x236>
 8005b3c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005b3e:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8005b42:	444b      	add	r3, r9
 8005b44:	9309      	str	r3, [sp, #36]	; 0x24
 8005b46:	2300      	movs	r3, #0
 8005b48:	930a      	str	r3, [sp, #40]	; 0x28
 8005b4a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005b4c:	2b09      	cmp	r3, #9
 8005b4e:	f200 808d 	bhi.w	8005c6c <_dtoa_r+0x2ec>
 8005b52:	2b05      	cmp	r3, #5
 8005b54:	bfc4      	itt	gt
 8005b56:	3b04      	subgt	r3, #4
 8005b58:	9322      	strgt	r3, [sp, #136]	; 0x88
 8005b5a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005b5c:	f1a3 0302 	sub.w	r3, r3, #2
 8005b60:	bfcc      	ite	gt
 8005b62:	2400      	movgt	r4, #0
 8005b64:	2401      	movle	r4, #1
 8005b66:	2b03      	cmp	r3, #3
 8005b68:	f200 808c 	bhi.w	8005c84 <_dtoa_r+0x304>
 8005b6c:	e8df f003 	tbb	[pc, r3]
 8005b70:	5b4d4f2d 	.word	0x5b4d4f2d
 8005b74:	e9dd 4316 	ldrd	r4, r3, [sp, #88]	; 0x58
 8005b78:	441c      	add	r4, r3
 8005b7a:	f204 4332 	addw	r3, r4, #1074	; 0x432
 8005b7e:	2b20      	cmp	r3, #32
 8005b80:	bfc3      	ittte	gt
 8005b82:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 8005b86:	f204 4012 	addwgt	r0, r4, #1042	; 0x412
 8005b8a:	fa09 f303 	lslgt.w	r3, r9, r3
 8005b8e:	f1c3 0320 	rsble	r3, r3, #32
 8005b92:	bfc6      	itte	gt
 8005b94:	fa26 f000 	lsrgt.w	r0, r6, r0
 8005b98:	4318      	orrgt	r0, r3
 8005b9a:	fa06 f003 	lslle.w	r0, r6, r3
 8005b9e:	f7fa fcdb 	bl	8000558 <__aeabi_ui2d>
 8005ba2:	2301      	movs	r3, #1
 8005ba4:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 8005ba8:	3c01      	subs	r4, #1
 8005baa:	9313      	str	r3, [sp, #76]	; 0x4c
 8005bac:	e770      	b.n	8005a90 <_dtoa_r+0x110>
 8005bae:	2301      	movs	r3, #1
 8005bb0:	e7b3      	b.n	8005b1a <_dtoa_r+0x19a>
 8005bb2:	900f      	str	r0, [sp, #60]	; 0x3c
 8005bb4:	e7b2      	b.n	8005b1c <_dtoa_r+0x19c>
 8005bb6:	9b06      	ldr	r3, [sp, #24]
 8005bb8:	eba3 0309 	sub.w	r3, r3, r9
 8005bbc:	9306      	str	r3, [sp, #24]
 8005bbe:	f1c9 0300 	rsb	r3, r9, #0
 8005bc2:	930a      	str	r3, [sp, #40]	; 0x28
 8005bc4:	2300      	movs	r3, #0
 8005bc6:	930e      	str	r3, [sp, #56]	; 0x38
 8005bc8:	e7bf      	b.n	8005b4a <_dtoa_r+0x1ca>
 8005bca:	2300      	movs	r3, #0
 8005bcc:	930b      	str	r3, [sp, #44]	; 0x2c
 8005bce:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8005bd0:	2b00      	cmp	r3, #0
 8005bd2:	dc5a      	bgt.n	8005c8a <_dtoa_r+0x30a>
 8005bd4:	f04f 0b01 	mov.w	fp, #1
 8005bd8:	f8cd b008 	str.w	fp, [sp, #8]
 8005bdc:	465b      	mov	r3, fp
 8005bde:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 8005be2:	6a68      	ldr	r0, [r5, #36]	; 0x24
 8005be4:	2200      	movs	r2, #0
 8005be6:	6042      	str	r2, [r0, #4]
 8005be8:	2204      	movs	r2, #4
 8005bea:	f102 0614 	add.w	r6, r2, #20
 8005bee:	429e      	cmp	r6, r3
 8005bf0:	6841      	ldr	r1, [r0, #4]
 8005bf2:	d950      	bls.n	8005c96 <_dtoa_r+0x316>
 8005bf4:	4628      	mov	r0, r5
 8005bf6:	f001 f993 	bl	8006f20 <_Balloc>
 8005bfa:	9008      	str	r0, [sp, #32]
 8005bfc:	2800      	cmp	r0, #0
 8005bfe:	d14e      	bne.n	8005c9e <_dtoa_r+0x31e>
 8005c00:	4b19      	ldr	r3, [pc, #100]	; (8005c68 <_dtoa_r+0x2e8>)
 8005c02:	4602      	mov	r2, r0
 8005c04:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 8005c08:	e6ce      	b.n	80059a8 <_dtoa_r+0x28>
 8005c0a:	2301      	movs	r3, #1
 8005c0c:	e7de      	b.n	8005bcc <_dtoa_r+0x24c>
 8005c0e:	2300      	movs	r3, #0
 8005c10:	930b      	str	r3, [sp, #44]	; 0x2c
 8005c12:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8005c14:	eb09 0b03 	add.w	fp, r9, r3
 8005c18:	f10b 0301 	add.w	r3, fp, #1
 8005c1c:	2b01      	cmp	r3, #1
 8005c1e:	9302      	str	r3, [sp, #8]
 8005c20:	bfb8      	it	lt
 8005c22:	2301      	movlt	r3, #1
 8005c24:	e7dd      	b.n	8005be2 <_dtoa_r+0x262>
 8005c26:	2301      	movs	r3, #1
 8005c28:	e7f2      	b.n	8005c10 <_dtoa_r+0x290>
 8005c2a:	bf00      	nop
 8005c2c:	f3af 8000 	nop.w
 8005c30:	636f4361 	.word	0x636f4361
 8005c34:	3fd287a7 	.word	0x3fd287a7
 8005c38:	8b60c8b3 	.word	0x8b60c8b3
 8005c3c:	3fc68a28 	.word	0x3fc68a28
 8005c40:	509f79fb 	.word	0x509f79fb
 8005c44:	3fd34413 	.word	0x3fd34413
 8005c48:	0800a4e0 	.word	0x0800a4e0
 8005c4c:	0800a6a2 	.word	0x0800a6a2
 8005c50:	7ff00000 	.word	0x7ff00000
 8005c54:	0800a69e 	.word	0x0800a69e
 8005c58:	0800a695 	.word	0x0800a695
 8005c5c:	0800a902 	.word	0x0800a902
 8005c60:	3ff80000 	.word	0x3ff80000
 8005c64:	0800a818 	.word	0x0800a818
 8005c68:	0800a701 	.word	0x0800a701
 8005c6c:	2401      	movs	r4, #1
 8005c6e:	2300      	movs	r3, #0
 8005c70:	9322      	str	r3, [sp, #136]	; 0x88
 8005c72:	940b      	str	r4, [sp, #44]	; 0x2c
 8005c74:	f04f 3bff 	mov.w	fp, #4294967295
 8005c78:	2200      	movs	r2, #0
 8005c7a:	f8cd b008 	str.w	fp, [sp, #8]
 8005c7e:	2312      	movs	r3, #18
 8005c80:	9223      	str	r2, [sp, #140]	; 0x8c
 8005c82:	e7ae      	b.n	8005be2 <_dtoa_r+0x262>
 8005c84:	2301      	movs	r3, #1
 8005c86:	930b      	str	r3, [sp, #44]	; 0x2c
 8005c88:	e7f4      	b.n	8005c74 <_dtoa_r+0x2f4>
 8005c8a:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 8005c8e:	f8cd b008 	str.w	fp, [sp, #8]
 8005c92:	465b      	mov	r3, fp
 8005c94:	e7a5      	b.n	8005be2 <_dtoa_r+0x262>
 8005c96:	3101      	adds	r1, #1
 8005c98:	6041      	str	r1, [r0, #4]
 8005c9a:	0052      	lsls	r2, r2, #1
 8005c9c:	e7a5      	b.n	8005bea <_dtoa_r+0x26a>
 8005c9e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8005ca0:	9a08      	ldr	r2, [sp, #32]
 8005ca2:	601a      	str	r2, [r3, #0]
 8005ca4:	9b02      	ldr	r3, [sp, #8]
 8005ca6:	2b0e      	cmp	r3, #14
 8005ca8:	f200 80a8 	bhi.w	8005dfc <_dtoa_r+0x47c>
 8005cac:	2c00      	cmp	r4, #0
 8005cae:	f000 80a5 	beq.w	8005dfc <_dtoa_r+0x47c>
 8005cb2:	f1b9 0f00 	cmp.w	r9, #0
 8005cb6:	dd34      	ble.n	8005d22 <_dtoa_r+0x3a2>
 8005cb8:	4a9a      	ldr	r2, [pc, #616]	; (8005f24 <_dtoa_r+0x5a4>)
 8005cba:	f009 030f 	and.w	r3, r9, #15
 8005cbe:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8005cc2:	e9d3 3400 	ldrd	r3, r4, [r3]
 8005cc6:	f419 7f80 	tst.w	r9, #256	; 0x100
 8005cca:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 8005cce:	ea4f 1429 	mov.w	r4, r9, asr #4
 8005cd2:	d016      	beq.n	8005d02 <_dtoa_r+0x382>
 8005cd4:	4b94      	ldr	r3, [pc, #592]	; (8005f28 <_dtoa_r+0x5a8>)
 8005cd6:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8005cda:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8005cde:	f7fa fddf 	bl	80008a0 <__aeabi_ddiv>
 8005ce2:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8005ce6:	f004 040f 	and.w	r4, r4, #15
 8005cea:	2703      	movs	r7, #3
 8005cec:	4e8e      	ldr	r6, [pc, #568]	; (8005f28 <_dtoa_r+0x5a8>)
 8005cee:	b954      	cbnz	r4, 8005d06 <_dtoa_r+0x386>
 8005cf0:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8005cf4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8005cf8:	f7fa fdd2 	bl	80008a0 <__aeabi_ddiv>
 8005cfc:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8005d00:	e029      	b.n	8005d56 <_dtoa_r+0x3d6>
 8005d02:	2702      	movs	r7, #2
 8005d04:	e7f2      	b.n	8005cec <_dtoa_r+0x36c>
 8005d06:	07e1      	lsls	r1, r4, #31
 8005d08:	d508      	bpl.n	8005d1c <_dtoa_r+0x39c>
 8005d0a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8005d0e:	e9d6 2300 	ldrd	r2, r3, [r6]
 8005d12:	f7fa fc9b 	bl	800064c <__aeabi_dmul>
 8005d16:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8005d1a:	3701      	adds	r7, #1
 8005d1c:	1064      	asrs	r4, r4, #1
 8005d1e:	3608      	adds	r6, #8
 8005d20:	e7e5      	b.n	8005cee <_dtoa_r+0x36e>
 8005d22:	f000 80a5 	beq.w	8005e70 <_dtoa_r+0x4f0>
 8005d26:	f1c9 0400 	rsb	r4, r9, #0
 8005d2a:	4b7e      	ldr	r3, [pc, #504]	; (8005f24 <_dtoa_r+0x5a4>)
 8005d2c:	4e7e      	ldr	r6, [pc, #504]	; (8005f28 <_dtoa_r+0x5a8>)
 8005d2e:	f004 020f 	and.w	r2, r4, #15
 8005d32:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8005d36:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005d3a:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8005d3e:	f7fa fc85 	bl	800064c <__aeabi_dmul>
 8005d42:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8005d46:	1124      	asrs	r4, r4, #4
 8005d48:	2300      	movs	r3, #0
 8005d4a:	2702      	movs	r7, #2
 8005d4c:	2c00      	cmp	r4, #0
 8005d4e:	f040 8084 	bne.w	8005e5a <_dtoa_r+0x4da>
 8005d52:	2b00      	cmp	r3, #0
 8005d54:	d1d2      	bne.n	8005cfc <_dtoa_r+0x37c>
 8005d56:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005d58:	2b00      	cmp	r3, #0
 8005d5a:	f000 808b 	beq.w	8005e74 <_dtoa_r+0x4f4>
 8005d5e:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 8005d62:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 8005d66:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8005d6a:	4b70      	ldr	r3, [pc, #448]	; (8005f2c <_dtoa_r+0x5ac>)
 8005d6c:	2200      	movs	r2, #0
 8005d6e:	f7fa fedf 	bl	8000b30 <__aeabi_dcmplt>
 8005d72:	2800      	cmp	r0, #0
 8005d74:	d07e      	beq.n	8005e74 <_dtoa_r+0x4f4>
 8005d76:	9b02      	ldr	r3, [sp, #8]
 8005d78:	2b00      	cmp	r3, #0
 8005d7a:	d07b      	beq.n	8005e74 <_dtoa_r+0x4f4>
 8005d7c:	f1bb 0f00 	cmp.w	fp, #0
 8005d80:	dd38      	ble.n	8005df4 <_dtoa_r+0x474>
 8005d82:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8005d86:	4b6a      	ldr	r3, [pc, #424]	; (8005f30 <_dtoa_r+0x5b0>)
 8005d88:	2200      	movs	r2, #0
 8005d8a:	f7fa fc5f 	bl	800064c <__aeabi_dmul>
 8005d8e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8005d92:	f109 38ff 	add.w	r8, r9, #4294967295
 8005d96:	3701      	adds	r7, #1
 8005d98:	465c      	mov	r4, fp
 8005d9a:	4638      	mov	r0, r7
 8005d9c:	f7fa fbec 	bl	8000578 <__aeabi_i2d>
 8005da0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8005da4:	f7fa fc52 	bl	800064c <__aeabi_dmul>
 8005da8:	4b62      	ldr	r3, [pc, #392]	; (8005f34 <_dtoa_r+0x5b4>)
 8005daa:	2200      	movs	r2, #0
 8005dac:	f7fa fa98 	bl	80002e0 <__adddf3>
 8005db0:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 8005db4:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8005db8:	9611      	str	r6, [sp, #68]	; 0x44
 8005dba:	2c00      	cmp	r4, #0
 8005dbc:	d15d      	bne.n	8005e7a <_dtoa_r+0x4fa>
 8005dbe:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8005dc2:	4b5d      	ldr	r3, [pc, #372]	; (8005f38 <_dtoa_r+0x5b8>)
 8005dc4:	2200      	movs	r2, #0
 8005dc6:	f7fa fa89 	bl	80002dc <__aeabi_dsub>
 8005dca:	4602      	mov	r2, r0
 8005dcc:	460b      	mov	r3, r1
 8005dce:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8005dd2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8005dd4:	4633      	mov	r3, r6
 8005dd6:	f7fa fec9 	bl	8000b6c <__aeabi_dcmpgt>
 8005dda:	2800      	cmp	r0, #0
 8005ddc:	f040 829e 	bne.w	800631c <_dtoa_r+0x99c>
 8005de0:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8005de4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8005de6:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 8005dea:	f7fa fea1 	bl	8000b30 <__aeabi_dcmplt>
 8005dee:	2800      	cmp	r0, #0
 8005df0:	f040 8292 	bne.w	8006318 <_dtoa_r+0x998>
 8005df4:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	; 0x30
 8005df8:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8005dfc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8005dfe:	2b00      	cmp	r3, #0
 8005e00:	f2c0 8153 	blt.w	80060aa <_dtoa_r+0x72a>
 8005e04:	f1b9 0f0e 	cmp.w	r9, #14
 8005e08:	f300 814f 	bgt.w	80060aa <_dtoa_r+0x72a>
 8005e0c:	4b45      	ldr	r3, [pc, #276]	; (8005f24 <_dtoa_r+0x5a4>)
 8005e0e:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
 8005e12:	e9d3 3400 	ldrd	r3, r4, [r3]
 8005e16:	e9cd 3406 	strd	r3, r4, [sp, #24]
 8005e1a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8005e1c:	2b00      	cmp	r3, #0
 8005e1e:	f280 80db 	bge.w	8005fd8 <_dtoa_r+0x658>
 8005e22:	9b02      	ldr	r3, [sp, #8]
 8005e24:	2b00      	cmp	r3, #0
 8005e26:	f300 80d7 	bgt.w	8005fd8 <_dtoa_r+0x658>
 8005e2a:	f040 8274 	bne.w	8006316 <_dtoa_r+0x996>
 8005e2e:	4b42      	ldr	r3, [pc, #264]	; (8005f38 <_dtoa_r+0x5b8>)
 8005e30:	2200      	movs	r2, #0
 8005e32:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8005e36:	f7fa fc09 	bl	800064c <__aeabi_dmul>
 8005e3a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8005e3e:	f7fa fe8b 	bl	8000b58 <__aeabi_dcmpge>
 8005e42:	9c02      	ldr	r4, [sp, #8]
 8005e44:	4626      	mov	r6, r4
 8005e46:	2800      	cmp	r0, #0
 8005e48:	f040 824a 	bne.w	80062e0 <_dtoa_r+0x960>
 8005e4c:	9f08      	ldr	r7, [sp, #32]
 8005e4e:	2331      	movs	r3, #49	; 0x31
 8005e50:	f807 3b01 	strb.w	r3, [r7], #1
 8005e54:	f109 0901 	add.w	r9, r9, #1
 8005e58:	e246      	b.n	80062e8 <_dtoa_r+0x968>
 8005e5a:	07e2      	lsls	r2, r4, #31
 8005e5c:	d505      	bpl.n	8005e6a <_dtoa_r+0x4ea>
 8005e5e:	e9d6 2300 	ldrd	r2, r3, [r6]
 8005e62:	f7fa fbf3 	bl	800064c <__aeabi_dmul>
 8005e66:	3701      	adds	r7, #1
 8005e68:	2301      	movs	r3, #1
 8005e6a:	1064      	asrs	r4, r4, #1
 8005e6c:	3608      	adds	r6, #8
 8005e6e:	e76d      	b.n	8005d4c <_dtoa_r+0x3cc>
 8005e70:	2702      	movs	r7, #2
 8005e72:	e770      	b.n	8005d56 <_dtoa_r+0x3d6>
 8005e74:	9c02      	ldr	r4, [sp, #8]
 8005e76:	46c8      	mov	r8, r9
 8005e78:	e78f      	b.n	8005d9a <_dtoa_r+0x41a>
 8005e7a:	9908      	ldr	r1, [sp, #32]
 8005e7c:	4b29      	ldr	r3, [pc, #164]	; (8005f24 <_dtoa_r+0x5a4>)
 8005e7e:	4421      	add	r1, r4
 8005e80:	9112      	str	r1, [sp, #72]	; 0x48
 8005e82:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005e84:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8005e88:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 8005e8c:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8005e90:	2900      	cmp	r1, #0
 8005e92:	d055      	beq.n	8005f40 <_dtoa_r+0x5c0>
 8005e94:	4929      	ldr	r1, [pc, #164]	; (8005f3c <_dtoa_r+0x5bc>)
 8005e96:	2000      	movs	r0, #0
 8005e98:	f7fa fd02 	bl	80008a0 <__aeabi_ddiv>
 8005e9c:	463b      	mov	r3, r7
 8005e9e:	4632      	mov	r2, r6
 8005ea0:	f7fa fa1c 	bl	80002dc <__aeabi_dsub>
 8005ea4:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8005ea8:	9f08      	ldr	r7, [sp, #32]
 8005eaa:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8005eae:	f7fa fe7d 	bl	8000bac <__aeabi_d2iz>
 8005eb2:	4604      	mov	r4, r0
 8005eb4:	f7fa fb60 	bl	8000578 <__aeabi_i2d>
 8005eb8:	4602      	mov	r2, r0
 8005eba:	460b      	mov	r3, r1
 8005ebc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8005ec0:	f7fa fa0c 	bl	80002dc <__aeabi_dsub>
 8005ec4:	3430      	adds	r4, #48	; 0x30
 8005ec6:	4602      	mov	r2, r0
 8005ec8:	460b      	mov	r3, r1
 8005eca:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8005ece:	f807 4b01 	strb.w	r4, [r7], #1
 8005ed2:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8005ed6:	f7fa fe2b 	bl	8000b30 <__aeabi_dcmplt>
 8005eda:	2800      	cmp	r0, #0
 8005edc:	d174      	bne.n	8005fc8 <_dtoa_r+0x648>
 8005ede:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8005ee2:	4912      	ldr	r1, [pc, #72]	; (8005f2c <_dtoa_r+0x5ac>)
 8005ee4:	2000      	movs	r0, #0
 8005ee6:	f7fa f9f9 	bl	80002dc <__aeabi_dsub>
 8005eea:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8005eee:	f7fa fe1f 	bl	8000b30 <__aeabi_dcmplt>
 8005ef2:	2800      	cmp	r0, #0
 8005ef4:	f040 80b6 	bne.w	8006064 <_dtoa_r+0x6e4>
 8005ef8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005efa:	429f      	cmp	r7, r3
 8005efc:	f43f af7a 	beq.w	8005df4 <_dtoa_r+0x474>
 8005f00:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8005f04:	4b0a      	ldr	r3, [pc, #40]	; (8005f30 <_dtoa_r+0x5b0>)
 8005f06:	2200      	movs	r2, #0
 8005f08:	f7fa fba0 	bl	800064c <__aeabi_dmul>
 8005f0c:	4b08      	ldr	r3, [pc, #32]	; (8005f30 <_dtoa_r+0x5b0>)
 8005f0e:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8005f12:	2200      	movs	r2, #0
 8005f14:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8005f18:	f7fa fb98 	bl	800064c <__aeabi_dmul>
 8005f1c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8005f20:	e7c3      	b.n	8005eaa <_dtoa_r+0x52a>
 8005f22:	bf00      	nop
 8005f24:	0800a818 	.word	0x0800a818
 8005f28:	0800a7f0 	.word	0x0800a7f0
 8005f2c:	3ff00000 	.word	0x3ff00000
 8005f30:	40240000 	.word	0x40240000
 8005f34:	401c0000 	.word	0x401c0000
 8005f38:	40140000 	.word	0x40140000
 8005f3c:	3fe00000 	.word	0x3fe00000
 8005f40:	4630      	mov	r0, r6
 8005f42:	4639      	mov	r1, r7
 8005f44:	f7fa fb82 	bl	800064c <__aeabi_dmul>
 8005f48:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8005f4c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005f4e:	9c08      	ldr	r4, [sp, #32]
 8005f50:	9314      	str	r3, [sp, #80]	; 0x50
 8005f52:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8005f56:	f7fa fe29 	bl	8000bac <__aeabi_d2iz>
 8005f5a:	9015      	str	r0, [sp, #84]	; 0x54
 8005f5c:	f7fa fb0c 	bl	8000578 <__aeabi_i2d>
 8005f60:	4602      	mov	r2, r0
 8005f62:	460b      	mov	r3, r1
 8005f64:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8005f68:	f7fa f9b8 	bl	80002dc <__aeabi_dsub>
 8005f6c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005f6e:	3330      	adds	r3, #48	; 0x30
 8005f70:	f804 3b01 	strb.w	r3, [r4], #1
 8005f74:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005f76:	429c      	cmp	r4, r3
 8005f78:	4606      	mov	r6, r0
 8005f7a:	460f      	mov	r7, r1
 8005f7c:	f04f 0200 	mov.w	r2, #0
 8005f80:	d124      	bne.n	8005fcc <_dtoa_r+0x64c>
 8005f82:	4bb2      	ldr	r3, [pc, #712]	; (800624c <_dtoa_r+0x8cc>)
 8005f84:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8005f88:	f7fa f9aa 	bl	80002e0 <__adddf3>
 8005f8c:	4602      	mov	r2, r0
 8005f8e:	460b      	mov	r3, r1
 8005f90:	4630      	mov	r0, r6
 8005f92:	4639      	mov	r1, r7
 8005f94:	f7fa fdea 	bl	8000b6c <__aeabi_dcmpgt>
 8005f98:	2800      	cmp	r0, #0
 8005f9a:	d162      	bne.n	8006062 <_dtoa_r+0x6e2>
 8005f9c:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8005fa0:	49aa      	ldr	r1, [pc, #680]	; (800624c <_dtoa_r+0x8cc>)
 8005fa2:	2000      	movs	r0, #0
 8005fa4:	f7fa f99a 	bl	80002dc <__aeabi_dsub>
 8005fa8:	4602      	mov	r2, r0
 8005faa:	460b      	mov	r3, r1
 8005fac:	4630      	mov	r0, r6
 8005fae:	4639      	mov	r1, r7
 8005fb0:	f7fa fdbe 	bl	8000b30 <__aeabi_dcmplt>
 8005fb4:	2800      	cmp	r0, #0
 8005fb6:	f43f af1d 	beq.w	8005df4 <_dtoa_r+0x474>
 8005fba:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8005fbc:	1e7b      	subs	r3, r7, #1
 8005fbe:	9314      	str	r3, [sp, #80]	; 0x50
 8005fc0:	f817 3c01 	ldrb.w	r3, [r7, #-1]
 8005fc4:	2b30      	cmp	r3, #48	; 0x30
 8005fc6:	d0f8      	beq.n	8005fba <_dtoa_r+0x63a>
 8005fc8:	46c1      	mov	r9, r8
 8005fca:	e03a      	b.n	8006042 <_dtoa_r+0x6c2>
 8005fcc:	4ba0      	ldr	r3, [pc, #640]	; (8006250 <_dtoa_r+0x8d0>)
 8005fce:	f7fa fb3d 	bl	800064c <__aeabi_dmul>
 8005fd2:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8005fd6:	e7bc      	b.n	8005f52 <_dtoa_r+0x5d2>
 8005fd8:	9f08      	ldr	r7, [sp, #32]
 8005fda:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8005fde:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8005fe2:	f7fa fc5d 	bl	80008a0 <__aeabi_ddiv>
 8005fe6:	f7fa fde1 	bl	8000bac <__aeabi_d2iz>
 8005fea:	4604      	mov	r4, r0
 8005fec:	f7fa fac4 	bl	8000578 <__aeabi_i2d>
 8005ff0:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8005ff4:	f7fa fb2a 	bl	800064c <__aeabi_dmul>
 8005ff8:	f104 0630 	add.w	r6, r4, #48	; 0x30
 8005ffc:	460b      	mov	r3, r1
 8005ffe:	4602      	mov	r2, r0
 8006000:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8006004:	f7fa f96a 	bl	80002dc <__aeabi_dsub>
 8006008:	f807 6b01 	strb.w	r6, [r7], #1
 800600c:	9e08      	ldr	r6, [sp, #32]
 800600e:	9b02      	ldr	r3, [sp, #8]
 8006010:	1bbe      	subs	r6, r7, r6
 8006012:	42b3      	cmp	r3, r6
 8006014:	d13a      	bne.n	800608c <_dtoa_r+0x70c>
 8006016:	4602      	mov	r2, r0
 8006018:	460b      	mov	r3, r1
 800601a:	f7fa f961 	bl	80002e0 <__adddf3>
 800601e:	4602      	mov	r2, r0
 8006020:	460b      	mov	r3, r1
 8006022:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8006026:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800602a:	f7fa fd9f 	bl	8000b6c <__aeabi_dcmpgt>
 800602e:	bb58      	cbnz	r0, 8006088 <_dtoa_r+0x708>
 8006030:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8006034:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006038:	f7fa fd70 	bl	8000b1c <__aeabi_dcmpeq>
 800603c:	b108      	cbz	r0, 8006042 <_dtoa_r+0x6c2>
 800603e:	07e1      	lsls	r1, r4, #31
 8006040:	d422      	bmi.n	8006088 <_dtoa_r+0x708>
 8006042:	4628      	mov	r0, r5
 8006044:	4651      	mov	r1, sl
 8006046:	f000 ffab 	bl	8006fa0 <_Bfree>
 800604a:	2300      	movs	r3, #0
 800604c:	703b      	strb	r3, [r7, #0]
 800604e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8006050:	f109 0001 	add.w	r0, r9, #1
 8006054:	6018      	str	r0, [r3, #0]
 8006056:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8006058:	2b00      	cmp	r3, #0
 800605a:	f43f acde 	beq.w	8005a1a <_dtoa_r+0x9a>
 800605e:	601f      	str	r7, [r3, #0]
 8006060:	e4db      	b.n	8005a1a <_dtoa_r+0x9a>
 8006062:	4627      	mov	r7, r4
 8006064:	463b      	mov	r3, r7
 8006066:	461f      	mov	r7, r3
 8006068:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800606c:	2a39      	cmp	r2, #57	; 0x39
 800606e:	d107      	bne.n	8006080 <_dtoa_r+0x700>
 8006070:	9a08      	ldr	r2, [sp, #32]
 8006072:	429a      	cmp	r2, r3
 8006074:	d1f7      	bne.n	8006066 <_dtoa_r+0x6e6>
 8006076:	9908      	ldr	r1, [sp, #32]
 8006078:	2230      	movs	r2, #48	; 0x30
 800607a:	f108 0801 	add.w	r8, r8, #1
 800607e:	700a      	strb	r2, [r1, #0]
 8006080:	781a      	ldrb	r2, [r3, #0]
 8006082:	3201      	adds	r2, #1
 8006084:	701a      	strb	r2, [r3, #0]
 8006086:	e79f      	b.n	8005fc8 <_dtoa_r+0x648>
 8006088:	46c8      	mov	r8, r9
 800608a:	e7eb      	b.n	8006064 <_dtoa_r+0x6e4>
 800608c:	4b70      	ldr	r3, [pc, #448]	; (8006250 <_dtoa_r+0x8d0>)
 800608e:	2200      	movs	r2, #0
 8006090:	f7fa fadc 	bl	800064c <__aeabi_dmul>
 8006094:	4602      	mov	r2, r0
 8006096:	460b      	mov	r3, r1
 8006098:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800609c:	2200      	movs	r2, #0
 800609e:	2300      	movs	r3, #0
 80060a0:	f7fa fd3c 	bl	8000b1c <__aeabi_dcmpeq>
 80060a4:	2800      	cmp	r0, #0
 80060a6:	d098      	beq.n	8005fda <_dtoa_r+0x65a>
 80060a8:	e7cb      	b.n	8006042 <_dtoa_r+0x6c2>
 80060aa:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80060ac:	2a00      	cmp	r2, #0
 80060ae:	f000 80d1 	beq.w	8006254 <_dtoa_r+0x8d4>
 80060b2:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80060b4:	2a01      	cmp	r2, #1
 80060b6:	f300 80af 	bgt.w	8006218 <_dtoa_r+0x898>
 80060ba:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80060bc:	2a00      	cmp	r2, #0
 80060be:	f000 80a7 	beq.w	8006210 <_dtoa_r+0x890>
 80060c2:	f203 4333 	addw	r3, r3, #1075	; 0x433
 80060c6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80060c8:	9f06      	ldr	r7, [sp, #24]
 80060ca:	9a06      	ldr	r2, [sp, #24]
 80060cc:	441a      	add	r2, r3
 80060ce:	9206      	str	r2, [sp, #24]
 80060d0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80060d2:	2101      	movs	r1, #1
 80060d4:	441a      	add	r2, r3
 80060d6:	4628      	mov	r0, r5
 80060d8:	9209      	str	r2, [sp, #36]	; 0x24
 80060da:	f001 f865 	bl	80071a8 <__i2b>
 80060de:	4606      	mov	r6, r0
 80060e0:	2f00      	cmp	r7, #0
 80060e2:	dd0c      	ble.n	80060fe <_dtoa_r+0x77e>
 80060e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80060e6:	2b00      	cmp	r3, #0
 80060e8:	dd09      	ble.n	80060fe <_dtoa_r+0x77e>
 80060ea:	42bb      	cmp	r3, r7
 80060ec:	9a06      	ldr	r2, [sp, #24]
 80060ee:	bfa8      	it	ge
 80060f0:	463b      	movge	r3, r7
 80060f2:	1ad2      	subs	r2, r2, r3
 80060f4:	9206      	str	r2, [sp, #24]
 80060f6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80060f8:	1aff      	subs	r7, r7, r3
 80060fa:	1ad3      	subs	r3, r2, r3
 80060fc:	9309      	str	r3, [sp, #36]	; 0x24
 80060fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006100:	b1f3      	cbz	r3, 8006140 <_dtoa_r+0x7c0>
 8006102:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006104:	2b00      	cmp	r3, #0
 8006106:	f000 80a9 	beq.w	800625c <_dtoa_r+0x8dc>
 800610a:	2c00      	cmp	r4, #0
 800610c:	dd10      	ble.n	8006130 <_dtoa_r+0x7b0>
 800610e:	4631      	mov	r1, r6
 8006110:	4622      	mov	r2, r4
 8006112:	4628      	mov	r0, r5
 8006114:	f001 f904 	bl	8007320 <__pow5mult>
 8006118:	4652      	mov	r2, sl
 800611a:	4601      	mov	r1, r0
 800611c:	4606      	mov	r6, r0
 800611e:	4628      	mov	r0, r5
 8006120:	f001 f858 	bl	80071d4 <__multiply>
 8006124:	4651      	mov	r1, sl
 8006126:	4680      	mov	r8, r0
 8006128:	4628      	mov	r0, r5
 800612a:	f000 ff39 	bl	8006fa0 <_Bfree>
 800612e:	46c2      	mov	sl, r8
 8006130:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006132:	1b1a      	subs	r2, r3, r4
 8006134:	d004      	beq.n	8006140 <_dtoa_r+0x7c0>
 8006136:	4651      	mov	r1, sl
 8006138:	4628      	mov	r0, r5
 800613a:	f001 f8f1 	bl	8007320 <__pow5mult>
 800613e:	4682      	mov	sl, r0
 8006140:	2101      	movs	r1, #1
 8006142:	4628      	mov	r0, r5
 8006144:	f001 f830 	bl	80071a8 <__i2b>
 8006148:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800614a:	2b00      	cmp	r3, #0
 800614c:	4604      	mov	r4, r0
 800614e:	f340 8087 	ble.w	8006260 <_dtoa_r+0x8e0>
 8006152:	461a      	mov	r2, r3
 8006154:	4601      	mov	r1, r0
 8006156:	4628      	mov	r0, r5
 8006158:	f001 f8e2 	bl	8007320 <__pow5mult>
 800615c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800615e:	2b01      	cmp	r3, #1
 8006160:	4604      	mov	r4, r0
 8006162:	f340 8080 	ble.w	8006266 <_dtoa_r+0x8e6>
 8006166:	f04f 0800 	mov.w	r8, #0
 800616a:	6923      	ldr	r3, [r4, #16]
 800616c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8006170:	6918      	ldr	r0, [r3, #16]
 8006172:	f000 ffcb 	bl	800710c <__hi0bits>
 8006176:	f1c0 0020 	rsb	r0, r0, #32
 800617a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800617c:	4418      	add	r0, r3
 800617e:	f010 001f 	ands.w	r0, r0, #31
 8006182:	f000 8092 	beq.w	80062aa <_dtoa_r+0x92a>
 8006186:	f1c0 0320 	rsb	r3, r0, #32
 800618a:	2b04      	cmp	r3, #4
 800618c:	f340 808a 	ble.w	80062a4 <_dtoa_r+0x924>
 8006190:	f1c0 001c 	rsb	r0, r0, #28
 8006194:	9b06      	ldr	r3, [sp, #24]
 8006196:	4403      	add	r3, r0
 8006198:	9306      	str	r3, [sp, #24]
 800619a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800619c:	4403      	add	r3, r0
 800619e:	4407      	add	r7, r0
 80061a0:	9309      	str	r3, [sp, #36]	; 0x24
 80061a2:	9b06      	ldr	r3, [sp, #24]
 80061a4:	2b00      	cmp	r3, #0
 80061a6:	dd05      	ble.n	80061b4 <_dtoa_r+0x834>
 80061a8:	4651      	mov	r1, sl
 80061aa:	461a      	mov	r2, r3
 80061ac:	4628      	mov	r0, r5
 80061ae:	f001 f911 	bl	80073d4 <__lshift>
 80061b2:	4682      	mov	sl, r0
 80061b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80061b6:	2b00      	cmp	r3, #0
 80061b8:	dd05      	ble.n	80061c6 <_dtoa_r+0x846>
 80061ba:	4621      	mov	r1, r4
 80061bc:	461a      	mov	r2, r3
 80061be:	4628      	mov	r0, r5
 80061c0:	f001 f908 	bl	80073d4 <__lshift>
 80061c4:	4604      	mov	r4, r0
 80061c6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80061c8:	2b00      	cmp	r3, #0
 80061ca:	d070      	beq.n	80062ae <_dtoa_r+0x92e>
 80061cc:	4621      	mov	r1, r4
 80061ce:	4650      	mov	r0, sl
 80061d0:	f001 f96c 	bl	80074ac <__mcmp>
 80061d4:	2800      	cmp	r0, #0
 80061d6:	da6a      	bge.n	80062ae <_dtoa_r+0x92e>
 80061d8:	2300      	movs	r3, #0
 80061da:	4651      	mov	r1, sl
 80061dc:	220a      	movs	r2, #10
 80061de:	4628      	mov	r0, r5
 80061e0:	f000 ff00 	bl	8006fe4 <__multadd>
 80061e4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80061e6:	f109 39ff 	add.w	r9, r9, #4294967295
 80061ea:	4682      	mov	sl, r0
 80061ec:	2b00      	cmp	r3, #0
 80061ee:	f000 8193 	beq.w	8006518 <_dtoa_r+0xb98>
 80061f2:	4631      	mov	r1, r6
 80061f4:	2300      	movs	r3, #0
 80061f6:	220a      	movs	r2, #10
 80061f8:	4628      	mov	r0, r5
 80061fa:	f000 fef3 	bl	8006fe4 <__multadd>
 80061fe:	f1bb 0f00 	cmp.w	fp, #0
 8006202:	4606      	mov	r6, r0
 8006204:	f300 8093 	bgt.w	800632e <_dtoa_r+0x9ae>
 8006208:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800620a:	2b02      	cmp	r3, #2
 800620c:	dc57      	bgt.n	80062be <_dtoa_r+0x93e>
 800620e:	e08e      	b.n	800632e <_dtoa_r+0x9ae>
 8006210:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8006212:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8006216:	e756      	b.n	80060c6 <_dtoa_r+0x746>
 8006218:	9b02      	ldr	r3, [sp, #8]
 800621a:	1e5c      	subs	r4, r3, #1
 800621c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800621e:	42a3      	cmp	r3, r4
 8006220:	bfbf      	itttt	lt
 8006222:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 8006224:	940a      	strlt	r4, [sp, #40]	; 0x28
 8006226:	1ae2      	sublt	r2, r4, r3
 8006228:	9b0e      	ldrlt	r3, [sp, #56]	; 0x38
 800622a:	bfb6      	itet	lt
 800622c:	189b      	addlt	r3, r3, r2
 800622e:	1b1c      	subge	r4, r3, r4
 8006230:	930e      	strlt	r3, [sp, #56]	; 0x38
 8006232:	9b02      	ldr	r3, [sp, #8]
 8006234:	bfb8      	it	lt
 8006236:	2400      	movlt	r4, #0
 8006238:	2b00      	cmp	r3, #0
 800623a:	bfb9      	ittee	lt
 800623c:	9b06      	ldrlt	r3, [sp, #24]
 800623e:	9a02      	ldrlt	r2, [sp, #8]
 8006240:	9f06      	ldrge	r7, [sp, #24]
 8006242:	9b02      	ldrge	r3, [sp, #8]
 8006244:	bfbc      	itt	lt
 8006246:	1a9f      	sublt	r7, r3, r2
 8006248:	2300      	movlt	r3, #0
 800624a:	e73e      	b.n	80060ca <_dtoa_r+0x74a>
 800624c:	3fe00000 	.word	0x3fe00000
 8006250:	40240000 	.word	0x40240000
 8006254:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8006256:	9f06      	ldr	r7, [sp, #24]
 8006258:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800625a:	e741      	b.n	80060e0 <_dtoa_r+0x760>
 800625c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800625e:	e76a      	b.n	8006136 <_dtoa_r+0x7b6>
 8006260:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006262:	2b01      	cmp	r3, #1
 8006264:	dc19      	bgt.n	800629a <_dtoa_r+0x91a>
 8006266:	9b04      	ldr	r3, [sp, #16]
 8006268:	b9bb      	cbnz	r3, 800629a <_dtoa_r+0x91a>
 800626a:	9b05      	ldr	r3, [sp, #20]
 800626c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8006270:	b99b      	cbnz	r3, 800629a <_dtoa_r+0x91a>
 8006272:	9b05      	ldr	r3, [sp, #20]
 8006274:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8006278:	0d1b      	lsrs	r3, r3, #20
 800627a:	051b      	lsls	r3, r3, #20
 800627c:	b183      	cbz	r3, 80062a0 <_dtoa_r+0x920>
 800627e:	9b06      	ldr	r3, [sp, #24]
 8006280:	3301      	adds	r3, #1
 8006282:	9306      	str	r3, [sp, #24]
 8006284:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006286:	3301      	adds	r3, #1
 8006288:	9309      	str	r3, [sp, #36]	; 0x24
 800628a:	f04f 0801 	mov.w	r8, #1
 800628e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006290:	2b00      	cmp	r3, #0
 8006292:	f47f af6a 	bne.w	800616a <_dtoa_r+0x7ea>
 8006296:	2001      	movs	r0, #1
 8006298:	e76f      	b.n	800617a <_dtoa_r+0x7fa>
 800629a:	f04f 0800 	mov.w	r8, #0
 800629e:	e7f6      	b.n	800628e <_dtoa_r+0x90e>
 80062a0:	4698      	mov	r8, r3
 80062a2:	e7f4      	b.n	800628e <_dtoa_r+0x90e>
 80062a4:	f43f af7d 	beq.w	80061a2 <_dtoa_r+0x822>
 80062a8:	4618      	mov	r0, r3
 80062aa:	301c      	adds	r0, #28
 80062ac:	e772      	b.n	8006194 <_dtoa_r+0x814>
 80062ae:	9b02      	ldr	r3, [sp, #8]
 80062b0:	2b00      	cmp	r3, #0
 80062b2:	dc36      	bgt.n	8006322 <_dtoa_r+0x9a2>
 80062b4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80062b6:	2b02      	cmp	r3, #2
 80062b8:	dd33      	ble.n	8006322 <_dtoa_r+0x9a2>
 80062ba:	f8dd b008 	ldr.w	fp, [sp, #8]
 80062be:	f1bb 0f00 	cmp.w	fp, #0
 80062c2:	d10d      	bne.n	80062e0 <_dtoa_r+0x960>
 80062c4:	4621      	mov	r1, r4
 80062c6:	465b      	mov	r3, fp
 80062c8:	2205      	movs	r2, #5
 80062ca:	4628      	mov	r0, r5
 80062cc:	f000 fe8a 	bl	8006fe4 <__multadd>
 80062d0:	4601      	mov	r1, r0
 80062d2:	4604      	mov	r4, r0
 80062d4:	4650      	mov	r0, sl
 80062d6:	f001 f8e9 	bl	80074ac <__mcmp>
 80062da:	2800      	cmp	r0, #0
 80062dc:	f73f adb6 	bgt.w	8005e4c <_dtoa_r+0x4cc>
 80062e0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80062e2:	9f08      	ldr	r7, [sp, #32]
 80062e4:	ea6f 0903 	mvn.w	r9, r3
 80062e8:	f04f 0800 	mov.w	r8, #0
 80062ec:	4621      	mov	r1, r4
 80062ee:	4628      	mov	r0, r5
 80062f0:	f000 fe56 	bl	8006fa0 <_Bfree>
 80062f4:	2e00      	cmp	r6, #0
 80062f6:	f43f aea4 	beq.w	8006042 <_dtoa_r+0x6c2>
 80062fa:	f1b8 0f00 	cmp.w	r8, #0
 80062fe:	d005      	beq.n	800630c <_dtoa_r+0x98c>
 8006300:	45b0      	cmp	r8, r6
 8006302:	d003      	beq.n	800630c <_dtoa_r+0x98c>
 8006304:	4641      	mov	r1, r8
 8006306:	4628      	mov	r0, r5
 8006308:	f000 fe4a 	bl	8006fa0 <_Bfree>
 800630c:	4631      	mov	r1, r6
 800630e:	4628      	mov	r0, r5
 8006310:	f000 fe46 	bl	8006fa0 <_Bfree>
 8006314:	e695      	b.n	8006042 <_dtoa_r+0x6c2>
 8006316:	2400      	movs	r4, #0
 8006318:	4626      	mov	r6, r4
 800631a:	e7e1      	b.n	80062e0 <_dtoa_r+0x960>
 800631c:	46c1      	mov	r9, r8
 800631e:	4626      	mov	r6, r4
 8006320:	e594      	b.n	8005e4c <_dtoa_r+0x4cc>
 8006322:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006324:	f8dd b008 	ldr.w	fp, [sp, #8]
 8006328:	2b00      	cmp	r3, #0
 800632a:	f000 80fc 	beq.w	8006526 <_dtoa_r+0xba6>
 800632e:	2f00      	cmp	r7, #0
 8006330:	dd05      	ble.n	800633e <_dtoa_r+0x9be>
 8006332:	4631      	mov	r1, r6
 8006334:	463a      	mov	r2, r7
 8006336:	4628      	mov	r0, r5
 8006338:	f001 f84c 	bl	80073d4 <__lshift>
 800633c:	4606      	mov	r6, r0
 800633e:	f1b8 0f00 	cmp.w	r8, #0
 8006342:	d05c      	beq.n	80063fe <_dtoa_r+0xa7e>
 8006344:	6871      	ldr	r1, [r6, #4]
 8006346:	4628      	mov	r0, r5
 8006348:	f000 fdea 	bl	8006f20 <_Balloc>
 800634c:	4607      	mov	r7, r0
 800634e:	b928      	cbnz	r0, 800635c <_dtoa_r+0x9dc>
 8006350:	4b7f      	ldr	r3, [pc, #508]	; (8006550 <_dtoa_r+0xbd0>)
 8006352:	4602      	mov	r2, r0
 8006354:	f240 21ea 	movw	r1, #746	; 0x2ea
 8006358:	f7ff bb26 	b.w	80059a8 <_dtoa_r+0x28>
 800635c:	6932      	ldr	r2, [r6, #16]
 800635e:	3202      	adds	r2, #2
 8006360:	0092      	lsls	r2, r2, #2
 8006362:	f106 010c 	add.w	r1, r6, #12
 8006366:	300c      	adds	r0, #12
 8006368:	f7fd f89e 	bl	80034a8 <memcpy>
 800636c:	2201      	movs	r2, #1
 800636e:	4639      	mov	r1, r7
 8006370:	4628      	mov	r0, r5
 8006372:	f001 f82f 	bl	80073d4 <__lshift>
 8006376:	9b08      	ldr	r3, [sp, #32]
 8006378:	3301      	adds	r3, #1
 800637a:	9302      	str	r3, [sp, #8]
 800637c:	9b08      	ldr	r3, [sp, #32]
 800637e:	445b      	add	r3, fp
 8006380:	930a      	str	r3, [sp, #40]	; 0x28
 8006382:	9b04      	ldr	r3, [sp, #16]
 8006384:	f003 0301 	and.w	r3, r3, #1
 8006388:	46b0      	mov	r8, r6
 800638a:	9309      	str	r3, [sp, #36]	; 0x24
 800638c:	4606      	mov	r6, r0
 800638e:	9b02      	ldr	r3, [sp, #8]
 8006390:	4621      	mov	r1, r4
 8006392:	4650      	mov	r0, sl
 8006394:	f103 3bff 	add.w	fp, r3, #4294967295
 8006398:	f7ff fa64 	bl	8005864 <quorem>
 800639c:	4603      	mov	r3, r0
 800639e:	3330      	adds	r3, #48	; 0x30
 80063a0:	9004      	str	r0, [sp, #16]
 80063a2:	4641      	mov	r1, r8
 80063a4:	4650      	mov	r0, sl
 80063a6:	930b      	str	r3, [sp, #44]	; 0x2c
 80063a8:	f001 f880 	bl	80074ac <__mcmp>
 80063ac:	4632      	mov	r2, r6
 80063ae:	9006      	str	r0, [sp, #24]
 80063b0:	4621      	mov	r1, r4
 80063b2:	4628      	mov	r0, r5
 80063b4:	f001 f896 	bl	80074e4 <__mdiff>
 80063b8:	68c2      	ldr	r2, [r0, #12]
 80063ba:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80063bc:	4607      	mov	r7, r0
 80063be:	bb02      	cbnz	r2, 8006402 <_dtoa_r+0xa82>
 80063c0:	4601      	mov	r1, r0
 80063c2:	4650      	mov	r0, sl
 80063c4:	f001 f872 	bl	80074ac <__mcmp>
 80063c8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80063ca:	4602      	mov	r2, r0
 80063cc:	4639      	mov	r1, r7
 80063ce:	4628      	mov	r0, r5
 80063d0:	e9cd 320b 	strd	r3, r2, [sp, #44]	; 0x2c
 80063d4:	f000 fde4 	bl	8006fa0 <_Bfree>
 80063d8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80063da:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80063dc:	9f02      	ldr	r7, [sp, #8]
 80063de:	ea43 0102 	orr.w	r1, r3, r2
 80063e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80063e4:	430b      	orrs	r3, r1
 80063e6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80063e8:	d10d      	bne.n	8006406 <_dtoa_r+0xa86>
 80063ea:	2b39      	cmp	r3, #57	; 0x39
 80063ec:	d027      	beq.n	800643e <_dtoa_r+0xabe>
 80063ee:	9a06      	ldr	r2, [sp, #24]
 80063f0:	2a00      	cmp	r2, #0
 80063f2:	dd01      	ble.n	80063f8 <_dtoa_r+0xa78>
 80063f4:	9b04      	ldr	r3, [sp, #16]
 80063f6:	3331      	adds	r3, #49	; 0x31
 80063f8:	f88b 3000 	strb.w	r3, [fp]
 80063fc:	e776      	b.n	80062ec <_dtoa_r+0x96c>
 80063fe:	4630      	mov	r0, r6
 8006400:	e7b9      	b.n	8006376 <_dtoa_r+0x9f6>
 8006402:	2201      	movs	r2, #1
 8006404:	e7e2      	b.n	80063cc <_dtoa_r+0xa4c>
 8006406:	9906      	ldr	r1, [sp, #24]
 8006408:	2900      	cmp	r1, #0
 800640a:	db04      	blt.n	8006416 <_dtoa_r+0xa96>
 800640c:	9822      	ldr	r0, [sp, #136]	; 0x88
 800640e:	4301      	orrs	r1, r0
 8006410:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006412:	4301      	orrs	r1, r0
 8006414:	d120      	bne.n	8006458 <_dtoa_r+0xad8>
 8006416:	2a00      	cmp	r2, #0
 8006418:	ddee      	ble.n	80063f8 <_dtoa_r+0xa78>
 800641a:	4651      	mov	r1, sl
 800641c:	2201      	movs	r2, #1
 800641e:	4628      	mov	r0, r5
 8006420:	9302      	str	r3, [sp, #8]
 8006422:	f000 ffd7 	bl	80073d4 <__lshift>
 8006426:	4621      	mov	r1, r4
 8006428:	4682      	mov	sl, r0
 800642a:	f001 f83f 	bl	80074ac <__mcmp>
 800642e:	2800      	cmp	r0, #0
 8006430:	9b02      	ldr	r3, [sp, #8]
 8006432:	dc02      	bgt.n	800643a <_dtoa_r+0xaba>
 8006434:	d1e0      	bne.n	80063f8 <_dtoa_r+0xa78>
 8006436:	07da      	lsls	r2, r3, #31
 8006438:	d5de      	bpl.n	80063f8 <_dtoa_r+0xa78>
 800643a:	2b39      	cmp	r3, #57	; 0x39
 800643c:	d1da      	bne.n	80063f4 <_dtoa_r+0xa74>
 800643e:	2339      	movs	r3, #57	; 0x39
 8006440:	f88b 3000 	strb.w	r3, [fp]
 8006444:	463b      	mov	r3, r7
 8006446:	461f      	mov	r7, r3
 8006448:	3b01      	subs	r3, #1
 800644a:	f817 2c01 	ldrb.w	r2, [r7, #-1]
 800644e:	2a39      	cmp	r2, #57	; 0x39
 8006450:	d050      	beq.n	80064f4 <_dtoa_r+0xb74>
 8006452:	3201      	adds	r2, #1
 8006454:	701a      	strb	r2, [r3, #0]
 8006456:	e749      	b.n	80062ec <_dtoa_r+0x96c>
 8006458:	2a00      	cmp	r2, #0
 800645a:	dd03      	ble.n	8006464 <_dtoa_r+0xae4>
 800645c:	2b39      	cmp	r3, #57	; 0x39
 800645e:	d0ee      	beq.n	800643e <_dtoa_r+0xabe>
 8006460:	3301      	adds	r3, #1
 8006462:	e7c9      	b.n	80063f8 <_dtoa_r+0xa78>
 8006464:	9a02      	ldr	r2, [sp, #8]
 8006466:	990a      	ldr	r1, [sp, #40]	; 0x28
 8006468:	f802 3c01 	strb.w	r3, [r2, #-1]
 800646c:	428a      	cmp	r2, r1
 800646e:	d02a      	beq.n	80064c6 <_dtoa_r+0xb46>
 8006470:	4651      	mov	r1, sl
 8006472:	2300      	movs	r3, #0
 8006474:	220a      	movs	r2, #10
 8006476:	4628      	mov	r0, r5
 8006478:	f000 fdb4 	bl	8006fe4 <__multadd>
 800647c:	45b0      	cmp	r8, r6
 800647e:	4682      	mov	sl, r0
 8006480:	f04f 0300 	mov.w	r3, #0
 8006484:	f04f 020a 	mov.w	r2, #10
 8006488:	4641      	mov	r1, r8
 800648a:	4628      	mov	r0, r5
 800648c:	d107      	bne.n	800649e <_dtoa_r+0xb1e>
 800648e:	f000 fda9 	bl	8006fe4 <__multadd>
 8006492:	4680      	mov	r8, r0
 8006494:	4606      	mov	r6, r0
 8006496:	9b02      	ldr	r3, [sp, #8]
 8006498:	3301      	adds	r3, #1
 800649a:	9302      	str	r3, [sp, #8]
 800649c:	e777      	b.n	800638e <_dtoa_r+0xa0e>
 800649e:	f000 fda1 	bl	8006fe4 <__multadd>
 80064a2:	4631      	mov	r1, r6
 80064a4:	4680      	mov	r8, r0
 80064a6:	2300      	movs	r3, #0
 80064a8:	220a      	movs	r2, #10
 80064aa:	4628      	mov	r0, r5
 80064ac:	f000 fd9a 	bl	8006fe4 <__multadd>
 80064b0:	4606      	mov	r6, r0
 80064b2:	e7f0      	b.n	8006496 <_dtoa_r+0xb16>
 80064b4:	f1bb 0f00 	cmp.w	fp, #0
 80064b8:	9a08      	ldr	r2, [sp, #32]
 80064ba:	bfcc      	ite	gt
 80064bc:	465f      	movgt	r7, fp
 80064be:	2701      	movle	r7, #1
 80064c0:	4417      	add	r7, r2
 80064c2:	f04f 0800 	mov.w	r8, #0
 80064c6:	4651      	mov	r1, sl
 80064c8:	2201      	movs	r2, #1
 80064ca:	4628      	mov	r0, r5
 80064cc:	9302      	str	r3, [sp, #8]
 80064ce:	f000 ff81 	bl	80073d4 <__lshift>
 80064d2:	4621      	mov	r1, r4
 80064d4:	4682      	mov	sl, r0
 80064d6:	f000 ffe9 	bl	80074ac <__mcmp>
 80064da:	2800      	cmp	r0, #0
 80064dc:	dcb2      	bgt.n	8006444 <_dtoa_r+0xac4>
 80064de:	d102      	bne.n	80064e6 <_dtoa_r+0xb66>
 80064e0:	9b02      	ldr	r3, [sp, #8]
 80064e2:	07db      	lsls	r3, r3, #31
 80064e4:	d4ae      	bmi.n	8006444 <_dtoa_r+0xac4>
 80064e6:	463b      	mov	r3, r7
 80064e8:	461f      	mov	r7, r3
 80064ea:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80064ee:	2a30      	cmp	r2, #48	; 0x30
 80064f0:	d0fa      	beq.n	80064e8 <_dtoa_r+0xb68>
 80064f2:	e6fb      	b.n	80062ec <_dtoa_r+0x96c>
 80064f4:	9a08      	ldr	r2, [sp, #32]
 80064f6:	429a      	cmp	r2, r3
 80064f8:	d1a5      	bne.n	8006446 <_dtoa_r+0xac6>
 80064fa:	2331      	movs	r3, #49	; 0x31
 80064fc:	f109 0901 	add.w	r9, r9, #1
 8006500:	7013      	strb	r3, [r2, #0]
 8006502:	e6f3      	b.n	80062ec <_dtoa_r+0x96c>
 8006504:	4b13      	ldr	r3, [pc, #76]	; (8006554 <_dtoa_r+0xbd4>)
 8006506:	f7ff baa6 	b.w	8005a56 <_dtoa_r+0xd6>
 800650a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800650c:	2b00      	cmp	r3, #0
 800650e:	f47f aa7f 	bne.w	8005a10 <_dtoa_r+0x90>
 8006512:	4b11      	ldr	r3, [pc, #68]	; (8006558 <_dtoa_r+0xbd8>)
 8006514:	f7ff ba9f 	b.w	8005a56 <_dtoa_r+0xd6>
 8006518:	f1bb 0f00 	cmp.w	fp, #0
 800651c:	dc03      	bgt.n	8006526 <_dtoa_r+0xba6>
 800651e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006520:	2b02      	cmp	r3, #2
 8006522:	f73f aecc 	bgt.w	80062be <_dtoa_r+0x93e>
 8006526:	9f08      	ldr	r7, [sp, #32]
 8006528:	4621      	mov	r1, r4
 800652a:	4650      	mov	r0, sl
 800652c:	f7ff f99a 	bl	8005864 <quorem>
 8006530:	f100 0330 	add.w	r3, r0, #48	; 0x30
 8006534:	f807 3b01 	strb.w	r3, [r7], #1
 8006538:	9a08      	ldr	r2, [sp, #32]
 800653a:	1aba      	subs	r2, r7, r2
 800653c:	4593      	cmp	fp, r2
 800653e:	ddb9      	ble.n	80064b4 <_dtoa_r+0xb34>
 8006540:	4651      	mov	r1, sl
 8006542:	2300      	movs	r3, #0
 8006544:	220a      	movs	r2, #10
 8006546:	4628      	mov	r0, r5
 8006548:	f000 fd4c 	bl	8006fe4 <__multadd>
 800654c:	4682      	mov	sl, r0
 800654e:	e7eb      	b.n	8006528 <_dtoa_r+0xba8>
 8006550:	0800a701 	.word	0x0800a701
 8006554:	0800a901 	.word	0x0800a901
 8006558:	0800a695 	.word	0x0800a695

0800655c <__sflush_r>:
 800655c:	898a      	ldrh	r2, [r1, #12]
 800655e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006562:	4605      	mov	r5, r0
 8006564:	0710      	lsls	r0, r2, #28
 8006566:	460c      	mov	r4, r1
 8006568:	d458      	bmi.n	800661c <__sflush_r+0xc0>
 800656a:	684b      	ldr	r3, [r1, #4]
 800656c:	2b00      	cmp	r3, #0
 800656e:	dc05      	bgt.n	800657c <__sflush_r+0x20>
 8006570:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8006572:	2b00      	cmp	r3, #0
 8006574:	dc02      	bgt.n	800657c <__sflush_r+0x20>
 8006576:	2000      	movs	r0, #0
 8006578:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800657c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800657e:	2e00      	cmp	r6, #0
 8006580:	d0f9      	beq.n	8006576 <__sflush_r+0x1a>
 8006582:	2300      	movs	r3, #0
 8006584:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8006588:	682f      	ldr	r7, [r5, #0]
 800658a:	602b      	str	r3, [r5, #0]
 800658c:	d032      	beq.n	80065f4 <__sflush_r+0x98>
 800658e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8006590:	89a3      	ldrh	r3, [r4, #12]
 8006592:	075a      	lsls	r2, r3, #29
 8006594:	d505      	bpl.n	80065a2 <__sflush_r+0x46>
 8006596:	6863      	ldr	r3, [r4, #4]
 8006598:	1ac0      	subs	r0, r0, r3
 800659a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800659c:	b10b      	cbz	r3, 80065a2 <__sflush_r+0x46>
 800659e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80065a0:	1ac0      	subs	r0, r0, r3
 80065a2:	2300      	movs	r3, #0
 80065a4:	4602      	mov	r2, r0
 80065a6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80065a8:	6a21      	ldr	r1, [r4, #32]
 80065aa:	4628      	mov	r0, r5
 80065ac:	47b0      	blx	r6
 80065ae:	1c43      	adds	r3, r0, #1
 80065b0:	89a3      	ldrh	r3, [r4, #12]
 80065b2:	d106      	bne.n	80065c2 <__sflush_r+0x66>
 80065b4:	6829      	ldr	r1, [r5, #0]
 80065b6:	291d      	cmp	r1, #29
 80065b8:	d82c      	bhi.n	8006614 <__sflush_r+0xb8>
 80065ba:	4a2a      	ldr	r2, [pc, #168]	; (8006664 <__sflush_r+0x108>)
 80065bc:	40ca      	lsrs	r2, r1
 80065be:	07d6      	lsls	r6, r2, #31
 80065c0:	d528      	bpl.n	8006614 <__sflush_r+0xb8>
 80065c2:	2200      	movs	r2, #0
 80065c4:	6062      	str	r2, [r4, #4]
 80065c6:	04d9      	lsls	r1, r3, #19
 80065c8:	6922      	ldr	r2, [r4, #16]
 80065ca:	6022      	str	r2, [r4, #0]
 80065cc:	d504      	bpl.n	80065d8 <__sflush_r+0x7c>
 80065ce:	1c42      	adds	r2, r0, #1
 80065d0:	d101      	bne.n	80065d6 <__sflush_r+0x7a>
 80065d2:	682b      	ldr	r3, [r5, #0]
 80065d4:	b903      	cbnz	r3, 80065d8 <__sflush_r+0x7c>
 80065d6:	6560      	str	r0, [r4, #84]	; 0x54
 80065d8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80065da:	602f      	str	r7, [r5, #0]
 80065dc:	2900      	cmp	r1, #0
 80065de:	d0ca      	beq.n	8006576 <__sflush_r+0x1a>
 80065e0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80065e4:	4299      	cmp	r1, r3
 80065e6:	d002      	beq.n	80065ee <__sflush_r+0x92>
 80065e8:	4628      	mov	r0, r5
 80065ea:	f7fc ff81 	bl	80034f0 <_free_r>
 80065ee:	2000      	movs	r0, #0
 80065f0:	6360      	str	r0, [r4, #52]	; 0x34
 80065f2:	e7c1      	b.n	8006578 <__sflush_r+0x1c>
 80065f4:	6a21      	ldr	r1, [r4, #32]
 80065f6:	2301      	movs	r3, #1
 80065f8:	4628      	mov	r0, r5
 80065fa:	47b0      	blx	r6
 80065fc:	1c41      	adds	r1, r0, #1
 80065fe:	d1c7      	bne.n	8006590 <__sflush_r+0x34>
 8006600:	682b      	ldr	r3, [r5, #0]
 8006602:	2b00      	cmp	r3, #0
 8006604:	d0c4      	beq.n	8006590 <__sflush_r+0x34>
 8006606:	2b1d      	cmp	r3, #29
 8006608:	d001      	beq.n	800660e <__sflush_r+0xb2>
 800660a:	2b16      	cmp	r3, #22
 800660c:	d101      	bne.n	8006612 <__sflush_r+0xb6>
 800660e:	602f      	str	r7, [r5, #0]
 8006610:	e7b1      	b.n	8006576 <__sflush_r+0x1a>
 8006612:	89a3      	ldrh	r3, [r4, #12]
 8006614:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006618:	81a3      	strh	r3, [r4, #12]
 800661a:	e7ad      	b.n	8006578 <__sflush_r+0x1c>
 800661c:	690f      	ldr	r7, [r1, #16]
 800661e:	2f00      	cmp	r7, #0
 8006620:	d0a9      	beq.n	8006576 <__sflush_r+0x1a>
 8006622:	0793      	lsls	r3, r2, #30
 8006624:	680e      	ldr	r6, [r1, #0]
 8006626:	bf08      	it	eq
 8006628:	694b      	ldreq	r3, [r1, #20]
 800662a:	600f      	str	r7, [r1, #0]
 800662c:	bf18      	it	ne
 800662e:	2300      	movne	r3, #0
 8006630:	eba6 0807 	sub.w	r8, r6, r7
 8006634:	608b      	str	r3, [r1, #8]
 8006636:	f1b8 0f00 	cmp.w	r8, #0
 800663a:	dd9c      	ble.n	8006576 <__sflush_r+0x1a>
 800663c:	6a21      	ldr	r1, [r4, #32]
 800663e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8006640:	4643      	mov	r3, r8
 8006642:	463a      	mov	r2, r7
 8006644:	4628      	mov	r0, r5
 8006646:	47b0      	blx	r6
 8006648:	2800      	cmp	r0, #0
 800664a:	dc06      	bgt.n	800665a <__sflush_r+0xfe>
 800664c:	89a3      	ldrh	r3, [r4, #12]
 800664e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006652:	81a3      	strh	r3, [r4, #12]
 8006654:	f04f 30ff 	mov.w	r0, #4294967295
 8006658:	e78e      	b.n	8006578 <__sflush_r+0x1c>
 800665a:	4407      	add	r7, r0
 800665c:	eba8 0800 	sub.w	r8, r8, r0
 8006660:	e7e9      	b.n	8006636 <__sflush_r+0xda>
 8006662:	bf00      	nop
 8006664:	20400001 	.word	0x20400001

08006668 <_fflush_r>:
 8006668:	b538      	push	{r3, r4, r5, lr}
 800666a:	690b      	ldr	r3, [r1, #16]
 800666c:	4605      	mov	r5, r0
 800666e:	460c      	mov	r4, r1
 8006670:	b913      	cbnz	r3, 8006678 <_fflush_r+0x10>
 8006672:	2500      	movs	r5, #0
 8006674:	4628      	mov	r0, r5
 8006676:	bd38      	pop	{r3, r4, r5, pc}
 8006678:	b118      	cbz	r0, 8006682 <_fflush_r+0x1a>
 800667a:	6983      	ldr	r3, [r0, #24]
 800667c:	b90b      	cbnz	r3, 8006682 <_fflush_r+0x1a>
 800667e:	f7fc fe21 	bl	80032c4 <__sinit>
 8006682:	4b14      	ldr	r3, [pc, #80]	; (80066d4 <_fflush_r+0x6c>)
 8006684:	429c      	cmp	r4, r3
 8006686:	d11b      	bne.n	80066c0 <_fflush_r+0x58>
 8006688:	686c      	ldr	r4, [r5, #4]
 800668a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800668e:	2b00      	cmp	r3, #0
 8006690:	d0ef      	beq.n	8006672 <_fflush_r+0xa>
 8006692:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8006694:	07d0      	lsls	r0, r2, #31
 8006696:	d404      	bmi.n	80066a2 <_fflush_r+0x3a>
 8006698:	0599      	lsls	r1, r3, #22
 800669a:	d402      	bmi.n	80066a2 <_fflush_r+0x3a>
 800669c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800669e:	f7fc fef0 	bl	8003482 <__retarget_lock_acquire_recursive>
 80066a2:	4628      	mov	r0, r5
 80066a4:	4621      	mov	r1, r4
 80066a6:	f7ff ff59 	bl	800655c <__sflush_r>
 80066aa:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80066ac:	07da      	lsls	r2, r3, #31
 80066ae:	4605      	mov	r5, r0
 80066b0:	d4e0      	bmi.n	8006674 <_fflush_r+0xc>
 80066b2:	89a3      	ldrh	r3, [r4, #12]
 80066b4:	059b      	lsls	r3, r3, #22
 80066b6:	d4dd      	bmi.n	8006674 <_fflush_r+0xc>
 80066b8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80066ba:	f7fc fee3 	bl	8003484 <__retarget_lock_release_recursive>
 80066be:	e7d9      	b.n	8006674 <_fflush_r+0xc>
 80066c0:	4b05      	ldr	r3, [pc, #20]	; (80066d8 <_fflush_r+0x70>)
 80066c2:	429c      	cmp	r4, r3
 80066c4:	d101      	bne.n	80066ca <_fflush_r+0x62>
 80066c6:	68ac      	ldr	r4, [r5, #8]
 80066c8:	e7df      	b.n	800668a <_fflush_r+0x22>
 80066ca:	4b04      	ldr	r3, [pc, #16]	; (80066dc <_fflush_r+0x74>)
 80066cc:	429c      	cmp	r4, r3
 80066ce:	bf08      	it	eq
 80066d0:	68ec      	ldreq	r4, [r5, #12]
 80066d2:	e7da      	b.n	800668a <_fflush_r+0x22>
 80066d4:	0800a414 	.word	0x0800a414
 80066d8:	0800a434 	.word	0x0800a434
 80066dc:	0800a3f4 	.word	0x0800a3f4

080066e0 <fflush>:
 80066e0:	4601      	mov	r1, r0
 80066e2:	b920      	cbnz	r0, 80066ee <fflush+0xe>
 80066e4:	4b04      	ldr	r3, [pc, #16]	; (80066f8 <fflush+0x18>)
 80066e6:	4905      	ldr	r1, [pc, #20]	; (80066fc <fflush+0x1c>)
 80066e8:	6818      	ldr	r0, [r3, #0]
 80066ea:	f7fc be86 	b.w	80033fa <_fwalk_reent>
 80066ee:	4b04      	ldr	r3, [pc, #16]	; (8006700 <fflush+0x20>)
 80066f0:	6818      	ldr	r0, [r3, #0]
 80066f2:	f7ff bfb9 	b.w	8006668 <_fflush_r>
 80066f6:	bf00      	nop
 80066f8:	0800a454 	.word	0x0800a454
 80066fc:	08006669 	.word	0x08006669
 8006700:	20000b10 	.word	0x20000b10

08006704 <fiprintf>:
 8006704:	b40e      	push	{r1, r2, r3}
 8006706:	b503      	push	{r0, r1, lr}
 8006708:	4601      	mov	r1, r0
 800670a:	ab03      	add	r3, sp, #12
 800670c:	4805      	ldr	r0, [pc, #20]	; (8006724 <fiprintf+0x20>)
 800670e:	f853 2b04 	ldr.w	r2, [r3], #4
 8006712:	6800      	ldr	r0, [r0, #0]
 8006714:	9301      	str	r3, [sp, #4]
 8006716:	f001 fc0d 	bl	8007f34 <_vfiprintf_r>
 800671a:	b002      	add	sp, #8
 800671c:	f85d eb04 	ldr.w	lr, [sp], #4
 8006720:	b003      	add	sp, #12
 8006722:	4770      	bx	lr
 8006724:	20000b10 	.word	0x20000b10

08006728 <rshift>:
 8006728:	6903      	ldr	r3, [r0, #16]
 800672a:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 800672e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006732:	ea4f 1261 	mov.w	r2, r1, asr #5
 8006736:	f100 0414 	add.w	r4, r0, #20
 800673a:	dd45      	ble.n	80067c8 <rshift+0xa0>
 800673c:	f011 011f 	ands.w	r1, r1, #31
 8006740:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8006744:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8006748:	d10c      	bne.n	8006764 <rshift+0x3c>
 800674a:	f100 0710 	add.w	r7, r0, #16
 800674e:	4629      	mov	r1, r5
 8006750:	42b1      	cmp	r1, r6
 8006752:	d334      	bcc.n	80067be <rshift+0x96>
 8006754:	1a9b      	subs	r3, r3, r2
 8006756:	009b      	lsls	r3, r3, #2
 8006758:	1eea      	subs	r2, r5, #3
 800675a:	4296      	cmp	r6, r2
 800675c:	bf38      	it	cc
 800675e:	2300      	movcc	r3, #0
 8006760:	4423      	add	r3, r4
 8006762:	e015      	b.n	8006790 <rshift+0x68>
 8006764:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 8006768:	f1c1 0820 	rsb	r8, r1, #32
 800676c:	40cf      	lsrs	r7, r1
 800676e:	f105 0e04 	add.w	lr, r5, #4
 8006772:	46a1      	mov	r9, r4
 8006774:	4576      	cmp	r6, lr
 8006776:	46f4      	mov	ip, lr
 8006778:	d815      	bhi.n	80067a6 <rshift+0x7e>
 800677a:	1a9b      	subs	r3, r3, r2
 800677c:	009a      	lsls	r2, r3, #2
 800677e:	3a04      	subs	r2, #4
 8006780:	3501      	adds	r5, #1
 8006782:	42ae      	cmp	r6, r5
 8006784:	bf38      	it	cc
 8006786:	2200      	movcc	r2, #0
 8006788:	18a3      	adds	r3, r4, r2
 800678a:	50a7      	str	r7, [r4, r2]
 800678c:	b107      	cbz	r7, 8006790 <rshift+0x68>
 800678e:	3304      	adds	r3, #4
 8006790:	1b1a      	subs	r2, r3, r4
 8006792:	42a3      	cmp	r3, r4
 8006794:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8006798:	bf08      	it	eq
 800679a:	2300      	moveq	r3, #0
 800679c:	6102      	str	r2, [r0, #16]
 800679e:	bf08      	it	eq
 80067a0:	6143      	streq	r3, [r0, #20]
 80067a2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80067a6:	f8dc c000 	ldr.w	ip, [ip]
 80067aa:	fa0c fc08 	lsl.w	ip, ip, r8
 80067ae:	ea4c 0707 	orr.w	r7, ip, r7
 80067b2:	f849 7b04 	str.w	r7, [r9], #4
 80067b6:	f85e 7b04 	ldr.w	r7, [lr], #4
 80067ba:	40cf      	lsrs	r7, r1
 80067bc:	e7da      	b.n	8006774 <rshift+0x4c>
 80067be:	f851 cb04 	ldr.w	ip, [r1], #4
 80067c2:	f847 cf04 	str.w	ip, [r7, #4]!
 80067c6:	e7c3      	b.n	8006750 <rshift+0x28>
 80067c8:	4623      	mov	r3, r4
 80067ca:	e7e1      	b.n	8006790 <rshift+0x68>

080067cc <__hexdig_fun>:
 80067cc:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 80067d0:	2b09      	cmp	r3, #9
 80067d2:	d802      	bhi.n	80067da <__hexdig_fun+0xe>
 80067d4:	3820      	subs	r0, #32
 80067d6:	b2c0      	uxtb	r0, r0
 80067d8:	4770      	bx	lr
 80067da:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 80067de:	2b05      	cmp	r3, #5
 80067e0:	d801      	bhi.n	80067e6 <__hexdig_fun+0x1a>
 80067e2:	3847      	subs	r0, #71	; 0x47
 80067e4:	e7f7      	b.n	80067d6 <__hexdig_fun+0xa>
 80067e6:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 80067ea:	2b05      	cmp	r3, #5
 80067ec:	d801      	bhi.n	80067f2 <__hexdig_fun+0x26>
 80067ee:	3827      	subs	r0, #39	; 0x27
 80067f0:	e7f1      	b.n	80067d6 <__hexdig_fun+0xa>
 80067f2:	2000      	movs	r0, #0
 80067f4:	4770      	bx	lr
	...

080067f8 <__gethex>:
 80067f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80067fc:	b08b      	sub	sp, #44	; 0x2c
 80067fe:	468b      	mov	fp, r1
 8006800:	9306      	str	r3, [sp, #24]
 8006802:	4bb9      	ldr	r3, [pc, #740]	; (8006ae8 <__gethex+0x2f0>)
 8006804:	9002      	str	r0, [sp, #8]
 8006806:	681b      	ldr	r3, [r3, #0]
 8006808:	9303      	str	r3, [sp, #12]
 800680a:	4618      	mov	r0, r3
 800680c:	4690      	mov	r8, r2
 800680e:	f7f9 fd59 	bl	80002c4 <strlen>
 8006812:	9b03      	ldr	r3, [sp, #12]
 8006814:	f8db 2000 	ldr.w	r2, [fp]
 8006818:	4403      	add	r3, r0
 800681a:	4682      	mov	sl, r0
 800681c:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 8006820:	9307      	str	r3, [sp, #28]
 8006822:	1c93      	adds	r3, r2, #2
 8006824:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 8006828:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 800682c:	32fe      	adds	r2, #254	; 0xfe
 800682e:	18d1      	adds	r1, r2, r3
 8006830:	461f      	mov	r7, r3
 8006832:	f813 0b01 	ldrb.w	r0, [r3], #1
 8006836:	9101      	str	r1, [sp, #4]
 8006838:	2830      	cmp	r0, #48	; 0x30
 800683a:	d0f8      	beq.n	800682e <__gethex+0x36>
 800683c:	f7ff ffc6 	bl	80067cc <__hexdig_fun>
 8006840:	4604      	mov	r4, r0
 8006842:	2800      	cmp	r0, #0
 8006844:	d13a      	bne.n	80068bc <__gethex+0xc4>
 8006846:	9903      	ldr	r1, [sp, #12]
 8006848:	4652      	mov	r2, sl
 800684a:	4638      	mov	r0, r7
 800684c:	f001 fe40 	bl	80084d0 <strncmp>
 8006850:	4605      	mov	r5, r0
 8006852:	2800      	cmp	r0, #0
 8006854:	d166      	bne.n	8006924 <__gethex+0x12c>
 8006856:	f817 000a 	ldrb.w	r0, [r7, sl]
 800685a:	eb07 060a 	add.w	r6, r7, sl
 800685e:	f7ff ffb5 	bl	80067cc <__hexdig_fun>
 8006862:	2800      	cmp	r0, #0
 8006864:	d060      	beq.n	8006928 <__gethex+0x130>
 8006866:	4633      	mov	r3, r6
 8006868:	7818      	ldrb	r0, [r3, #0]
 800686a:	2830      	cmp	r0, #48	; 0x30
 800686c:	461f      	mov	r7, r3
 800686e:	f103 0301 	add.w	r3, r3, #1
 8006872:	d0f9      	beq.n	8006868 <__gethex+0x70>
 8006874:	f7ff ffaa 	bl	80067cc <__hexdig_fun>
 8006878:	2301      	movs	r3, #1
 800687a:	fab0 f480 	clz	r4, r0
 800687e:	0964      	lsrs	r4, r4, #5
 8006880:	4635      	mov	r5, r6
 8006882:	9301      	str	r3, [sp, #4]
 8006884:	463a      	mov	r2, r7
 8006886:	4616      	mov	r6, r2
 8006888:	3201      	adds	r2, #1
 800688a:	7830      	ldrb	r0, [r6, #0]
 800688c:	f7ff ff9e 	bl	80067cc <__hexdig_fun>
 8006890:	2800      	cmp	r0, #0
 8006892:	d1f8      	bne.n	8006886 <__gethex+0x8e>
 8006894:	9903      	ldr	r1, [sp, #12]
 8006896:	4652      	mov	r2, sl
 8006898:	4630      	mov	r0, r6
 800689a:	f001 fe19 	bl	80084d0 <strncmp>
 800689e:	b980      	cbnz	r0, 80068c2 <__gethex+0xca>
 80068a0:	b94d      	cbnz	r5, 80068b6 <__gethex+0xbe>
 80068a2:	eb06 050a 	add.w	r5, r6, sl
 80068a6:	462a      	mov	r2, r5
 80068a8:	4616      	mov	r6, r2
 80068aa:	3201      	adds	r2, #1
 80068ac:	7830      	ldrb	r0, [r6, #0]
 80068ae:	f7ff ff8d 	bl	80067cc <__hexdig_fun>
 80068b2:	2800      	cmp	r0, #0
 80068b4:	d1f8      	bne.n	80068a8 <__gethex+0xb0>
 80068b6:	1bad      	subs	r5, r5, r6
 80068b8:	00ad      	lsls	r5, r5, #2
 80068ba:	e004      	b.n	80068c6 <__gethex+0xce>
 80068bc:	2400      	movs	r4, #0
 80068be:	4625      	mov	r5, r4
 80068c0:	e7e0      	b.n	8006884 <__gethex+0x8c>
 80068c2:	2d00      	cmp	r5, #0
 80068c4:	d1f7      	bne.n	80068b6 <__gethex+0xbe>
 80068c6:	7833      	ldrb	r3, [r6, #0]
 80068c8:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 80068cc:	2b50      	cmp	r3, #80	; 0x50
 80068ce:	d139      	bne.n	8006944 <__gethex+0x14c>
 80068d0:	7873      	ldrb	r3, [r6, #1]
 80068d2:	2b2b      	cmp	r3, #43	; 0x2b
 80068d4:	d02a      	beq.n	800692c <__gethex+0x134>
 80068d6:	2b2d      	cmp	r3, #45	; 0x2d
 80068d8:	d02c      	beq.n	8006934 <__gethex+0x13c>
 80068da:	1c71      	adds	r1, r6, #1
 80068dc:	f04f 0900 	mov.w	r9, #0
 80068e0:	7808      	ldrb	r0, [r1, #0]
 80068e2:	f7ff ff73 	bl	80067cc <__hexdig_fun>
 80068e6:	1e43      	subs	r3, r0, #1
 80068e8:	b2db      	uxtb	r3, r3
 80068ea:	2b18      	cmp	r3, #24
 80068ec:	d82a      	bhi.n	8006944 <__gethex+0x14c>
 80068ee:	f1a0 0210 	sub.w	r2, r0, #16
 80068f2:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 80068f6:	f7ff ff69 	bl	80067cc <__hexdig_fun>
 80068fa:	1e43      	subs	r3, r0, #1
 80068fc:	b2db      	uxtb	r3, r3
 80068fe:	2b18      	cmp	r3, #24
 8006900:	d91b      	bls.n	800693a <__gethex+0x142>
 8006902:	f1b9 0f00 	cmp.w	r9, #0
 8006906:	d000      	beq.n	800690a <__gethex+0x112>
 8006908:	4252      	negs	r2, r2
 800690a:	4415      	add	r5, r2
 800690c:	f8cb 1000 	str.w	r1, [fp]
 8006910:	b1d4      	cbz	r4, 8006948 <__gethex+0x150>
 8006912:	9b01      	ldr	r3, [sp, #4]
 8006914:	2b00      	cmp	r3, #0
 8006916:	bf14      	ite	ne
 8006918:	2700      	movne	r7, #0
 800691a:	2706      	moveq	r7, #6
 800691c:	4638      	mov	r0, r7
 800691e:	b00b      	add	sp, #44	; 0x2c
 8006920:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006924:	463e      	mov	r6, r7
 8006926:	4625      	mov	r5, r4
 8006928:	2401      	movs	r4, #1
 800692a:	e7cc      	b.n	80068c6 <__gethex+0xce>
 800692c:	f04f 0900 	mov.w	r9, #0
 8006930:	1cb1      	adds	r1, r6, #2
 8006932:	e7d5      	b.n	80068e0 <__gethex+0xe8>
 8006934:	f04f 0901 	mov.w	r9, #1
 8006938:	e7fa      	b.n	8006930 <__gethex+0x138>
 800693a:	230a      	movs	r3, #10
 800693c:	fb03 0202 	mla	r2, r3, r2, r0
 8006940:	3a10      	subs	r2, #16
 8006942:	e7d6      	b.n	80068f2 <__gethex+0xfa>
 8006944:	4631      	mov	r1, r6
 8006946:	e7e1      	b.n	800690c <__gethex+0x114>
 8006948:	1bf3      	subs	r3, r6, r7
 800694a:	3b01      	subs	r3, #1
 800694c:	4621      	mov	r1, r4
 800694e:	2b07      	cmp	r3, #7
 8006950:	dc0a      	bgt.n	8006968 <__gethex+0x170>
 8006952:	9802      	ldr	r0, [sp, #8]
 8006954:	f000 fae4 	bl	8006f20 <_Balloc>
 8006958:	4604      	mov	r4, r0
 800695a:	b940      	cbnz	r0, 800696e <__gethex+0x176>
 800695c:	4b63      	ldr	r3, [pc, #396]	; (8006aec <__gethex+0x2f4>)
 800695e:	4602      	mov	r2, r0
 8006960:	21de      	movs	r1, #222	; 0xde
 8006962:	4863      	ldr	r0, [pc, #396]	; (8006af0 <__gethex+0x2f8>)
 8006964:	f7fe ff50 	bl	8005808 <__assert_func>
 8006968:	3101      	adds	r1, #1
 800696a:	105b      	asrs	r3, r3, #1
 800696c:	e7ef      	b.n	800694e <__gethex+0x156>
 800696e:	f100 0914 	add.w	r9, r0, #20
 8006972:	f04f 0b00 	mov.w	fp, #0
 8006976:	f1ca 0301 	rsb	r3, sl, #1
 800697a:	f8cd 9010 	str.w	r9, [sp, #16]
 800697e:	f8cd b004 	str.w	fp, [sp, #4]
 8006982:	9308      	str	r3, [sp, #32]
 8006984:	42b7      	cmp	r7, r6
 8006986:	d33f      	bcc.n	8006a08 <__gethex+0x210>
 8006988:	9f04      	ldr	r7, [sp, #16]
 800698a:	9b01      	ldr	r3, [sp, #4]
 800698c:	f847 3b04 	str.w	r3, [r7], #4
 8006990:	eba7 0709 	sub.w	r7, r7, r9
 8006994:	10bf      	asrs	r7, r7, #2
 8006996:	6127      	str	r7, [r4, #16]
 8006998:	4618      	mov	r0, r3
 800699a:	f000 fbb7 	bl	800710c <__hi0bits>
 800699e:	017f      	lsls	r7, r7, #5
 80069a0:	f8d8 6000 	ldr.w	r6, [r8]
 80069a4:	1a3f      	subs	r7, r7, r0
 80069a6:	42b7      	cmp	r7, r6
 80069a8:	dd62      	ble.n	8006a70 <__gethex+0x278>
 80069aa:	1bbf      	subs	r7, r7, r6
 80069ac:	4639      	mov	r1, r7
 80069ae:	4620      	mov	r0, r4
 80069b0:	f000 ff49 	bl	8007846 <__any_on>
 80069b4:	4682      	mov	sl, r0
 80069b6:	b1a8      	cbz	r0, 80069e4 <__gethex+0x1ec>
 80069b8:	1e7b      	subs	r3, r7, #1
 80069ba:	1159      	asrs	r1, r3, #5
 80069bc:	f003 021f 	and.w	r2, r3, #31
 80069c0:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 80069c4:	f04f 0a01 	mov.w	sl, #1
 80069c8:	fa0a f202 	lsl.w	r2, sl, r2
 80069cc:	420a      	tst	r2, r1
 80069ce:	d009      	beq.n	80069e4 <__gethex+0x1ec>
 80069d0:	4553      	cmp	r3, sl
 80069d2:	dd05      	ble.n	80069e0 <__gethex+0x1e8>
 80069d4:	1eb9      	subs	r1, r7, #2
 80069d6:	4620      	mov	r0, r4
 80069d8:	f000 ff35 	bl	8007846 <__any_on>
 80069dc:	2800      	cmp	r0, #0
 80069de:	d144      	bne.n	8006a6a <__gethex+0x272>
 80069e0:	f04f 0a02 	mov.w	sl, #2
 80069e4:	4639      	mov	r1, r7
 80069e6:	4620      	mov	r0, r4
 80069e8:	f7ff fe9e 	bl	8006728 <rshift>
 80069ec:	443d      	add	r5, r7
 80069ee:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80069f2:	42ab      	cmp	r3, r5
 80069f4:	da4a      	bge.n	8006a8c <__gethex+0x294>
 80069f6:	9802      	ldr	r0, [sp, #8]
 80069f8:	4621      	mov	r1, r4
 80069fa:	f000 fad1 	bl	8006fa0 <_Bfree>
 80069fe:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8006a00:	2300      	movs	r3, #0
 8006a02:	6013      	str	r3, [r2, #0]
 8006a04:	27a3      	movs	r7, #163	; 0xa3
 8006a06:	e789      	b.n	800691c <__gethex+0x124>
 8006a08:	1e73      	subs	r3, r6, #1
 8006a0a:	9a07      	ldr	r2, [sp, #28]
 8006a0c:	9305      	str	r3, [sp, #20]
 8006a0e:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8006a12:	4293      	cmp	r3, r2
 8006a14:	d019      	beq.n	8006a4a <__gethex+0x252>
 8006a16:	f1bb 0f20 	cmp.w	fp, #32
 8006a1a:	d107      	bne.n	8006a2c <__gethex+0x234>
 8006a1c:	9b04      	ldr	r3, [sp, #16]
 8006a1e:	9a01      	ldr	r2, [sp, #4]
 8006a20:	f843 2b04 	str.w	r2, [r3], #4
 8006a24:	9304      	str	r3, [sp, #16]
 8006a26:	2300      	movs	r3, #0
 8006a28:	9301      	str	r3, [sp, #4]
 8006a2a:	469b      	mov	fp, r3
 8006a2c:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 8006a30:	f7ff fecc 	bl	80067cc <__hexdig_fun>
 8006a34:	9b01      	ldr	r3, [sp, #4]
 8006a36:	f000 000f 	and.w	r0, r0, #15
 8006a3a:	fa00 f00b 	lsl.w	r0, r0, fp
 8006a3e:	4303      	orrs	r3, r0
 8006a40:	9301      	str	r3, [sp, #4]
 8006a42:	f10b 0b04 	add.w	fp, fp, #4
 8006a46:	9b05      	ldr	r3, [sp, #20]
 8006a48:	e00d      	b.n	8006a66 <__gethex+0x26e>
 8006a4a:	9b05      	ldr	r3, [sp, #20]
 8006a4c:	9a08      	ldr	r2, [sp, #32]
 8006a4e:	4413      	add	r3, r2
 8006a50:	42bb      	cmp	r3, r7
 8006a52:	d3e0      	bcc.n	8006a16 <__gethex+0x21e>
 8006a54:	4618      	mov	r0, r3
 8006a56:	9903      	ldr	r1, [sp, #12]
 8006a58:	9309      	str	r3, [sp, #36]	; 0x24
 8006a5a:	4652      	mov	r2, sl
 8006a5c:	f001 fd38 	bl	80084d0 <strncmp>
 8006a60:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006a62:	2800      	cmp	r0, #0
 8006a64:	d1d7      	bne.n	8006a16 <__gethex+0x21e>
 8006a66:	461e      	mov	r6, r3
 8006a68:	e78c      	b.n	8006984 <__gethex+0x18c>
 8006a6a:	f04f 0a03 	mov.w	sl, #3
 8006a6e:	e7b9      	b.n	80069e4 <__gethex+0x1ec>
 8006a70:	da09      	bge.n	8006a86 <__gethex+0x28e>
 8006a72:	1bf7      	subs	r7, r6, r7
 8006a74:	4621      	mov	r1, r4
 8006a76:	9802      	ldr	r0, [sp, #8]
 8006a78:	463a      	mov	r2, r7
 8006a7a:	f000 fcab 	bl	80073d4 <__lshift>
 8006a7e:	1bed      	subs	r5, r5, r7
 8006a80:	4604      	mov	r4, r0
 8006a82:	f100 0914 	add.w	r9, r0, #20
 8006a86:	f04f 0a00 	mov.w	sl, #0
 8006a8a:	e7b0      	b.n	80069ee <__gethex+0x1f6>
 8006a8c:	f8d8 0004 	ldr.w	r0, [r8, #4]
 8006a90:	42a8      	cmp	r0, r5
 8006a92:	dd70      	ble.n	8006b76 <__gethex+0x37e>
 8006a94:	1b45      	subs	r5, r0, r5
 8006a96:	42ae      	cmp	r6, r5
 8006a98:	dc34      	bgt.n	8006b04 <__gethex+0x30c>
 8006a9a:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8006a9e:	2b02      	cmp	r3, #2
 8006aa0:	d028      	beq.n	8006af4 <__gethex+0x2fc>
 8006aa2:	2b03      	cmp	r3, #3
 8006aa4:	d02a      	beq.n	8006afc <__gethex+0x304>
 8006aa6:	2b01      	cmp	r3, #1
 8006aa8:	d115      	bne.n	8006ad6 <__gethex+0x2de>
 8006aaa:	42ae      	cmp	r6, r5
 8006aac:	d113      	bne.n	8006ad6 <__gethex+0x2de>
 8006aae:	2e01      	cmp	r6, #1
 8006ab0:	d10b      	bne.n	8006aca <__gethex+0x2d2>
 8006ab2:	9a06      	ldr	r2, [sp, #24]
 8006ab4:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8006ab8:	6013      	str	r3, [r2, #0]
 8006aba:	2301      	movs	r3, #1
 8006abc:	6123      	str	r3, [r4, #16]
 8006abe:	f8c9 3000 	str.w	r3, [r9]
 8006ac2:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006ac4:	2762      	movs	r7, #98	; 0x62
 8006ac6:	601c      	str	r4, [r3, #0]
 8006ac8:	e728      	b.n	800691c <__gethex+0x124>
 8006aca:	1e71      	subs	r1, r6, #1
 8006acc:	4620      	mov	r0, r4
 8006ace:	f000 feba 	bl	8007846 <__any_on>
 8006ad2:	2800      	cmp	r0, #0
 8006ad4:	d1ed      	bne.n	8006ab2 <__gethex+0x2ba>
 8006ad6:	9802      	ldr	r0, [sp, #8]
 8006ad8:	4621      	mov	r1, r4
 8006ada:	f000 fa61 	bl	8006fa0 <_Bfree>
 8006ade:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8006ae0:	2300      	movs	r3, #0
 8006ae2:	6013      	str	r3, [r2, #0]
 8006ae4:	2750      	movs	r7, #80	; 0x50
 8006ae6:	e719      	b.n	800691c <__gethex+0x124>
 8006ae8:	0800a77c 	.word	0x0800a77c
 8006aec:	0800a701 	.word	0x0800a701
 8006af0:	0800a712 	.word	0x0800a712
 8006af4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006af6:	2b00      	cmp	r3, #0
 8006af8:	d1ed      	bne.n	8006ad6 <__gethex+0x2de>
 8006afa:	e7da      	b.n	8006ab2 <__gethex+0x2ba>
 8006afc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006afe:	2b00      	cmp	r3, #0
 8006b00:	d1d7      	bne.n	8006ab2 <__gethex+0x2ba>
 8006b02:	e7e8      	b.n	8006ad6 <__gethex+0x2de>
 8006b04:	1e6f      	subs	r7, r5, #1
 8006b06:	f1ba 0f00 	cmp.w	sl, #0
 8006b0a:	d131      	bne.n	8006b70 <__gethex+0x378>
 8006b0c:	b127      	cbz	r7, 8006b18 <__gethex+0x320>
 8006b0e:	4639      	mov	r1, r7
 8006b10:	4620      	mov	r0, r4
 8006b12:	f000 fe98 	bl	8007846 <__any_on>
 8006b16:	4682      	mov	sl, r0
 8006b18:	117b      	asrs	r3, r7, #5
 8006b1a:	2101      	movs	r1, #1
 8006b1c:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 8006b20:	f007 071f 	and.w	r7, r7, #31
 8006b24:	fa01 f707 	lsl.w	r7, r1, r7
 8006b28:	421f      	tst	r7, r3
 8006b2a:	4629      	mov	r1, r5
 8006b2c:	4620      	mov	r0, r4
 8006b2e:	bf18      	it	ne
 8006b30:	f04a 0a02 	orrne.w	sl, sl, #2
 8006b34:	1b76      	subs	r6, r6, r5
 8006b36:	f7ff fdf7 	bl	8006728 <rshift>
 8006b3a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8006b3e:	2702      	movs	r7, #2
 8006b40:	f1ba 0f00 	cmp.w	sl, #0
 8006b44:	d048      	beq.n	8006bd8 <__gethex+0x3e0>
 8006b46:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8006b4a:	2b02      	cmp	r3, #2
 8006b4c:	d015      	beq.n	8006b7a <__gethex+0x382>
 8006b4e:	2b03      	cmp	r3, #3
 8006b50:	d017      	beq.n	8006b82 <__gethex+0x38a>
 8006b52:	2b01      	cmp	r3, #1
 8006b54:	d109      	bne.n	8006b6a <__gethex+0x372>
 8006b56:	f01a 0f02 	tst.w	sl, #2
 8006b5a:	d006      	beq.n	8006b6a <__gethex+0x372>
 8006b5c:	f8d9 0000 	ldr.w	r0, [r9]
 8006b60:	ea4a 0a00 	orr.w	sl, sl, r0
 8006b64:	f01a 0f01 	tst.w	sl, #1
 8006b68:	d10e      	bne.n	8006b88 <__gethex+0x390>
 8006b6a:	f047 0710 	orr.w	r7, r7, #16
 8006b6e:	e033      	b.n	8006bd8 <__gethex+0x3e0>
 8006b70:	f04f 0a01 	mov.w	sl, #1
 8006b74:	e7d0      	b.n	8006b18 <__gethex+0x320>
 8006b76:	2701      	movs	r7, #1
 8006b78:	e7e2      	b.n	8006b40 <__gethex+0x348>
 8006b7a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006b7c:	f1c3 0301 	rsb	r3, r3, #1
 8006b80:	9315      	str	r3, [sp, #84]	; 0x54
 8006b82:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006b84:	2b00      	cmp	r3, #0
 8006b86:	d0f0      	beq.n	8006b6a <__gethex+0x372>
 8006b88:	f8d4 b010 	ldr.w	fp, [r4, #16]
 8006b8c:	f104 0314 	add.w	r3, r4, #20
 8006b90:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 8006b94:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 8006b98:	f04f 0c00 	mov.w	ip, #0
 8006b9c:	4618      	mov	r0, r3
 8006b9e:	f853 2b04 	ldr.w	r2, [r3], #4
 8006ba2:	f1b2 3fff 	cmp.w	r2, #4294967295
 8006ba6:	d01c      	beq.n	8006be2 <__gethex+0x3ea>
 8006ba8:	3201      	adds	r2, #1
 8006baa:	6002      	str	r2, [r0, #0]
 8006bac:	2f02      	cmp	r7, #2
 8006bae:	f104 0314 	add.w	r3, r4, #20
 8006bb2:	d13d      	bne.n	8006c30 <__gethex+0x438>
 8006bb4:	f8d8 2000 	ldr.w	r2, [r8]
 8006bb8:	3a01      	subs	r2, #1
 8006bba:	42b2      	cmp	r2, r6
 8006bbc:	d10a      	bne.n	8006bd4 <__gethex+0x3dc>
 8006bbe:	1171      	asrs	r1, r6, #5
 8006bc0:	2201      	movs	r2, #1
 8006bc2:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8006bc6:	f006 061f 	and.w	r6, r6, #31
 8006bca:	fa02 f606 	lsl.w	r6, r2, r6
 8006bce:	421e      	tst	r6, r3
 8006bd0:	bf18      	it	ne
 8006bd2:	4617      	movne	r7, r2
 8006bd4:	f047 0720 	orr.w	r7, r7, #32
 8006bd8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006bda:	601c      	str	r4, [r3, #0]
 8006bdc:	9b06      	ldr	r3, [sp, #24]
 8006bde:	601d      	str	r5, [r3, #0]
 8006be0:	e69c      	b.n	800691c <__gethex+0x124>
 8006be2:	4299      	cmp	r1, r3
 8006be4:	f843 cc04 	str.w	ip, [r3, #-4]
 8006be8:	d8d8      	bhi.n	8006b9c <__gethex+0x3a4>
 8006bea:	68a3      	ldr	r3, [r4, #8]
 8006bec:	459b      	cmp	fp, r3
 8006bee:	db17      	blt.n	8006c20 <__gethex+0x428>
 8006bf0:	6861      	ldr	r1, [r4, #4]
 8006bf2:	9802      	ldr	r0, [sp, #8]
 8006bf4:	3101      	adds	r1, #1
 8006bf6:	f000 f993 	bl	8006f20 <_Balloc>
 8006bfa:	4681      	mov	r9, r0
 8006bfc:	b918      	cbnz	r0, 8006c06 <__gethex+0x40e>
 8006bfe:	4b1a      	ldr	r3, [pc, #104]	; (8006c68 <__gethex+0x470>)
 8006c00:	4602      	mov	r2, r0
 8006c02:	2184      	movs	r1, #132	; 0x84
 8006c04:	e6ad      	b.n	8006962 <__gethex+0x16a>
 8006c06:	6922      	ldr	r2, [r4, #16]
 8006c08:	3202      	adds	r2, #2
 8006c0a:	f104 010c 	add.w	r1, r4, #12
 8006c0e:	0092      	lsls	r2, r2, #2
 8006c10:	300c      	adds	r0, #12
 8006c12:	f7fc fc49 	bl	80034a8 <memcpy>
 8006c16:	4621      	mov	r1, r4
 8006c18:	9802      	ldr	r0, [sp, #8]
 8006c1a:	f000 f9c1 	bl	8006fa0 <_Bfree>
 8006c1e:	464c      	mov	r4, r9
 8006c20:	6923      	ldr	r3, [r4, #16]
 8006c22:	1c5a      	adds	r2, r3, #1
 8006c24:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8006c28:	6122      	str	r2, [r4, #16]
 8006c2a:	2201      	movs	r2, #1
 8006c2c:	615a      	str	r2, [r3, #20]
 8006c2e:	e7bd      	b.n	8006bac <__gethex+0x3b4>
 8006c30:	6922      	ldr	r2, [r4, #16]
 8006c32:	455a      	cmp	r2, fp
 8006c34:	dd0b      	ble.n	8006c4e <__gethex+0x456>
 8006c36:	2101      	movs	r1, #1
 8006c38:	4620      	mov	r0, r4
 8006c3a:	f7ff fd75 	bl	8006728 <rshift>
 8006c3e:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8006c42:	3501      	adds	r5, #1
 8006c44:	42ab      	cmp	r3, r5
 8006c46:	f6ff aed6 	blt.w	80069f6 <__gethex+0x1fe>
 8006c4a:	2701      	movs	r7, #1
 8006c4c:	e7c2      	b.n	8006bd4 <__gethex+0x3dc>
 8006c4e:	f016 061f 	ands.w	r6, r6, #31
 8006c52:	d0fa      	beq.n	8006c4a <__gethex+0x452>
 8006c54:	449a      	add	sl, r3
 8006c56:	f1c6 0620 	rsb	r6, r6, #32
 8006c5a:	f85a 0c04 	ldr.w	r0, [sl, #-4]
 8006c5e:	f000 fa55 	bl	800710c <__hi0bits>
 8006c62:	42b0      	cmp	r0, r6
 8006c64:	dbe7      	blt.n	8006c36 <__gethex+0x43e>
 8006c66:	e7f0      	b.n	8006c4a <__gethex+0x452>
 8006c68:	0800a701 	.word	0x0800a701

08006c6c <L_shift>:
 8006c6c:	f1c2 0208 	rsb	r2, r2, #8
 8006c70:	0092      	lsls	r2, r2, #2
 8006c72:	b570      	push	{r4, r5, r6, lr}
 8006c74:	f1c2 0620 	rsb	r6, r2, #32
 8006c78:	6843      	ldr	r3, [r0, #4]
 8006c7a:	6804      	ldr	r4, [r0, #0]
 8006c7c:	fa03 f506 	lsl.w	r5, r3, r6
 8006c80:	432c      	orrs	r4, r5
 8006c82:	40d3      	lsrs	r3, r2
 8006c84:	6004      	str	r4, [r0, #0]
 8006c86:	f840 3f04 	str.w	r3, [r0, #4]!
 8006c8a:	4288      	cmp	r0, r1
 8006c8c:	d3f4      	bcc.n	8006c78 <L_shift+0xc>
 8006c8e:	bd70      	pop	{r4, r5, r6, pc}

08006c90 <__match>:
 8006c90:	b530      	push	{r4, r5, lr}
 8006c92:	6803      	ldr	r3, [r0, #0]
 8006c94:	3301      	adds	r3, #1
 8006c96:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006c9a:	b914      	cbnz	r4, 8006ca2 <__match+0x12>
 8006c9c:	6003      	str	r3, [r0, #0]
 8006c9e:	2001      	movs	r0, #1
 8006ca0:	bd30      	pop	{r4, r5, pc}
 8006ca2:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006ca6:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 8006caa:	2d19      	cmp	r5, #25
 8006cac:	bf98      	it	ls
 8006cae:	3220      	addls	r2, #32
 8006cb0:	42a2      	cmp	r2, r4
 8006cb2:	d0f0      	beq.n	8006c96 <__match+0x6>
 8006cb4:	2000      	movs	r0, #0
 8006cb6:	e7f3      	b.n	8006ca0 <__match+0x10>

08006cb8 <__hexnan>:
 8006cb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006cbc:	680b      	ldr	r3, [r1, #0]
 8006cbe:	6801      	ldr	r1, [r0, #0]
 8006cc0:	115e      	asrs	r6, r3, #5
 8006cc2:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8006cc6:	f013 031f 	ands.w	r3, r3, #31
 8006cca:	b087      	sub	sp, #28
 8006ccc:	bf18      	it	ne
 8006cce:	3604      	addne	r6, #4
 8006cd0:	2500      	movs	r5, #0
 8006cd2:	1f37      	subs	r7, r6, #4
 8006cd4:	4682      	mov	sl, r0
 8006cd6:	4690      	mov	r8, r2
 8006cd8:	9301      	str	r3, [sp, #4]
 8006cda:	f846 5c04 	str.w	r5, [r6, #-4]
 8006cde:	46b9      	mov	r9, r7
 8006ce0:	463c      	mov	r4, r7
 8006ce2:	9502      	str	r5, [sp, #8]
 8006ce4:	46ab      	mov	fp, r5
 8006ce6:	784a      	ldrb	r2, [r1, #1]
 8006ce8:	1c4b      	adds	r3, r1, #1
 8006cea:	9303      	str	r3, [sp, #12]
 8006cec:	b342      	cbz	r2, 8006d40 <__hexnan+0x88>
 8006cee:	4610      	mov	r0, r2
 8006cf0:	9105      	str	r1, [sp, #20]
 8006cf2:	9204      	str	r2, [sp, #16]
 8006cf4:	f7ff fd6a 	bl	80067cc <__hexdig_fun>
 8006cf8:	2800      	cmp	r0, #0
 8006cfa:	d14f      	bne.n	8006d9c <__hexnan+0xe4>
 8006cfc:	9a04      	ldr	r2, [sp, #16]
 8006cfe:	9905      	ldr	r1, [sp, #20]
 8006d00:	2a20      	cmp	r2, #32
 8006d02:	d818      	bhi.n	8006d36 <__hexnan+0x7e>
 8006d04:	9b02      	ldr	r3, [sp, #8]
 8006d06:	459b      	cmp	fp, r3
 8006d08:	dd13      	ble.n	8006d32 <__hexnan+0x7a>
 8006d0a:	454c      	cmp	r4, r9
 8006d0c:	d206      	bcs.n	8006d1c <__hexnan+0x64>
 8006d0e:	2d07      	cmp	r5, #7
 8006d10:	dc04      	bgt.n	8006d1c <__hexnan+0x64>
 8006d12:	462a      	mov	r2, r5
 8006d14:	4649      	mov	r1, r9
 8006d16:	4620      	mov	r0, r4
 8006d18:	f7ff ffa8 	bl	8006c6c <L_shift>
 8006d1c:	4544      	cmp	r4, r8
 8006d1e:	d950      	bls.n	8006dc2 <__hexnan+0x10a>
 8006d20:	2300      	movs	r3, #0
 8006d22:	f1a4 0904 	sub.w	r9, r4, #4
 8006d26:	f844 3c04 	str.w	r3, [r4, #-4]
 8006d2a:	f8cd b008 	str.w	fp, [sp, #8]
 8006d2e:	464c      	mov	r4, r9
 8006d30:	461d      	mov	r5, r3
 8006d32:	9903      	ldr	r1, [sp, #12]
 8006d34:	e7d7      	b.n	8006ce6 <__hexnan+0x2e>
 8006d36:	2a29      	cmp	r2, #41	; 0x29
 8006d38:	d156      	bne.n	8006de8 <__hexnan+0x130>
 8006d3a:	3102      	adds	r1, #2
 8006d3c:	f8ca 1000 	str.w	r1, [sl]
 8006d40:	f1bb 0f00 	cmp.w	fp, #0
 8006d44:	d050      	beq.n	8006de8 <__hexnan+0x130>
 8006d46:	454c      	cmp	r4, r9
 8006d48:	d206      	bcs.n	8006d58 <__hexnan+0xa0>
 8006d4a:	2d07      	cmp	r5, #7
 8006d4c:	dc04      	bgt.n	8006d58 <__hexnan+0xa0>
 8006d4e:	462a      	mov	r2, r5
 8006d50:	4649      	mov	r1, r9
 8006d52:	4620      	mov	r0, r4
 8006d54:	f7ff ff8a 	bl	8006c6c <L_shift>
 8006d58:	4544      	cmp	r4, r8
 8006d5a:	d934      	bls.n	8006dc6 <__hexnan+0x10e>
 8006d5c:	f1a8 0204 	sub.w	r2, r8, #4
 8006d60:	4623      	mov	r3, r4
 8006d62:	f853 1b04 	ldr.w	r1, [r3], #4
 8006d66:	f842 1f04 	str.w	r1, [r2, #4]!
 8006d6a:	429f      	cmp	r7, r3
 8006d6c:	d2f9      	bcs.n	8006d62 <__hexnan+0xaa>
 8006d6e:	1b3b      	subs	r3, r7, r4
 8006d70:	f023 0303 	bic.w	r3, r3, #3
 8006d74:	3304      	adds	r3, #4
 8006d76:	3401      	adds	r4, #1
 8006d78:	3e03      	subs	r6, #3
 8006d7a:	42b4      	cmp	r4, r6
 8006d7c:	bf88      	it	hi
 8006d7e:	2304      	movhi	r3, #4
 8006d80:	4443      	add	r3, r8
 8006d82:	2200      	movs	r2, #0
 8006d84:	f843 2b04 	str.w	r2, [r3], #4
 8006d88:	429f      	cmp	r7, r3
 8006d8a:	d2fb      	bcs.n	8006d84 <__hexnan+0xcc>
 8006d8c:	683b      	ldr	r3, [r7, #0]
 8006d8e:	b91b      	cbnz	r3, 8006d98 <__hexnan+0xe0>
 8006d90:	4547      	cmp	r7, r8
 8006d92:	d127      	bne.n	8006de4 <__hexnan+0x12c>
 8006d94:	2301      	movs	r3, #1
 8006d96:	603b      	str	r3, [r7, #0]
 8006d98:	2005      	movs	r0, #5
 8006d9a:	e026      	b.n	8006dea <__hexnan+0x132>
 8006d9c:	3501      	adds	r5, #1
 8006d9e:	2d08      	cmp	r5, #8
 8006da0:	f10b 0b01 	add.w	fp, fp, #1
 8006da4:	dd06      	ble.n	8006db4 <__hexnan+0xfc>
 8006da6:	4544      	cmp	r4, r8
 8006da8:	d9c3      	bls.n	8006d32 <__hexnan+0x7a>
 8006daa:	2300      	movs	r3, #0
 8006dac:	f844 3c04 	str.w	r3, [r4, #-4]
 8006db0:	2501      	movs	r5, #1
 8006db2:	3c04      	subs	r4, #4
 8006db4:	6822      	ldr	r2, [r4, #0]
 8006db6:	f000 000f 	and.w	r0, r0, #15
 8006dba:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 8006dbe:	6022      	str	r2, [r4, #0]
 8006dc0:	e7b7      	b.n	8006d32 <__hexnan+0x7a>
 8006dc2:	2508      	movs	r5, #8
 8006dc4:	e7b5      	b.n	8006d32 <__hexnan+0x7a>
 8006dc6:	9b01      	ldr	r3, [sp, #4]
 8006dc8:	2b00      	cmp	r3, #0
 8006dca:	d0df      	beq.n	8006d8c <__hexnan+0xd4>
 8006dcc:	f04f 32ff 	mov.w	r2, #4294967295
 8006dd0:	f1c3 0320 	rsb	r3, r3, #32
 8006dd4:	fa22 f303 	lsr.w	r3, r2, r3
 8006dd8:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8006ddc:	401a      	ands	r2, r3
 8006dde:	f846 2c04 	str.w	r2, [r6, #-4]
 8006de2:	e7d3      	b.n	8006d8c <__hexnan+0xd4>
 8006de4:	3f04      	subs	r7, #4
 8006de6:	e7d1      	b.n	8006d8c <__hexnan+0xd4>
 8006de8:	2004      	movs	r0, #4
 8006dea:	b007      	add	sp, #28
 8006dec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08006df0 <_localeconv_r>:
 8006df0:	4800      	ldr	r0, [pc, #0]	; (8006df4 <_localeconv_r+0x4>)
 8006df2:	4770      	bx	lr
 8006df4:	20000c68 	.word	0x20000c68

08006df8 <_lseek_r>:
 8006df8:	b538      	push	{r3, r4, r5, lr}
 8006dfa:	4d07      	ldr	r5, [pc, #28]	; (8006e18 <_lseek_r+0x20>)
 8006dfc:	4604      	mov	r4, r0
 8006dfe:	4608      	mov	r0, r1
 8006e00:	4611      	mov	r1, r2
 8006e02:	2200      	movs	r2, #0
 8006e04:	602a      	str	r2, [r5, #0]
 8006e06:	461a      	mov	r2, r3
 8006e08:	f7fb fd5f 	bl	80028ca <_lseek>
 8006e0c:	1c43      	adds	r3, r0, #1
 8006e0e:	d102      	bne.n	8006e16 <_lseek_r+0x1e>
 8006e10:	682b      	ldr	r3, [r5, #0]
 8006e12:	b103      	cbz	r3, 8006e16 <_lseek_r+0x1e>
 8006e14:	6023      	str	r3, [r4, #0]
 8006e16:	bd38      	pop	{r3, r4, r5, pc}
 8006e18:	20000d5c 	.word	0x20000d5c

08006e1c <__swhatbuf_r>:
 8006e1c:	b570      	push	{r4, r5, r6, lr}
 8006e1e:	460e      	mov	r6, r1
 8006e20:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006e24:	2900      	cmp	r1, #0
 8006e26:	b096      	sub	sp, #88	; 0x58
 8006e28:	4614      	mov	r4, r2
 8006e2a:	461d      	mov	r5, r3
 8006e2c:	da07      	bge.n	8006e3e <__swhatbuf_r+0x22>
 8006e2e:	2300      	movs	r3, #0
 8006e30:	602b      	str	r3, [r5, #0]
 8006e32:	89b3      	ldrh	r3, [r6, #12]
 8006e34:	061a      	lsls	r2, r3, #24
 8006e36:	d410      	bmi.n	8006e5a <__swhatbuf_r+0x3e>
 8006e38:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8006e3c:	e00e      	b.n	8006e5c <__swhatbuf_r+0x40>
 8006e3e:	466a      	mov	r2, sp
 8006e40:	f001 fc24 	bl	800868c <_fstat_r>
 8006e44:	2800      	cmp	r0, #0
 8006e46:	dbf2      	blt.n	8006e2e <__swhatbuf_r+0x12>
 8006e48:	9a01      	ldr	r2, [sp, #4]
 8006e4a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8006e4e:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8006e52:	425a      	negs	r2, r3
 8006e54:	415a      	adcs	r2, r3
 8006e56:	602a      	str	r2, [r5, #0]
 8006e58:	e7ee      	b.n	8006e38 <__swhatbuf_r+0x1c>
 8006e5a:	2340      	movs	r3, #64	; 0x40
 8006e5c:	2000      	movs	r0, #0
 8006e5e:	6023      	str	r3, [r4, #0]
 8006e60:	b016      	add	sp, #88	; 0x58
 8006e62:	bd70      	pop	{r4, r5, r6, pc}

08006e64 <__smakebuf_r>:
 8006e64:	898b      	ldrh	r3, [r1, #12]
 8006e66:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006e68:	079d      	lsls	r5, r3, #30
 8006e6a:	4606      	mov	r6, r0
 8006e6c:	460c      	mov	r4, r1
 8006e6e:	d507      	bpl.n	8006e80 <__smakebuf_r+0x1c>
 8006e70:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8006e74:	6023      	str	r3, [r4, #0]
 8006e76:	6123      	str	r3, [r4, #16]
 8006e78:	2301      	movs	r3, #1
 8006e7a:	6163      	str	r3, [r4, #20]
 8006e7c:	b002      	add	sp, #8
 8006e7e:	bd70      	pop	{r4, r5, r6, pc}
 8006e80:	ab01      	add	r3, sp, #4
 8006e82:	466a      	mov	r2, sp
 8006e84:	f7ff ffca 	bl	8006e1c <__swhatbuf_r>
 8006e88:	9900      	ldr	r1, [sp, #0]
 8006e8a:	4605      	mov	r5, r0
 8006e8c:	4630      	mov	r0, r6
 8006e8e:	f7fc fb7d 	bl	800358c <_malloc_r>
 8006e92:	b948      	cbnz	r0, 8006ea8 <__smakebuf_r+0x44>
 8006e94:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006e98:	059a      	lsls	r2, r3, #22
 8006e9a:	d4ef      	bmi.n	8006e7c <__smakebuf_r+0x18>
 8006e9c:	f023 0303 	bic.w	r3, r3, #3
 8006ea0:	f043 0302 	orr.w	r3, r3, #2
 8006ea4:	81a3      	strh	r3, [r4, #12]
 8006ea6:	e7e3      	b.n	8006e70 <__smakebuf_r+0xc>
 8006ea8:	4b0d      	ldr	r3, [pc, #52]	; (8006ee0 <__smakebuf_r+0x7c>)
 8006eaa:	62b3      	str	r3, [r6, #40]	; 0x28
 8006eac:	89a3      	ldrh	r3, [r4, #12]
 8006eae:	6020      	str	r0, [r4, #0]
 8006eb0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006eb4:	81a3      	strh	r3, [r4, #12]
 8006eb6:	9b00      	ldr	r3, [sp, #0]
 8006eb8:	6163      	str	r3, [r4, #20]
 8006eba:	9b01      	ldr	r3, [sp, #4]
 8006ebc:	6120      	str	r0, [r4, #16]
 8006ebe:	b15b      	cbz	r3, 8006ed8 <__smakebuf_r+0x74>
 8006ec0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006ec4:	4630      	mov	r0, r6
 8006ec6:	f001 fbf3 	bl	80086b0 <_isatty_r>
 8006eca:	b128      	cbz	r0, 8006ed8 <__smakebuf_r+0x74>
 8006ecc:	89a3      	ldrh	r3, [r4, #12]
 8006ece:	f023 0303 	bic.w	r3, r3, #3
 8006ed2:	f043 0301 	orr.w	r3, r3, #1
 8006ed6:	81a3      	strh	r3, [r4, #12]
 8006ed8:	89a0      	ldrh	r0, [r4, #12]
 8006eda:	4305      	orrs	r5, r0
 8006edc:	81a5      	strh	r5, [r4, #12]
 8006ede:	e7cd      	b.n	8006e7c <__smakebuf_r+0x18>
 8006ee0:	0800325d 	.word	0x0800325d

08006ee4 <__ascii_mbtowc>:
 8006ee4:	b082      	sub	sp, #8
 8006ee6:	b901      	cbnz	r1, 8006eea <__ascii_mbtowc+0x6>
 8006ee8:	a901      	add	r1, sp, #4
 8006eea:	b142      	cbz	r2, 8006efe <__ascii_mbtowc+0x1a>
 8006eec:	b14b      	cbz	r3, 8006f02 <__ascii_mbtowc+0x1e>
 8006eee:	7813      	ldrb	r3, [r2, #0]
 8006ef0:	600b      	str	r3, [r1, #0]
 8006ef2:	7812      	ldrb	r2, [r2, #0]
 8006ef4:	1e10      	subs	r0, r2, #0
 8006ef6:	bf18      	it	ne
 8006ef8:	2001      	movne	r0, #1
 8006efa:	b002      	add	sp, #8
 8006efc:	4770      	bx	lr
 8006efe:	4610      	mov	r0, r2
 8006f00:	e7fb      	b.n	8006efa <__ascii_mbtowc+0x16>
 8006f02:	f06f 0001 	mvn.w	r0, #1
 8006f06:	e7f8      	b.n	8006efa <__ascii_mbtowc+0x16>

08006f08 <__malloc_lock>:
 8006f08:	4801      	ldr	r0, [pc, #4]	; (8006f10 <__malloc_lock+0x8>)
 8006f0a:	f7fc baba 	b.w	8003482 <__retarget_lock_acquire_recursive>
 8006f0e:	bf00      	nop
 8006f10:	20000d54 	.word	0x20000d54

08006f14 <__malloc_unlock>:
 8006f14:	4801      	ldr	r0, [pc, #4]	; (8006f1c <__malloc_unlock+0x8>)
 8006f16:	f7fc bab5 	b.w	8003484 <__retarget_lock_release_recursive>
 8006f1a:	bf00      	nop
 8006f1c:	20000d54 	.word	0x20000d54

08006f20 <_Balloc>:
 8006f20:	b570      	push	{r4, r5, r6, lr}
 8006f22:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8006f24:	4604      	mov	r4, r0
 8006f26:	460d      	mov	r5, r1
 8006f28:	b976      	cbnz	r6, 8006f48 <_Balloc+0x28>
 8006f2a:	2010      	movs	r0, #16
 8006f2c:	f7fc faac 	bl	8003488 <malloc>
 8006f30:	4602      	mov	r2, r0
 8006f32:	6260      	str	r0, [r4, #36]	; 0x24
 8006f34:	b920      	cbnz	r0, 8006f40 <_Balloc+0x20>
 8006f36:	4b18      	ldr	r3, [pc, #96]	; (8006f98 <_Balloc+0x78>)
 8006f38:	4818      	ldr	r0, [pc, #96]	; (8006f9c <_Balloc+0x7c>)
 8006f3a:	2166      	movs	r1, #102	; 0x66
 8006f3c:	f7fe fc64 	bl	8005808 <__assert_func>
 8006f40:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8006f44:	6006      	str	r6, [r0, #0]
 8006f46:	60c6      	str	r6, [r0, #12]
 8006f48:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8006f4a:	68f3      	ldr	r3, [r6, #12]
 8006f4c:	b183      	cbz	r3, 8006f70 <_Balloc+0x50>
 8006f4e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006f50:	68db      	ldr	r3, [r3, #12]
 8006f52:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8006f56:	b9b8      	cbnz	r0, 8006f88 <_Balloc+0x68>
 8006f58:	2101      	movs	r1, #1
 8006f5a:	fa01 f605 	lsl.w	r6, r1, r5
 8006f5e:	1d72      	adds	r2, r6, #5
 8006f60:	0092      	lsls	r2, r2, #2
 8006f62:	4620      	mov	r0, r4
 8006f64:	f7fc fab6 	bl	80034d4 <_calloc_r>
 8006f68:	b160      	cbz	r0, 8006f84 <_Balloc+0x64>
 8006f6a:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8006f6e:	e00e      	b.n	8006f8e <_Balloc+0x6e>
 8006f70:	2221      	movs	r2, #33	; 0x21
 8006f72:	2104      	movs	r1, #4
 8006f74:	4620      	mov	r0, r4
 8006f76:	f7fc faad 	bl	80034d4 <_calloc_r>
 8006f7a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006f7c:	60f0      	str	r0, [r6, #12]
 8006f7e:	68db      	ldr	r3, [r3, #12]
 8006f80:	2b00      	cmp	r3, #0
 8006f82:	d1e4      	bne.n	8006f4e <_Balloc+0x2e>
 8006f84:	2000      	movs	r0, #0
 8006f86:	bd70      	pop	{r4, r5, r6, pc}
 8006f88:	6802      	ldr	r2, [r0, #0]
 8006f8a:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8006f8e:	2300      	movs	r3, #0
 8006f90:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8006f94:	e7f7      	b.n	8006f86 <_Balloc+0x66>
 8006f96:	bf00      	nop
 8006f98:	0800a4e0 	.word	0x0800a4e0
 8006f9c:	0800a790 	.word	0x0800a790

08006fa0 <_Bfree>:
 8006fa0:	b570      	push	{r4, r5, r6, lr}
 8006fa2:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8006fa4:	4605      	mov	r5, r0
 8006fa6:	460c      	mov	r4, r1
 8006fa8:	b976      	cbnz	r6, 8006fc8 <_Bfree+0x28>
 8006faa:	2010      	movs	r0, #16
 8006fac:	f7fc fa6c 	bl	8003488 <malloc>
 8006fb0:	4602      	mov	r2, r0
 8006fb2:	6268      	str	r0, [r5, #36]	; 0x24
 8006fb4:	b920      	cbnz	r0, 8006fc0 <_Bfree+0x20>
 8006fb6:	4b09      	ldr	r3, [pc, #36]	; (8006fdc <_Bfree+0x3c>)
 8006fb8:	4809      	ldr	r0, [pc, #36]	; (8006fe0 <_Bfree+0x40>)
 8006fba:	218a      	movs	r1, #138	; 0x8a
 8006fbc:	f7fe fc24 	bl	8005808 <__assert_func>
 8006fc0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8006fc4:	6006      	str	r6, [r0, #0]
 8006fc6:	60c6      	str	r6, [r0, #12]
 8006fc8:	b13c      	cbz	r4, 8006fda <_Bfree+0x3a>
 8006fca:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8006fcc:	6862      	ldr	r2, [r4, #4]
 8006fce:	68db      	ldr	r3, [r3, #12]
 8006fd0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8006fd4:	6021      	str	r1, [r4, #0]
 8006fd6:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8006fda:	bd70      	pop	{r4, r5, r6, pc}
 8006fdc:	0800a4e0 	.word	0x0800a4e0
 8006fe0:	0800a790 	.word	0x0800a790

08006fe4 <__multadd>:
 8006fe4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006fe8:	690e      	ldr	r6, [r1, #16]
 8006fea:	4607      	mov	r7, r0
 8006fec:	4698      	mov	r8, r3
 8006fee:	460c      	mov	r4, r1
 8006ff0:	f101 0014 	add.w	r0, r1, #20
 8006ff4:	2300      	movs	r3, #0
 8006ff6:	6805      	ldr	r5, [r0, #0]
 8006ff8:	b2a9      	uxth	r1, r5
 8006ffa:	fb02 8101 	mla	r1, r2, r1, r8
 8006ffe:	ea4f 4c11 	mov.w	ip, r1, lsr #16
 8007002:	0c2d      	lsrs	r5, r5, #16
 8007004:	fb02 c505 	mla	r5, r2, r5, ip
 8007008:	b289      	uxth	r1, r1
 800700a:	3301      	adds	r3, #1
 800700c:	eb01 4105 	add.w	r1, r1, r5, lsl #16
 8007010:	429e      	cmp	r6, r3
 8007012:	f840 1b04 	str.w	r1, [r0], #4
 8007016:	ea4f 4815 	mov.w	r8, r5, lsr #16
 800701a:	dcec      	bgt.n	8006ff6 <__multadd+0x12>
 800701c:	f1b8 0f00 	cmp.w	r8, #0
 8007020:	d022      	beq.n	8007068 <__multadd+0x84>
 8007022:	68a3      	ldr	r3, [r4, #8]
 8007024:	42b3      	cmp	r3, r6
 8007026:	dc19      	bgt.n	800705c <__multadd+0x78>
 8007028:	6861      	ldr	r1, [r4, #4]
 800702a:	4638      	mov	r0, r7
 800702c:	3101      	adds	r1, #1
 800702e:	f7ff ff77 	bl	8006f20 <_Balloc>
 8007032:	4605      	mov	r5, r0
 8007034:	b928      	cbnz	r0, 8007042 <__multadd+0x5e>
 8007036:	4602      	mov	r2, r0
 8007038:	4b0d      	ldr	r3, [pc, #52]	; (8007070 <__multadd+0x8c>)
 800703a:	480e      	ldr	r0, [pc, #56]	; (8007074 <__multadd+0x90>)
 800703c:	21b5      	movs	r1, #181	; 0xb5
 800703e:	f7fe fbe3 	bl	8005808 <__assert_func>
 8007042:	6922      	ldr	r2, [r4, #16]
 8007044:	3202      	adds	r2, #2
 8007046:	f104 010c 	add.w	r1, r4, #12
 800704a:	0092      	lsls	r2, r2, #2
 800704c:	300c      	adds	r0, #12
 800704e:	f7fc fa2b 	bl	80034a8 <memcpy>
 8007052:	4621      	mov	r1, r4
 8007054:	4638      	mov	r0, r7
 8007056:	f7ff ffa3 	bl	8006fa0 <_Bfree>
 800705a:	462c      	mov	r4, r5
 800705c:	eb04 0386 	add.w	r3, r4, r6, lsl #2
 8007060:	3601      	adds	r6, #1
 8007062:	f8c3 8014 	str.w	r8, [r3, #20]
 8007066:	6126      	str	r6, [r4, #16]
 8007068:	4620      	mov	r0, r4
 800706a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800706e:	bf00      	nop
 8007070:	0800a701 	.word	0x0800a701
 8007074:	0800a790 	.word	0x0800a790

08007078 <__s2b>:
 8007078:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800707c:	460c      	mov	r4, r1
 800707e:	4615      	mov	r5, r2
 8007080:	461f      	mov	r7, r3
 8007082:	2209      	movs	r2, #9
 8007084:	3308      	adds	r3, #8
 8007086:	4606      	mov	r6, r0
 8007088:	fb93 f3f2 	sdiv	r3, r3, r2
 800708c:	2100      	movs	r1, #0
 800708e:	2201      	movs	r2, #1
 8007090:	429a      	cmp	r2, r3
 8007092:	db09      	blt.n	80070a8 <__s2b+0x30>
 8007094:	4630      	mov	r0, r6
 8007096:	f7ff ff43 	bl	8006f20 <_Balloc>
 800709a:	b940      	cbnz	r0, 80070ae <__s2b+0x36>
 800709c:	4602      	mov	r2, r0
 800709e:	4b19      	ldr	r3, [pc, #100]	; (8007104 <__s2b+0x8c>)
 80070a0:	4819      	ldr	r0, [pc, #100]	; (8007108 <__s2b+0x90>)
 80070a2:	21ce      	movs	r1, #206	; 0xce
 80070a4:	f7fe fbb0 	bl	8005808 <__assert_func>
 80070a8:	0052      	lsls	r2, r2, #1
 80070aa:	3101      	adds	r1, #1
 80070ac:	e7f0      	b.n	8007090 <__s2b+0x18>
 80070ae:	9b08      	ldr	r3, [sp, #32]
 80070b0:	6143      	str	r3, [r0, #20]
 80070b2:	2d09      	cmp	r5, #9
 80070b4:	f04f 0301 	mov.w	r3, #1
 80070b8:	6103      	str	r3, [r0, #16]
 80070ba:	dd16      	ble.n	80070ea <__s2b+0x72>
 80070bc:	f104 0909 	add.w	r9, r4, #9
 80070c0:	46c8      	mov	r8, r9
 80070c2:	442c      	add	r4, r5
 80070c4:	f818 3b01 	ldrb.w	r3, [r8], #1
 80070c8:	4601      	mov	r1, r0
 80070ca:	3b30      	subs	r3, #48	; 0x30
 80070cc:	220a      	movs	r2, #10
 80070ce:	4630      	mov	r0, r6
 80070d0:	f7ff ff88 	bl	8006fe4 <__multadd>
 80070d4:	45a0      	cmp	r8, r4
 80070d6:	d1f5      	bne.n	80070c4 <__s2b+0x4c>
 80070d8:	f1a5 0408 	sub.w	r4, r5, #8
 80070dc:	444c      	add	r4, r9
 80070de:	1b2d      	subs	r5, r5, r4
 80070e0:	1963      	adds	r3, r4, r5
 80070e2:	42bb      	cmp	r3, r7
 80070e4:	db04      	blt.n	80070f0 <__s2b+0x78>
 80070e6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80070ea:	340a      	adds	r4, #10
 80070ec:	2509      	movs	r5, #9
 80070ee:	e7f6      	b.n	80070de <__s2b+0x66>
 80070f0:	f814 3b01 	ldrb.w	r3, [r4], #1
 80070f4:	4601      	mov	r1, r0
 80070f6:	3b30      	subs	r3, #48	; 0x30
 80070f8:	220a      	movs	r2, #10
 80070fa:	4630      	mov	r0, r6
 80070fc:	f7ff ff72 	bl	8006fe4 <__multadd>
 8007100:	e7ee      	b.n	80070e0 <__s2b+0x68>
 8007102:	bf00      	nop
 8007104:	0800a701 	.word	0x0800a701
 8007108:	0800a790 	.word	0x0800a790

0800710c <__hi0bits>:
 800710c:	0c02      	lsrs	r2, r0, #16
 800710e:	0412      	lsls	r2, r2, #16
 8007110:	4603      	mov	r3, r0
 8007112:	b9ca      	cbnz	r2, 8007148 <__hi0bits+0x3c>
 8007114:	0403      	lsls	r3, r0, #16
 8007116:	2010      	movs	r0, #16
 8007118:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800711c:	bf04      	itt	eq
 800711e:	021b      	lsleq	r3, r3, #8
 8007120:	3008      	addeq	r0, #8
 8007122:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8007126:	bf04      	itt	eq
 8007128:	011b      	lsleq	r3, r3, #4
 800712a:	3004      	addeq	r0, #4
 800712c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8007130:	bf04      	itt	eq
 8007132:	009b      	lsleq	r3, r3, #2
 8007134:	3002      	addeq	r0, #2
 8007136:	2b00      	cmp	r3, #0
 8007138:	db05      	blt.n	8007146 <__hi0bits+0x3a>
 800713a:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
 800713e:	f100 0001 	add.w	r0, r0, #1
 8007142:	bf08      	it	eq
 8007144:	2020      	moveq	r0, #32
 8007146:	4770      	bx	lr
 8007148:	2000      	movs	r0, #0
 800714a:	e7e5      	b.n	8007118 <__hi0bits+0xc>

0800714c <__lo0bits>:
 800714c:	6803      	ldr	r3, [r0, #0]
 800714e:	4602      	mov	r2, r0
 8007150:	f013 0007 	ands.w	r0, r3, #7
 8007154:	d00b      	beq.n	800716e <__lo0bits+0x22>
 8007156:	07d9      	lsls	r1, r3, #31
 8007158:	d422      	bmi.n	80071a0 <__lo0bits+0x54>
 800715a:	0798      	lsls	r0, r3, #30
 800715c:	bf49      	itett	mi
 800715e:	085b      	lsrmi	r3, r3, #1
 8007160:	089b      	lsrpl	r3, r3, #2
 8007162:	2001      	movmi	r0, #1
 8007164:	6013      	strmi	r3, [r2, #0]
 8007166:	bf5c      	itt	pl
 8007168:	6013      	strpl	r3, [r2, #0]
 800716a:	2002      	movpl	r0, #2
 800716c:	4770      	bx	lr
 800716e:	b299      	uxth	r1, r3
 8007170:	b909      	cbnz	r1, 8007176 <__lo0bits+0x2a>
 8007172:	0c1b      	lsrs	r3, r3, #16
 8007174:	2010      	movs	r0, #16
 8007176:	f013 0fff 	tst.w	r3, #255	; 0xff
 800717a:	bf04      	itt	eq
 800717c:	0a1b      	lsreq	r3, r3, #8
 800717e:	3008      	addeq	r0, #8
 8007180:	0719      	lsls	r1, r3, #28
 8007182:	bf04      	itt	eq
 8007184:	091b      	lsreq	r3, r3, #4
 8007186:	3004      	addeq	r0, #4
 8007188:	0799      	lsls	r1, r3, #30
 800718a:	bf04      	itt	eq
 800718c:	089b      	lsreq	r3, r3, #2
 800718e:	3002      	addeq	r0, #2
 8007190:	07d9      	lsls	r1, r3, #31
 8007192:	d403      	bmi.n	800719c <__lo0bits+0x50>
 8007194:	085b      	lsrs	r3, r3, #1
 8007196:	f100 0001 	add.w	r0, r0, #1
 800719a:	d003      	beq.n	80071a4 <__lo0bits+0x58>
 800719c:	6013      	str	r3, [r2, #0]
 800719e:	4770      	bx	lr
 80071a0:	2000      	movs	r0, #0
 80071a2:	4770      	bx	lr
 80071a4:	2020      	movs	r0, #32
 80071a6:	4770      	bx	lr

080071a8 <__i2b>:
 80071a8:	b510      	push	{r4, lr}
 80071aa:	460c      	mov	r4, r1
 80071ac:	2101      	movs	r1, #1
 80071ae:	f7ff feb7 	bl	8006f20 <_Balloc>
 80071b2:	4602      	mov	r2, r0
 80071b4:	b928      	cbnz	r0, 80071c2 <__i2b+0x1a>
 80071b6:	4b05      	ldr	r3, [pc, #20]	; (80071cc <__i2b+0x24>)
 80071b8:	4805      	ldr	r0, [pc, #20]	; (80071d0 <__i2b+0x28>)
 80071ba:	f44f 71a0 	mov.w	r1, #320	; 0x140
 80071be:	f7fe fb23 	bl	8005808 <__assert_func>
 80071c2:	2301      	movs	r3, #1
 80071c4:	6144      	str	r4, [r0, #20]
 80071c6:	6103      	str	r3, [r0, #16]
 80071c8:	bd10      	pop	{r4, pc}
 80071ca:	bf00      	nop
 80071cc:	0800a701 	.word	0x0800a701
 80071d0:	0800a790 	.word	0x0800a790

080071d4 <__multiply>:
 80071d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80071d8:	4614      	mov	r4, r2
 80071da:	690a      	ldr	r2, [r1, #16]
 80071dc:	6923      	ldr	r3, [r4, #16]
 80071de:	429a      	cmp	r2, r3
 80071e0:	bfb8      	it	lt
 80071e2:	460b      	movlt	r3, r1
 80071e4:	460d      	mov	r5, r1
 80071e6:	bfbc      	itt	lt
 80071e8:	4625      	movlt	r5, r4
 80071ea:	461c      	movlt	r4, r3
 80071ec:	f8d5 a010 	ldr.w	sl, [r5, #16]
 80071f0:	f8d4 9010 	ldr.w	r9, [r4, #16]
 80071f4:	68ab      	ldr	r3, [r5, #8]
 80071f6:	6869      	ldr	r1, [r5, #4]
 80071f8:	eb0a 0709 	add.w	r7, sl, r9
 80071fc:	42bb      	cmp	r3, r7
 80071fe:	b085      	sub	sp, #20
 8007200:	bfb8      	it	lt
 8007202:	3101      	addlt	r1, #1
 8007204:	f7ff fe8c 	bl	8006f20 <_Balloc>
 8007208:	b930      	cbnz	r0, 8007218 <__multiply+0x44>
 800720a:	4602      	mov	r2, r0
 800720c:	4b42      	ldr	r3, [pc, #264]	; (8007318 <__multiply+0x144>)
 800720e:	4843      	ldr	r0, [pc, #268]	; (800731c <__multiply+0x148>)
 8007210:	f240 115d 	movw	r1, #349	; 0x15d
 8007214:	f7fe faf8 	bl	8005808 <__assert_func>
 8007218:	f100 0614 	add.w	r6, r0, #20
 800721c:	eb06 0887 	add.w	r8, r6, r7, lsl #2
 8007220:	4633      	mov	r3, r6
 8007222:	2200      	movs	r2, #0
 8007224:	4543      	cmp	r3, r8
 8007226:	d31e      	bcc.n	8007266 <__multiply+0x92>
 8007228:	f105 0c14 	add.w	ip, r5, #20
 800722c:	f104 0314 	add.w	r3, r4, #20
 8007230:	eb0c 0c8a 	add.w	ip, ip, sl, lsl #2
 8007234:	eb03 0289 	add.w	r2, r3, r9, lsl #2
 8007238:	9202      	str	r2, [sp, #8]
 800723a:	ebac 0205 	sub.w	r2, ip, r5
 800723e:	3a15      	subs	r2, #21
 8007240:	f022 0203 	bic.w	r2, r2, #3
 8007244:	3204      	adds	r2, #4
 8007246:	f105 0115 	add.w	r1, r5, #21
 800724a:	458c      	cmp	ip, r1
 800724c:	bf38      	it	cc
 800724e:	2204      	movcc	r2, #4
 8007250:	9201      	str	r2, [sp, #4]
 8007252:	9a02      	ldr	r2, [sp, #8]
 8007254:	9303      	str	r3, [sp, #12]
 8007256:	429a      	cmp	r2, r3
 8007258:	d808      	bhi.n	800726c <__multiply+0x98>
 800725a:	2f00      	cmp	r7, #0
 800725c:	dc55      	bgt.n	800730a <__multiply+0x136>
 800725e:	6107      	str	r7, [r0, #16]
 8007260:	b005      	add	sp, #20
 8007262:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007266:	f843 2b04 	str.w	r2, [r3], #4
 800726a:	e7db      	b.n	8007224 <__multiply+0x50>
 800726c:	f8b3 a000 	ldrh.w	sl, [r3]
 8007270:	f1ba 0f00 	cmp.w	sl, #0
 8007274:	d020      	beq.n	80072b8 <__multiply+0xe4>
 8007276:	f105 0e14 	add.w	lr, r5, #20
 800727a:	46b1      	mov	r9, r6
 800727c:	2200      	movs	r2, #0
 800727e:	f85e 4b04 	ldr.w	r4, [lr], #4
 8007282:	f8d9 b000 	ldr.w	fp, [r9]
 8007286:	b2a1      	uxth	r1, r4
 8007288:	fa1f fb8b 	uxth.w	fp, fp
 800728c:	fb0a b101 	mla	r1, sl, r1, fp
 8007290:	4411      	add	r1, r2
 8007292:	f8d9 2000 	ldr.w	r2, [r9]
 8007296:	0c24      	lsrs	r4, r4, #16
 8007298:	0c12      	lsrs	r2, r2, #16
 800729a:	fb0a 2404 	mla	r4, sl, r4, r2
 800729e:	eb04 4411 	add.w	r4, r4, r1, lsr #16
 80072a2:	b289      	uxth	r1, r1
 80072a4:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 80072a8:	45f4      	cmp	ip, lr
 80072aa:	f849 1b04 	str.w	r1, [r9], #4
 80072ae:	ea4f 4214 	mov.w	r2, r4, lsr #16
 80072b2:	d8e4      	bhi.n	800727e <__multiply+0xaa>
 80072b4:	9901      	ldr	r1, [sp, #4]
 80072b6:	5072      	str	r2, [r6, r1]
 80072b8:	9a03      	ldr	r2, [sp, #12]
 80072ba:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 80072be:	3304      	adds	r3, #4
 80072c0:	f1b9 0f00 	cmp.w	r9, #0
 80072c4:	d01f      	beq.n	8007306 <__multiply+0x132>
 80072c6:	6834      	ldr	r4, [r6, #0]
 80072c8:	f105 0114 	add.w	r1, r5, #20
 80072cc:	46b6      	mov	lr, r6
 80072ce:	f04f 0a00 	mov.w	sl, #0
 80072d2:	880a      	ldrh	r2, [r1, #0]
 80072d4:	f8be b002 	ldrh.w	fp, [lr, #2]
 80072d8:	fb09 b202 	mla	r2, r9, r2, fp
 80072dc:	4492      	add	sl, r2
 80072de:	b2a4      	uxth	r4, r4
 80072e0:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 80072e4:	f84e 4b04 	str.w	r4, [lr], #4
 80072e8:	f851 4b04 	ldr.w	r4, [r1], #4
 80072ec:	f8be 2000 	ldrh.w	r2, [lr]
 80072f0:	0c24      	lsrs	r4, r4, #16
 80072f2:	fb09 2404 	mla	r4, r9, r4, r2
 80072f6:	eb04 441a 	add.w	r4, r4, sl, lsr #16
 80072fa:	458c      	cmp	ip, r1
 80072fc:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 8007300:	d8e7      	bhi.n	80072d2 <__multiply+0xfe>
 8007302:	9a01      	ldr	r2, [sp, #4]
 8007304:	50b4      	str	r4, [r6, r2]
 8007306:	3604      	adds	r6, #4
 8007308:	e7a3      	b.n	8007252 <__multiply+0x7e>
 800730a:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800730e:	2b00      	cmp	r3, #0
 8007310:	d1a5      	bne.n	800725e <__multiply+0x8a>
 8007312:	3f01      	subs	r7, #1
 8007314:	e7a1      	b.n	800725a <__multiply+0x86>
 8007316:	bf00      	nop
 8007318:	0800a701 	.word	0x0800a701
 800731c:	0800a790 	.word	0x0800a790

08007320 <__pow5mult>:
 8007320:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007324:	4615      	mov	r5, r2
 8007326:	f012 0203 	ands.w	r2, r2, #3
 800732a:	4606      	mov	r6, r0
 800732c:	460f      	mov	r7, r1
 800732e:	d007      	beq.n	8007340 <__pow5mult+0x20>
 8007330:	4c25      	ldr	r4, [pc, #148]	; (80073c8 <__pow5mult+0xa8>)
 8007332:	3a01      	subs	r2, #1
 8007334:	2300      	movs	r3, #0
 8007336:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800733a:	f7ff fe53 	bl	8006fe4 <__multadd>
 800733e:	4607      	mov	r7, r0
 8007340:	10ad      	asrs	r5, r5, #2
 8007342:	d03d      	beq.n	80073c0 <__pow5mult+0xa0>
 8007344:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8007346:	b97c      	cbnz	r4, 8007368 <__pow5mult+0x48>
 8007348:	2010      	movs	r0, #16
 800734a:	f7fc f89d 	bl	8003488 <malloc>
 800734e:	4602      	mov	r2, r0
 8007350:	6270      	str	r0, [r6, #36]	; 0x24
 8007352:	b928      	cbnz	r0, 8007360 <__pow5mult+0x40>
 8007354:	4b1d      	ldr	r3, [pc, #116]	; (80073cc <__pow5mult+0xac>)
 8007356:	481e      	ldr	r0, [pc, #120]	; (80073d0 <__pow5mult+0xb0>)
 8007358:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 800735c:	f7fe fa54 	bl	8005808 <__assert_func>
 8007360:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8007364:	6004      	str	r4, [r0, #0]
 8007366:	60c4      	str	r4, [r0, #12]
 8007368:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 800736c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8007370:	b94c      	cbnz	r4, 8007386 <__pow5mult+0x66>
 8007372:	f240 2171 	movw	r1, #625	; 0x271
 8007376:	4630      	mov	r0, r6
 8007378:	f7ff ff16 	bl	80071a8 <__i2b>
 800737c:	2300      	movs	r3, #0
 800737e:	f8c8 0008 	str.w	r0, [r8, #8]
 8007382:	4604      	mov	r4, r0
 8007384:	6003      	str	r3, [r0, #0]
 8007386:	f04f 0900 	mov.w	r9, #0
 800738a:	07eb      	lsls	r3, r5, #31
 800738c:	d50a      	bpl.n	80073a4 <__pow5mult+0x84>
 800738e:	4639      	mov	r1, r7
 8007390:	4622      	mov	r2, r4
 8007392:	4630      	mov	r0, r6
 8007394:	f7ff ff1e 	bl	80071d4 <__multiply>
 8007398:	4639      	mov	r1, r7
 800739a:	4680      	mov	r8, r0
 800739c:	4630      	mov	r0, r6
 800739e:	f7ff fdff 	bl	8006fa0 <_Bfree>
 80073a2:	4647      	mov	r7, r8
 80073a4:	106d      	asrs	r5, r5, #1
 80073a6:	d00b      	beq.n	80073c0 <__pow5mult+0xa0>
 80073a8:	6820      	ldr	r0, [r4, #0]
 80073aa:	b938      	cbnz	r0, 80073bc <__pow5mult+0x9c>
 80073ac:	4622      	mov	r2, r4
 80073ae:	4621      	mov	r1, r4
 80073b0:	4630      	mov	r0, r6
 80073b2:	f7ff ff0f 	bl	80071d4 <__multiply>
 80073b6:	6020      	str	r0, [r4, #0]
 80073b8:	f8c0 9000 	str.w	r9, [r0]
 80073bc:	4604      	mov	r4, r0
 80073be:	e7e4      	b.n	800738a <__pow5mult+0x6a>
 80073c0:	4638      	mov	r0, r7
 80073c2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80073c6:	bf00      	nop
 80073c8:	0800a8e0 	.word	0x0800a8e0
 80073cc:	0800a4e0 	.word	0x0800a4e0
 80073d0:	0800a790 	.word	0x0800a790

080073d4 <__lshift>:
 80073d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80073d8:	460c      	mov	r4, r1
 80073da:	6849      	ldr	r1, [r1, #4]
 80073dc:	6923      	ldr	r3, [r4, #16]
 80073de:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80073e2:	68a3      	ldr	r3, [r4, #8]
 80073e4:	4607      	mov	r7, r0
 80073e6:	4691      	mov	r9, r2
 80073e8:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80073ec:	f108 0601 	add.w	r6, r8, #1
 80073f0:	42b3      	cmp	r3, r6
 80073f2:	db0b      	blt.n	800740c <__lshift+0x38>
 80073f4:	4638      	mov	r0, r7
 80073f6:	f7ff fd93 	bl	8006f20 <_Balloc>
 80073fa:	4605      	mov	r5, r0
 80073fc:	b948      	cbnz	r0, 8007412 <__lshift+0x3e>
 80073fe:	4602      	mov	r2, r0
 8007400:	4b28      	ldr	r3, [pc, #160]	; (80074a4 <__lshift+0xd0>)
 8007402:	4829      	ldr	r0, [pc, #164]	; (80074a8 <__lshift+0xd4>)
 8007404:	f240 11d9 	movw	r1, #473	; 0x1d9
 8007408:	f7fe f9fe 	bl	8005808 <__assert_func>
 800740c:	3101      	adds	r1, #1
 800740e:	005b      	lsls	r3, r3, #1
 8007410:	e7ee      	b.n	80073f0 <__lshift+0x1c>
 8007412:	2300      	movs	r3, #0
 8007414:	f100 0114 	add.w	r1, r0, #20
 8007418:	f100 0210 	add.w	r2, r0, #16
 800741c:	4618      	mov	r0, r3
 800741e:	4553      	cmp	r3, sl
 8007420:	db33      	blt.n	800748a <__lshift+0xb6>
 8007422:	6920      	ldr	r0, [r4, #16]
 8007424:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8007428:	f104 0314 	add.w	r3, r4, #20
 800742c:	f019 091f 	ands.w	r9, r9, #31
 8007430:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8007434:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8007438:	d02b      	beq.n	8007492 <__lshift+0xbe>
 800743a:	f1c9 0e20 	rsb	lr, r9, #32
 800743e:	468a      	mov	sl, r1
 8007440:	2200      	movs	r2, #0
 8007442:	6818      	ldr	r0, [r3, #0]
 8007444:	fa00 f009 	lsl.w	r0, r0, r9
 8007448:	4302      	orrs	r2, r0
 800744a:	f84a 2b04 	str.w	r2, [sl], #4
 800744e:	f853 2b04 	ldr.w	r2, [r3], #4
 8007452:	459c      	cmp	ip, r3
 8007454:	fa22 f20e 	lsr.w	r2, r2, lr
 8007458:	d8f3      	bhi.n	8007442 <__lshift+0x6e>
 800745a:	ebac 0304 	sub.w	r3, ip, r4
 800745e:	3b15      	subs	r3, #21
 8007460:	f023 0303 	bic.w	r3, r3, #3
 8007464:	3304      	adds	r3, #4
 8007466:	f104 0015 	add.w	r0, r4, #21
 800746a:	4584      	cmp	ip, r0
 800746c:	bf38      	it	cc
 800746e:	2304      	movcc	r3, #4
 8007470:	50ca      	str	r2, [r1, r3]
 8007472:	b10a      	cbz	r2, 8007478 <__lshift+0xa4>
 8007474:	f108 0602 	add.w	r6, r8, #2
 8007478:	3e01      	subs	r6, #1
 800747a:	4638      	mov	r0, r7
 800747c:	612e      	str	r6, [r5, #16]
 800747e:	4621      	mov	r1, r4
 8007480:	f7ff fd8e 	bl	8006fa0 <_Bfree>
 8007484:	4628      	mov	r0, r5
 8007486:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800748a:	f842 0f04 	str.w	r0, [r2, #4]!
 800748e:	3301      	adds	r3, #1
 8007490:	e7c5      	b.n	800741e <__lshift+0x4a>
 8007492:	3904      	subs	r1, #4
 8007494:	f853 2b04 	ldr.w	r2, [r3], #4
 8007498:	f841 2f04 	str.w	r2, [r1, #4]!
 800749c:	459c      	cmp	ip, r3
 800749e:	d8f9      	bhi.n	8007494 <__lshift+0xc0>
 80074a0:	e7ea      	b.n	8007478 <__lshift+0xa4>
 80074a2:	bf00      	nop
 80074a4:	0800a701 	.word	0x0800a701
 80074a8:	0800a790 	.word	0x0800a790

080074ac <__mcmp>:
 80074ac:	690a      	ldr	r2, [r1, #16]
 80074ae:	4603      	mov	r3, r0
 80074b0:	6900      	ldr	r0, [r0, #16]
 80074b2:	1a80      	subs	r0, r0, r2
 80074b4:	b530      	push	{r4, r5, lr}
 80074b6:	d10d      	bne.n	80074d4 <__mcmp+0x28>
 80074b8:	3314      	adds	r3, #20
 80074ba:	3114      	adds	r1, #20
 80074bc:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 80074c0:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 80074c4:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 80074c8:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 80074cc:	4295      	cmp	r5, r2
 80074ce:	d002      	beq.n	80074d6 <__mcmp+0x2a>
 80074d0:	d304      	bcc.n	80074dc <__mcmp+0x30>
 80074d2:	2001      	movs	r0, #1
 80074d4:	bd30      	pop	{r4, r5, pc}
 80074d6:	42a3      	cmp	r3, r4
 80074d8:	d3f4      	bcc.n	80074c4 <__mcmp+0x18>
 80074da:	e7fb      	b.n	80074d4 <__mcmp+0x28>
 80074dc:	f04f 30ff 	mov.w	r0, #4294967295
 80074e0:	e7f8      	b.n	80074d4 <__mcmp+0x28>
	...

080074e4 <__mdiff>:
 80074e4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80074e8:	460c      	mov	r4, r1
 80074ea:	4606      	mov	r6, r0
 80074ec:	4611      	mov	r1, r2
 80074ee:	4620      	mov	r0, r4
 80074f0:	4617      	mov	r7, r2
 80074f2:	f7ff ffdb 	bl	80074ac <__mcmp>
 80074f6:	1e05      	subs	r5, r0, #0
 80074f8:	d111      	bne.n	800751e <__mdiff+0x3a>
 80074fa:	4629      	mov	r1, r5
 80074fc:	4630      	mov	r0, r6
 80074fe:	f7ff fd0f 	bl	8006f20 <_Balloc>
 8007502:	4602      	mov	r2, r0
 8007504:	b928      	cbnz	r0, 8007512 <__mdiff+0x2e>
 8007506:	4b3a      	ldr	r3, [pc, #232]	; (80075f0 <__mdiff+0x10c>)
 8007508:	f240 2132 	movw	r1, #562	; 0x232
 800750c:	4839      	ldr	r0, [pc, #228]	; (80075f4 <__mdiff+0x110>)
 800750e:	f7fe f97b 	bl	8005808 <__assert_func>
 8007512:	2301      	movs	r3, #1
 8007514:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8007518:	4610      	mov	r0, r2
 800751a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800751e:	bfa4      	itt	ge
 8007520:	463b      	movge	r3, r7
 8007522:	4627      	movge	r7, r4
 8007524:	4630      	mov	r0, r6
 8007526:	6879      	ldr	r1, [r7, #4]
 8007528:	bfa6      	itte	ge
 800752a:	461c      	movge	r4, r3
 800752c:	2500      	movge	r5, #0
 800752e:	2501      	movlt	r5, #1
 8007530:	f7ff fcf6 	bl	8006f20 <_Balloc>
 8007534:	4602      	mov	r2, r0
 8007536:	b918      	cbnz	r0, 8007540 <__mdiff+0x5c>
 8007538:	4b2d      	ldr	r3, [pc, #180]	; (80075f0 <__mdiff+0x10c>)
 800753a:	f44f 7110 	mov.w	r1, #576	; 0x240
 800753e:	e7e5      	b.n	800750c <__mdiff+0x28>
 8007540:	693e      	ldr	r6, [r7, #16]
 8007542:	60c5      	str	r5, [r0, #12]
 8007544:	6925      	ldr	r5, [r4, #16]
 8007546:	f107 0114 	add.w	r1, r7, #20
 800754a:	f100 0e14 	add.w	lr, r0, #20
 800754e:	f104 0914 	add.w	r9, r4, #20
 8007552:	f107 0010 	add.w	r0, r7, #16
 8007556:	eb01 0c86 	add.w	ip, r1, r6, lsl #2
 800755a:	eb09 0585 	add.w	r5, r9, r5, lsl #2
 800755e:	46f2      	mov	sl, lr
 8007560:	2700      	movs	r7, #0
 8007562:	f859 3b04 	ldr.w	r3, [r9], #4
 8007566:	f850 bf04 	ldr.w	fp, [r0, #4]!
 800756a:	fa1f f883 	uxth.w	r8, r3
 800756e:	fa17 f78b 	uxtah	r7, r7, fp
 8007572:	0c1b      	lsrs	r3, r3, #16
 8007574:	eba7 0808 	sub.w	r8, r7, r8
 8007578:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 800757c:	eb03 4328 	add.w	r3, r3, r8, asr #16
 8007580:	fa1f f888 	uxth.w	r8, r8
 8007584:	141f      	asrs	r7, r3, #16
 8007586:	454d      	cmp	r5, r9
 8007588:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 800758c:	f84a 3b04 	str.w	r3, [sl], #4
 8007590:	d8e7      	bhi.n	8007562 <__mdiff+0x7e>
 8007592:	1b2b      	subs	r3, r5, r4
 8007594:	3b15      	subs	r3, #21
 8007596:	f023 0303 	bic.w	r3, r3, #3
 800759a:	3304      	adds	r3, #4
 800759c:	3415      	adds	r4, #21
 800759e:	42a5      	cmp	r5, r4
 80075a0:	bf38      	it	cc
 80075a2:	2304      	movcc	r3, #4
 80075a4:	4419      	add	r1, r3
 80075a6:	4473      	add	r3, lr
 80075a8:	469e      	mov	lr, r3
 80075aa:	460d      	mov	r5, r1
 80075ac:	4565      	cmp	r5, ip
 80075ae:	d30e      	bcc.n	80075ce <__mdiff+0xea>
 80075b0:	f10c 0003 	add.w	r0, ip, #3
 80075b4:	1a40      	subs	r0, r0, r1
 80075b6:	f020 0003 	bic.w	r0, r0, #3
 80075ba:	3903      	subs	r1, #3
 80075bc:	458c      	cmp	ip, r1
 80075be:	bf38      	it	cc
 80075c0:	2000      	movcc	r0, #0
 80075c2:	4418      	add	r0, r3
 80075c4:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 80075c8:	b17b      	cbz	r3, 80075ea <__mdiff+0x106>
 80075ca:	6116      	str	r6, [r2, #16]
 80075cc:	e7a4      	b.n	8007518 <__mdiff+0x34>
 80075ce:	f855 8b04 	ldr.w	r8, [r5], #4
 80075d2:	fa17 f488 	uxtah	r4, r7, r8
 80075d6:	1420      	asrs	r0, r4, #16
 80075d8:	eb00 4018 	add.w	r0, r0, r8, lsr #16
 80075dc:	b2a4      	uxth	r4, r4
 80075de:	ea44 4400 	orr.w	r4, r4, r0, lsl #16
 80075e2:	f84e 4b04 	str.w	r4, [lr], #4
 80075e6:	1407      	asrs	r7, r0, #16
 80075e8:	e7e0      	b.n	80075ac <__mdiff+0xc8>
 80075ea:	3e01      	subs	r6, #1
 80075ec:	e7ea      	b.n	80075c4 <__mdiff+0xe0>
 80075ee:	bf00      	nop
 80075f0:	0800a701 	.word	0x0800a701
 80075f4:	0800a790 	.word	0x0800a790

080075f8 <__ulp>:
 80075f8:	4b11      	ldr	r3, [pc, #68]	; (8007640 <__ulp+0x48>)
 80075fa:	400b      	ands	r3, r1
 80075fc:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
 8007600:	2b00      	cmp	r3, #0
 8007602:	dd02      	ble.n	800760a <__ulp+0x12>
 8007604:	2000      	movs	r0, #0
 8007606:	4619      	mov	r1, r3
 8007608:	4770      	bx	lr
 800760a:	425b      	negs	r3, r3
 800760c:	f1b3 7fa0 	cmp.w	r3, #20971520	; 0x1400000
 8007610:	ea4f 5223 	mov.w	r2, r3, asr #20
 8007614:	f04f 0000 	mov.w	r0, #0
 8007618:	f04f 0100 	mov.w	r1, #0
 800761c:	da04      	bge.n	8007628 <__ulp+0x30>
 800761e:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 8007622:	fa43 f102 	asr.w	r1, r3, r2
 8007626:	4770      	bx	lr
 8007628:	f1a2 0314 	sub.w	r3, r2, #20
 800762c:	2b1e      	cmp	r3, #30
 800762e:	bfda      	itte	le
 8007630:	f04f 4200 	movle.w	r2, #2147483648	; 0x80000000
 8007634:	fa22 f303 	lsrle.w	r3, r2, r3
 8007638:	2301      	movgt	r3, #1
 800763a:	4618      	mov	r0, r3
 800763c:	4770      	bx	lr
 800763e:	bf00      	nop
 8007640:	7ff00000 	.word	0x7ff00000

08007644 <__b2d>:
 8007644:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007648:	6907      	ldr	r7, [r0, #16]
 800764a:	f100 0914 	add.w	r9, r0, #20
 800764e:	eb09 0787 	add.w	r7, r9, r7, lsl #2
 8007652:	f1a7 0804 	sub.w	r8, r7, #4
 8007656:	f857 6c04 	ldr.w	r6, [r7, #-4]
 800765a:	4630      	mov	r0, r6
 800765c:	f7ff fd56 	bl	800710c <__hi0bits>
 8007660:	f1c0 0320 	rsb	r3, r0, #32
 8007664:	280a      	cmp	r0, #10
 8007666:	600b      	str	r3, [r1, #0]
 8007668:	491f      	ldr	r1, [pc, #124]	; (80076e8 <__b2d+0xa4>)
 800766a:	dc17      	bgt.n	800769c <__b2d+0x58>
 800766c:	f1c0 0c0b 	rsb	ip, r0, #11
 8007670:	45c1      	cmp	r9, r8
 8007672:	fa26 f30c 	lsr.w	r3, r6, ip
 8007676:	bf38      	it	cc
 8007678:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 800767c:	ea43 0501 	orr.w	r5, r3, r1
 8007680:	bf28      	it	cs
 8007682:	2200      	movcs	r2, #0
 8007684:	f100 0315 	add.w	r3, r0, #21
 8007688:	fa06 f303 	lsl.w	r3, r6, r3
 800768c:	fa22 f20c 	lsr.w	r2, r2, ip
 8007690:	ea43 0402 	orr.w	r4, r3, r2
 8007694:	4620      	mov	r0, r4
 8007696:	4629      	mov	r1, r5
 8007698:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800769c:	45c1      	cmp	r9, r8
 800769e:	bf3a      	itte	cc
 80076a0:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 80076a4:	f1a7 0808 	subcc.w	r8, r7, #8
 80076a8:	2200      	movcs	r2, #0
 80076aa:	f1b0 030b 	subs.w	r3, r0, #11
 80076ae:	d016      	beq.n	80076de <__b2d+0x9a>
 80076b0:	f1c3 0720 	rsb	r7, r3, #32
 80076b4:	fa22 f107 	lsr.w	r1, r2, r7
 80076b8:	45c8      	cmp	r8, r9
 80076ba:	fa06 f603 	lsl.w	r6, r6, r3
 80076be:	ea46 0601 	orr.w	r6, r6, r1
 80076c2:	bf8c      	ite	hi
 80076c4:	f858 1c04 	ldrhi.w	r1, [r8, #-4]
 80076c8:	2100      	movls	r1, #0
 80076ca:	f046 557f 	orr.w	r5, r6, #1069547520	; 0x3fc00000
 80076ce:	fa02 f003 	lsl.w	r0, r2, r3
 80076d2:	40f9      	lsrs	r1, r7
 80076d4:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 80076d8:	ea40 0401 	orr.w	r4, r0, r1
 80076dc:	e7da      	b.n	8007694 <__b2d+0x50>
 80076de:	ea46 0501 	orr.w	r5, r6, r1
 80076e2:	4614      	mov	r4, r2
 80076e4:	e7d6      	b.n	8007694 <__b2d+0x50>
 80076e6:	bf00      	nop
 80076e8:	3ff00000 	.word	0x3ff00000

080076ec <__d2b>:
 80076ec:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80076f0:	2101      	movs	r1, #1
 80076f2:	e9dd 7608 	ldrd	r7, r6, [sp, #32]
 80076f6:	4690      	mov	r8, r2
 80076f8:	461d      	mov	r5, r3
 80076fa:	f7ff fc11 	bl	8006f20 <_Balloc>
 80076fe:	4604      	mov	r4, r0
 8007700:	b930      	cbnz	r0, 8007710 <__d2b+0x24>
 8007702:	4602      	mov	r2, r0
 8007704:	4b25      	ldr	r3, [pc, #148]	; (800779c <__d2b+0xb0>)
 8007706:	4826      	ldr	r0, [pc, #152]	; (80077a0 <__d2b+0xb4>)
 8007708:	f240 310a 	movw	r1, #778	; 0x30a
 800770c:	f7fe f87c 	bl	8005808 <__assert_func>
 8007710:	f3c5 0313 	ubfx	r3, r5, #0, #20
 8007714:	f3c5 550a 	ubfx	r5, r5, #20, #11
 8007718:	bb2d      	cbnz	r5, 8007766 <__d2b+0x7a>
 800771a:	9301      	str	r3, [sp, #4]
 800771c:	f1b8 0300 	subs.w	r3, r8, #0
 8007720:	d026      	beq.n	8007770 <__d2b+0x84>
 8007722:	4668      	mov	r0, sp
 8007724:	9300      	str	r3, [sp, #0]
 8007726:	f7ff fd11 	bl	800714c <__lo0bits>
 800772a:	9900      	ldr	r1, [sp, #0]
 800772c:	b1f0      	cbz	r0, 800776c <__d2b+0x80>
 800772e:	9a01      	ldr	r2, [sp, #4]
 8007730:	f1c0 0320 	rsb	r3, r0, #32
 8007734:	fa02 f303 	lsl.w	r3, r2, r3
 8007738:	430b      	orrs	r3, r1
 800773a:	40c2      	lsrs	r2, r0
 800773c:	6163      	str	r3, [r4, #20]
 800773e:	9201      	str	r2, [sp, #4]
 8007740:	9b01      	ldr	r3, [sp, #4]
 8007742:	61a3      	str	r3, [r4, #24]
 8007744:	2b00      	cmp	r3, #0
 8007746:	bf14      	ite	ne
 8007748:	2102      	movne	r1, #2
 800774a:	2101      	moveq	r1, #1
 800774c:	6121      	str	r1, [r4, #16]
 800774e:	b1c5      	cbz	r5, 8007782 <__d2b+0x96>
 8007750:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8007754:	4405      	add	r5, r0
 8007756:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800775a:	603d      	str	r5, [r7, #0]
 800775c:	6030      	str	r0, [r6, #0]
 800775e:	4620      	mov	r0, r4
 8007760:	b002      	add	sp, #8
 8007762:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007766:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800776a:	e7d6      	b.n	800771a <__d2b+0x2e>
 800776c:	6161      	str	r1, [r4, #20]
 800776e:	e7e7      	b.n	8007740 <__d2b+0x54>
 8007770:	a801      	add	r0, sp, #4
 8007772:	f7ff fceb 	bl	800714c <__lo0bits>
 8007776:	9b01      	ldr	r3, [sp, #4]
 8007778:	6163      	str	r3, [r4, #20]
 800777a:	2101      	movs	r1, #1
 800777c:	6121      	str	r1, [r4, #16]
 800777e:	3020      	adds	r0, #32
 8007780:	e7e5      	b.n	800774e <__d2b+0x62>
 8007782:	eb04 0381 	add.w	r3, r4, r1, lsl #2
 8007786:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 800778a:	6038      	str	r0, [r7, #0]
 800778c:	6918      	ldr	r0, [r3, #16]
 800778e:	f7ff fcbd 	bl	800710c <__hi0bits>
 8007792:	ebc0 1141 	rsb	r1, r0, r1, lsl #5
 8007796:	6031      	str	r1, [r6, #0]
 8007798:	e7e1      	b.n	800775e <__d2b+0x72>
 800779a:	bf00      	nop
 800779c:	0800a701 	.word	0x0800a701
 80077a0:	0800a790 	.word	0x0800a790

080077a4 <__ratio>:
 80077a4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80077a8:	4688      	mov	r8, r1
 80077aa:	4669      	mov	r1, sp
 80077ac:	4681      	mov	r9, r0
 80077ae:	f7ff ff49 	bl	8007644 <__b2d>
 80077b2:	460f      	mov	r7, r1
 80077b4:	4604      	mov	r4, r0
 80077b6:	460d      	mov	r5, r1
 80077b8:	4640      	mov	r0, r8
 80077ba:	a901      	add	r1, sp, #4
 80077bc:	f7ff ff42 	bl	8007644 <__b2d>
 80077c0:	f8d9 3010 	ldr.w	r3, [r9, #16]
 80077c4:	f8d8 2010 	ldr.w	r2, [r8, #16]
 80077c8:	eba3 0c02 	sub.w	ip, r3, r2
 80077cc:	e9dd 3200 	ldrd	r3, r2, [sp]
 80077d0:	1a9b      	subs	r3, r3, r2
 80077d2:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 80077d6:	2b00      	cmp	r3, #0
 80077d8:	bfd5      	itete	le
 80077da:	460a      	movle	r2, r1
 80077dc:	462a      	movgt	r2, r5
 80077de:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 80077e2:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 80077e6:	468b      	mov	fp, r1
 80077e8:	bfd8      	it	le
 80077ea:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 80077ee:	465b      	mov	r3, fp
 80077f0:	4602      	mov	r2, r0
 80077f2:	4639      	mov	r1, r7
 80077f4:	4620      	mov	r0, r4
 80077f6:	f7f9 f853 	bl	80008a0 <__aeabi_ddiv>
 80077fa:	b003      	add	sp, #12
 80077fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08007800 <__copybits>:
 8007800:	3901      	subs	r1, #1
 8007802:	b570      	push	{r4, r5, r6, lr}
 8007804:	1149      	asrs	r1, r1, #5
 8007806:	6914      	ldr	r4, [r2, #16]
 8007808:	3101      	adds	r1, #1
 800780a:	f102 0314 	add.w	r3, r2, #20
 800780e:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8007812:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8007816:	1f05      	subs	r5, r0, #4
 8007818:	42a3      	cmp	r3, r4
 800781a:	d30c      	bcc.n	8007836 <__copybits+0x36>
 800781c:	1aa3      	subs	r3, r4, r2
 800781e:	3b11      	subs	r3, #17
 8007820:	f023 0303 	bic.w	r3, r3, #3
 8007824:	3211      	adds	r2, #17
 8007826:	42a2      	cmp	r2, r4
 8007828:	bf88      	it	hi
 800782a:	2300      	movhi	r3, #0
 800782c:	4418      	add	r0, r3
 800782e:	2300      	movs	r3, #0
 8007830:	4288      	cmp	r0, r1
 8007832:	d305      	bcc.n	8007840 <__copybits+0x40>
 8007834:	bd70      	pop	{r4, r5, r6, pc}
 8007836:	f853 6b04 	ldr.w	r6, [r3], #4
 800783a:	f845 6f04 	str.w	r6, [r5, #4]!
 800783e:	e7eb      	b.n	8007818 <__copybits+0x18>
 8007840:	f840 3b04 	str.w	r3, [r0], #4
 8007844:	e7f4      	b.n	8007830 <__copybits+0x30>

08007846 <__any_on>:
 8007846:	f100 0214 	add.w	r2, r0, #20
 800784a:	6900      	ldr	r0, [r0, #16]
 800784c:	114b      	asrs	r3, r1, #5
 800784e:	4298      	cmp	r0, r3
 8007850:	b510      	push	{r4, lr}
 8007852:	db11      	blt.n	8007878 <__any_on+0x32>
 8007854:	dd0a      	ble.n	800786c <__any_on+0x26>
 8007856:	f011 011f 	ands.w	r1, r1, #31
 800785a:	d007      	beq.n	800786c <__any_on+0x26>
 800785c:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8007860:	fa24 f001 	lsr.w	r0, r4, r1
 8007864:	fa00 f101 	lsl.w	r1, r0, r1
 8007868:	428c      	cmp	r4, r1
 800786a:	d10b      	bne.n	8007884 <__any_on+0x3e>
 800786c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8007870:	4293      	cmp	r3, r2
 8007872:	d803      	bhi.n	800787c <__any_on+0x36>
 8007874:	2000      	movs	r0, #0
 8007876:	bd10      	pop	{r4, pc}
 8007878:	4603      	mov	r3, r0
 800787a:	e7f7      	b.n	800786c <__any_on+0x26>
 800787c:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8007880:	2900      	cmp	r1, #0
 8007882:	d0f5      	beq.n	8007870 <__any_on+0x2a>
 8007884:	2001      	movs	r0, #1
 8007886:	e7f6      	b.n	8007876 <__any_on+0x30>

08007888 <__ssputs_r>:
 8007888:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800788c:	688e      	ldr	r6, [r1, #8]
 800788e:	429e      	cmp	r6, r3
 8007890:	4682      	mov	sl, r0
 8007892:	460c      	mov	r4, r1
 8007894:	4690      	mov	r8, r2
 8007896:	461f      	mov	r7, r3
 8007898:	d838      	bhi.n	800790c <__ssputs_r+0x84>
 800789a:	898a      	ldrh	r2, [r1, #12]
 800789c:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80078a0:	d032      	beq.n	8007908 <__ssputs_r+0x80>
 80078a2:	6825      	ldr	r5, [r4, #0]
 80078a4:	6909      	ldr	r1, [r1, #16]
 80078a6:	eba5 0901 	sub.w	r9, r5, r1
 80078aa:	6965      	ldr	r5, [r4, #20]
 80078ac:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80078b0:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80078b4:	3301      	adds	r3, #1
 80078b6:	444b      	add	r3, r9
 80078b8:	106d      	asrs	r5, r5, #1
 80078ba:	429d      	cmp	r5, r3
 80078bc:	bf38      	it	cc
 80078be:	461d      	movcc	r5, r3
 80078c0:	0553      	lsls	r3, r2, #21
 80078c2:	d531      	bpl.n	8007928 <__ssputs_r+0xa0>
 80078c4:	4629      	mov	r1, r5
 80078c6:	f7fb fe61 	bl	800358c <_malloc_r>
 80078ca:	4606      	mov	r6, r0
 80078cc:	b950      	cbnz	r0, 80078e4 <__ssputs_r+0x5c>
 80078ce:	230c      	movs	r3, #12
 80078d0:	f8ca 3000 	str.w	r3, [sl]
 80078d4:	89a3      	ldrh	r3, [r4, #12]
 80078d6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80078da:	81a3      	strh	r3, [r4, #12]
 80078dc:	f04f 30ff 	mov.w	r0, #4294967295
 80078e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80078e4:	6921      	ldr	r1, [r4, #16]
 80078e6:	464a      	mov	r2, r9
 80078e8:	f7fb fdde 	bl	80034a8 <memcpy>
 80078ec:	89a3      	ldrh	r3, [r4, #12]
 80078ee:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 80078f2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80078f6:	81a3      	strh	r3, [r4, #12]
 80078f8:	6126      	str	r6, [r4, #16]
 80078fa:	6165      	str	r5, [r4, #20]
 80078fc:	444e      	add	r6, r9
 80078fe:	eba5 0509 	sub.w	r5, r5, r9
 8007902:	6026      	str	r6, [r4, #0]
 8007904:	60a5      	str	r5, [r4, #8]
 8007906:	463e      	mov	r6, r7
 8007908:	42be      	cmp	r6, r7
 800790a:	d900      	bls.n	800790e <__ssputs_r+0x86>
 800790c:	463e      	mov	r6, r7
 800790e:	4632      	mov	r2, r6
 8007910:	6820      	ldr	r0, [r4, #0]
 8007912:	4641      	mov	r1, r8
 8007914:	f000 fedc 	bl	80086d0 <memmove>
 8007918:	68a3      	ldr	r3, [r4, #8]
 800791a:	6822      	ldr	r2, [r4, #0]
 800791c:	1b9b      	subs	r3, r3, r6
 800791e:	4432      	add	r2, r6
 8007920:	60a3      	str	r3, [r4, #8]
 8007922:	6022      	str	r2, [r4, #0]
 8007924:	2000      	movs	r0, #0
 8007926:	e7db      	b.n	80078e0 <__ssputs_r+0x58>
 8007928:	462a      	mov	r2, r5
 800792a:	f000 feeb 	bl	8008704 <_realloc_r>
 800792e:	4606      	mov	r6, r0
 8007930:	2800      	cmp	r0, #0
 8007932:	d1e1      	bne.n	80078f8 <__ssputs_r+0x70>
 8007934:	6921      	ldr	r1, [r4, #16]
 8007936:	4650      	mov	r0, sl
 8007938:	f7fb fdda 	bl	80034f0 <_free_r>
 800793c:	e7c7      	b.n	80078ce <__ssputs_r+0x46>
	...

08007940 <_svfiprintf_r>:
 8007940:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007944:	4698      	mov	r8, r3
 8007946:	898b      	ldrh	r3, [r1, #12]
 8007948:	061b      	lsls	r3, r3, #24
 800794a:	b09d      	sub	sp, #116	; 0x74
 800794c:	4607      	mov	r7, r0
 800794e:	460d      	mov	r5, r1
 8007950:	4614      	mov	r4, r2
 8007952:	d50e      	bpl.n	8007972 <_svfiprintf_r+0x32>
 8007954:	690b      	ldr	r3, [r1, #16]
 8007956:	b963      	cbnz	r3, 8007972 <_svfiprintf_r+0x32>
 8007958:	2140      	movs	r1, #64	; 0x40
 800795a:	f7fb fe17 	bl	800358c <_malloc_r>
 800795e:	6028      	str	r0, [r5, #0]
 8007960:	6128      	str	r0, [r5, #16]
 8007962:	b920      	cbnz	r0, 800796e <_svfiprintf_r+0x2e>
 8007964:	230c      	movs	r3, #12
 8007966:	603b      	str	r3, [r7, #0]
 8007968:	f04f 30ff 	mov.w	r0, #4294967295
 800796c:	e0d1      	b.n	8007b12 <_svfiprintf_r+0x1d2>
 800796e:	2340      	movs	r3, #64	; 0x40
 8007970:	616b      	str	r3, [r5, #20]
 8007972:	2300      	movs	r3, #0
 8007974:	9309      	str	r3, [sp, #36]	; 0x24
 8007976:	2320      	movs	r3, #32
 8007978:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800797c:	f8cd 800c 	str.w	r8, [sp, #12]
 8007980:	2330      	movs	r3, #48	; 0x30
 8007982:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 8007b2c <_svfiprintf_r+0x1ec>
 8007986:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800798a:	f04f 0901 	mov.w	r9, #1
 800798e:	4623      	mov	r3, r4
 8007990:	469a      	mov	sl, r3
 8007992:	f813 2b01 	ldrb.w	r2, [r3], #1
 8007996:	b10a      	cbz	r2, 800799c <_svfiprintf_r+0x5c>
 8007998:	2a25      	cmp	r2, #37	; 0x25
 800799a:	d1f9      	bne.n	8007990 <_svfiprintf_r+0x50>
 800799c:	ebba 0b04 	subs.w	fp, sl, r4
 80079a0:	d00b      	beq.n	80079ba <_svfiprintf_r+0x7a>
 80079a2:	465b      	mov	r3, fp
 80079a4:	4622      	mov	r2, r4
 80079a6:	4629      	mov	r1, r5
 80079a8:	4638      	mov	r0, r7
 80079aa:	f7ff ff6d 	bl	8007888 <__ssputs_r>
 80079ae:	3001      	adds	r0, #1
 80079b0:	f000 80aa 	beq.w	8007b08 <_svfiprintf_r+0x1c8>
 80079b4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80079b6:	445a      	add	r2, fp
 80079b8:	9209      	str	r2, [sp, #36]	; 0x24
 80079ba:	f89a 3000 	ldrb.w	r3, [sl]
 80079be:	2b00      	cmp	r3, #0
 80079c0:	f000 80a2 	beq.w	8007b08 <_svfiprintf_r+0x1c8>
 80079c4:	2300      	movs	r3, #0
 80079c6:	f04f 32ff 	mov.w	r2, #4294967295
 80079ca:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80079ce:	f10a 0a01 	add.w	sl, sl, #1
 80079d2:	9304      	str	r3, [sp, #16]
 80079d4:	9307      	str	r3, [sp, #28]
 80079d6:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80079da:	931a      	str	r3, [sp, #104]	; 0x68
 80079dc:	4654      	mov	r4, sl
 80079de:	2205      	movs	r2, #5
 80079e0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80079e4:	4851      	ldr	r0, [pc, #324]	; (8007b2c <_svfiprintf_r+0x1ec>)
 80079e6:	f7f8 fc13 	bl	8000210 <memchr>
 80079ea:	9a04      	ldr	r2, [sp, #16]
 80079ec:	b9d8      	cbnz	r0, 8007a26 <_svfiprintf_r+0xe6>
 80079ee:	06d0      	lsls	r0, r2, #27
 80079f0:	bf44      	itt	mi
 80079f2:	2320      	movmi	r3, #32
 80079f4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80079f8:	0711      	lsls	r1, r2, #28
 80079fa:	bf44      	itt	mi
 80079fc:	232b      	movmi	r3, #43	; 0x2b
 80079fe:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8007a02:	f89a 3000 	ldrb.w	r3, [sl]
 8007a06:	2b2a      	cmp	r3, #42	; 0x2a
 8007a08:	d015      	beq.n	8007a36 <_svfiprintf_r+0xf6>
 8007a0a:	9a07      	ldr	r2, [sp, #28]
 8007a0c:	4654      	mov	r4, sl
 8007a0e:	2000      	movs	r0, #0
 8007a10:	f04f 0c0a 	mov.w	ip, #10
 8007a14:	4621      	mov	r1, r4
 8007a16:	f811 3b01 	ldrb.w	r3, [r1], #1
 8007a1a:	3b30      	subs	r3, #48	; 0x30
 8007a1c:	2b09      	cmp	r3, #9
 8007a1e:	d94e      	bls.n	8007abe <_svfiprintf_r+0x17e>
 8007a20:	b1b0      	cbz	r0, 8007a50 <_svfiprintf_r+0x110>
 8007a22:	9207      	str	r2, [sp, #28]
 8007a24:	e014      	b.n	8007a50 <_svfiprintf_r+0x110>
 8007a26:	eba0 0308 	sub.w	r3, r0, r8
 8007a2a:	fa09 f303 	lsl.w	r3, r9, r3
 8007a2e:	4313      	orrs	r3, r2
 8007a30:	9304      	str	r3, [sp, #16]
 8007a32:	46a2      	mov	sl, r4
 8007a34:	e7d2      	b.n	80079dc <_svfiprintf_r+0x9c>
 8007a36:	9b03      	ldr	r3, [sp, #12]
 8007a38:	1d19      	adds	r1, r3, #4
 8007a3a:	681b      	ldr	r3, [r3, #0]
 8007a3c:	9103      	str	r1, [sp, #12]
 8007a3e:	2b00      	cmp	r3, #0
 8007a40:	bfbb      	ittet	lt
 8007a42:	425b      	neglt	r3, r3
 8007a44:	f042 0202 	orrlt.w	r2, r2, #2
 8007a48:	9307      	strge	r3, [sp, #28]
 8007a4a:	9307      	strlt	r3, [sp, #28]
 8007a4c:	bfb8      	it	lt
 8007a4e:	9204      	strlt	r2, [sp, #16]
 8007a50:	7823      	ldrb	r3, [r4, #0]
 8007a52:	2b2e      	cmp	r3, #46	; 0x2e
 8007a54:	d10c      	bne.n	8007a70 <_svfiprintf_r+0x130>
 8007a56:	7863      	ldrb	r3, [r4, #1]
 8007a58:	2b2a      	cmp	r3, #42	; 0x2a
 8007a5a:	d135      	bne.n	8007ac8 <_svfiprintf_r+0x188>
 8007a5c:	9b03      	ldr	r3, [sp, #12]
 8007a5e:	1d1a      	adds	r2, r3, #4
 8007a60:	681b      	ldr	r3, [r3, #0]
 8007a62:	9203      	str	r2, [sp, #12]
 8007a64:	2b00      	cmp	r3, #0
 8007a66:	bfb8      	it	lt
 8007a68:	f04f 33ff 	movlt.w	r3, #4294967295
 8007a6c:	3402      	adds	r4, #2
 8007a6e:	9305      	str	r3, [sp, #20]
 8007a70:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8007b3c <_svfiprintf_r+0x1fc>
 8007a74:	7821      	ldrb	r1, [r4, #0]
 8007a76:	2203      	movs	r2, #3
 8007a78:	4650      	mov	r0, sl
 8007a7a:	f7f8 fbc9 	bl	8000210 <memchr>
 8007a7e:	b140      	cbz	r0, 8007a92 <_svfiprintf_r+0x152>
 8007a80:	2340      	movs	r3, #64	; 0x40
 8007a82:	eba0 000a 	sub.w	r0, r0, sl
 8007a86:	fa03 f000 	lsl.w	r0, r3, r0
 8007a8a:	9b04      	ldr	r3, [sp, #16]
 8007a8c:	4303      	orrs	r3, r0
 8007a8e:	3401      	adds	r4, #1
 8007a90:	9304      	str	r3, [sp, #16]
 8007a92:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007a96:	4826      	ldr	r0, [pc, #152]	; (8007b30 <_svfiprintf_r+0x1f0>)
 8007a98:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8007a9c:	2206      	movs	r2, #6
 8007a9e:	f7f8 fbb7 	bl	8000210 <memchr>
 8007aa2:	2800      	cmp	r0, #0
 8007aa4:	d038      	beq.n	8007b18 <_svfiprintf_r+0x1d8>
 8007aa6:	4b23      	ldr	r3, [pc, #140]	; (8007b34 <_svfiprintf_r+0x1f4>)
 8007aa8:	bb1b      	cbnz	r3, 8007af2 <_svfiprintf_r+0x1b2>
 8007aaa:	9b03      	ldr	r3, [sp, #12]
 8007aac:	3307      	adds	r3, #7
 8007aae:	f023 0307 	bic.w	r3, r3, #7
 8007ab2:	3308      	adds	r3, #8
 8007ab4:	9303      	str	r3, [sp, #12]
 8007ab6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007ab8:	4433      	add	r3, r6
 8007aba:	9309      	str	r3, [sp, #36]	; 0x24
 8007abc:	e767      	b.n	800798e <_svfiprintf_r+0x4e>
 8007abe:	fb0c 3202 	mla	r2, ip, r2, r3
 8007ac2:	460c      	mov	r4, r1
 8007ac4:	2001      	movs	r0, #1
 8007ac6:	e7a5      	b.n	8007a14 <_svfiprintf_r+0xd4>
 8007ac8:	2300      	movs	r3, #0
 8007aca:	3401      	adds	r4, #1
 8007acc:	9305      	str	r3, [sp, #20]
 8007ace:	4619      	mov	r1, r3
 8007ad0:	f04f 0c0a 	mov.w	ip, #10
 8007ad4:	4620      	mov	r0, r4
 8007ad6:	f810 2b01 	ldrb.w	r2, [r0], #1
 8007ada:	3a30      	subs	r2, #48	; 0x30
 8007adc:	2a09      	cmp	r2, #9
 8007ade:	d903      	bls.n	8007ae8 <_svfiprintf_r+0x1a8>
 8007ae0:	2b00      	cmp	r3, #0
 8007ae2:	d0c5      	beq.n	8007a70 <_svfiprintf_r+0x130>
 8007ae4:	9105      	str	r1, [sp, #20]
 8007ae6:	e7c3      	b.n	8007a70 <_svfiprintf_r+0x130>
 8007ae8:	fb0c 2101 	mla	r1, ip, r1, r2
 8007aec:	4604      	mov	r4, r0
 8007aee:	2301      	movs	r3, #1
 8007af0:	e7f0      	b.n	8007ad4 <_svfiprintf_r+0x194>
 8007af2:	ab03      	add	r3, sp, #12
 8007af4:	9300      	str	r3, [sp, #0]
 8007af6:	462a      	mov	r2, r5
 8007af8:	4b0f      	ldr	r3, [pc, #60]	; (8007b38 <_svfiprintf_r+0x1f8>)
 8007afa:	a904      	add	r1, sp, #16
 8007afc:	4638      	mov	r0, r7
 8007afe:	f7fb fe3d 	bl	800377c <_printf_float>
 8007b02:	1c42      	adds	r2, r0, #1
 8007b04:	4606      	mov	r6, r0
 8007b06:	d1d6      	bne.n	8007ab6 <_svfiprintf_r+0x176>
 8007b08:	89ab      	ldrh	r3, [r5, #12]
 8007b0a:	065b      	lsls	r3, r3, #25
 8007b0c:	f53f af2c 	bmi.w	8007968 <_svfiprintf_r+0x28>
 8007b10:	9809      	ldr	r0, [sp, #36]	; 0x24
 8007b12:	b01d      	add	sp, #116	; 0x74
 8007b14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007b18:	ab03      	add	r3, sp, #12
 8007b1a:	9300      	str	r3, [sp, #0]
 8007b1c:	462a      	mov	r2, r5
 8007b1e:	4b06      	ldr	r3, [pc, #24]	; (8007b38 <_svfiprintf_r+0x1f8>)
 8007b20:	a904      	add	r1, sp, #16
 8007b22:	4638      	mov	r0, r7
 8007b24:	f7fc f8c2 	bl	8003cac <_printf_i>
 8007b28:	e7eb      	b.n	8007b02 <_svfiprintf_r+0x1c2>
 8007b2a:	bf00      	nop
 8007b2c:	0800a8ec 	.word	0x0800a8ec
 8007b30:	0800a8f6 	.word	0x0800a8f6
 8007b34:	0800377d 	.word	0x0800377d
 8007b38:	08007889 	.word	0x08007889
 8007b3c:	0800a8f2 	.word	0x0800a8f2

08007b40 <_sungetc_r>:
 8007b40:	b538      	push	{r3, r4, r5, lr}
 8007b42:	1c4b      	adds	r3, r1, #1
 8007b44:	4614      	mov	r4, r2
 8007b46:	d103      	bne.n	8007b50 <_sungetc_r+0x10>
 8007b48:	f04f 35ff 	mov.w	r5, #4294967295
 8007b4c:	4628      	mov	r0, r5
 8007b4e:	bd38      	pop	{r3, r4, r5, pc}
 8007b50:	8993      	ldrh	r3, [r2, #12]
 8007b52:	f023 0320 	bic.w	r3, r3, #32
 8007b56:	8193      	strh	r3, [r2, #12]
 8007b58:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007b5a:	6852      	ldr	r2, [r2, #4]
 8007b5c:	b2cd      	uxtb	r5, r1
 8007b5e:	b18b      	cbz	r3, 8007b84 <_sungetc_r+0x44>
 8007b60:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007b62:	4293      	cmp	r3, r2
 8007b64:	dd08      	ble.n	8007b78 <_sungetc_r+0x38>
 8007b66:	6823      	ldr	r3, [r4, #0]
 8007b68:	1e5a      	subs	r2, r3, #1
 8007b6a:	6022      	str	r2, [r4, #0]
 8007b6c:	f803 5c01 	strb.w	r5, [r3, #-1]
 8007b70:	6863      	ldr	r3, [r4, #4]
 8007b72:	3301      	adds	r3, #1
 8007b74:	6063      	str	r3, [r4, #4]
 8007b76:	e7e9      	b.n	8007b4c <_sungetc_r+0xc>
 8007b78:	4621      	mov	r1, r4
 8007b7a:	f000 fd39 	bl	80085f0 <__submore>
 8007b7e:	2800      	cmp	r0, #0
 8007b80:	d0f1      	beq.n	8007b66 <_sungetc_r+0x26>
 8007b82:	e7e1      	b.n	8007b48 <_sungetc_r+0x8>
 8007b84:	6921      	ldr	r1, [r4, #16]
 8007b86:	6823      	ldr	r3, [r4, #0]
 8007b88:	b151      	cbz	r1, 8007ba0 <_sungetc_r+0x60>
 8007b8a:	4299      	cmp	r1, r3
 8007b8c:	d208      	bcs.n	8007ba0 <_sungetc_r+0x60>
 8007b8e:	f813 1c01 	ldrb.w	r1, [r3, #-1]
 8007b92:	42a9      	cmp	r1, r5
 8007b94:	d104      	bne.n	8007ba0 <_sungetc_r+0x60>
 8007b96:	3b01      	subs	r3, #1
 8007b98:	3201      	adds	r2, #1
 8007b9a:	6023      	str	r3, [r4, #0]
 8007b9c:	6062      	str	r2, [r4, #4]
 8007b9e:	e7d5      	b.n	8007b4c <_sungetc_r+0xc>
 8007ba0:	e9c4 320f 	strd	r3, r2, [r4, #60]	; 0x3c
 8007ba4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8007ba8:	6363      	str	r3, [r4, #52]	; 0x34
 8007baa:	2303      	movs	r3, #3
 8007bac:	63a3      	str	r3, [r4, #56]	; 0x38
 8007bae:	4623      	mov	r3, r4
 8007bb0:	f803 5f46 	strb.w	r5, [r3, #70]!
 8007bb4:	6023      	str	r3, [r4, #0]
 8007bb6:	2301      	movs	r3, #1
 8007bb8:	e7dc      	b.n	8007b74 <_sungetc_r+0x34>

08007bba <__ssrefill_r>:
 8007bba:	b510      	push	{r4, lr}
 8007bbc:	460c      	mov	r4, r1
 8007bbe:	6b49      	ldr	r1, [r1, #52]	; 0x34
 8007bc0:	b169      	cbz	r1, 8007bde <__ssrefill_r+0x24>
 8007bc2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8007bc6:	4299      	cmp	r1, r3
 8007bc8:	d001      	beq.n	8007bce <__ssrefill_r+0x14>
 8007bca:	f7fb fc91 	bl	80034f0 <_free_r>
 8007bce:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8007bd0:	6063      	str	r3, [r4, #4]
 8007bd2:	2000      	movs	r0, #0
 8007bd4:	6360      	str	r0, [r4, #52]	; 0x34
 8007bd6:	b113      	cbz	r3, 8007bde <__ssrefill_r+0x24>
 8007bd8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007bda:	6023      	str	r3, [r4, #0]
 8007bdc:	bd10      	pop	{r4, pc}
 8007bde:	6923      	ldr	r3, [r4, #16]
 8007be0:	6023      	str	r3, [r4, #0]
 8007be2:	2300      	movs	r3, #0
 8007be4:	6063      	str	r3, [r4, #4]
 8007be6:	89a3      	ldrh	r3, [r4, #12]
 8007be8:	f043 0320 	orr.w	r3, r3, #32
 8007bec:	81a3      	strh	r3, [r4, #12]
 8007bee:	f04f 30ff 	mov.w	r0, #4294967295
 8007bf2:	e7f3      	b.n	8007bdc <__ssrefill_r+0x22>

08007bf4 <__ssvfiscanf_r>:
 8007bf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007bf8:	460c      	mov	r4, r1
 8007bfa:	f5ad 7d23 	sub.w	sp, sp, #652	; 0x28c
 8007bfe:	2100      	movs	r1, #0
 8007c00:	e9cd 1144 	strd	r1, r1, [sp, #272]	; 0x110
 8007c04:	49b2      	ldr	r1, [pc, #712]	; (8007ed0 <__ssvfiscanf_r+0x2dc>)
 8007c06:	91a0      	str	r1, [sp, #640]	; 0x280
 8007c08:	f10d 0804 	add.w	r8, sp, #4
 8007c0c:	49b1      	ldr	r1, [pc, #708]	; (8007ed4 <__ssvfiscanf_r+0x2e0>)
 8007c0e:	4fb2      	ldr	r7, [pc, #712]	; (8007ed8 <__ssvfiscanf_r+0x2e4>)
 8007c10:	f8df 92c8 	ldr.w	r9, [pc, #712]	; 8007edc <__ssvfiscanf_r+0x2e8>
 8007c14:	f8cd 8118 	str.w	r8, [sp, #280]	; 0x118
 8007c18:	4606      	mov	r6, r0
 8007c1a:	91a1      	str	r1, [sp, #644]	; 0x284
 8007c1c:	9300      	str	r3, [sp, #0]
 8007c1e:	f892 a000 	ldrb.w	sl, [r2]
 8007c22:	f1ba 0f00 	cmp.w	sl, #0
 8007c26:	f000 8151 	beq.w	8007ecc <__ssvfiscanf_r+0x2d8>
 8007c2a:	f81a 3007 	ldrb.w	r3, [sl, r7]
 8007c2e:	f013 0308 	ands.w	r3, r3, #8
 8007c32:	f102 0501 	add.w	r5, r2, #1
 8007c36:	d019      	beq.n	8007c6c <__ssvfiscanf_r+0x78>
 8007c38:	6863      	ldr	r3, [r4, #4]
 8007c3a:	2b00      	cmp	r3, #0
 8007c3c:	dd0f      	ble.n	8007c5e <__ssvfiscanf_r+0x6a>
 8007c3e:	6823      	ldr	r3, [r4, #0]
 8007c40:	781a      	ldrb	r2, [r3, #0]
 8007c42:	5cba      	ldrb	r2, [r7, r2]
 8007c44:	0712      	lsls	r2, r2, #28
 8007c46:	d401      	bmi.n	8007c4c <__ssvfiscanf_r+0x58>
 8007c48:	462a      	mov	r2, r5
 8007c4a:	e7e8      	b.n	8007c1e <__ssvfiscanf_r+0x2a>
 8007c4c:	9a45      	ldr	r2, [sp, #276]	; 0x114
 8007c4e:	3201      	adds	r2, #1
 8007c50:	9245      	str	r2, [sp, #276]	; 0x114
 8007c52:	6862      	ldr	r2, [r4, #4]
 8007c54:	3301      	adds	r3, #1
 8007c56:	3a01      	subs	r2, #1
 8007c58:	6062      	str	r2, [r4, #4]
 8007c5a:	6023      	str	r3, [r4, #0]
 8007c5c:	e7ec      	b.n	8007c38 <__ssvfiscanf_r+0x44>
 8007c5e:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 8007c60:	4621      	mov	r1, r4
 8007c62:	4630      	mov	r0, r6
 8007c64:	4798      	blx	r3
 8007c66:	2800      	cmp	r0, #0
 8007c68:	d0e9      	beq.n	8007c3e <__ssvfiscanf_r+0x4a>
 8007c6a:	e7ed      	b.n	8007c48 <__ssvfiscanf_r+0x54>
 8007c6c:	f1ba 0f25 	cmp.w	sl, #37	; 0x25
 8007c70:	f040 8083 	bne.w	8007d7a <__ssvfiscanf_r+0x186>
 8007c74:	9341      	str	r3, [sp, #260]	; 0x104
 8007c76:	9343      	str	r3, [sp, #268]	; 0x10c
 8007c78:	7853      	ldrb	r3, [r2, #1]
 8007c7a:	2b2a      	cmp	r3, #42	; 0x2a
 8007c7c:	bf02      	ittt	eq
 8007c7e:	2310      	moveq	r3, #16
 8007c80:	1c95      	addeq	r5, r2, #2
 8007c82:	9341      	streq	r3, [sp, #260]	; 0x104
 8007c84:	220a      	movs	r2, #10
 8007c86:	46ab      	mov	fp, r5
 8007c88:	f81b 1b01 	ldrb.w	r1, [fp], #1
 8007c8c:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 8007c90:	2b09      	cmp	r3, #9
 8007c92:	d91d      	bls.n	8007cd0 <__ssvfiscanf_r+0xdc>
 8007c94:	4891      	ldr	r0, [pc, #580]	; (8007edc <__ssvfiscanf_r+0x2e8>)
 8007c96:	2203      	movs	r2, #3
 8007c98:	f7f8 faba 	bl	8000210 <memchr>
 8007c9c:	b140      	cbz	r0, 8007cb0 <__ssvfiscanf_r+0xbc>
 8007c9e:	2301      	movs	r3, #1
 8007ca0:	eba0 0009 	sub.w	r0, r0, r9
 8007ca4:	fa03 f000 	lsl.w	r0, r3, r0
 8007ca8:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8007caa:	4318      	orrs	r0, r3
 8007cac:	9041      	str	r0, [sp, #260]	; 0x104
 8007cae:	465d      	mov	r5, fp
 8007cb0:	f815 3b01 	ldrb.w	r3, [r5], #1
 8007cb4:	2b78      	cmp	r3, #120	; 0x78
 8007cb6:	d806      	bhi.n	8007cc6 <__ssvfiscanf_r+0xd2>
 8007cb8:	2b57      	cmp	r3, #87	; 0x57
 8007cba:	d810      	bhi.n	8007cde <__ssvfiscanf_r+0xea>
 8007cbc:	2b25      	cmp	r3, #37	; 0x25
 8007cbe:	d05c      	beq.n	8007d7a <__ssvfiscanf_r+0x186>
 8007cc0:	d856      	bhi.n	8007d70 <__ssvfiscanf_r+0x17c>
 8007cc2:	2b00      	cmp	r3, #0
 8007cc4:	d074      	beq.n	8007db0 <__ssvfiscanf_r+0x1bc>
 8007cc6:	2303      	movs	r3, #3
 8007cc8:	9347      	str	r3, [sp, #284]	; 0x11c
 8007cca:	230a      	movs	r3, #10
 8007ccc:	9342      	str	r3, [sp, #264]	; 0x108
 8007cce:	e081      	b.n	8007dd4 <__ssvfiscanf_r+0x1e0>
 8007cd0:	9b43      	ldr	r3, [sp, #268]	; 0x10c
 8007cd2:	fb02 1303 	mla	r3, r2, r3, r1
 8007cd6:	3b30      	subs	r3, #48	; 0x30
 8007cd8:	9343      	str	r3, [sp, #268]	; 0x10c
 8007cda:	465d      	mov	r5, fp
 8007cdc:	e7d3      	b.n	8007c86 <__ssvfiscanf_r+0x92>
 8007cde:	f1a3 0258 	sub.w	r2, r3, #88	; 0x58
 8007ce2:	2a20      	cmp	r2, #32
 8007ce4:	d8ef      	bhi.n	8007cc6 <__ssvfiscanf_r+0xd2>
 8007ce6:	a101      	add	r1, pc, #4	; (adr r1, 8007cec <__ssvfiscanf_r+0xf8>)
 8007ce8:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8007cec:	08007dbf 	.word	0x08007dbf
 8007cf0:	08007cc7 	.word	0x08007cc7
 8007cf4:	08007cc7 	.word	0x08007cc7
 8007cf8:	08007e1d 	.word	0x08007e1d
 8007cfc:	08007cc7 	.word	0x08007cc7
 8007d00:	08007cc7 	.word	0x08007cc7
 8007d04:	08007cc7 	.word	0x08007cc7
 8007d08:	08007cc7 	.word	0x08007cc7
 8007d0c:	08007cc7 	.word	0x08007cc7
 8007d10:	08007cc7 	.word	0x08007cc7
 8007d14:	08007cc7 	.word	0x08007cc7
 8007d18:	08007e33 	.word	0x08007e33
 8007d1c:	08007e09 	.word	0x08007e09
 8007d20:	08007d77 	.word	0x08007d77
 8007d24:	08007d77 	.word	0x08007d77
 8007d28:	08007d77 	.word	0x08007d77
 8007d2c:	08007cc7 	.word	0x08007cc7
 8007d30:	08007e0d 	.word	0x08007e0d
 8007d34:	08007cc7 	.word	0x08007cc7
 8007d38:	08007cc7 	.word	0x08007cc7
 8007d3c:	08007cc7 	.word	0x08007cc7
 8007d40:	08007cc7 	.word	0x08007cc7
 8007d44:	08007e43 	.word	0x08007e43
 8007d48:	08007e15 	.word	0x08007e15
 8007d4c:	08007db7 	.word	0x08007db7
 8007d50:	08007cc7 	.word	0x08007cc7
 8007d54:	08007cc7 	.word	0x08007cc7
 8007d58:	08007e3f 	.word	0x08007e3f
 8007d5c:	08007cc7 	.word	0x08007cc7
 8007d60:	08007e09 	.word	0x08007e09
 8007d64:	08007cc7 	.word	0x08007cc7
 8007d68:	08007cc7 	.word	0x08007cc7
 8007d6c:	08007dbf 	.word	0x08007dbf
 8007d70:	3b45      	subs	r3, #69	; 0x45
 8007d72:	2b02      	cmp	r3, #2
 8007d74:	d8a7      	bhi.n	8007cc6 <__ssvfiscanf_r+0xd2>
 8007d76:	2305      	movs	r3, #5
 8007d78:	e02b      	b.n	8007dd2 <__ssvfiscanf_r+0x1de>
 8007d7a:	6863      	ldr	r3, [r4, #4]
 8007d7c:	2b00      	cmp	r3, #0
 8007d7e:	dd0d      	ble.n	8007d9c <__ssvfiscanf_r+0x1a8>
 8007d80:	6823      	ldr	r3, [r4, #0]
 8007d82:	781a      	ldrb	r2, [r3, #0]
 8007d84:	4552      	cmp	r2, sl
 8007d86:	f040 80a1 	bne.w	8007ecc <__ssvfiscanf_r+0x2d8>
 8007d8a:	3301      	adds	r3, #1
 8007d8c:	6862      	ldr	r2, [r4, #4]
 8007d8e:	6023      	str	r3, [r4, #0]
 8007d90:	9b45      	ldr	r3, [sp, #276]	; 0x114
 8007d92:	3a01      	subs	r2, #1
 8007d94:	3301      	adds	r3, #1
 8007d96:	6062      	str	r2, [r4, #4]
 8007d98:	9345      	str	r3, [sp, #276]	; 0x114
 8007d9a:	e755      	b.n	8007c48 <__ssvfiscanf_r+0x54>
 8007d9c:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 8007d9e:	4621      	mov	r1, r4
 8007da0:	4630      	mov	r0, r6
 8007da2:	4798      	blx	r3
 8007da4:	2800      	cmp	r0, #0
 8007da6:	d0eb      	beq.n	8007d80 <__ssvfiscanf_r+0x18c>
 8007da8:	9844      	ldr	r0, [sp, #272]	; 0x110
 8007daa:	2800      	cmp	r0, #0
 8007dac:	f040 8084 	bne.w	8007eb8 <__ssvfiscanf_r+0x2c4>
 8007db0:	f04f 30ff 	mov.w	r0, #4294967295
 8007db4:	e086      	b.n	8007ec4 <__ssvfiscanf_r+0x2d0>
 8007db6:	9a41      	ldr	r2, [sp, #260]	; 0x104
 8007db8:	f042 0220 	orr.w	r2, r2, #32
 8007dbc:	9241      	str	r2, [sp, #260]	; 0x104
 8007dbe:	9a41      	ldr	r2, [sp, #260]	; 0x104
 8007dc0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007dc4:	9241      	str	r2, [sp, #260]	; 0x104
 8007dc6:	2210      	movs	r2, #16
 8007dc8:	2b6f      	cmp	r3, #111	; 0x6f
 8007dca:	9242      	str	r2, [sp, #264]	; 0x108
 8007dcc:	bf34      	ite	cc
 8007dce:	2303      	movcc	r3, #3
 8007dd0:	2304      	movcs	r3, #4
 8007dd2:	9347      	str	r3, [sp, #284]	; 0x11c
 8007dd4:	6863      	ldr	r3, [r4, #4]
 8007dd6:	2b00      	cmp	r3, #0
 8007dd8:	dd41      	ble.n	8007e5e <__ssvfiscanf_r+0x26a>
 8007dda:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8007ddc:	0659      	lsls	r1, r3, #25
 8007dde:	d404      	bmi.n	8007dea <__ssvfiscanf_r+0x1f6>
 8007de0:	6823      	ldr	r3, [r4, #0]
 8007de2:	781a      	ldrb	r2, [r3, #0]
 8007de4:	5cba      	ldrb	r2, [r7, r2]
 8007de6:	0712      	lsls	r2, r2, #28
 8007de8:	d440      	bmi.n	8007e6c <__ssvfiscanf_r+0x278>
 8007dea:	9b47      	ldr	r3, [sp, #284]	; 0x11c
 8007dec:	2b02      	cmp	r3, #2
 8007dee:	dc4f      	bgt.n	8007e90 <__ssvfiscanf_r+0x29c>
 8007df0:	466b      	mov	r3, sp
 8007df2:	4622      	mov	r2, r4
 8007df4:	a941      	add	r1, sp, #260	; 0x104
 8007df6:	4630      	mov	r0, r6
 8007df8:	f000 f9cc 	bl	8008194 <_scanf_chars>
 8007dfc:	2801      	cmp	r0, #1
 8007dfe:	d065      	beq.n	8007ecc <__ssvfiscanf_r+0x2d8>
 8007e00:	2802      	cmp	r0, #2
 8007e02:	f47f af21 	bne.w	8007c48 <__ssvfiscanf_r+0x54>
 8007e06:	e7cf      	b.n	8007da8 <__ssvfiscanf_r+0x1b4>
 8007e08:	220a      	movs	r2, #10
 8007e0a:	e7dd      	b.n	8007dc8 <__ssvfiscanf_r+0x1d4>
 8007e0c:	2300      	movs	r3, #0
 8007e0e:	9342      	str	r3, [sp, #264]	; 0x108
 8007e10:	2303      	movs	r3, #3
 8007e12:	e7de      	b.n	8007dd2 <__ssvfiscanf_r+0x1de>
 8007e14:	2308      	movs	r3, #8
 8007e16:	9342      	str	r3, [sp, #264]	; 0x108
 8007e18:	2304      	movs	r3, #4
 8007e1a:	e7da      	b.n	8007dd2 <__ssvfiscanf_r+0x1de>
 8007e1c:	4629      	mov	r1, r5
 8007e1e:	4640      	mov	r0, r8
 8007e20:	f000 fb1c 	bl	800845c <__sccl>
 8007e24:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8007e26:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8007e2a:	9341      	str	r3, [sp, #260]	; 0x104
 8007e2c:	4605      	mov	r5, r0
 8007e2e:	2301      	movs	r3, #1
 8007e30:	e7cf      	b.n	8007dd2 <__ssvfiscanf_r+0x1de>
 8007e32:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8007e34:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8007e38:	9341      	str	r3, [sp, #260]	; 0x104
 8007e3a:	2300      	movs	r3, #0
 8007e3c:	e7c9      	b.n	8007dd2 <__ssvfiscanf_r+0x1de>
 8007e3e:	2302      	movs	r3, #2
 8007e40:	e7c7      	b.n	8007dd2 <__ssvfiscanf_r+0x1de>
 8007e42:	9841      	ldr	r0, [sp, #260]	; 0x104
 8007e44:	06c3      	lsls	r3, r0, #27
 8007e46:	f53f aeff 	bmi.w	8007c48 <__ssvfiscanf_r+0x54>
 8007e4a:	9b00      	ldr	r3, [sp, #0]
 8007e4c:	9a45      	ldr	r2, [sp, #276]	; 0x114
 8007e4e:	1d19      	adds	r1, r3, #4
 8007e50:	9100      	str	r1, [sp, #0]
 8007e52:	681b      	ldr	r3, [r3, #0]
 8007e54:	07c0      	lsls	r0, r0, #31
 8007e56:	bf4c      	ite	mi
 8007e58:	801a      	strhmi	r2, [r3, #0]
 8007e5a:	601a      	strpl	r2, [r3, #0]
 8007e5c:	e6f4      	b.n	8007c48 <__ssvfiscanf_r+0x54>
 8007e5e:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 8007e60:	4621      	mov	r1, r4
 8007e62:	4630      	mov	r0, r6
 8007e64:	4798      	blx	r3
 8007e66:	2800      	cmp	r0, #0
 8007e68:	d0b7      	beq.n	8007dda <__ssvfiscanf_r+0x1e6>
 8007e6a:	e79d      	b.n	8007da8 <__ssvfiscanf_r+0x1b4>
 8007e6c:	9a45      	ldr	r2, [sp, #276]	; 0x114
 8007e6e:	3201      	adds	r2, #1
 8007e70:	9245      	str	r2, [sp, #276]	; 0x114
 8007e72:	6862      	ldr	r2, [r4, #4]
 8007e74:	3a01      	subs	r2, #1
 8007e76:	2a00      	cmp	r2, #0
 8007e78:	6062      	str	r2, [r4, #4]
 8007e7a:	dd02      	ble.n	8007e82 <__ssvfiscanf_r+0x28e>
 8007e7c:	3301      	adds	r3, #1
 8007e7e:	6023      	str	r3, [r4, #0]
 8007e80:	e7ae      	b.n	8007de0 <__ssvfiscanf_r+0x1ec>
 8007e82:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 8007e84:	4621      	mov	r1, r4
 8007e86:	4630      	mov	r0, r6
 8007e88:	4798      	blx	r3
 8007e8a:	2800      	cmp	r0, #0
 8007e8c:	d0a8      	beq.n	8007de0 <__ssvfiscanf_r+0x1ec>
 8007e8e:	e78b      	b.n	8007da8 <__ssvfiscanf_r+0x1b4>
 8007e90:	2b04      	cmp	r3, #4
 8007e92:	dc06      	bgt.n	8007ea2 <__ssvfiscanf_r+0x2ae>
 8007e94:	466b      	mov	r3, sp
 8007e96:	4622      	mov	r2, r4
 8007e98:	a941      	add	r1, sp, #260	; 0x104
 8007e9a:	4630      	mov	r0, r6
 8007e9c:	f000 f9d2 	bl	8008244 <_scanf_i>
 8007ea0:	e7ac      	b.n	8007dfc <__ssvfiscanf_r+0x208>
 8007ea2:	4b0f      	ldr	r3, [pc, #60]	; (8007ee0 <__ssvfiscanf_r+0x2ec>)
 8007ea4:	2b00      	cmp	r3, #0
 8007ea6:	f43f aecf 	beq.w	8007c48 <__ssvfiscanf_r+0x54>
 8007eaa:	466b      	mov	r3, sp
 8007eac:	4622      	mov	r2, r4
 8007eae:	a941      	add	r1, sp, #260	; 0x104
 8007eb0:	4630      	mov	r0, r6
 8007eb2:	f7fc f821 	bl	8003ef8 <_scanf_float>
 8007eb6:	e7a1      	b.n	8007dfc <__ssvfiscanf_r+0x208>
 8007eb8:	89a3      	ldrh	r3, [r4, #12]
 8007eba:	f013 0f40 	tst.w	r3, #64	; 0x40
 8007ebe:	bf18      	it	ne
 8007ec0:	f04f 30ff 	movne.w	r0, #4294967295
 8007ec4:	f50d 7d23 	add.w	sp, sp, #652	; 0x28c
 8007ec8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007ecc:	9844      	ldr	r0, [sp, #272]	; 0x110
 8007ece:	e7f9      	b.n	8007ec4 <__ssvfiscanf_r+0x2d0>
 8007ed0:	08007b41 	.word	0x08007b41
 8007ed4:	08007bbb 	.word	0x08007bbb
 8007ed8:	0800a595 	.word	0x0800a595
 8007edc:	0800a8f2 	.word	0x0800a8f2
 8007ee0:	08003ef9 	.word	0x08003ef9

08007ee4 <__sfputc_r>:
 8007ee4:	6893      	ldr	r3, [r2, #8]
 8007ee6:	3b01      	subs	r3, #1
 8007ee8:	2b00      	cmp	r3, #0
 8007eea:	b410      	push	{r4}
 8007eec:	6093      	str	r3, [r2, #8]
 8007eee:	da07      	bge.n	8007f00 <__sfputc_r+0x1c>
 8007ef0:	6994      	ldr	r4, [r2, #24]
 8007ef2:	42a3      	cmp	r3, r4
 8007ef4:	db01      	blt.n	8007efa <__sfputc_r+0x16>
 8007ef6:	290a      	cmp	r1, #10
 8007ef8:	d102      	bne.n	8007f00 <__sfputc_r+0x1c>
 8007efa:	bc10      	pop	{r4}
 8007efc:	f7fd bbb2 	b.w	8005664 <__swbuf_r>
 8007f00:	6813      	ldr	r3, [r2, #0]
 8007f02:	1c58      	adds	r0, r3, #1
 8007f04:	6010      	str	r0, [r2, #0]
 8007f06:	7019      	strb	r1, [r3, #0]
 8007f08:	4608      	mov	r0, r1
 8007f0a:	bc10      	pop	{r4}
 8007f0c:	4770      	bx	lr

08007f0e <__sfputs_r>:
 8007f0e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007f10:	4606      	mov	r6, r0
 8007f12:	460f      	mov	r7, r1
 8007f14:	4614      	mov	r4, r2
 8007f16:	18d5      	adds	r5, r2, r3
 8007f18:	42ac      	cmp	r4, r5
 8007f1a:	d101      	bne.n	8007f20 <__sfputs_r+0x12>
 8007f1c:	2000      	movs	r0, #0
 8007f1e:	e007      	b.n	8007f30 <__sfputs_r+0x22>
 8007f20:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007f24:	463a      	mov	r2, r7
 8007f26:	4630      	mov	r0, r6
 8007f28:	f7ff ffdc 	bl	8007ee4 <__sfputc_r>
 8007f2c:	1c43      	adds	r3, r0, #1
 8007f2e:	d1f3      	bne.n	8007f18 <__sfputs_r+0xa>
 8007f30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08007f34 <_vfiprintf_r>:
 8007f34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007f38:	460d      	mov	r5, r1
 8007f3a:	b09d      	sub	sp, #116	; 0x74
 8007f3c:	4614      	mov	r4, r2
 8007f3e:	4698      	mov	r8, r3
 8007f40:	4606      	mov	r6, r0
 8007f42:	b118      	cbz	r0, 8007f4c <_vfiprintf_r+0x18>
 8007f44:	6983      	ldr	r3, [r0, #24]
 8007f46:	b90b      	cbnz	r3, 8007f4c <_vfiprintf_r+0x18>
 8007f48:	f7fb f9bc 	bl	80032c4 <__sinit>
 8007f4c:	4b89      	ldr	r3, [pc, #548]	; (8008174 <_vfiprintf_r+0x240>)
 8007f4e:	429d      	cmp	r5, r3
 8007f50:	d11b      	bne.n	8007f8a <_vfiprintf_r+0x56>
 8007f52:	6875      	ldr	r5, [r6, #4]
 8007f54:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8007f56:	07d9      	lsls	r1, r3, #31
 8007f58:	d405      	bmi.n	8007f66 <_vfiprintf_r+0x32>
 8007f5a:	89ab      	ldrh	r3, [r5, #12]
 8007f5c:	059a      	lsls	r2, r3, #22
 8007f5e:	d402      	bmi.n	8007f66 <_vfiprintf_r+0x32>
 8007f60:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8007f62:	f7fb fa8e 	bl	8003482 <__retarget_lock_acquire_recursive>
 8007f66:	89ab      	ldrh	r3, [r5, #12]
 8007f68:	071b      	lsls	r3, r3, #28
 8007f6a:	d501      	bpl.n	8007f70 <_vfiprintf_r+0x3c>
 8007f6c:	692b      	ldr	r3, [r5, #16]
 8007f6e:	b9eb      	cbnz	r3, 8007fac <_vfiprintf_r+0x78>
 8007f70:	4629      	mov	r1, r5
 8007f72:	4630      	mov	r0, r6
 8007f74:	f7fd fbda 	bl	800572c <__swsetup_r>
 8007f78:	b1c0      	cbz	r0, 8007fac <_vfiprintf_r+0x78>
 8007f7a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8007f7c:	07dc      	lsls	r4, r3, #31
 8007f7e:	d50e      	bpl.n	8007f9e <_vfiprintf_r+0x6a>
 8007f80:	f04f 30ff 	mov.w	r0, #4294967295
 8007f84:	b01d      	add	sp, #116	; 0x74
 8007f86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007f8a:	4b7b      	ldr	r3, [pc, #492]	; (8008178 <_vfiprintf_r+0x244>)
 8007f8c:	429d      	cmp	r5, r3
 8007f8e:	d101      	bne.n	8007f94 <_vfiprintf_r+0x60>
 8007f90:	68b5      	ldr	r5, [r6, #8]
 8007f92:	e7df      	b.n	8007f54 <_vfiprintf_r+0x20>
 8007f94:	4b79      	ldr	r3, [pc, #484]	; (800817c <_vfiprintf_r+0x248>)
 8007f96:	429d      	cmp	r5, r3
 8007f98:	bf08      	it	eq
 8007f9a:	68f5      	ldreq	r5, [r6, #12]
 8007f9c:	e7da      	b.n	8007f54 <_vfiprintf_r+0x20>
 8007f9e:	89ab      	ldrh	r3, [r5, #12]
 8007fa0:	0598      	lsls	r0, r3, #22
 8007fa2:	d4ed      	bmi.n	8007f80 <_vfiprintf_r+0x4c>
 8007fa4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8007fa6:	f7fb fa6d 	bl	8003484 <__retarget_lock_release_recursive>
 8007faa:	e7e9      	b.n	8007f80 <_vfiprintf_r+0x4c>
 8007fac:	2300      	movs	r3, #0
 8007fae:	9309      	str	r3, [sp, #36]	; 0x24
 8007fb0:	2320      	movs	r3, #32
 8007fb2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8007fb6:	f8cd 800c 	str.w	r8, [sp, #12]
 8007fba:	2330      	movs	r3, #48	; 0x30
 8007fbc:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8008180 <_vfiprintf_r+0x24c>
 8007fc0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8007fc4:	f04f 0901 	mov.w	r9, #1
 8007fc8:	4623      	mov	r3, r4
 8007fca:	469a      	mov	sl, r3
 8007fcc:	f813 2b01 	ldrb.w	r2, [r3], #1
 8007fd0:	b10a      	cbz	r2, 8007fd6 <_vfiprintf_r+0xa2>
 8007fd2:	2a25      	cmp	r2, #37	; 0x25
 8007fd4:	d1f9      	bne.n	8007fca <_vfiprintf_r+0x96>
 8007fd6:	ebba 0b04 	subs.w	fp, sl, r4
 8007fda:	d00b      	beq.n	8007ff4 <_vfiprintf_r+0xc0>
 8007fdc:	465b      	mov	r3, fp
 8007fde:	4622      	mov	r2, r4
 8007fe0:	4629      	mov	r1, r5
 8007fe2:	4630      	mov	r0, r6
 8007fe4:	f7ff ff93 	bl	8007f0e <__sfputs_r>
 8007fe8:	3001      	adds	r0, #1
 8007fea:	f000 80aa 	beq.w	8008142 <_vfiprintf_r+0x20e>
 8007fee:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8007ff0:	445a      	add	r2, fp
 8007ff2:	9209      	str	r2, [sp, #36]	; 0x24
 8007ff4:	f89a 3000 	ldrb.w	r3, [sl]
 8007ff8:	2b00      	cmp	r3, #0
 8007ffa:	f000 80a2 	beq.w	8008142 <_vfiprintf_r+0x20e>
 8007ffe:	2300      	movs	r3, #0
 8008000:	f04f 32ff 	mov.w	r2, #4294967295
 8008004:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8008008:	f10a 0a01 	add.w	sl, sl, #1
 800800c:	9304      	str	r3, [sp, #16]
 800800e:	9307      	str	r3, [sp, #28]
 8008010:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8008014:	931a      	str	r3, [sp, #104]	; 0x68
 8008016:	4654      	mov	r4, sl
 8008018:	2205      	movs	r2, #5
 800801a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800801e:	4858      	ldr	r0, [pc, #352]	; (8008180 <_vfiprintf_r+0x24c>)
 8008020:	f7f8 f8f6 	bl	8000210 <memchr>
 8008024:	9a04      	ldr	r2, [sp, #16]
 8008026:	b9d8      	cbnz	r0, 8008060 <_vfiprintf_r+0x12c>
 8008028:	06d1      	lsls	r1, r2, #27
 800802a:	bf44      	itt	mi
 800802c:	2320      	movmi	r3, #32
 800802e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8008032:	0713      	lsls	r3, r2, #28
 8008034:	bf44      	itt	mi
 8008036:	232b      	movmi	r3, #43	; 0x2b
 8008038:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800803c:	f89a 3000 	ldrb.w	r3, [sl]
 8008040:	2b2a      	cmp	r3, #42	; 0x2a
 8008042:	d015      	beq.n	8008070 <_vfiprintf_r+0x13c>
 8008044:	9a07      	ldr	r2, [sp, #28]
 8008046:	4654      	mov	r4, sl
 8008048:	2000      	movs	r0, #0
 800804a:	f04f 0c0a 	mov.w	ip, #10
 800804e:	4621      	mov	r1, r4
 8008050:	f811 3b01 	ldrb.w	r3, [r1], #1
 8008054:	3b30      	subs	r3, #48	; 0x30
 8008056:	2b09      	cmp	r3, #9
 8008058:	d94e      	bls.n	80080f8 <_vfiprintf_r+0x1c4>
 800805a:	b1b0      	cbz	r0, 800808a <_vfiprintf_r+0x156>
 800805c:	9207      	str	r2, [sp, #28]
 800805e:	e014      	b.n	800808a <_vfiprintf_r+0x156>
 8008060:	eba0 0308 	sub.w	r3, r0, r8
 8008064:	fa09 f303 	lsl.w	r3, r9, r3
 8008068:	4313      	orrs	r3, r2
 800806a:	9304      	str	r3, [sp, #16]
 800806c:	46a2      	mov	sl, r4
 800806e:	e7d2      	b.n	8008016 <_vfiprintf_r+0xe2>
 8008070:	9b03      	ldr	r3, [sp, #12]
 8008072:	1d19      	adds	r1, r3, #4
 8008074:	681b      	ldr	r3, [r3, #0]
 8008076:	9103      	str	r1, [sp, #12]
 8008078:	2b00      	cmp	r3, #0
 800807a:	bfbb      	ittet	lt
 800807c:	425b      	neglt	r3, r3
 800807e:	f042 0202 	orrlt.w	r2, r2, #2
 8008082:	9307      	strge	r3, [sp, #28]
 8008084:	9307      	strlt	r3, [sp, #28]
 8008086:	bfb8      	it	lt
 8008088:	9204      	strlt	r2, [sp, #16]
 800808a:	7823      	ldrb	r3, [r4, #0]
 800808c:	2b2e      	cmp	r3, #46	; 0x2e
 800808e:	d10c      	bne.n	80080aa <_vfiprintf_r+0x176>
 8008090:	7863      	ldrb	r3, [r4, #1]
 8008092:	2b2a      	cmp	r3, #42	; 0x2a
 8008094:	d135      	bne.n	8008102 <_vfiprintf_r+0x1ce>
 8008096:	9b03      	ldr	r3, [sp, #12]
 8008098:	1d1a      	adds	r2, r3, #4
 800809a:	681b      	ldr	r3, [r3, #0]
 800809c:	9203      	str	r2, [sp, #12]
 800809e:	2b00      	cmp	r3, #0
 80080a0:	bfb8      	it	lt
 80080a2:	f04f 33ff 	movlt.w	r3, #4294967295
 80080a6:	3402      	adds	r4, #2
 80080a8:	9305      	str	r3, [sp, #20]
 80080aa:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8008190 <_vfiprintf_r+0x25c>
 80080ae:	7821      	ldrb	r1, [r4, #0]
 80080b0:	2203      	movs	r2, #3
 80080b2:	4650      	mov	r0, sl
 80080b4:	f7f8 f8ac 	bl	8000210 <memchr>
 80080b8:	b140      	cbz	r0, 80080cc <_vfiprintf_r+0x198>
 80080ba:	2340      	movs	r3, #64	; 0x40
 80080bc:	eba0 000a 	sub.w	r0, r0, sl
 80080c0:	fa03 f000 	lsl.w	r0, r3, r0
 80080c4:	9b04      	ldr	r3, [sp, #16]
 80080c6:	4303      	orrs	r3, r0
 80080c8:	3401      	adds	r4, #1
 80080ca:	9304      	str	r3, [sp, #16]
 80080cc:	f814 1b01 	ldrb.w	r1, [r4], #1
 80080d0:	482c      	ldr	r0, [pc, #176]	; (8008184 <_vfiprintf_r+0x250>)
 80080d2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80080d6:	2206      	movs	r2, #6
 80080d8:	f7f8 f89a 	bl	8000210 <memchr>
 80080dc:	2800      	cmp	r0, #0
 80080de:	d03f      	beq.n	8008160 <_vfiprintf_r+0x22c>
 80080e0:	4b29      	ldr	r3, [pc, #164]	; (8008188 <_vfiprintf_r+0x254>)
 80080e2:	bb1b      	cbnz	r3, 800812c <_vfiprintf_r+0x1f8>
 80080e4:	9b03      	ldr	r3, [sp, #12]
 80080e6:	3307      	adds	r3, #7
 80080e8:	f023 0307 	bic.w	r3, r3, #7
 80080ec:	3308      	adds	r3, #8
 80080ee:	9303      	str	r3, [sp, #12]
 80080f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80080f2:	443b      	add	r3, r7
 80080f4:	9309      	str	r3, [sp, #36]	; 0x24
 80080f6:	e767      	b.n	8007fc8 <_vfiprintf_r+0x94>
 80080f8:	fb0c 3202 	mla	r2, ip, r2, r3
 80080fc:	460c      	mov	r4, r1
 80080fe:	2001      	movs	r0, #1
 8008100:	e7a5      	b.n	800804e <_vfiprintf_r+0x11a>
 8008102:	2300      	movs	r3, #0
 8008104:	3401      	adds	r4, #1
 8008106:	9305      	str	r3, [sp, #20]
 8008108:	4619      	mov	r1, r3
 800810a:	f04f 0c0a 	mov.w	ip, #10
 800810e:	4620      	mov	r0, r4
 8008110:	f810 2b01 	ldrb.w	r2, [r0], #1
 8008114:	3a30      	subs	r2, #48	; 0x30
 8008116:	2a09      	cmp	r2, #9
 8008118:	d903      	bls.n	8008122 <_vfiprintf_r+0x1ee>
 800811a:	2b00      	cmp	r3, #0
 800811c:	d0c5      	beq.n	80080aa <_vfiprintf_r+0x176>
 800811e:	9105      	str	r1, [sp, #20]
 8008120:	e7c3      	b.n	80080aa <_vfiprintf_r+0x176>
 8008122:	fb0c 2101 	mla	r1, ip, r1, r2
 8008126:	4604      	mov	r4, r0
 8008128:	2301      	movs	r3, #1
 800812a:	e7f0      	b.n	800810e <_vfiprintf_r+0x1da>
 800812c:	ab03      	add	r3, sp, #12
 800812e:	9300      	str	r3, [sp, #0]
 8008130:	462a      	mov	r2, r5
 8008132:	4b16      	ldr	r3, [pc, #88]	; (800818c <_vfiprintf_r+0x258>)
 8008134:	a904      	add	r1, sp, #16
 8008136:	4630      	mov	r0, r6
 8008138:	f7fb fb20 	bl	800377c <_printf_float>
 800813c:	4607      	mov	r7, r0
 800813e:	1c78      	adds	r0, r7, #1
 8008140:	d1d6      	bne.n	80080f0 <_vfiprintf_r+0x1bc>
 8008142:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8008144:	07d9      	lsls	r1, r3, #31
 8008146:	d405      	bmi.n	8008154 <_vfiprintf_r+0x220>
 8008148:	89ab      	ldrh	r3, [r5, #12]
 800814a:	059a      	lsls	r2, r3, #22
 800814c:	d402      	bmi.n	8008154 <_vfiprintf_r+0x220>
 800814e:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8008150:	f7fb f998 	bl	8003484 <__retarget_lock_release_recursive>
 8008154:	89ab      	ldrh	r3, [r5, #12]
 8008156:	065b      	lsls	r3, r3, #25
 8008158:	f53f af12 	bmi.w	8007f80 <_vfiprintf_r+0x4c>
 800815c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800815e:	e711      	b.n	8007f84 <_vfiprintf_r+0x50>
 8008160:	ab03      	add	r3, sp, #12
 8008162:	9300      	str	r3, [sp, #0]
 8008164:	462a      	mov	r2, r5
 8008166:	4b09      	ldr	r3, [pc, #36]	; (800818c <_vfiprintf_r+0x258>)
 8008168:	a904      	add	r1, sp, #16
 800816a:	4630      	mov	r0, r6
 800816c:	f7fb fd9e 	bl	8003cac <_printf_i>
 8008170:	e7e4      	b.n	800813c <_vfiprintf_r+0x208>
 8008172:	bf00      	nop
 8008174:	0800a414 	.word	0x0800a414
 8008178:	0800a434 	.word	0x0800a434
 800817c:	0800a3f4 	.word	0x0800a3f4
 8008180:	0800a8ec 	.word	0x0800a8ec
 8008184:	0800a8f6 	.word	0x0800a8f6
 8008188:	0800377d 	.word	0x0800377d
 800818c:	08007f0f 	.word	0x08007f0f
 8008190:	0800a8f2 	.word	0x0800a8f2

08008194 <_scanf_chars>:
 8008194:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008198:	4615      	mov	r5, r2
 800819a:	688a      	ldr	r2, [r1, #8]
 800819c:	4680      	mov	r8, r0
 800819e:	460c      	mov	r4, r1
 80081a0:	b932      	cbnz	r2, 80081b0 <_scanf_chars+0x1c>
 80081a2:	698a      	ldr	r2, [r1, #24]
 80081a4:	2a00      	cmp	r2, #0
 80081a6:	bf0c      	ite	eq
 80081a8:	2201      	moveq	r2, #1
 80081aa:	f04f 32ff 	movne.w	r2, #4294967295
 80081ae:	608a      	str	r2, [r1, #8]
 80081b0:	6822      	ldr	r2, [r4, #0]
 80081b2:	f8df 908c 	ldr.w	r9, [pc, #140]	; 8008240 <_scanf_chars+0xac>
 80081b6:	06d1      	lsls	r1, r2, #27
 80081b8:	bf5f      	itttt	pl
 80081ba:	681a      	ldrpl	r2, [r3, #0]
 80081bc:	1d11      	addpl	r1, r2, #4
 80081be:	6019      	strpl	r1, [r3, #0]
 80081c0:	6816      	ldrpl	r6, [r2, #0]
 80081c2:	2700      	movs	r7, #0
 80081c4:	69a0      	ldr	r0, [r4, #24]
 80081c6:	b188      	cbz	r0, 80081ec <_scanf_chars+0x58>
 80081c8:	2801      	cmp	r0, #1
 80081ca:	d107      	bne.n	80081dc <_scanf_chars+0x48>
 80081cc:	682b      	ldr	r3, [r5, #0]
 80081ce:	781a      	ldrb	r2, [r3, #0]
 80081d0:	6963      	ldr	r3, [r4, #20]
 80081d2:	5c9b      	ldrb	r3, [r3, r2]
 80081d4:	b953      	cbnz	r3, 80081ec <_scanf_chars+0x58>
 80081d6:	bb27      	cbnz	r7, 8008222 <_scanf_chars+0x8e>
 80081d8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80081dc:	2802      	cmp	r0, #2
 80081de:	d120      	bne.n	8008222 <_scanf_chars+0x8e>
 80081e0:	682b      	ldr	r3, [r5, #0]
 80081e2:	781b      	ldrb	r3, [r3, #0]
 80081e4:	f813 3009 	ldrb.w	r3, [r3, r9]
 80081e8:	071b      	lsls	r3, r3, #28
 80081ea:	d41a      	bmi.n	8008222 <_scanf_chars+0x8e>
 80081ec:	6823      	ldr	r3, [r4, #0]
 80081ee:	06da      	lsls	r2, r3, #27
 80081f0:	bf5e      	ittt	pl
 80081f2:	682b      	ldrpl	r3, [r5, #0]
 80081f4:	781b      	ldrbpl	r3, [r3, #0]
 80081f6:	f806 3b01 	strbpl.w	r3, [r6], #1
 80081fa:	682a      	ldr	r2, [r5, #0]
 80081fc:	686b      	ldr	r3, [r5, #4]
 80081fe:	3201      	adds	r2, #1
 8008200:	602a      	str	r2, [r5, #0]
 8008202:	68a2      	ldr	r2, [r4, #8]
 8008204:	3b01      	subs	r3, #1
 8008206:	3a01      	subs	r2, #1
 8008208:	606b      	str	r3, [r5, #4]
 800820a:	3701      	adds	r7, #1
 800820c:	60a2      	str	r2, [r4, #8]
 800820e:	b142      	cbz	r2, 8008222 <_scanf_chars+0x8e>
 8008210:	2b00      	cmp	r3, #0
 8008212:	dcd7      	bgt.n	80081c4 <_scanf_chars+0x30>
 8008214:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8008218:	4629      	mov	r1, r5
 800821a:	4640      	mov	r0, r8
 800821c:	4798      	blx	r3
 800821e:	2800      	cmp	r0, #0
 8008220:	d0d0      	beq.n	80081c4 <_scanf_chars+0x30>
 8008222:	6823      	ldr	r3, [r4, #0]
 8008224:	f013 0310 	ands.w	r3, r3, #16
 8008228:	d105      	bne.n	8008236 <_scanf_chars+0xa2>
 800822a:	68e2      	ldr	r2, [r4, #12]
 800822c:	3201      	adds	r2, #1
 800822e:	60e2      	str	r2, [r4, #12]
 8008230:	69a2      	ldr	r2, [r4, #24]
 8008232:	b102      	cbz	r2, 8008236 <_scanf_chars+0xa2>
 8008234:	7033      	strb	r3, [r6, #0]
 8008236:	6923      	ldr	r3, [r4, #16]
 8008238:	441f      	add	r7, r3
 800823a:	6127      	str	r7, [r4, #16]
 800823c:	2000      	movs	r0, #0
 800823e:	e7cb      	b.n	80081d8 <_scanf_chars+0x44>
 8008240:	0800a595 	.word	0x0800a595

08008244 <_scanf_i>:
 8008244:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008248:	4698      	mov	r8, r3
 800824a:	4b74      	ldr	r3, [pc, #464]	; (800841c <_scanf_i+0x1d8>)
 800824c:	460c      	mov	r4, r1
 800824e:	4682      	mov	sl, r0
 8008250:	4616      	mov	r6, r2
 8008252:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8008256:	b087      	sub	sp, #28
 8008258:	ab03      	add	r3, sp, #12
 800825a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800825e:	4b70      	ldr	r3, [pc, #448]	; (8008420 <_scanf_i+0x1dc>)
 8008260:	69a1      	ldr	r1, [r4, #24]
 8008262:	4a70      	ldr	r2, [pc, #448]	; (8008424 <_scanf_i+0x1e0>)
 8008264:	2903      	cmp	r1, #3
 8008266:	bf18      	it	ne
 8008268:	461a      	movne	r2, r3
 800826a:	68a3      	ldr	r3, [r4, #8]
 800826c:	9201      	str	r2, [sp, #4]
 800826e:	1e5a      	subs	r2, r3, #1
 8008270:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 8008274:	bf88      	it	hi
 8008276:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 800827a:	4627      	mov	r7, r4
 800827c:	bf82      	ittt	hi
 800827e:	eb03 0905 	addhi.w	r9, r3, r5
 8008282:	f240 135d 	movwhi	r3, #349	; 0x15d
 8008286:	60a3      	strhi	r3, [r4, #8]
 8008288:	f857 3b1c 	ldr.w	r3, [r7], #28
 800828c:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
 8008290:	bf98      	it	ls
 8008292:	f04f 0900 	movls.w	r9, #0
 8008296:	6023      	str	r3, [r4, #0]
 8008298:	463d      	mov	r5, r7
 800829a:	f04f 0b00 	mov.w	fp, #0
 800829e:	6831      	ldr	r1, [r6, #0]
 80082a0:	ab03      	add	r3, sp, #12
 80082a2:	7809      	ldrb	r1, [r1, #0]
 80082a4:	f853 002b 	ldr.w	r0, [r3, fp, lsl #2]
 80082a8:	2202      	movs	r2, #2
 80082aa:	f7f7 ffb1 	bl	8000210 <memchr>
 80082ae:	b328      	cbz	r0, 80082fc <_scanf_i+0xb8>
 80082b0:	f1bb 0f01 	cmp.w	fp, #1
 80082b4:	d159      	bne.n	800836a <_scanf_i+0x126>
 80082b6:	6862      	ldr	r2, [r4, #4]
 80082b8:	b92a      	cbnz	r2, 80082c6 <_scanf_i+0x82>
 80082ba:	6822      	ldr	r2, [r4, #0]
 80082bc:	2308      	movs	r3, #8
 80082be:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80082c2:	6063      	str	r3, [r4, #4]
 80082c4:	6022      	str	r2, [r4, #0]
 80082c6:	6822      	ldr	r2, [r4, #0]
 80082c8:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
 80082cc:	6022      	str	r2, [r4, #0]
 80082ce:	68a2      	ldr	r2, [r4, #8]
 80082d0:	1e51      	subs	r1, r2, #1
 80082d2:	60a1      	str	r1, [r4, #8]
 80082d4:	b192      	cbz	r2, 80082fc <_scanf_i+0xb8>
 80082d6:	6832      	ldr	r2, [r6, #0]
 80082d8:	1c51      	adds	r1, r2, #1
 80082da:	6031      	str	r1, [r6, #0]
 80082dc:	7812      	ldrb	r2, [r2, #0]
 80082de:	f805 2b01 	strb.w	r2, [r5], #1
 80082e2:	6872      	ldr	r2, [r6, #4]
 80082e4:	3a01      	subs	r2, #1
 80082e6:	2a00      	cmp	r2, #0
 80082e8:	6072      	str	r2, [r6, #4]
 80082ea:	dc07      	bgt.n	80082fc <_scanf_i+0xb8>
 80082ec:	f8d4 2180 	ldr.w	r2, [r4, #384]	; 0x180
 80082f0:	4631      	mov	r1, r6
 80082f2:	4650      	mov	r0, sl
 80082f4:	4790      	blx	r2
 80082f6:	2800      	cmp	r0, #0
 80082f8:	f040 8085 	bne.w	8008406 <_scanf_i+0x1c2>
 80082fc:	f10b 0b01 	add.w	fp, fp, #1
 8008300:	f1bb 0f03 	cmp.w	fp, #3
 8008304:	d1cb      	bne.n	800829e <_scanf_i+0x5a>
 8008306:	6863      	ldr	r3, [r4, #4]
 8008308:	b90b      	cbnz	r3, 800830e <_scanf_i+0xca>
 800830a:	230a      	movs	r3, #10
 800830c:	6063      	str	r3, [r4, #4]
 800830e:	6863      	ldr	r3, [r4, #4]
 8008310:	4945      	ldr	r1, [pc, #276]	; (8008428 <_scanf_i+0x1e4>)
 8008312:	6960      	ldr	r0, [r4, #20]
 8008314:	1ac9      	subs	r1, r1, r3
 8008316:	f000 f8a1 	bl	800845c <__sccl>
 800831a:	f04f 0b00 	mov.w	fp, #0
 800831e:	68a3      	ldr	r3, [r4, #8]
 8008320:	6822      	ldr	r2, [r4, #0]
 8008322:	2b00      	cmp	r3, #0
 8008324:	d03d      	beq.n	80083a2 <_scanf_i+0x15e>
 8008326:	6831      	ldr	r1, [r6, #0]
 8008328:	6960      	ldr	r0, [r4, #20]
 800832a:	f891 c000 	ldrb.w	ip, [r1]
 800832e:	f810 000c 	ldrb.w	r0, [r0, ip]
 8008332:	2800      	cmp	r0, #0
 8008334:	d035      	beq.n	80083a2 <_scanf_i+0x15e>
 8008336:	f1bc 0f30 	cmp.w	ip, #48	; 0x30
 800833a:	d124      	bne.n	8008386 <_scanf_i+0x142>
 800833c:	0510      	lsls	r0, r2, #20
 800833e:	d522      	bpl.n	8008386 <_scanf_i+0x142>
 8008340:	f10b 0b01 	add.w	fp, fp, #1
 8008344:	f1b9 0f00 	cmp.w	r9, #0
 8008348:	d003      	beq.n	8008352 <_scanf_i+0x10e>
 800834a:	3301      	adds	r3, #1
 800834c:	f109 39ff 	add.w	r9, r9, #4294967295
 8008350:	60a3      	str	r3, [r4, #8]
 8008352:	6873      	ldr	r3, [r6, #4]
 8008354:	3b01      	subs	r3, #1
 8008356:	2b00      	cmp	r3, #0
 8008358:	6073      	str	r3, [r6, #4]
 800835a:	dd1b      	ble.n	8008394 <_scanf_i+0x150>
 800835c:	6833      	ldr	r3, [r6, #0]
 800835e:	3301      	adds	r3, #1
 8008360:	6033      	str	r3, [r6, #0]
 8008362:	68a3      	ldr	r3, [r4, #8]
 8008364:	3b01      	subs	r3, #1
 8008366:	60a3      	str	r3, [r4, #8]
 8008368:	e7d9      	b.n	800831e <_scanf_i+0xda>
 800836a:	f1bb 0f02 	cmp.w	fp, #2
 800836e:	d1ae      	bne.n	80082ce <_scanf_i+0x8a>
 8008370:	6822      	ldr	r2, [r4, #0]
 8008372:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
 8008376:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 800837a:	d1bf      	bne.n	80082fc <_scanf_i+0xb8>
 800837c:	2310      	movs	r3, #16
 800837e:	6063      	str	r3, [r4, #4]
 8008380:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8008384:	e7a2      	b.n	80082cc <_scanf_i+0x88>
 8008386:	f422 6210 	bic.w	r2, r2, #2304	; 0x900
 800838a:	6022      	str	r2, [r4, #0]
 800838c:	780b      	ldrb	r3, [r1, #0]
 800838e:	f805 3b01 	strb.w	r3, [r5], #1
 8008392:	e7de      	b.n	8008352 <_scanf_i+0x10e>
 8008394:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8008398:	4631      	mov	r1, r6
 800839a:	4650      	mov	r0, sl
 800839c:	4798      	blx	r3
 800839e:	2800      	cmp	r0, #0
 80083a0:	d0df      	beq.n	8008362 <_scanf_i+0x11e>
 80083a2:	6823      	ldr	r3, [r4, #0]
 80083a4:	05d9      	lsls	r1, r3, #23
 80083a6:	d50d      	bpl.n	80083c4 <_scanf_i+0x180>
 80083a8:	42bd      	cmp	r5, r7
 80083aa:	d909      	bls.n	80083c0 <_scanf_i+0x17c>
 80083ac:	f815 1c01 	ldrb.w	r1, [r5, #-1]
 80083b0:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80083b4:	4632      	mov	r2, r6
 80083b6:	4650      	mov	r0, sl
 80083b8:	4798      	blx	r3
 80083ba:	f105 39ff 	add.w	r9, r5, #4294967295
 80083be:	464d      	mov	r5, r9
 80083c0:	42bd      	cmp	r5, r7
 80083c2:	d028      	beq.n	8008416 <_scanf_i+0x1d2>
 80083c4:	6822      	ldr	r2, [r4, #0]
 80083c6:	f012 0210 	ands.w	r2, r2, #16
 80083ca:	d113      	bne.n	80083f4 <_scanf_i+0x1b0>
 80083cc:	702a      	strb	r2, [r5, #0]
 80083ce:	6863      	ldr	r3, [r4, #4]
 80083d0:	9e01      	ldr	r6, [sp, #4]
 80083d2:	4639      	mov	r1, r7
 80083d4:	4650      	mov	r0, sl
 80083d6:	47b0      	blx	r6
 80083d8:	f8d8 3000 	ldr.w	r3, [r8]
 80083dc:	6821      	ldr	r1, [r4, #0]
 80083de:	1d1a      	adds	r2, r3, #4
 80083e0:	f8c8 2000 	str.w	r2, [r8]
 80083e4:	f011 0f20 	tst.w	r1, #32
 80083e8:	681b      	ldr	r3, [r3, #0]
 80083ea:	d00f      	beq.n	800840c <_scanf_i+0x1c8>
 80083ec:	6018      	str	r0, [r3, #0]
 80083ee:	68e3      	ldr	r3, [r4, #12]
 80083f0:	3301      	adds	r3, #1
 80083f2:	60e3      	str	r3, [r4, #12]
 80083f4:	1bed      	subs	r5, r5, r7
 80083f6:	44ab      	add	fp, r5
 80083f8:	6925      	ldr	r5, [r4, #16]
 80083fa:	445d      	add	r5, fp
 80083fc:	6125      	str	r5, [r4, #16]
 80083fe:	2000      	movs	r0, #0
 8008400:	b007      	add	sp, #28
 8008402:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008406:	f04f 0b00 	mov.w	fp, #0
 800840a:	e7ca      	b.n	80083a2 <_scanf_i+0x15e>
 800840c:	07ca      	lsls	r2, r1, #31
 800840e:	bf4c      	ite	mi
 8008410:	8018      	strhmi	r0, [r3, #0]
 8008412:	6018      	strpl	r0, [r3, #0]
 8008414:	e7eb      	b.n	80083ee <_scanf_i+0x1aa>
 8008416:	2001      	movs	r0, #1
 8008418:	e7f2      	b.n	8008400 <_scanf_i+0x1bc>
 800841a:	bf00      	nop
 800841c:	0800a3e8 	.word	0x0800a3e8
 8008420:	080085ed 	.word	0x080085ed
 8008424:	08005661 	.word	0x08005661
 8008428:	0800a916 	.word	0x0800a916

0800842c <_read_r>:
 800842c:	b538      	push	{r3, r4, r5, lr}
 800842e:	4d07      	ldr	r5, [pc, #28]	; (800844c <_read_r+0x20>)
 8008430:	4604      	mov	r4, r0
 8008432:	4608      	mov	r0, r1
 8008434:	4611      	mov	r1, r2
 8008436:	2200      	movs	r2, #0
 8008438:	602a      	str	r2, [r5, #0]
 800843a:	461a      	mov	r2, r3
 800843c:	f7fa fa88 	bl	8002950 <_read>
 8008440:	1c43      	adds	r3, r0, #1
 8008442:	d102      	bne.n	800844a <_read_r+0x1e>
 8008444:	682b      	ldr	r3, [r5, #0]
 8008446:	b103      	cbz	r3, 800844a <_read_r+0x1e>
 8008448:	6023      	str	r3, [r4, #0]
 800844a:	bd38      	pop	{r3, r4, r5, pc}
 800844c:	20000d5c 	.word	0x20000d5c

08008450 <nan>:
 8008450:	4901      	ldr	r1, [pc, #4]	; (8008458 <nan+0x8>)
 8008452:	2000      	movs	r0, #0
 8008454:	4770      	bx	lr
 8008456:	bf00      	nop
 8008458:	7ff80000 	.word	0x7ff80000

0800845c <__sccl>:
 800845c:	b570      	push	{r4, r5, r6, lr}
 800845e:	780b      	ldrb	r3, [r1, #0]
 8008460:	4604      	mov	r4, r0
 8008462:	2b5e      	cmp	r3, #94	; 0x5e
 8008464:	bf0b      	itete	eq
 8008466:	784b      	ldrbeq	r3, [r1, #1]
 8008468:	1c48      	addne	r0, r1, #1
 800846a:	1c88      	addeq	r0, r1, #2
 800846c:	2200      	movne	r2, #0
 800846e:	bf08      	it	eq
 8008470:	2201      	moveq	r2, #1
 8008472:	1e61      	subs	r1, r4, #1
 8008474:	f104 05ff 	add.w	r5, r4, #255	; 0xff
 8008478:	f801 2f01 	strb.w	r2, [r1, #1]!
 800847c:	42a9      	cmp	r1, r5
 800847e:	d1fb      	bne.n	8008478 <__sccl+0x1c>
 8008480:	b90b      	cbnz	r3, 8008486 <__sccl+0x2a>
 8008482:	3801      	subs	r0, #1
 8008484:	bd70      	pop	{r4, r5, r6, pc}
 8008486:	f082 0101 	eor.w	r1, r2, #1
 800848a:	54e1      	strb	r1, [r4, r3]
 800848c:	1c42      	adds	r2, r0, #1
 800848e:	f812 5c01 	ldrb.w	r5, [r2, #-1]
 8008492:	2d2d      	cmp	r5, #45	; 0x2d
 8008494:	f102 36ff 	add.w	r6, r2, #4294967295
 8008498:	4610      	mov	r0, r2
 800849a:	d006      	beq.n	80084aa <__sccl+0x4e>
 800849c:	2d5d      	cmp	r5, #93	; 0x5d
 800849e:	d0f1      	beq.n	8008484 <__sccl+0x28>
 80084a0:	b90d      	cbnz	r5, 80084a6 <__sccl+0x4a>
 80084a2:	4630      	mov	r0, r6
 80084a4:	e7ee      	b.n	8008484 <__sccl+0x28>
 80084a6:	462b      	mov	r3, r5
 80084a8:	e7ef      	b.n	800848a <__sccl+0x2e>
 80084aa:	7816      	ldrb	r6, [r2, #0]
 80084ac:	2e5d      	cmp	r6, #93	; 0x5d
 80084ae:	d0fa      	beq.n	80084a6 <__sccl+0x4a>
 80084b0:	42b3      	cmp	r3, r6
 80084b2:	dcf8      	bgt.n	80084a6 <__sccl+0x4a>
 80084b4:	4618      	mov	r0, r3
 80084b6:	3001      	adds	r0, #1
 80084b8:	4286      	cmp	r6, r0
 80084ba:	5421      	strb	r1, [r4, r0]
 80084bc:	dcfb      	bgt.n	80084b6 <__sccl+0x5a>
 80084be:	43d8      	mvns	r0, r3
 80084c0:	4430      	add	r0, r6
 80084c2:	1c5d      	adds	r5, r3, #1
 80084c4:	42b3      	cmp	r3, r6
 80084c6:	bfa8      	it	ge
 80084c8:	2000      	movge	r0, #0
 80084ca:	182b      	adds	r3, r5, r0
 80084cc:	3202      	adds	r2, #2
 80084ce:	e7de      	b.n	800848e <__sccl+0x32>

080084d0 <strncmp>:
 80084d0:	b510      	push	{r4, lr}
 80084d2:	b16a      	cbz	r2, 80084f0 <strncmp+0x20>
 80084d4:	3901      	subs	r1, #1
 80084d6:	1884      	adds	r4, r0, r2
 80084d8:	f810 3b01 	ldrb.w	r3, [r0], #1
 80084dc:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 80084e0:	4293      	cmp	r3, r2
 80084e2:	d103      	bne.n	80084ec <strncmp+0x1c>
 80084e4:	42a0      	cmp	r0, r4
 80084e6:	d001      	beq.n	80084ec <strncmp+0x1c>
 80084e8:	2b00      	cmp	r3, #0
 80084ea:	d1f5      	bne.n	80084d8 <strncmp+0x8>
 80084ec:	1a98      	subs	r0, r3, r2
 80084ee:	bd10      	pop	{r4, pc}
 80084f0:	4610      	mov	r0, r2
 80084f2:	e7fc      	b.n	80084ee <strncmp+0x1e>

080084f4 <_strtoul_l.isra.0>:
 80084f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80084f8:	4e3b      	ldr	r6, [pc, #236]	; (80085e8 <_strtoul_l.isra.0+0xf4>)
 80084fa:	4686      	mov	lr, r0
 80084fc:	468c      	mov	ip, r1
 80084fe:	4660      	mov	r0, ip
 8008500:	f81c 4b01 	ldrb.w	r4, [ip], #1
 8008504:	5da5      	ldrb	r5, [r4, r6]
 8008506:	f015 0508 	ands.w	r5, r5, #8
 800850a:	d1f8      	bne.n	80084fe <_strtoul_l.isra.0+0xa>
 800850c:	2c2d      	cmp	r4, #45	; 0x2d
 800850e:	d134      	bne.n	800857a <_strtoul_l.isra.0+0x86>
 8008510:	f89c 4000 	ldrb.w	r4, [ip]
 8008514:	f04f 0801 	mov.w	r8, #1
 8008518:	f100 0c02 	add.w	ip, r0, #2
 800851c:	2b00      	cmp	r3, #0
 800851e:	d05e      	beq.n	80085de <_strtoul_l.isra.0+0xea>
 8008520:	2b10      	cmp	r3, #16
 8008522:	d10c      	bne.n	800853e <_strtoul_l.isra.0+0x4a>
 8008524:	2c30      	cmp	r4, #48	; 0x30
 8008526:	d10a      	bne.n	800853e <_strtoul_l.isra.0+0x4a>
 8008528:	f89c 0000 	ldrb.w	r0, [ip]
 800852c:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 8008530:	2858      	cmp	r0, #88	; 0x58
 8008532:	d14f      	bne.n	80085d4 <_strtoul_l.isra.0+0xe0>
 8008534:	f89c 4001 	ldrb.w	r4, [ip, #1]
 8008538:	2310      	movs	r3, #16
 800853a:	f10c 0c02 	add.w	ip, ip, #2
 800853e:	f04f 37ff 	mov.w	r7, #4294967295
 8008542:	2500      	movs	r5, #0
 8008544:	fbb7 f7f3 	udiv	r7, r7, r3
 8008548:	fb03 f907 	mul.w	r9, r3, r7
 800854c:	ea6f 0909 	mvn.w	r9, r9
 8008550:	4628      	mov	r0, r5
 8008552:	f1a4 0630 	sub.w	r6, r4, #48	; 0x30
 8008556:	2e09      	cmp	r6, #9
 8008558:	d818      	bhi.n	800858c <_strtoul_l.isra.0+0x98>
 800855a:	4634      	mov	r4, r6
 800855c:	42a3      	cmp	r3, r4
 800855e:	dd24      	ble.n	80085aa <_strtoul_l.isra.0+0xb6>
 8008560:	2d00      	cmp	r5, #0
 8008562:	db1f      	blt.n	80085a4 <_strtoul_l.isra.0+0xb0>
 8008564:	4287      	cmp	r7, r0
 8008566:	d31d      	bcc.n	80085a4 <_strtoul_l.isra.0+0xb0>
 8008568:	d101      	bne.n	800856e <_strtoul_l.isra.0+0x7a>
 800856a:	45a1      	cmp	r9, r4
 800856c:	db1a      	blt.n	80085a4 <_strtoul_l.isra.0+0xb0>
 800856e:	fb00 4003 	mla	r0, r0, r3, r4
 8008572:	2501      	movs	r5, #1
 8008574:	f81c 4b01 	ldrb.w	r4, [ip], #1
 8008578:	e7eb      	b.n	8008552 <_strtoul_l.isra.0+0x5e>
 800857a:	2c2b      	cmp	r4, #43	; 0x2b
 800857c:	bf08      	it	eq
 800857e:	f89c 4000 	ldrbeq.w	r4, [ip]
 8008582:	46a8      	mov	r8, r5
 8008584:	bf08      	it	eq
 8008586:	f100 0c02 	addeq.w	ip, r0, #2
 800858a:	e7c7      	b.n	800851c <_strtoul_l.isra.0+0x28>
 800858c:	f1a4 0641 	sub.w	r6, r4, #65	; 0x41
 8008590:	2e19      	cmp	r6, #25
 8008592:	d801      	bhi.n	8008598 <_strtoul_l.isra.0+0xa4>
 8008594:	3c37      	subs	r4, #55	; 0x37
 8008596:	e7e1      	b.n	800855c <_strtoul_l.isra.0+0x68>
 8008598:	f1a4 0661 	sub.w	r6, r4, #97	; 0x61
 800859c:	2e19      	cmp	r6, #25
 800859e:	d804      	bhi.n	80085aa <_strtoul_l.isra.0+0xb6>
 80085a0:	3c57      	subs	r4, #87	; 0x57
 80085a2:	e7db      	b.n	800855c <_strtoul_l.isra.0+0x68>
 80085a4:	f04f 35ff 	mov.w	r5, #4294967295
 80085a8:	e7e4      	b.n	8008574 <_strtoul_l.isra.0+0x80>
 80085aa:	2d00      	cmp	r5, #0
 80085ac:	da07      	bge.n	80085be <_strtoul_l.isra.0+0xca>
 80085ae:	2322      	movs	r3, #34	; 0x22
 80085b0:	f8ce 3000 	str.w	r3, [lr]
 80085b4:	f04f 30ff 	mov.w	r0, #4294967295
 80085b8:	b942      	cbnz	r2, 80085cc <_strtoul_l.isra.0+0xd8>
 80085ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80085be:	f1b8 0f00 	cmp.w	r8, #0
 80085c2:	d000      	beq.n	80085c6 <_strtoul_l.isra.0+0xd2>
 80085c4:	4240      	negs	r0, r0
 80085c6:	2a00      	cmp	r2, #0
 80085c8:	d0f7      	beq.n	80085ba <_strtoul_l.isra.0+0xc6>
 80085ca:	b10d      	cbz	r5, 80085d0 <_strtoul_l.isra.0+0xdc>
 80085cc:	f10c 31ff 	add.w	r1, ip, #4294967295
 80085d0:	6011      	str	r1, [r2, #0]
 80085d2:	e7f2      	b.n	80085ba <_strtoul_l.isra.0+0xc6>
 80085d4:	2430      	movs	r4, #48	; 0x30
 80085d6:	2b00      	cmp	r3, #0
 80085d8:	d1b1      	bne.n	800853e <_strtoul_l.isra.0+0x4a>
 80085da:	2308      	movs	r3, #8
 80085dc:	e7af      	b.n	800853e <_strtoul_l.isra.0+0x4a>
 80085de:	2c30      	cmp	r4, #48	; 0x30
 80085e0:	d0a2      	beq.n	8008528 <_strtoul_l.isra.0+0x34>
 80085e2:	230a      	movs	r3, #10
 80085e4:	e7ab      	b.n	800853e <_strtoul_l.isra.0+0x4a>
 80085e6:	bf00      	nop
 80085e8:	0800a595 	.word	0x0800a595

080085ec <_strtoul_r>:
 80085ec:	f7ff bf82 	b.w	80084f4 <_strtoul_l.isra.0>

080085f0 <__submore>:
 80085f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80085f4:	460c      	mov	r4, r1
 80085f6:	6b49      	ldr	r1, [r1, #52]	; 0x34
 80085f8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80085fc:	4299      	cmp	r1, r3
 80085fe:	d11d      	bne.n	800863c <__submore+0x4c>
 8008600:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8008604:	f7fa ffc2 	bl	800358c <_malloc_r>
 8008608:	b918      	cbnz	r0, 8008612 <__submore+0x22>
 800860a:	f04f 30ff 	mov.w	r0, #4294967295
 800860e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008612:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8008616:	63a3      	str	r3, [r4, #56]	; 0x38
 8008618:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 800861c:	6360      	str	r0, [r4, #52]	; 0x34
 800861e:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
 8008622:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8008626:	f880 33fe 	strb.w	r3, [r0, #1022]	; 0x3fe
 800862a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800862e:	f880 33fd 	strb.w	r3, [r0, #1021]	; 0x3fd
 8008632:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
 8008636:	6020      	str	r0, [r4, #0]
 8008638:	2000      	movs	r0, #0
 800863a:	e7e8      	b.n	800860e <__submore+0x1e>
 800863c:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 800863e:	0077      	lsls	r7, r6, #1
 8008640:	463a      	mov	r2, r7
 8008642:	f000 f85f 	bl	8008704 <_realloc_r>
 8008646:	4605      	mov	r5, r0
 8008648:	2800      	cmp	r0, #0
 800864a:	d0de      	beq.n	800860a <__submore+0x1a>
 800864c:	eb00 0806 	add.w	r8, r0, r6
 8008650:	4601      	mov	r1, r0
 8008652:	4632      	mov	r2, r6
 8008654:	4640      	mov	r0, r8
 8008656:	f7fa ff27 	bl	80034a8 <memcpy>
 800865a:	e9c4 570d 	strd	r5, r7, [r4, #52]	; 0x34
 800865e:	f8c4 8000 	str.w	r8, [r4]
 8008662:	e7e9      	b.n	8008638 <__submore+0x48>

08008664 <__ascii_wctomb>:
 8008664:	4603      	mov	r3, r0
 8008666:	4608      	mov	r0, r1
 8008668:	b141      	cbz	r1, 800867c <__ascii_wctomb+0x18>
 800866a:	2aff      	cmp	r2, #255	; 0xff
 800866c:	d904      	bls.n	8008678 <__ascii_wctomb+0x14>
 800866e:	228a      	movs	r2, #138	; 0x8a
 8008670:	601a      	str	r2, [r3, #0]
 8008672:	f04f 30ff 	mov.w	r0, #4294967295
 8008676:	4770      	bx	lr
 8008678:	700a      	strb	r2, [r1, #0]
 800867a:	2001      	movs	r0, #1
 800867c:	4770      	bx	lr

0800867e <abort>:
 800867e:	b508      	push	{r3, lr}
 8008680:	2006      	movs	r0, #6
 8008682:	f000 f88d 	bl	80087a0 <raise>
 8008686:	2001      	movs	r0, #1
 8008688:	f7fa f8f1 	bl	800286e <_exit>

0800868c <_fstat_r>:
 800868c:	b538      	push	{r3, r4, r5, lr}
 800868e:	4d07      	ldr	r5, [pc, #28]	; (80086ac <_fstat_r+0x20>)
 8008690:	2300      	movs	r3, #0
 8008692:	4604      	mov	r4, r0
 8008694:	4608      	mov	r0, r1
 8008696:	4611      	mov	r1, r2
 8008698:	602b      	str	r3, [r5, #0]
 800869a:	f7fa f8fd 	bl	8002898 <_fstat>
 800869e:	1c43      	adds	r3, r0, #1
 80086a0:	d102      	bne.n	80086a8 <_fstat_r+0x1c>
 80086a2:	682b      	ldr	r3, [r5, #0]
 80086a4:	b103      	cbz	r3, 80086a8 <_fstat_r+0x1c>
 80086a6:	6023      	str	r3, [r4, #0]
 80086a8:	bd38      	pop	{r3, r4, r5, pc}
 80086aa:	bf00      	nop
 80086ac:	20000d5c 	.word	0x20000d5c

080086b0 <_isatty_r>:
 80086b0:	b538      	push	{r3, r4, r5, lr}
 80086b2:	4d06      	ldr	r5, [pc, #24]	; (80086cc <_isatty_r+0x1c>)
 80086b4:	2300      	movs	r3, #0
 80086b6:	4604      	mov	r4, r0
 80086b8:	4608      	mov	r0, r1
 80086ba:	602b      	str	r3, [r5, #0]
 80086bc:	f7fa f8fb 	bl	80028b6 <_isatty>
 80086c0:	1c43      	adds	r3, r0, #1
 80086c2:	d102      	bne.n	80086ca <_isatty_r+0x1a>
 80086c4:	682b      	ldr	r3, [r5, #0]
 80086c6:	b103      	cbz	r3, 80086ca <_isatty_r+0x1a>
 80086c8:	6023      	str	r3, [r4, #0]
 80086ca:	bd38      	pop	{r3, r4, r5, pc}
 80086cc:	20000d5c 	.word	0x20000d5c

080086d0 <memmove>:
 80086d0:	4288      	cmp	r0, r1
 80086d2:	b510      	push	{r4, lr}
 80086d4:	eb01 0402 	add.w	r4, r1, r2
 80086d8:	d902      	bls.n	80086e0 <memmove+0x10>
 80086da:	4284      	cmp	r4, r0
 80086dc:	4623      	mov	r3, r4
 80086de:	d807      	bhi.n	80086f0 <memmove+0x20>
 80086e0:	1e43      	subs	r3, r0, #1
 80086e2:	42a1      	cmp	r1, r4
 80086e4:	d008      	beq.n	80086f8 <memmove+0x28>
 80086e6:	f811 2b01 	ldrb.w	r2, [r1], #1
 80086ea:	f803 2f01 	strb.w	r2, [r3, #1]!
 80086ee:	e7f8      	b.n	80086e2 <memmove+0x12>
 80086f0:	4402      	add	r2, r0
 80086f2:	4601      	mov	r1, r0
 80086f4:	428a      	cmp	r2, r1
 80086f6:	d100      	bne.n	80086fa <memmove+0x2a>
 80086f8:	bd10      	pop	{r4, pc}
 80086fa:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80086fe:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8008702:	e7f7      	b.n	80086f4 <memmove+0x24>

08008704 <_realloc_r>:
 8008704:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008706:	4607      	mov	r7, r0
 8008708:	4614      	mov	r4, r2
 800870a:	460e      	mov	r6, r1
 800870c:	b921      	cbnz	r1, 8008718 <_realloc_r+0x14>
 800870e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8008712:	4611      	mov	r1, r2
 8008714:	f7fa bf3a 	b.w	800358c <_malloc_r>
 8008718:	b922      	cbnz	r2, 8008724 <_realloc_r+0x20>
 800871a:	f7fa fee9 	bl	80034f0 <_free_r>
 800871e:	4625      	mov	r5, r4
 8008720:	4628      	mov	r0, r5
 8008722:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008724:	f000 f858 	bl	80087d8 <_malloc_usable_size_r>
 8008728:	42a0      	cmp	r0, r4
 800872a:	d20f      	bcs.n	800874c <_realloc_r+0x48>
 800872c:	4621      	mov	r1, r4
 800872e:	4638      	mov	r0, r7
 8008730:	f7fa ff2c 	bl	800358c <_malloc_r>
 8008734:	4605      	mov	r5, r0
 8008736:	2800      	cmp	r0, #0
 8008738:	d0f2      	beq.n	8008720 <_realloc_r+0x1c>
 800873a:	4631      	mov	r1, r6
 800873c:	4622      	mov	r2, r4
 800873e:	f7fa feb3 	bl	80034a8 <memcpy>
 8008742:	4631      	mov	r1, r6
 8008744:	4638      	mov	r0, r7
 8008746:	f7fa fed3 	bl	80034f0 <_free_r>
 800874a:	e7e9      	b.n	8008720 <_realloc_r+0x1c>
 800874c:	4635      	mov	r5, r6
 800874e:	e7e7      	b.n	8008720 <_realloc_r+0x1c>

08008750 <_raise_r>:
 8008750:	291f      	cmp	r1, #31
 8008752:	b538      	push	{r3, r4, r5, lr}
 8008754:	4604      	mov	r4, r0
 8008756:	460d      	mov	r5, r1
 8008758:	d904      	bls.n	8008764 <_raise_r+0x14>
 800875a:	2316      	movs	r3, #22
 800875c:	6003      	str	r3, [r0, #0]
 800875e:	f04f 30ff 	mov.w	r0, #4294967295
 8008762:	bd38      	pop	{r3, r4, r5, pc}
 8008764:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8008766:	b112      	cbz	r2, 800876e <_raise_r+0x1e>
 8008768:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800876c:	b94b      	cbnz	r3, 8008782 <_raise_r+0x32>
 800876e:	4620      	mov	r0, r4
 8008770:	f000 f830 	bl	80087d4 <_getpid_r>
 8008774:	462a      	mov	r2, r5
 8008776:	4601      	mov	r1, r0
 8008778:	4620      	mov	r0, r4
 800877a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800877e:	f000 b817 	b.w	80087b0 <_kill_r>
 8008782:	2b01      	cmp	r3, #1
 8008784:	d00a      	beq.n	800879c <_raise_r+0x4c>
 8008786:	1c59      	adds	r1, r3, #1
 8008788:	d103      	bne.n	8008792 <_raise_r+0x42>
 800878a:	2316      	movs	r3, #22
 800878c:	6003      	str	r3, [r0, #0]
 800878e:	2001      	movs	r0, #1
 8008790:	e7e7      	b.n	8008762 <_raise_r+0x12>
 8008792:	2400      	movs	r4, #0
 8008794:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8008798:	4628      	mov	r0, r5
 800879a:	4798      	blx	r3
 800879c:	2000      	movs	r0, #0
 800879e:	e7e0      	b.n	8008762 <_raise_r+0x12>

080087a0 <raise>:
 80087a0:	4b02      	ldr	r3, [pc, #8]	; (80087ac <raise+0xc>)
 80087a2:	4601      	mov	r1, r0
 80087a4:	6818      	ldr	r0, [r3, #0]
 80087a6:	f7ff bfd3 	b.w	8008750 <_raise_r>
 80087aa:	bf00      	nop
 80087ac:	20000b10 	.word	0x20000b10

080087b0 <_kill_r>:
 80087b0:	b538      	push	{r3, r4, r5, lr}
 80087b2:	4d07      	ldr	r5, [pc, #28]	; (80087d0 <_kill_r+0x20>)
 80087b4:	2300      	movs	r3, #0
 80087b6:	4604      	mov	r4, r0
 80087b8:	4608      	mov	r0, r1
 80087ba:	4611      	mov	r1, r2
 80087bc:	602b      	str	r3, [r5, #0]
 80087be:	f7fa f846 	bl	800284e <_kill>
 80087c2:	1c43      	adds	r3, r0, #1
 80087c4:	d102      	bne.n	80087cc <_kill_r+0x1c>
 80087c6:	682b      	ldr	r3, [r5, #0]
 80087c8:	b103      	cbz	r3, 80087cc <_kill_r+0x1c>
 80087ca:	6023      	str	r3, [r4, #0]
 80087cc:	bd38      	pop	{r3, r4, r5, pc}
 80087ce:	bf00      	nop
 80087d0:	20000d5c 	.word	0x20000d5c

080087d4 <_getpid_r>:
 80087d4:	f7fa b834 	b.w	8002840 <_getpid>

080087d8 <_malloc_usable_size_r>:
 80087d8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80087dc:	1f18      	subs	r0, r3, #4
 80087de:	2b00      	cmp	r3, #0
 80087e0:	bfbc      	itt	lt
 80087e2:	580b      	ldrlt	r3, [r1, r0]
 80087e4:	18c0      	addlt	r0, r0, r3
 80087e6:	4770      	bx	lr

080087e8 <atanf>:
 80087e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80087ec:	f020 4500 	bic.w	r5, r0, #2147483648	; 0x80000000
 80087f0:	f1b5 4fa1 	cmp.w	r5, #1350565888	; 0x50800000
 80087f4:	4604      	mov	r4, r0
 80087f6:	4680      	mov	r8, r0
 80087f8:	db0e      	blt.n	8008818 <atanf+0x30>
 80087fa:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 80087fe:	dd04      	ble.n	800880a <atanf+0x22>
 8008800:	4601      	mov	r1, r0
 8008802:	f7f8 fa71 	bl	8000ce8 <__addsf3>
 8008806:	4604      	mov	r4, r0
 8008808:	e003      	b.n	8008812 <atanf+0x2a>
 800880a:	2800      	cmp	r0, #0
 800880c:	f300 80ce 	bgt.w	80089ac <atanf+0x1c4>
 8008810:	4c67      	ldr	r4, [pc, #412]	; (80089b0 <atanf+0x1c8>)
 8008812:	4620      	mov	r0, r4
 8008814:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008818:	4b66      	ldr	r3, [pc, #408]	; (80089b4 <atanf+0x1cc>)
 800881a:	429d      	cmp	r5, r3
 800881c:	dc0e      	bgt.n	800883c <atanf+0x54>
 800881e:	f1b5 5f44 	cmp.w	r5, #822083584	; 0x31000000
 8008822:	da08      	bge.n	8008836 <atanf+0x4e>
 8008824:	4964      	ldr	r1, [pc, #400]	; (80089b8 <atanf+0x1d0>)
 8008826:	f7f8 fa5f 	bl	8000ce8 <__addsf3>
 800882a:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 800882e:	f7f8 fd1f 	bl	8001270 <__aeabi_fcmpgt>
 8008832:	2800      	cmp	r0, #0
 8008834:	d1ed      	bne.n	8008812 <atanf+0x2a>
 8008836:	f04f 36ff 	mov.w	r6, #4294967295
 800883a:	e01c      	b.n	8008876 <atanf+0x8e>
 800883c:	f000 f914 	bl	8008a68 <fabsf>
 8008840:	4b5e      	ldr	r3, [pc, #376]	; (80089bc <atanf+0x1d4>)
 8008842:	429d      	cmp	r5, r3
 8008844:	4604      	mov	r4, r0
 8008846:	dc7c      	bgt.n	8008942 <atanf+0x15a>
 8008848:	f5a3 03d0 	sub.w	r3, r3, #6815744	; 0x680000
 800884c:	429d      	cmp	r5, r3
 800884e:	dc67      	bgt.n	8008920 <atanf+0x138>
 8008850:	4601      	mov	r1, r0
 8008852:	f7f8 fa49 	bl	8000ce8 <__addsf3>
 8008856:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 800885a:	f7f8 fa43 	bl	8000ce4 <__aeabi_fsub>
 800885e:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 8008862:	4605      	mov	r5, r0
 8008864:	4620      	mov	r0, r4
 8008866:	f7f8 fa3f 	bl	8000ce8 <__addsf3>
 800886a:	4601      	mov	r1, r0
 800886c:	4628      	mov	r0, r5
 800886e:	f7f8 fbf7 	bl	8001060 <__aeabi_fdiv>
 8008872:	2600      	movs	r6, #0
 8008874:	4604      	mov	r4, r0
 8008876:	4621      	mov	r1, r4
 8008878:	4620      	mov	r0, r4
 800887a:	f7f8 fb3d 	bl	8000ef8 <__aeabi_fmul>
 800887e:	4601      	mov	r1, r0
 8008880:	4607      	mov	r7, r0
 8008882:	f7f8 fb39 	bl	8000ef8 <__aeabi_fmul>
 8008886:	494e      	ldr	r1, [pc, #312]	; (80089c0 <atanf+0x1d8>)
 8008888:	4605      	mov	r5, r0
 800888a:	f7f8 fb35 	bl	8000ef8 <__aeabi_fmul>
 800888e:	494d      	ldr	r1, [pc, #308]	; (80089c4 <atanf+0x1dc>)
 8008890:	f7f8 fa2a 	bl	8000ce8 <__addsf3>
 8008894:	4629      	mov	r1, r5
 8008896:	f7f8 fb2f 	bl	8000ef8 <__aeabi_fmul>
 800889a:	494b      	ldr	r1, [pc, #300]	; (80089c8 <atanf+0x1e0>)
 800889c:	f7f8 fa24 	bl	8000ce8 <__addsf3>
 80088a0:	4629      	mov	r1, r5
 80088a2:	f7f8 fb29 	bl	8000ef8 <__aeabi_fmul>
 80088a6:	4949      	ldr	r1, [pc, #292]	; (80089cc <atanf+0x1e4>)
 80088a8:	f7f8 fa1e 	bl	8000ce8 <__addsf3>
 80088ac:	4629      	mov	r1, r5
 80088ae:	f7f8 fb23 	bl	8000ef8 <__aeabi_fmul>
 80088b2:	4947      	ldr	r1, [pc, #284]	; (80089d0 <atanf+0x1e8>)
 80088b4:	f7f8 fa18 	bl	8000ce8 <__addsf3>
 80088b8:	4629      	mov	r1, r5
 80088ba:	f7f8 fb1d 	bl	8000ef8 <__aeabi_fmul>
 80088be:	4945      	ldr	r1, [pc, #276]	; (80089d4 <atanf+0x1ec>)
 80088c0:	f7f8 fa12 	bl	8000ce8 <__addsf3>
 80088c4:	4639      	mov	r1, r7
 80088c6:	f7f8 fb17 	bl	8000ef8 <__aeabi_fmul>
 80088ca:	4943      	ldr	r1, [pc, #268]	; (80089d8 <atanf+0x1f0>)
 80088cc:	4607      	mov	r7, r0
 80088ce:	4628      	mov	r0, r5
 80088d0:	f7f8 fb12 	bl	8000ef8 <__aeabi_fmul>
 80088d4:	4941      	ldr	r1, [pc, #260]	; (80089dc <atanf+0x1f4>)
 80088d6:	f7f8 fa05 	bl	8000ce4 <__aeabi_fsub>
 80088da:	4629      	mov	r1, r5
 80088dc:	f7f8 fb0c 	bl	8000ef8 <__aeabi_fmul>
 80088e0:	493f      	ldr	r1, [pc, #252]	; (80089e0 <atanf+0x1f8>)
 80088e2:	f7f8 f9ff 	bl	8000ce4 <__aeabi_fsub>
 80088e6:	4629      	mov	r1, r5
 80088e8:	f7f8 fb06 	bl	8000ef8 <__aeabi_fmul>
 80088ec:	493d      	ldr	r1, [pc, #244]	; (80089e4 <atanf+0x1fc>)
 80088ee:	f7f8 f9f9 	bl	8000ce4 <__aeabi_fsub>
 80088f2:	4629      	mov	r1, r5
 80088f4:	f7f8 fb00 	bl	8000ef8 <__aeabi_fmul>
 80088f8:	493b      	ldr	r1, [pc, #236]	; (80089e8 <atanf+0x200>)
 80088fa:	f7f8 f9f3 	bl	8000ce4 <__aeabi_fsub>
 80088fe:	4629      	mov	r1, r5
 8008900:	f7f8 fafa 	bl	8000ef8 <__aeabi_fmul>
 8008904:	4601      	mov	r1, r0
 8008906:	4638      	mov	r0, r7
 8008908:	f7f8 f9ee 	bl	8000ce8 <__addsf3>
 800890c:	4621      	mov	r1, r4
 800890e:	f7f8 faf3 	bl	8000ef8 <__aeabi_fmul>
 8008912:	1c73      	adds	r3, r6, #1
 8008914:	4601      	mov	r1, r0
 8008916:	d133      	bne.n	8008980 <atanf+0x198>
 8008918:	4620      	mov	r0, r4
 800891a:	f7f8 f9e3 	bl	8000ce4 <__aeabi_fsub>
 800891e:	e772      	b.n	8008806 <atanf+0x1e>
 8008920:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 8008924:	f7f8 f9de 	bl	8000ce4 <__aeabi_fsub>
 8008928:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 800892c:	4605      	mov	r5, r0
 800892e:	4620      	mov	r0, r4
 8008930:	f7f8 f9da 	bl	8000ce8 <__addsf3>
 8008934:	4601      	mov	r1, r0
 8008936:	4628      	mov	r0, r5
 8008938:	f7f8 fb92 	bl	8001060 <__aeabi_fdiv>
 800893c:	2601      	movs	r6, #1
 800893e:	4604      	mov	r4, r0
 8008940:	e799      	b.n	8008876 <atanf+0x8e>
 8008942:	4b2a      	ldr	r3, [pc, #168]	; (80089ec <atanf+0x204>)
 8008944:	429d      	cmp	r5, r3
 8008946:	dc14      	bgt.n	8008972 <atanf+0x18a>
 8008948:	f04f 517f 	mov.w	r1, #1069547520	; 0x3fc00000
 800894c:	f7f8 f9ca 	bl	8000ce4 <__aeabi_fsub>
 8008950:	f04f 517f 	mov.w	r1, #1069547520	; 0x3fc00000
 8008954:	4605      	mov	r5, r0
 8008956:	4620      	mov	r0, r4
 8008958:	f7f8 face 	bl	8000ef8 <__aeabi_fmul>
 800895c:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 8008960:	f7f8 f9c2 	bl	8000ce8 <__addsf3>
 8008964:	4601      	mov	r1, r0
 8008966:	4628      	mov	r0, r5
 8008968:	f7f8 fb7a 	bl	8001060 <__aeabi_fdiv>
 800896c:	2602      	movs	r6, #2
 800896e:	4604      	mov	r4, r0
 8008970:	e781      	b.n	8008876 <atanf+0x8e>
 8008972:	4601      	mov	r1, r0
 8008974:	481e      	ldr	r0, [pc, #120]	; (80089f0 <atanf+0x208>)
 8008976:	f7f8 fb73 	bl	8001060 <__aeabi_fdiv>
 800897a:	2603      	movs	r6, #3
 800897c:	4604      	mov	r4, r0
 800897e:	e77a      	b.n	8008876 <atanf+0x8e>
 8008980:	4b1c      	ldr	r3, [pc, #112]	; (80089f4 <atanf+0x20c>)
 8008982:	f853 1026 	ldr.w	r1, [r3, r6, lsl #2]
 8008986:	f7f8 f9ad 	bl	8000ce4 <__aeabi_fsub>
 800898a:	4621      	mov	r1, r4
 800898c:	f7f8 f9aa 	bl	8000ce4 <__aeabi_fsub>
 8008990:	4b19      	ldr	r3, [pc, #100]	; (80089f8 <atanf+0x210>)
 8008992:	4601      	mov	r1, r0
 8008994:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 8008998:	f7f8 f9a4 	bl	8000ce4 <__aeabi_fsub>
 800899c:	f1b8 0f00 	cmp.w	r8, #0
 80089a0:	4604      	mov	r4, r0
 80089a2:	f6bf af36 	bge.w	8008812 <atanf+0x2a>
 80089a6:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 80089aa:	e72c      	b.n	8008806 <atanf+0x1e>
 80089ac:	4c13      	ldr	r4, [pc, #76]	; (80089fc <atanf+0x214>)
 80089ae:	e730      	b.n	8008812 <atanf+0x2a>
 80089b0:	bfc90fdb 	.word	0xbfc90fdb
 80089b4:	3edfffff 	.word	0x3edfffff
 80089b8:	7149f2ca 	.word	0x7149f2ca
 80089bc:	3f97ffff 	.word	0x3f97ffff
 80089c0:	3c8569d7 	.word	0x3c8569d7
 80089c4:	3d4bda59 	.word	0x3d4bda59
 80089c8:	3d886b35 	.word	0x3d886b35
 80089cc:	3dba2e6e 	.word	0x3dba2e6e
 80089d0:	3e124925 	.word	0x3e124925
 80089d4:	3eaaaaab 	.word	0x3eaaaaab
 80089d8:	bd15a221 	.word	0xbd15a221
 80089dc:	3d6ef16b 	.word	0x3d6ef16b
 80089e0:	3d9d8795 	.word	0x3d9d8795
 80089e4:	3de38e38 	.word	0x3de38e38
 80089e8:	3e4ccccd 	.word	0x3e4ccccd
 80089ec:	401bffff 	.word	0x401bffff
 80089f0:	bf800000 	.word	0xbf800000
 80089f4:	0800a928 	.word	0x0800a928
 80089f8:	0800a918 	.word	0x0800a918
 80089fc:	3fc90fdb 	.word	0x3fc90fdb

08008a00 <cosf>:
 8008a00:	b507      	push	{r0, r1, r2, lr}
 8008a02:	4a18      	ldr	r2, [pc, #96]	; (8008a64 <cosf+0x64>)
 8008a04:	f020 4300 	bic.w	r3, r0, #2147483648	; 0x80000000
 8008a08:	4293      	cmp	r3, r2
 8008a0a:	4601      	mov	r1, r0
 8008a0c:	dc03      	bgt.n	8008a16 <cosf+0x16>
 8008a0e:	2100      	movs	r1, #0
 8008a10:	f000 fb9e 	bl	8009150 <__kernel_cosf>
 8008a14:	e004      	b.n	8008a20 <cosf+0x20>
 8008a16:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8008a1a:	db04      	blt.n	8008a26 <cosf+0x26>
 8008a1c:	f7f8 f962 	bl	8000ce4 <__aeabi_fsub>
 8008a20:	b003      	add	sp, #12
 8008a22:	f85d fb04 	ldr.w	pc, [sp], #4
 8008a26:	4669      	mov	r1, sp
 8008a28:	f000 f9e4 	bl	8008df4 <__ieee754_rem_pio2f>
 8008a2c:	f000 0203 	and.w	r2, r0, #3
 8008a30:	2a01      	cmp	r2, #1
 8008a32:	d005      	beq.n	8008a40 <cosf+0x40>
 8008a34:	2a02      	cmp	r2, #2
 8008a36:	d00a      	beq.n	8008a4e <cosf+0x4e>
 8008a38:	b972      	cbnz	r2, 8008a58 <cosf+0x58>
 8008a3a:	9901      	ldr	r1, [sp, #4]
 8008a3c:	9800      	ldr	r0, [sp, #0]
 8008a3e:	e7e7      	b.n	8008a10 <cosf+0x10>
 8008a40:	9901      	ldr	r1, [sp, #4]
 8008a42:	9800      	ldr	r0, [sp, #0]
 8008a44:	f000 feba 	bl	80097bc <__kernel_sinf>
 8008a48:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 8008a4c:	e7e8      	b.n	8008a20 <cosf+0x20>
 8008a4e:	9901      	ldr	r1, [sp, #4]
 8008a50:	9800      	ldr	r0, [sp, #0]
 8008a52:	f000 fb7d 	bl	8009150 <__kernel_cosf>
 8008a56:	e7f7      	b.n	8008a48 <cosf+0x48>
 8008a58:	9901      	ldr	r1, [sp, #4]
 8008a5a:	9800      	ldr	r0, [sp, #0]
 8008a5c:	2201      	movs	r2, #1
 8008a5e:	f000 fead 	bl	80097bc <__kernel_sinf>
 8008a62:	e7dd      	b.n	8008a20 <cosf+0x20>
 8008a64:	3f490fd8 	.word	0x3f490fd8

08008a68 <fabsf>:
 8008a68:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 8008a6c:	4770      	bx	lr
	...

08008a70 <sinf>:
 8008a70:	b507      	push	{r0, r1, r2, lr}
 8008a72:	4a19      	ldr	r2, [pc, #100]	; (8008ad8 <sinf+0x68>)
 8008a74:	f020 4300 	bic.w	r3, r0, #2147483648	; 0x80000000
 8008a78:	4293      	cmp	r3, r2
 8008a7a:	4601      	mov	r1, r0
 8008a7c:	dc04      	bgt.n	8008a88 <sinf+0x18>
 8008a7e:	2200      	movs	r2, #0
 8008a80:	2100      	movs	r1, #0
 8008a82:	f000 fe9b 	bl	80097bc <__kernel_sinf>
 8008a86:	e004      	b.n	8008a92 <sinf+0x22>
 8008a88:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8008a8c:	db04      	blt.n	8008a98 <sinf+0x28>
 8008a8e:	f7f8 f929 	bl	8000ce4 <__aeabi_fsub>
 8008a92:	b003      	add	sp, #12
 8008a94:	f85d fb04 	ldr.w	pc, [sp], #4
 8008a98:	4669      	mov	r1, sp
 8008a9a:	f000 f9ab 	bl	8008df4 <__ieee754_rem_pio2f>
 8008a9e:	f000 0003 	and.w	r0, r0, #3
 8008aa2:	2801      	cmp	r0, #1
 8008aa4:	d006      	beq.n	8008ab4 <sinf+0x44>
 8008aa6:	2802      	cmp	r0, #2
 8008aa8:	d009      	beq.n	8008abe <sinf+0x4e>
 8008aaa:	b980      	cbnz	r0, 8008ace <sinf+0x5e>
 8008aac:	9901      	ldr	r1, [sp, #4]
 8008aae:	9800      	ldr	r0, [sp, #0]
 8008ab0:	2201      	movs	r2, #1
 8008ab2:	e7e6      	b.n	8008a82 <sinf+0x12>
 8008ab4:	9901      	ldr	r1, [sp, #4]
 8008ab6:	9800      	ldr	r0, [sp, #0]
 8008ab8:	f000 fb4a 	bl	8009150 <__kernel_cosf>
 8008abc:	e7e9      	b.n	8008a92 <sinf+0x22>
 8008abe:	9901      	ldr	r1, [sp, #4]
 8008ac0:	9800      	ldr	r0, [sp, #0]
 8008ac2:	2201      	movs	r2, #1
 8008ac4:	f000 fe7a 	bl	80097bc <__kernel_sinf>
 8008ac8:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 8008acc:	e7e1      	b.n	8008a92 <sinf+0x22>
 8008ace:	9901      	ldr	r1, [sp, #4]
 8008ad0:	9800      	ldr	r0, [sp, #0]
 8008ad2:	f000 fb3d 	bl	8009150 <__kernel_cosf>
 8008ad6:	e7f7      	b.n	8008ac8 <sinf+0x58>
 8008ad8:	3f490fd8 	.word	0x3f490fd8

08008adc <tanf>:
 8008adc:	b507      	push	{r0, r1, r2, lr}
 8008ade:	4a0f      	ldr	r2, [pc, #60]	; (8008b1c <tanf+0x40>)
 8008ae0:	f020 4300 	bic.w	r3, r0, #2147483648	; 0x80000000
 8008ae4:	4293      	cmp	r3, r2
 8008ae6:	4601      	mov	r1, r0
 8008ae8:	dc04      	bgt.n	8008af4 <tanf+0x18>
 8008aea:	2201      	movs	r2, #1
 8008aec:	2100      	movs	r1, #0
 8008aee:	f000 fedb 	bl	80098a8 <__kernel_tanf>
 8008af2:	e004      	b.n	8008afe <tanf+0x22>
 8008af4:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8008af8:	db04      	blt.n	8008b04 <tanf+0x28>
 8008afa:	f7f8 f8f3 	bl	8000ce4 <__aeabi_fsub>
 8008afe:	b003      	add	sp, #12
 8008b00:	f85d fb04 	ldr.w	pc, [sp], #4
 8008b04:	4669      	mov	r1, sp
 8008b06:	f000 f975 	bl	8008df4 <__ieee754_rem_pio2f>
 8008b0a:	0042      	lsls	r2, r0, #1
 8008b0c:	f002 0202 	and.w	r2, r2, #2
 8008b10:	9901      	ldr	r1, [sp, #4]
 8008b12:	9800      	ldr	r0, [sp, #0]
 8008b14:	f1c2 0201 	rsb	r2, r2, #1
 8008b18:	e7e9      	b.n	8008aee <tanf+0x12>
 8008b1a:	bf00      	nop
 8008b1c:	3f490fda 	.word	0x3f490fda

08008b20 <asinf>:
 8008b20:	b538      	push	{r3, r4, r5, lr}
 8008b22:	4604      	mov	r4, r0
 8008b24:	f000 f822 	bl	8008b6c <__ieee754_asinf>
 8008b28:	4b0e      	ldr	r3, [pc, #56]	; (8008b64 <asinf+0x44>)
 8008b2a:	f993 3000 	ldrsb.w	r3, [r3]
 8008b2e:	3301      	adds	r3, #1
 8008b30:	4605      	mov	r5, r0
 8008b32:	d015      	beq.n	8008b60 <asinf+0x40>
 8008b34:	4621      	mov	r1, r4
 8008b36:	4620      	mov	r0, r4
 8008b38:	f7f8 fba4 	bl	8001284 <__aeabi_fcmpun>
 8008b3c:	b980      	cbnz	r0, 8008b60 <asinf+0x40>
 8008b3e:	4620      	mov	r0, r4
 8008b40:	f7ff ff92 	bl	8008a68 <fabsf>
 8008b44:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 8008b48:	f7f8 fb92 	bl	8001270 <__aeabi_fcmpgt>
 8008b4c:	b140      	cbz	r0, 8008b60 <asinf+0x40>
 8008b4e:	f7fa fac3 	bl	80030d8 <__errno>
 8008b52:	2321      	movs	r3, #33	; 0x21
 8008b54:	6003      	str	r3, [r0, #0]
 8008b56:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8008b5a:	4803      	ldr	r0, [pc, #12]	; (8008b68 <asinf+0x48>)
 8008b5c:	f7fb bdd4 	b.w	8004708 <nanf>
 8008b60:	4628      	mov	r0, r5
 8008b62:	bd38      	pop	{r3, r4, r5, pc}
 8008b64:	20000ce4 	.word	0x20000ce4
 8008b68:	0800a593 	.word	0x0800a593

08008b6c <__ieee754_asinf>:
 8008b6c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008b70:	f020 4800 	bic.w	r8, r0, #2147483648	; 0x80000000
 8008b74:	f1b8 5f7e 	cmp.w	r8, #1065353216	; 0x3f800000
 8008b78:	4604      	mov	r4, r0
 8008b7a:	4605      	mov	r5, r0
 8008b7c:	d10c      	bne.n	8008b98 <__ieee754_asinf+0x2c>
 8008b7e:	498d      	ldr	r1, [pc, #564]	; (8008db4 <__ieee754_asinf+0x248>)
 8008b80:	f7f8 f9ba 	bl	8000ef8 <__aeabi_fmul>
 8008b84:	498c      	ldr	r1, [pc, #560]	; (8008db8 <__ieee754_asinf+0x24c>)
 8008b86:	4605      	mov	r5, r0
 8008b88:	4620      	mov	r0, r4
 8008b8a:	f7f8 f9b5 	bl	8000ef8 <__aeabi_fmul>
 8008b8e:	4601      	mov	r1, r0
 8008b90:	4628      	mov	r0, r5
 8008b92:	f7f8 f8a9 	bl	8000ce8 <__addsf3>
 8008b96:	e006      	b.n	8008ba6 <__ieee754_asinf+0x3a>
 8008b98:	dd07      	ble.n	8008baa <__ieee754_asinf+0x3e>
 8008b9a:	4601      	mov	r1, r0
 8008b9c:	f7f8 f8a2 	bl	8000ce4 <__aeabi_fsub>
 8008ba0:	4601      	mov	r1, r0
 8008ba2:	f7f8 fa5d 	bl	8001060 <__aeabi_fdiv>
 8008ba6:	4604      	mov	r4, r0
 8008ba8:	e00e      	b.n	8008bc8 <__ieee754_asinf+0x5c>
 8008baa:	f1b8 5f7c 	cmp.w	r8, #1056964608	; 0x3f000000
 8008bae:	da58      	bge.n	8008c62 <__ieee754_asinf+0xf6>
 8008bb0:	f1b8 5f48 	cmp.w	r8, #838860800	; 0x32000000
 8008bb4:	da0b      	bge.n	8008bce <__ieee754_asinf+0x62>
 8008bb6:	4981      	ldr	r1, [pc, #516]	; (8008dbc <__ieee754_asinf+0x250>)
 8008bb8:	f7f8 f896 	bl	8000ce8 <__addsf3>
 8008bbc:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 8008bc0:	f7f8 fb56 	bl	8001270 <__aeabi_fcmpgt>
 8008bc4:	2800      	cmp	r0, #0
 8008bc6:	d04c      	beq.n	8008c62 <__ieee754_asinf+0xf6>
 8008bc8:	4620      	mov	r0, r4
 8008bca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008bce:	4601      	mov	r1, r0
 8008bd0:	f7f8 f992 	bl	8000ef8 <__aeabi_fmul>
 8008bd4:	497a      	ldr	r1, [pc, #488]	; (8008dc0 <__ieee754_asinf+0x254>)
 8008bd6:	4605      	mov	r5, r0
 8008bd8:	f7f8 f98e 	bl	8000ef8 <__aeabi_fmul>
 8008bdc:	4979      	ldr	r1, [pc, #484]	; (8008dc4 <__ieee754_asinf+0x258>)
 8008bde:	f7f8 f883 	bl	8000ce8 <__addsf3>
 8008be2:	4629      	mov	r1, r5
 8008be4:	f7f8 f988 	bl	8000ef8 <__aeabi_fmul>
 8008be8:	4977      	ldr	r1, [pc, #476]	; (8008dc8 <__ieee754_asinf+0x25c>)
 8008bea:	f7f8 f87b 	bl	8000ce4 <__aeabi_fsub>
 8008bee:	4629      	mov	r1, r5
 8008bf0:	f7f8 f982 	bl	8000ef8 <__aeabi_fmul>
 8008bf4:	4975      	ldr	r1, [pc, #468]	; (8008dcc <__ieee754_asinf+0x260>)
 8008bf6:	f7f8 f877 	bl	8000ce8 <__addsf3>
 8008bfa:	4629      	mov	r1, r5
 8008bfc:	f7f8 f97c 	bl	8000ef8 <__aeabi_fmul>
 8008c00:	4973      	ldr	r1, [pc, #460]	; (8008dd0 <__ieee754_asinf+0x264>)
 8008c02:	f7f8 f86f 	bl	8000ce4 <__aeabi_fsub>
 8008c06:	4629      	mov	r1, r5
 8008c08:	f7f8 f976 	bl	8000ef8 <__aeabi_fmul>
 8008c0c:	4971      	ldr	r1, [pc, #452]	; (8008dd4 <__ieee754_asinf+0x268>)
 8008c0e:	f7f8 f86b 	bl	8000ce8 <__addsf3>
 8008c12:	4629      	mov	r1, r5
 8008c14:	f7f8 f970 	bl	8000ef8 <__aeabi_fmul>
 8008c18:	496f      	ldr	r1, [pc, #444]	; (8008dd8 <__ieee754_asinf+0x26c>)
 8008c1a:	4606      	mov	r6, r0
 8008c1c:	4628      	mov	r0, r5
 8008c1e:	f7f8 f96b 	bl	8000ef8 <__aeabi_fmul>
 8008c22:	496e      	ldr	r1, [pc, #440]	; (8008ddc <__ieee754_asinf+0x270>)
 8008c24:	f7f8 f85e 	bl	8000ce4 <__aeabi_fsub>
 8008c28:	4629      	mov	r1, r5
 8008c2a:	f7f8 f965 	bl	8000ef8 <__aeabi_fmul>
 8008c2e:	496c      	ldr	r1, [pc, #432]	; (8008de0 <__ieee754_asinf+0x274>)
 8008c30:	f7f8 f85a 	bl	8000ce8 <__addsf3>
 8008c34:	4629      	mov	r1, r5
 8008c36:	f7f8 f95f 	bl	8000ef8 <__aeabi_fmul>
 8008c3a:	496a      	ldr	r1, [pc, #424]	; (8008de4 <__ieee754_asinf+0x278>)
 8008c3c:	f7f8 f852 	bl	8000ce4 <__aeabi_fsub>
 8008c40:	4629      	mov	r1, r5
 8008c42:	f7f8 f959 	bl	8000ef8 <__aeabi_fmul>
 8008c46:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 8008c4a:	f7f8 f84d 	bl	8000ce8 <__addsf3>
 8008c4e:	4601      	mov	r1, r0
 8008c50:	4630      	mov	r0, r6
 8008c52:	f7f8 fa05 	bl	8001060 <__aeabi_fdiv>
 8008c56:	4621      	mov	r1, r4
 8008c58:	f7f8 f94e 	bl	8000ef8 <__aeabi_fmul>
 8008c5c:	4601      	mov	r1, r0
 8008c5e:	4620      	mov	r0, r4
 8008c60:	e797      	b.n	8008b92 <__ieee754_asinf+0x26>
 8008c62:	4620      	mov	r0, r4
 8008c64:	f7ff ff00 	bl	8008a68 <fabsf>
 8008c68:	4601      	mov	r1, r0
 8008c6a:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 8008c6e:	f7f8 f839 	bl	8000ce4 <__aeabi_fsub>
 8008c72:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
 8008c76:	f7f8 f93f 	bl	8000ef8 <__aeabi_fmul>
 8008c7a:	4951      	ldr	r1, [pc, #324]	; (8008dc0 <__ieee754_asinf+0x254>)
 8008c7c:	4606      	mov	r6, r0
 8008c7e:	f7f8 f93b 	bl	8000ef8 <__aeabi_fmul>
 8008c82:	4950      	ldr	r1, [pc, #320]	; (8008dc4 <__ieee754_asinf+0x258>)
 8008c84:	f7f8 f830 	bl	8000ce8 <__addsf3>
 8008c88:	4631      	mov	r1, r6
 8008c8a:	f7f8 f935 	bl	8000ef8 <__aeabi_fmul>
 8008c8e:	494e      	ldr	r1, [pc, #312]	; (8008dc8 <__ieee754_asinf+0x25c>)
 8008c90:	f7f8 f828 	bl	8000ce4 <__aeabi_fsub>
 8008c94:	4631      	mov	r1, r6
 8008c96:	f7f8 f92f 	bl	8000ef8 <__aeabi_fmul>
 8008c9a:	494c      	ldr	r1, [pc, #304]	; (8008dcc <__ieee754_asinf+0x260>)
 8008c9c:	f7f8 f824 	bl	8000ce8 <__addsf3>
 8008ca0:	4631      	mov	r1, r6
 8008ca2:	f7f8 f929 	bl	8000ef8 <__aeabi_fmul>
 8008ca6:	494a      	ldr	r1, [pc, #296]	; (8008dd0 <__ieee754_asinf+0x264>)
 8008ca8:	f7f8 f81c 	bl	8000ce4 <__aeabi_fsub>
 8008cac:	4631      	mov	r1, r6
 8008cae:	f7f8 f923 	bl	8000ef8 <__aeabi_fmul>
 8008cb2:	4948      	ldr	r1, [pc, #288]	; (8008dd4 <__ieee754_asinf+0x268>)
 8008cb4:	f7f8 f818 	bl	8000ce8 <__addsf3>
 8008cb8:	4631      	mov	r1, r6
 8008cba:	f7f8 f91d 	bl	8000ef8 <__aeabi_fmul>
 8008cbe:	4946      	ldr	r1, [pc, #280]	; (8008dd8 <__ieee754_asinf+0x26c>)
 8008cc0:	4681      	mov	r9, r0
 8008cc2:	4630      	mov	r0, r6
 8008cc4:	f7f8 f918 	bl	8000ef8 <__aeabi_fmul>
 8008cc8:	4944      	ldr	r1, [pc, #272]	; (8008ddc <__ieee754_asinf+0x270>)
 8008cca:	f7f8 f80b 	bl	8000ce4 <__aeabi_fsub>
 8008cce:	4631      	mov	r1, r6
 8008cd0:	f7f8 f912 	bl	8000ef8 <__aeabi_fmul>
 8008cd4:	4942      	ldr	r1, [pc, #264]	; (8008de0 <__ieee754_asinf+0x274>)
 8008cd6:	f7f8 f807 	bl	8000ce8 <__addsf3>
 8008cda:	4631      	mov	r1, r6
 8008cdc:	f7f8 f90c 	bl	8000ef8 <__aeabi_fmul>
 8008ce0:	4940      	ldr	r1, [pc, #256]	; (8008de4 <__ieee754_asinf+0x278>)
 8008ce2:	f7f7 ffff 	bl	8000ce4 <__aeabi_fsub>
 8008ce6:	4631      	mov	r1, r6
 8008ce8:	f7f8 f906 	bl	8000ef8 <__aeabi_fmul>
 8008cec:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 8008cf0:	f7f7 fffa 	bl	8000ce8 <__addsf3>
 8008cf4:	4682      	mov	sl, r0
 8008cf6:	4630      	mov	r0, r6
 8008cf8:	f000 f9da 	bl	80090b0 <__ieee754_sqrtf>
 8008cfc:	4b3a      	ldr	r3, [pc, #232]	; (8008de8 <__ieee754_asinf+0x27c>)
 8008cfe:	4598      	cmp	r8, r3
 8008d00:	4607      	mov	r7, r0
 8008d02:	dd1a      	ble.n	8008d3a <__ieee754_asinf+0x1ce>
 8008d04:	4651      	mov	r1, sl
 8008d06:	4648      	mov	r0, r9
 8008d08:	f7f8 f9aa 	bl	8001060 <__aeabi_fdiv>
 8008d0c:	4639      	mov	r1, r7
 8008d0e:	f7f8 f8f3 	bl	8000ef8 <__aeabi_fmul>
 8008d12:	4639      	mov	r1, r7
 8008d14:	f7f7 ffe8 	bl	8000ce8 <__addsf3>
 8008d18:	4601      	mov	r1, r0
 8008d1a:	f7f7 ffe5 	bl	8000ce8 <__addsf3>
 8008d1e:	4933      	ldr	r1, [pc, #204]	; (8008dec <__ieee754_asinf+0x280>)
 8008d20:	f7f7 ffe2 	bl	8000ce8 <__addsf3>
 8008d24:	4601      	mov	r1, r0
 8008d26:	4823      	ldr	r0, [pc, #140]	; (8008db4 <__ieee754_asinf+0x248>)
 8008d28:	f7f7 ffdc 	bl	8000ce4 <__aeabi_fsub>
 8008d2c:	2d00      	cmp	r5, #0
 8008d2e:	4604      	mov	r4, r0
 8008d30:	f73f af4a 	bgt.w	8008bc8 <__ieee754_asinf+0x5c>
 8008d34:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 8008d38:	e735      	b.n	8008ba6 <__ieee754_asinf+0x3a>
 8008d3a:	4601      	mov	r1, r0
 8008d3c:	f420 687f 	bic.w	r8, r0, #4080	; 0xff0
 8008d40:	f7f7 ffd2 	bl	8000ce8 <__addsf3>
 8008d44:	4651      	mov	r1, sl
 8008d46:	4604      	mov	r4, r0
 8008d48:	4648      	mov	r0, r9
 8008d4a:	f7f8 f989 	bl	8001060 <__aeabi_fdiv>
 8008d4e:	4601      	mov	r1, r0
 8008d50:	4620      	mov	r0, r4
 8008d52:	f7f8 f8d1 	bl	8000ef8 <__aeabi_fmul>
 8008d56:	f028 080f 	bic.w	r8, r8, #15
 8008d5a:	4681      	mov	r9, r0
 8008d5c:	4641      	mov	r1, r8
 8008d5e:	4640      	mov	r0, r8
 8008d60:	f7f8 f8ca 	bl	8000ef8 <__aeabi_fmul>
 8008d64:	4601      	mov	r1, r0
 8008d66:	4630      	mov	r0, r6
 8008d68:	f7f7 ffbc 	bl	8000ce4 <__aeabi_fsub>
 8008d6c:	4641      	mov	r1, r8
 8008d6e:	4604      	mov	r4, r0
 8008d70:	4638      	mov	r0, r7
 8008d72:	f7f7 ffb9 	bl	8000ce8 <__addsf3>
 8008d76:	4601      	mov	r1, r0
 8008d78:	4620      	mov	r0, r4
 8008d7a:	f7f8 f971 	bl	8001060 <__aeabi_fdiv>
 8008d7e:	4601      	mov	r1, r0
 8008d80:	f7f7 ffb2 	bl	8000ce8 <__addsf3>
 8008d84:	4601      	mov	r1, r0
 8008d86:	480c      	ldr	r0, [pc, #48]	; (8008db8 <__ieee754_asinf+0x24c>)
 8008d88:	f7f7 ffac 	bl	8000ce4 <__aeabi_fsub>
 8008d8c:	4601      	mov	r1, r0
 8008d8e:	4648      	mov	r0, r9
 8008d90:	f7f7 ffa8 	bl	8000ce4 <__aeabi_fsub>
 8008d94:	4641      	mov	r1, r8
 8008d96:	4604      	mov	r4, r0
 8008d98:	4640      	mov	r0, r8
 8008d9a:	f7f7 ffa5 	bl	8000ce8 <__addsf3>
 8008d9e:	4601      	mov	r1, r0
 8008da0:	4813      	ldr	r0, [pc, #76]	; (8008df0 <__ieee754_asinf+0x284>)
 8008da2:	f7f7 ff9f 	bl	8000ce4 <__aeabi_fsub>
 8008da6:	4601      	mov	r1, r0
 8008da8:	4620      	mov	r0, r4
 8008daa:	f7f7 ff9b 	bl	8000ce4 <__aeabi_fsub>
 8008dae:	4601      	mov	r1, r0
 8008db0:	480f      	ldr	r0, [pc, #60]	; (8008df0 <__ieee754_asinf+0x284>)
 8008db2:	e7b9      	b.n	8008d28 <__ieee754_asinf+0x1bc>
 8008db4:	3fc90fdb 	.word	0x3fc90fdb
 8008db8:	b33bbd2e 	.word	0xb33bbd2e
 8008dbc:	7149f2ca 	.word	0x7149f2ca
 8008dc0:	3811ef08 	.word	0x3811ef08
 8008dc4:	3a4f7f04 	.word	0x3a4f7f04
 8008dc8:	3d241146 	.word	0x3d241146
 8008dcc:	3e4e0aa8 	.word	0x3e4e0aa8
 8008dd0:	3ea6b090 	.word	0x3ea6b090
 8008dd4:	3e2aaaab 	.word	0x3e2aaaab
 8008dd8:	3d9dc62e 	.word	0x3d9dc62e
 8008ddc:	3f303361 	.word	0x3f303361
 8008de0:	4001572d 	.word	0x4001572d
 8008de4:	4019d139 	.word	0x4019d139
 8008de8:	3f799999 	.word	0x3f799999
 8008dec:	333bbd2e 	.word	0x333bbd2e
 8008df0:	3f490fdb 	.word	0x3f490fdb

08008df4 <__ieee754_rem_pio2f>:
 8008df4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008df8:	4aa0      	ldr	r2, [pc, #640]	; (800907c <__ieee754_rem_pio2f+0x288>)
 8008dfa:	f020 4600 	bic.w	r6, r0, #2147483648	; 0x80000000
 8008dfe:	4296      	cmp	r6, r2
 8008e00:	b087      	sub	sp, #28
 8008e02:	460c      	mov	r4, r1
 8008e04:	4682      	mov	sl, r0
 8008e06:	dc04      	bgt.n	8008e12 <__ieee754_rem_pio2f+0x1e>
 8008e08:	2300      	movs	r3, #0
 8008e0a:	6008      	str	r0, [r1, #0]
 8008e0c:	604b      	str	r3, [r1, #4]
 8008e0e:	2500      	movs	r5, #0
 8008e10:	e01a      	b.n	8008e48 <__ieee754_rem_pio2f+0x54>
 8008e12:	4a9b      	ldr	r2, [pc, #620]	; (8009080 <__ieee754_rem_pio2f+0x28c>)
 8008e14:	4296      	cmp	r6, r2
 8008e16:	dc4b      	bgt.n	8008eb0 <__ieee754_rem_pio2f+0xbc>
 8008e18:	2800      	cmp	r0, #0
 8008e1a:	499a      	ldr	r1, [pc, #616]	; (8009084 <__ieee754_rem_pio2f+0x290>)
 8008e1c:	4f9a      	ldr	r7, [pc, #616]	; (8009088 <__ieee754_rem_pio2f+0x294>)
 8008e1e:	f026 060f 	bic.w	r6, r6, #15
 8008e22:	dd23      	ble.n	8008e6c <__ieee754_rem_pio2f+0x78>
 8008e24:	f7f7 ff5e 	bl	8000ce4 <__aeabi_fsub>
 8008e28:	42be      	cmp	r6, r7
 8008e2a:	4605      	mov	r5, r0
 8008e2c:	d010      	beq.n	8008e50 <__ieee754_rem_pio2f+0x5c>
 8008e2e:	4997      	ldr	r1, [pc, #604]	; (800908c <__ieee754_rem_pio2f+0x298>)
 8008e30:	f7f7 ff58 	bl	8000ce4 <__aeabi_fsub>
 8008e34:	4601      	mov	r1, r0
 8008e36:	6020      	str	r0, [r4, #0]
 8008e38:	4628      	mov	r0, r5
 8008e3a:	f7f7 ff53 	bl	8000ce4 <__aeabi_fsub>
 8008e3e:	4993      	ldr	r1, [pc, #588]	; (800908c <__ieee754_rem_pio2f+0x298>)
 8008e40:	f7f7 ff50 	bl	8000ce4 <__aeabi_fsub>
 8008e44:	2501      	movs	r5, #1
 8008e46:	6060      	str	r0, [r4, #4]
 8008e48:	4628      	mov	r0, r5
 8008e4a:	b007      	add	sp, #28
 8008e4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008e50:	498f      	ldr	r1, [pc, #572]	; (8009090 <__ieee754_rem_pio2f+0x29c>)
 8008e52:	f7f7 ff47 	bl	8000ce4 <__aeabi_fsub>
 8008e56:	498f      	ldr	r1, [pc, #572]	; (8009094 <__ieee754_rem_pio2f+0x2a0>)
 8008e58:	4605      	mov	r5, r0
 8008e5a:	f7f7 ff43 	bl	8000ce4 <__aeabi_fsub>
 8008e5e:	4601      	mov	r1, r0
 8008e60:	6020      	str	r0, [r4, #0]
 8008e62:	4628      	mov	r0, r5
 8008e64:	f7f7 ff3e 	bl	8000ce4 <__aeabi_fsub>
 8008e68:	498a      	ldr	r1, [pc, #552]	; (8009094 <__ieee754_rem_pio2f+0x2a0>)
 8008e6a:	e7e9      	b.n	8008e40 <__ieee754_rem_pio2f+0x4c>
 8008e6c:	f7f7 ff3c 	bl	8000ce8 <__addsf3>
 8008e70:	42be      	cmp	r6, r7
 8008e72:	4605      	mov	r5, r0
 8008e74:	d00e      	beq.n	8008e94 <__ieee754_rem_pio2f+0xa0>
 8008e76:	4985      	ldr	r1, [pc, #532]	; (800908c <__ieee754_rem_pio2f+0x298>)
 8008e78:	f7f7 ff36 	bl	8000ce8 <__addsf3>
 8008e7c:	4601      	mov	r1, r0
 8008e7e:	6020      	str	r0, [r4, #0]
 8008e80:	4628      	mov	r0, r5
 8008e82:	f7f7 ff2f 	bl	8000ce4 <__aeabi_fsub>
 8008e86:	4981      	ldr	r1, [pc, #516]	; (800908c <__ieee754_rem_pio2f+0x298>)
 8008e88:	f7f7 ff2e 	bl	8000ce8 <__addsf3>
 8008e8c:	f04f 35ff 	mov.w	r5, #4294967295
 8008e90:	6060      	str	r0, [r4, #4]
 8008e92:	e7d9      	b.n	8008e48 <__ieee754_rem_pio2f+0x54>
 8008e94:	497e      	ldr	r1, [pc, #504]	; (8009090 <__ieee754_rem_pio2f+0x29c>)
 8008e96:	f7f7 ff27 	bl	8000ce8 <__addsf3>
 8008e9a:	497e      	ldr	r1, [pc, #504]	; (8009094 <__ieee754_rem_pio2f+0x2a0>)
 8008e9c:	4605      	mov	r5, r0
 8008e9e:	f7f7 ff23 	bl	8000ce8 <__addsf3>
 8008ea2:	4601      	mov	r1, r0
 8008ea4:	6020      	str	r0, [r4, #0]
 8008ea6:	4628      	mov	r0, r5
 8008ea8:	f7f7 ff1c 	bl	8000ce4 <__aeabi_fsub>
 8008eac:	4979      	ldr	r1, [pc, #484]	; (8009094 <__ieee754_rem_pio2f+0x2a0>)
 8008eae:	e7eb      	b.n	8008e88 <__ieee754_rem_pio2f+0x94>
 8008eb0:	4a79      	ldr	r2, [pc, #484]	; (8009098 <__ieee754_rem_pio2f+0x2a4>)
 8008eb2:	4296      	cmp	r6, r2
 8008eb4:	f300 8091 	bgt.w	8008fda <__ieee754_rem_pio2f+0x1e6>
 8008eb8:	f7ff fdd6 	bl	8008a68 <fabsf>
 8008ebc:	4977      	ldr	r1, [pc, #476]	; (800909c <__ieee754_rem_pio2f+0x2a8>)
 8008ebe:	4607      	mov	r7, r0
 8008ec0:	f7f8 f81a 	bl	8000ef8 <__aeabi_fmul>
 8008ec4:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
 8008ec8:	f7f7 ff0e 	bl	8000ce8 <__addsf3>
 8008ecc:	f7f8 f9f0 	bl	80012b0 <__aeabi_f2iz>
 8008ed0:	4605      	mov	r5, r0
 8008ed2:	f7f7 ffbd 	bl	8000e50 <__aeabi_i2f>
 8008ed6:	496b      	ldr	r1, [pc, #428]	; (8009084 <__ieee754_rem_pio2f+0x290>)
 8008ed8:	4681      	mov	r9, r0
 8008eda:	f7f8 f80d 	bl	8000ef8 <__aeabi_fmul>
 8008ede:	4601      	mov	r1, r0
 8008ee0:	4638      	mov	r0, r7
 8008ee2:	f7f7 feff 	bl	8000ce4 <__aeabi_fsub>
 8008ee6:	4969      	ldr	r1, [pc, #420]	; (800908c <__ieee754_rem_pio2f+0x298>)
 8008ee8:	4680      	mov	r8, r0
 8008eea:	4648      	mov	r0, r9
 8008eec:	f7f8 f804 	bl	8000ef8 <__aeabi_fmul>
 8008ef0:	2d1f      	cmp	r5, #31
 8008ef2:	4607      	mov	r7, r0
 8008ef4:	dc0c      	bgt.n	8008f10 <__ieee754_rem_pio2f+0x11c>
 8008ef6:	4a6a      	ldr	r2, [pc, #424]	; (80090a0 <__ieee754_rem_pio2f+0x2ac>)
 8008ef8:	1e69      	subs	r1, r5, #1
 8008efa:	f026 03ff 	bic.w	r3, r6, #255	; 0xff
 8008efe:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 8008f02:	4293      	cmp	r3, r2
 8008f04:	d004      	beq.n	8008f10 <__ieee754_rem_pio2f+0x11c>
 8008f06:	4639      	mov	r1, r7
 8008f08:	4640      	mov	r0, r8
 8008f0a:	f7f7 feeb 	bl	8000ce4 <__aeabi_fsub>
 8008f0e:	e00b      	b.n	8008f28 <__ieee754_rem_pio2f+0x134>
 8008f10:	4639      	mov	r1, r7
 8008f12:	4640      	mov	r0, r8
 8008f14:	f7f7 fee6 	bl	8000ce4 <__aeabi_fsub>
 8008f18:	f3c0 53c7 	ubfx	r3, r0, #23, #8
 8008f1c:	ea4f 5be6 	mov.w	fp, r6, asr #23
 8008f20:	ebc3 56d6 	rsb	r6, r3, r6, lsr #23
 8008f24:	2e08      	cmp	r6, #8
 8008f26:	dc01      	bgt.n	8008f2c <__ieee754_rem_pio2f+0x138>
 8008f28:	6020      	str	r0, [r4, #0]
 8008f2a:	e026      	b.n	8008f7a <__ieee754_rem_pio2f+0x186>
 8008f2c:	4958      	ldr	r1, [pc, #352]	; (8009090 <__ieee754_rem_pio2f+0x29c>)
 8008f2e:	4648      	mov	r0, r9
 8008f30:	f7f7 ffe2 	bl	8000ef8 <__aeabi_fmul>
 8008f34:	4607      	mov	r7, r0
 8008f36:	4601      	mov	r1, r0
 8008f38:	4640      	mov	r0, r8
 8008f3a:	f7f7 fed3 	bl	8000ce4 <__aeabi_fsub>
 8008f3e:	4601      	mov	r1, r0
 8008f40:	4606      	mov	r6, r0
 8008f42:	4640      	mov	r0, r8
 8008f44:	f7f7 fece 	bl	8000ce4 <__aeabi_fsub>
 8008f48:	4639      	mov	r1, r7
 8008f4a:	f7f7 fecb 	bl	8000ce4 <__aeabi_fsub>
 8008f4e:	4951      	ldr	r1, [pc, #324]	; (8009094 <__ieee754_rem_pio2f+0x2a0>)
 8008f50:	4607      	mov	r7, r0
 8008f52:	4648      	mov	r0, r9
 8008f54:	f7f7 ffd0 	bl	8000ef8 <__aeabi_fmul>
 8008f58:	4639      	mov	r1, r7
 8008f5a:	f7f7 fec3 	bl	8000ce4 <__aeabi_fsub>
 8008f5e:	4601      	mov	r1, r0
 8008f60:	4607      	mov	r7, r0
 8008f62:	4630      	mov	r0, r6
 8008f64:	f7f7 febe 	bl	8000ce4 <__aeabi_fsub>
 8008f68:	f3c0 53c7 	ubfx	r3, r0, #23, #8
 8008f6c:	ebab 0b03 	sub.w	fp, fp, r3
 8008f70:	f1bb 0f19 	cmp.w	fp, #25
 8008f74:	dc16      	bgt.n	8008fa4 <__ieee754_rem_pio2f+0x1b0>
 8008f76:	6020      	str	r0, [r4, #0]
 8008f78:	46b0      	mov	r8, r6
 8008f7a:	6826      	ldr	r6, [r4, #0]
 8008f7c:	4640      	mov	r0, r8
 8008f7e:	4631      	mov	r1, r6
 8008f80:	f7f7 feb0 	bl	8000ce4 <__aeabi_fsub>
 8008f84:	4639      	mov	r1, r7
 8008f86:	f7f7 fead 	bl	8000ce4 <__aeabi_fsub>
 8008f8a:	f1ba 0f00 	cmp.w	sl, #0
 8008f8e:	6060      	str	r0, [r4, #4]
 8008f90:	f6bf af5a 	bge.w	8008e48 <__ieee754_rem_pio2f+0x54>
 8008f94:	f106 4600 	add.w	r6, r6, #2147483648	; 0x80000000
 8008f98:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 8008f9c:	6026      	str	r6, [r4, #0]
 8008f9e:	6060      	str	r0, [r4, #4]
 8008fa0:	426d      	negs	r5, r5
 8008fa2:	e751      	b.n	8008e48 <__ieee754_rem_pio2f+0x54>
 8008fa4:	493f      	ldr	r1, [pc, #252]	; (80090a4 <__ieee754_rem_pio2f+0x2b0>)
 8008fa6:	4648      	mov	r0, r9
 8008fa8:	f7f7 ffa6 	bl	8000ef8 <__aeabi_fmul>
 8008fac:	4607      	mov	r7, r0
 8008fae:	4601      	mov	r1, r0
 8008fb0:	4630      	mov	r0, r6
 8008fb2:	f7f7 fe97 	bl	8000ce4 <__aeabi_fsub>
 8008fb6:	4601      	mov	r1, r0
 8008fb8:	4680      	mov	r8, r0
 8008fba:	4630      	mov	r0, r6
 8008fbc:	f7f7 fe92 	bl	8000ce4 <__aeabi_fsub>
 8008fc0:	4639      	mov	r1, r7
 8008fc2:	f7f7 fe8f 	bl	8000ce4 <__aeabi_fsub>
 8008fc6:	4938      	ldr	r1, [pc, #224]	; (80090a8 <__ieee754_rem_pio2f+0x2b4>)
 8008fc8:	4606      	mov	r6, r0
 8008fca:	4648      	mov	r0, r9
 8008fcc:	f7f7 ff94 	bl	8000ef8 <__aeabi_fmul>
 8008fd0:	4631      	mov	r1, r6
 8008fd2:	f7f7 fe87 	bl	8000ce4 <__aeabi_fsub>
 8008fd6:	4607      	mov	r7, r0
 8008fd8:	e795      	b.n	8008f06 <__ieee754_rem_pio2f+0x112>
 8008fda:	f1b6 4fff 	cmp.w	r6, #2139095040	; 0x7f800000
 8008fde:	db05      	blt.n	8008fec <__ieee754_rem_pio2f+0x1f8>
 8008fe0:	4601      	mov	r1, r0
 8008fe2:	f7f7 fe7f 	bl	8000ce4 <__aeabi_fsub>
 8008fe6:	6060      	str	r0, [r4, #4]
 8008fe8:	6020      	str	r0, [r4, #0]
 8008fea:	e710      	b.n	8008e0e <__ieee754_rem_pio2f+0x1a>
 8008fec:	15f7      	asrs	r7, r6, #23
 8008fee:	3f86      	subs	r7, #134	; 0x86
 8008ff0:	eba6 56c7 	sub.w	r6, r6, r7, lsl #23
 8008ff4:	4630      	mov	r0, r6
 8008ff6:	f7f8 f95b 	bl	80012b0 <__aeabi_f2iz>
 8008ffa:	f7f7 ff29 	bl	8000e50 <__aeabi_i2f>
 8008ffe:	4601      	mov	r1, r0
 8009000:	9003      	str	r0, [sp, #12]
 8009002:	4630      	mov	r0, r6
 8009004:	f7f7 fe6e 	bl	8000ce4 <__aeabi_fsub>
 8009008:	f04f 4187 	mov.w	r1, #1132462080	; 0x43800000
 800900c:	f7f7 ff74 	bl	8000ef8 <__aeabi_fmul>
 8009010:	4606      	mov	r6, r0
 8009012:	f7f8 f94d 	bl	80012b0 <__aeabi_f2iz>
 8009016:	f7f7 ff1b 	bl	8000e50 <__aeabi_i2f>
 800901a:	4601      	mov	r1, r0
 800901c:	9004      	str	r0, [sp, #16]
 800901e:	4605      	mov	r5, r0
 8009020:	4630      	mov	r0, r6
 8009022:	f7f7 fe5f 	bl	8000ce4 <__aeabi_fsub>
 8009026:	f04f 4187 	mov.w	r1, #1132462080	; 0x43800000
 800902a:	f7f7 ff65 	bl	8000ef8 <__aeabi_fmul>
 800902e:	2100      	movs	r1, #0
 8009030:	9005      	str	r0, [sp, #20]
 8009032:	f7f8 f8f5 	bl	8001220 <__aeabi_fcmpeq>
 8009036:	b1f0      	cbz	r0, 8009076 <__ieee754_rem_pio2f+0x282>
 8009038:	2100      	movs	r1, #0
 800903a:	4628      	mov	r0, r5
 800903c:	f7f8 f8f0 	bl	8001220 <__aeabi_fcmpeq>
 8009040:	2800      	cmp	r0, #0
 8009042:	bf14      	ite	ne
 8009044:	2301      	movne	r3, #1
 8009046:	2302      	moveq	r3, #2
 8009048:	4a18      	ldr	r2, [pc, #96]	; (80090ac <__ieee754_rem_pio2f+0x2b8>)
 800904a:	9201      	str	r2, [sp, #4]
 800904c:	2202      	movs	r2, #2
 800904e:	9200      	str	r2, [sp, #0]
 8009050:	4621      	mov	r1, r4
 8009052:	463a      	mov	r2, r7
 8009054:	a803      	add	r0, sp, #12
 8009056:	f000 f8fb 	bl	8009250 <__kernel_rem_pio2f>
 800905a:	f1ba 0f00 	cmp.w	sl, #0
 800905e:	4605      	mov	r5, r0
 8009060:	f6bf aef2 	bge.w	8008e48 <__ieee754_rem_pio2f+0x54>
 8009064:	6823      	ldr	r3, [r4, #0]
 8009066:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 800906a:	6023      	str	r3, [r4, #0]
 800906c:	6863      	ldr	r3, [r4, #4]
 800906e:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8009072:	6063      	str	r3, [r4, #4]
 8009074:	e794      	b.n	8008fa0 <__ieee754_rem_pio2f+0x1ac>
 8009076:	2303      	movs	r3, #3
 8009078:	e7e6      	b.n	8009048 <__ieee754_rem_pio2f+0x254>
 800907a:	bf00      	nop
 800907c:	3f490fd8 	.word	0x3f490fd8
 8009080:	4016cbe3 	.word	0x4016cbe3
 8009084:	3fc90f80 	.word	0x3fc90f80
 8009088:	3fc90fd0 	.word	0x3fc90fd0
 800908c:	37354443 	.word	0x37354443
 8009090:	37354400 	.word	0x37354400
 8009094:	2e85a308 	.word	0x2e85a308
 8009098:	43490f80 	.word	0x43490f80
 800909c:	3f22f984 	.word	0x3f22f984
 80090a0:	0800a938 	.word	0x0800a938
 80090a4:	2e85a300 	.word	0x2e85a300
 80090a8:	248d3132 	.word	0x248d3132
 80090ac:	0800a9b8 	.word	0x0800a9b8

080090b0 <__ieee754_sqrtf>:
 80090b0:	f020 4200 	bic.w	r2, r0, #2147483648	; 0x80000000
 80090b4:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 80090b8:	b570      	push	{r4, r5, r6, lr}
 80090ba:	4603      	mov	r3, r0
 80090bc:	4604      	mov	r4, r0
 80090be:	d309      	bcc.n	80090d4 <__ieee754_sqrtf+0x24>
 80090c0:	4601      	mov	r1, r0
 80090c2:	f7f7 ff19 	bl	8000ef8 <__aeabi_fmul>
 80090c6:	4601      	mov	r1, r0
 80090c8:	4620      	mov	r0, r4
 80090ca:	f7f7 fe0d 	bl	8000ce8 <__addsf3>
 80090ce:	4604      	mov	r4, r0
 80090d0:	4620      	mov	r0, r4
 80090d2:	bd70      	pop	{r4, r5, r6, pc}
 80090d4:	2a00      	cmp	r2, #0
 80090d6:	d0fb      	beq.n	80090d0 <__ieee754_sqrtf+0x20>
 80090d8:	2800      	cmp	r0, #0
 80090da:	da06      	bge.n	80090ea <__ieee754_sqrtf+0x3a>
 80090dc:	4601      	mov	r1, r0
 80090de:	f7f7 fe01 	bl	8000ce4 <__aeabi_fsub>
 80090e2:	4601      	mov	r1, r0
 80090e4:	f7f7 ffbc 	bl	8001060 <__aeabi_fdiv>
 80090e8:	e7f1      	b.n	80090ce <__ieee754_sqrtf+0x1e>
 80090ea:	f010 42ff 	ands.w	r2, r0, #2139095040	; 0x7f800000
 80090ee:	ea4f 51e0 	mov.w	r1, r0, asr #23
 80090f2:	d027      	beq.n	8009144 <__ieee754_sqrtf+0x94>
 80090f4:	f3c3 0216 	ubfx	r2, r3, #0, #23
 80090f8:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80090fc:	07cb      	lsls	r3, r1, #31
 80090fe:	f1a1 007f 	sub.w	r0, r1, #127	; 0x7f
 8009102:	bf58      	it	pl
 8009104:	0052      	lslpl	r2, r2, #1
 8009106:	2300      	movs	r3, #0
 8009108:	1040      	asrs	r0, r0, #1
 800910a:	0052      	lsls	r2, r2, #1
 800910c:	2419      	movs	r4, #25
 800910e:	461e      	mov	r6, r3
 8009110:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 8009114:	1875      	adds	r5, r6, r1
 8009116:	4295      	cmp	r5, r2
 8009118:	bfde      	ittt	le
 800911a:	186e      	addle	r6, r5, r1
 800911c:	1b52      	suble	r2, r2, r5
 800911e:	185b      	addle	r3, r3, r1
 8009120:	3c01      	subs	r4, #1
 8009122:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8009126:	ea4f 0151 	mov.w	r1, r1, lsr #1
 800912a:	d1f3      	bne.n	8009114 <__ieee754_sqrtf+0x64>
 800912c:	b112      	cbz	r2, 8009134 <__ieee754_sqrtf+0x84>
 800912e:	3301      	adds	r3, #1
 8009130:	f023 0301 	bic.w	r3, r3, #1
 8009134:	105c      	asrs	r4, r3, #1
 8009136:	f104 547c 	add.w	r4, r4, #1056964608	; 0x3f000000
 800913a:	eb04 54c0 	add.w	r4, r4, r0, lsl #23
 800913e:	e7c7      	b.n	80090d0 <__ieee754_sqrtf+0x20>
 8009140:	005b      	lsls	r3, r3, #1
 8009142:	3201      	adds	r2, #1
 8009144:	0218      	lsls	r0, r3, #8
 8009146:	d5fb      	bpl.n	8009140 <__ieee754_sqrtf+0x90>
 8009148:	3a01      	subs	r2, #1
 800914a:	1a89      	subs	r1, r1, r2
 800914c:	e7d2      	b.n	80090f4 <__ieee754_sqrtf+0x44>
	...

08009150 <__kernel_cosf>:
 8009150:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009154:	f020 4400 	bic.w	r4, r0, #2147483648	; 0x80000000
 8009158:	f1b4 5f48 	cmp.w	r4, #838860800	; 0x32000000
 800915c:	4606      	mov	r6, r0
 800915e:	4688      	mov	r8, r1
 8009160:	da03      	bge.n	800916a <__kernel_cosf+0x1a>
 8009162:	f7f8 f8a5 	bl	80012b0 <__aeabi_f2iz>
 8009166:	2800      	cmp	r0, #0
 8009168:	d05c      	beq.n	8009224 <__kernel_cosf+0xd4>
 800916a:	4631      	mov	r1, r6
 800916c:	4630      	mov	r0, r6
 800916e:	f7f7 fec3 	bl	8000ef8 <__aeabi_fmul>
 8009172:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
 8009176:	4605      	mov	r5, r0
 8009178:	f7f7 febe 	bl	8000ef8 <__aeabi_fmul>
 800917c:	492b      	ldr	r1, [pc, #172]	; (800922c <__kernel_cosf+0xdc>)
 800917e:	4607      	mov	r7, r0
 8009180:	4628      	mov	r0, r5
 8009182:	f7f7 feb9 	bl	8000ef8 <__aeabi_fmul>
 8009186:	492a      	ldr	r1, [pc, #168]	; (8009230 <__kernel_cosf+0xe0>)
 8009188:	f7f7 fdae 	bl	8000ce8 <__addsf3>
 800918c:	4629      	mov	r1, r5
 800918e:	f7f7 feb3 	bl	8000ef8 <__aeabi_fmul>
 8009192:	4928      	ldr	r1, [pc, #160]	; (8009234 <__kernel_cosf+0xe4>)
 8009194:	f7f7 fda6 	bl	8000ce4 <__aeabi_fsub>
 8009198:	4629      	mov	r1, r5
 800919a:	f7f7 fead 	bl	8000ef8 <__aeabi_fmul>
 800919e:	4926      	ldr	r1, [pc, #152]	; (8009238 <__kernel_cosf+0xe8>)
 80091a0:	f7f7 fda2 	bl	8000ce8 <__addsf3>
 80091a4:	4629      	mov	r1, r5
 80091a6:	f7f7 fea7 	bl	8000ef8 <__aeabi_fmul>
 80091aa:	4924      	ldr	r1, [pc, #144]	; (800923c <__kernel_cosf+0xec>)
 80091ac:	f7f7 fd9a 	bl	8000ce4 <__aeabi_fsub>
 80091b0:	4629      	mov	r1, r5
 80091b2:	f7f7 fea1 	bl	8000ef8 <__aeabi_fmul>
 80091b6:	4922      	ldr	r1, [pc, #136]	; (8009240 <__kernel_cosf+0xf0>)
 80091b8:	f7f7 fd96 	bl	8000ce8 <__addsf3>
 80091bc:	4629      	mov	r1, r5
 80091be:	f7f7 fe9b 	bl	8000ef8 <__aeabi_fmul>
 80091c2:	4629      	mov	r1, r5
 80091c4:	f7f7 fe98 	bl	8000ef8 <__aeabi_fmul>
 80091c8:	4641      	mov	r1, r8
 80091ca:	4605      	mov	r5, r0
 80091cc:	4630      	mov	r0, r6
 80091ce:	f7f7 fe93 	bl	8000ef8 <__aeabi_fmul>
 80091d2:	4601      	mov	r1, r0
 80091d4:	4628      	mov	r0, r5
 80091d6:	f7f7 fd85 	bl	8000ce4 <__aeabi_fsub>
 80091da:	4b1a      	ldr	r3, [pc, #104]	; (8009244 <__kernel_cosf+0xf4>)
 80091dc:	429c      	cmp	r4, r3
 80091de:	4605      	mov	r5, r0
 80091e0:	dc0a      	bgt.n	80091f8 <__kernel_cosf+0xa8>
 80091e2:	4601      	mov	r1, r0
 80091e4:	4638      	mov	r0, r7
 80091e6:	f7f7 fd7d 	bl	8000ce4 <__aeabi_fsub>
 80091ea:	4601      	mov	r1, r0
 80091ec:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 80091f0:	f7f7 fd78 	bl	8000ce4 <__aeabi_fsub>
 80091f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80091f8:	4b13      	ldr	r3, [pc, #76]	; (8009248 <__kernel_cosf+0xf8>)
 80091fa:	429c      	cmp	r4, r3
 80091fc:	bfcc      	ite	gt
 80091fe:	4c13      	ldrgt	r4, [pc, #76]	; (800924c <__kernel_cosf+0xfc>)
 8009200:	f104 447f 	addle.w	r4, r4, #4278190080	; 0xff000000
 8009204:	4621      	mov	r1, r4
 8009206:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 800920a:	f7f7 fd6b 	bl	8000ce4 <__aeabi_fsub>
 800920e:	4621      	mov	r1, r4
 8009210:	4606      	mov	r6, r0
 8009212:	4638      	mov	r0, r7
 8009214:	f7f7 fd66 	bl	8000ce4 <__aeabi_fsub>
 8009218:	4629      	mov	r1, r5
 800921a:	f7f7 fd63 	bl	8000ce4 <__aeabi_fsub>
 800921e:	4601      	mov	r1, r0
 8009220:	4630      	mov	r0, r6
 8009222:	e7e5      	b.n	80091f0 <__kernel_cosf+0xa0>
 8009224:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 8009228:	e7e4      	b.n	80091f4 <__kernel_cosf+0xa4>
 800922a:	bf00      	nop
 800922c:	ad47d74e 	.word	0xad47d74e
 8009230:	310f74f6 	.word	0x310f74f6
 8009234:	3493f27c 	.word	0x3493f27c
 8009238:	37d00d01 	.word	0x37d00d01
 800923c:	3ab60b61 	.word	0x3ab60b61
 8009240:	3d2aaaab 	.word	0x3d2aaaab
 8009244:	3e999999 	.word	0x3e999999
 8009248:	3f480000 	.word	0x3f480000
 800924c:	3e900000 	.word	0x3e900000

08009250 <__kernel_rem_pio2f>:
 8009250:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009254:	b0db      	sub	sp, #364	; 0x16c
 8009256:	9202      	str	r2, [sp, #8]
 8009258:	9304      	str	r3, [sp, #16]
 800925a:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800925c:	4bc5      	ldr	r3, [pc, #788]	; (8009574 <__kernel_rem_pio2f+0x324>)
 800925e:	9005      	str	r0, [sp, #20]
 8009260:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8009264:	9301      	str	r3, [sp, #4]
 8009266:	9b04      	ldr	r3, [sp, #16]
 8009268:	9100      	str	r1, [sp, #0]
 800926a:	3b01      	subs	r3, #1
 800926c:	9303      	str	r3, [sp, #12]
 800926e:	9b02      	ldr	r3, [sp, #8]
 8009270:	1d1a      	adds	r2, r3, #4
 8009272:	f2c0 809b 	blt.w	80093ac <__kernel_rem_pio2f+0x15c>
 8009276:	1edc      	subs	r4, r3, #3
 8009278:	bf48      	it	mi
 800927a:	1d1c      	addmi	r4, r3, #4
 800927c:	10e4      	asrs	r4, r4, #3
 800927e:	1c67      	adds	r7, r4, #1
 8009280:	00fb      	lsls	r3, r7, #3
 8009282:	9306      	str	r3, [sp, #24]
 8009284:	9b02      	ldr	r3, [sp, #8]
 8009286:	9a03      	ldr	r2, [sp, #12]
 8009288:	eba3 07c7 	sub.w	r7, r3, r7, lsl #3
 800928c:	9b01      	ldr	r3, [sp, #4]
 800928e:	eb03 0802 	add.w	r8, r3, r2
 8009292:	9b65      	ldr	r3, [sp, #404]	; 0x194
 8009294:	1aa6      	subs	r6, r4, r2
 8009296:	eb03 0986 	add.w	r9, r3, r6, lsl #2
 800929a:	2500      	movs	r5, #0
 800929c:	f04f 0a00 	mov.w	sl, #0
 80092a0:	f10d 0b78 	add.w	fp, sp, #120	; 0x78
 80092a4:	4545      	cmp	r5, r8
 80092a6:	f340 8083 	ble.w	80093b0 <__kernel_rem_pio2f+0x160>
 80092aa:	9b04      	ldr	r3, [sp, #16]
 80092ac:	aa1e      	add	r2, sp, #120	; 0x78
 80092ae:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 80092b2:	f04f 0800 	mov.w	r8, #0
 80092b6:	f04f 0b00 	mov.w	fp, #0
 80092ba:	ab46      	add	r3, sp, #280	; 0x118
 80092bc:	9a01      	ldr	r2, [sp, #4]
 80092be:	4590      	cmp	r8, r2
 80092c0:	f340 809c 	ble.w	80093fc <__kernel_rem_pio2f+0x1ac>
 80092c4:	4613      	mov	r3, r2
 80092c6:	aa0a      	add	r2, sp, #40	; 0x28
 80092c8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80092cc:	9308      	str	r3, [sp, #32]
 80092ce:	9b65      	ldr	r3, [sp, #404]	; 0x194
 80092d0:	f8dd 8004 	ldr.w	r8, [sp, #4]
 80092d4:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 80092d8:	9307      	str	r3, [sp, #28]
 80092da:	ab5a      	add	r3, sp, #360	; 0x168
 80092dc:	eb03 0388 	add.w	r3, r3, r8, lsl #2
 80092e0:	ad0a      	add	r5, sp, #40	; 0x28
 80092e2:	f853 4c50 	ldr.w	r4, [r3, #-80]
 80092e6:	462e      	mov	r6, r5
 80092e8:	46c3      	mov	fp, r8
 80092ea:	f04f 4987 	mov.w	r9, #1132462080	; 0x43800000
 80092ee:	f50d 7a8c 	add.w	sl, sp, #280	; 0x118
 80092f2:	f1bb 0f00 	cmp.w	fp, #0
 80092f6:	f300 8086 	bgt.w	8009406 <__kernel_rem_pio2f+0x1b6>
 80092fa:	4639      	mov	r1, r7
 80092fc:	4620      	mov	r0, r4
 80092fe:	f000 fc43 	bl	8009b88 <scalbnf>
 8009302:	f04f 5178 	mov.w	r1, #1040187392	; 0x3e000000
 8009306:	4604      	mov	r4, r0
 8009308:	f7f7 fdf6 	bl	8000ef8 <__aeabi_fmul>
 800930c:	f000 fbfa 	bl	8009b04 <floorf>
 8009310:	f04f 4182 	mov.w	r1, #1090519040	; 0x41000000
 8009314:	f7f7 fdf0 	bl	8000ef8 <__aeabi_fmul>
 8009318:	4601      	mov	r1, r0
 800931a:	4620      	mov	r0, r4
 800931c:	f7f7 fce2 	bl	8000ce4 <__aeabi_fsub>
 8009320:	4604      	mov	r4, r0
 8009322:	f7f7 ffc5 	bl	80012b0 <__aeabi_f2iz>
 8009326:	4606      	mov	r6, r0
 8009328:	f7f7 fd92 	bl	8000e50 <__aeabi_i2f>
 800932c:	4601      	mov	r1, r0
 800932e:	4620      	mov	r0, r4
 8009330:	f7f7 fcd8 	bl	8000ce4 <__aeabi_fsub>
 8009334:	2f00      	cmp	r7, #0
 8009336:	4681      	mov	r9, r0
 8009338:	f340 8084 	ble.w	8009444 <__kernel_rem_pio2f+0x1f4>
 800933c:	f108 32ff 	add.w	r2, r8, #4294967295
 8009340:	ab0a      	add	r3, sp, #40	; 0x28
 8009342:	f1c7 0108 	rsb	r1, r7, #8
 8009346:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 800934a:	fa44 f301 	asr.w	r3, r4, r1
 800934e:	441e      	add	r6, r3
 8009350:	408b      	lsls	r3, r1
 8009352:	1ae4      	subs	r4, r4, r3
 8009354:	ab0a      	add	r3, sp, #40	; 0x28
 8009356:	f1c7 0007 	rsb	r0, r7, #7
 800935a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800935e:	4104      	asrs	r4, r0
 8009360:	2c00      	cmp	r4, #0
 8009362:	dd7e      	ble.n	8009462 <__kernel_rem_pio2f+0x212>
 8009364:	2200      	movs	r2, #0
 8009366:	3601      	adds	r6, #1
 8009368:	4692      	mov	sl, r2
 800936a:	4590      	cmp	r8, r2
 800936c:	f300 80b0 	bgt.w	80094d0 <__kernel_rem_pio2f+0x280>
 8009370:	2f00      	cmp	r7, #0
 8009372:	dd05      	ble.n	8009380 <__kernel_rem_pio2f+0x130>
 8009374:	2f01      	cmp	r7, #1
 8009376:	f000 80bd 	beq.w	80094f4 <__kernel_rem_pio2f+0x2a4>
 800937a:	2f02      	cmp	r7, #2
 800937c:	f000 80c5 	beq.w	800950a <__kernel_rem_pio2f+0x2ba>
 8009380:	2c02      	cmp	r4, #2
 8009382:	d16e      	bne.n	8009462 <__kernel_rem_pio2f+0x212>
 8009384:	4649      	mov	r1, r9
 8009386:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 800938a:	f7f7 fcab 	bl	8000ce4 <__aeabi_fsub>
 800938e:	4681      	mov	r9, r0
 8009390:	f1ba 0f00 	cmp.w	sl, #0
 8009394:	d065      	beq.n	8009462 <__kernel_rem_pio2f+0x212>
 8009396:	4639      	mov	r1, r7
 8009398:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 800939c:	f000 fbf4 	bl	8009b88 <scalbnf>
 80093a0:	4601      	mov	r1, r0
 80093a2:	4648      	mov	r0, r9
 80093a4:	f7f7 fc9e 	bl	8000ce4 <__aeabi_fsub>
 80093a8:	4681      	mov	r9, r0
 80093aa:	e05a      	b.n	8009462 <__kernel_rem_pio2f+0x212>
 80093ac:	2400      	movs	r4, #0
 80093ae:	e766      	b.n	800927e <__kernel_rem_pio2f+0x2e>
 80093b0:	42ee      	cmn	r6, r5
 80093b2:	d407      	bmi.n	80093c4 <__kernel_rem_pio2f+0x174>
 80093b4:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 80093b8:	f7f7 fd4a 	bl	8000e50 <__aeabi_i2f>
 80093bc:	f84b 0025 	str.w	r0, [fp, r5, lsl #2]
 80093c0:	3501      	adds	r5, #1
 80093c2:	e76f      	b.n	80092a4 <__kernel_rem_pio2f+0x54>
 80093c4:	4650      	mov	r0, sl
 80093c6:	e7f9      	b.n	80093bc <__kernel_rem_pio2f+0x16c>
 80093c8:	9b05      	ldr	r3, [sp, #20]
 80093ca:	f8da 1000 	ldr.w	r1, [sl]
 80093ce:	f853 0029 	ldr.w	r0, [r3, r9, lsl #2]
 80093d2:	f7f7 fd91 	bl	8000ef8 <__aeabi_fmul>
 80093d6:	4601      	mov	r1, r0
 80093d8:	4630      	mov	r0, r6
 80093da:	f7f7 fc85 	bl	8000ce8 <__addsf3>
 80093de:	f109 0901 	add.w	r9, r9, #1
 80093e2:	4606      	mov	r6, r0
 80093e4:	ab46      	add	r3, sp, #280	; 0x118
 80093e6:	9a03      	ldr	r2, [sp, #12]
 80093e8:	4591      	cmp	r9, r2
 80093ea:	f1aa 0a04 	sub.w	sl, sl, #4
 80093ee:	ddeb      	ble.n	80093c8 <__kernel_rem_pio2f+0x178>
 80093f0:	f843 6028 	str.w	r6, [r3, r8, lsl #2]
 80093f4:	3504      	adds	r5, #4
 80093f6:	f108 0801 	add.w	r8, r8, #1
 80093fa:	e75f      	b.n	80092bc <__kernel_rem_pio2f+0x6c>
 80093fc:	46aa      	mov	sl, r5
 80093fe:	465e      	mov	r6, fp
 8009400:	f04f 0900 	mov.w	r9, #0
 8009404:	e7ef      	b.n	80093e6 <__kernel_rem_pio2f+0x196>
 8009406:	f04f 516e 	mov.w	r1, #998244352	; 0x3b800000
 800940a:	4620      	mov	r0, r4
 800940c:	f7f7 fd74 	bl	8000ef8 <__aeabi_fmul>
 8009410:	f7f7 ff4e 	bl	80012b0 <__aeabi_f2iz>
 8009414:	f7f7 fd1c 	bl	8000e50 <__aeabi_i2f>
 8009418:	4649      	mov	r1, r9
 800941a:	9009      	str	r0, [sp, #36]	; 0x24
 800941c:	f7f7 fd6c 	bl	8000ef8 <__aeabi_fmul>
 8009420:	4601      	mov	r1, r0
 8009422:	4620      	mov	r0, r4
 8009424:	f7f7 fc5e 	bl	8000ce4 <__aeabi_fsub>
 8009428:	f7f7 ff42 	bl	80012b0 <__aeabi_f2iz>
 800942c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8009430:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009432:	f846 0b04 	str.w	r0, [r6], #4
 8009436:	f85a 102b 	ldr.w	r1, [sl, fp, lsl #2]
 800943a:	4618      	mov	r0, r3
 800943c:	f7f7 fc54 	bl	8000ce8 <__addsf3>
 8009440:	4604      	mov	r4, r0
 8009442:	e756      	b.n	80092f2 <__kernel_rem_pio2f+0xa2>
 8009444:	d106      	bne.n	8009454 <__kernel_rem_pio2f+0x204>
 8009446:	f108 33ff 	add.w	r3, r8, #4294967295
 800944a:	aa0a      	add	r2, sp, #40	; 0x28
 800944c:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8009450:	1224      	asrs	r4, r4, #8
 8009452:	e785      	b.n	8009360 <__kernel_rem_pio2f+0x110>
 8009454:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
 8009458:	f7f7 ff00 	bl	800125c <__aeabi_fcmpge>
 800945c:	4604      	mov	r4, r0
 800945e:	2800      	cmp	r0, #0
 8009460:	d134      	bne.n	80094cc <__kernel_rem_pio2f+0x27c>
 8009462:	2100      	movs	r1, #0
 8009464:	4648      	mov	r0, r9
 8009466:	f7f7 fedb 	bl	8001220 <__aeabi_fcmpeq>
 800946a:	2800      	cmp	r0, #0
 800946c:	f000 809a 	beq.w	80095a4 <__kernel_rem_pio2f+0x354>
 8009470:	f108 35ff 	add.w	r5, r8, #4294967295
 8009474:	462b      	mov	r3, r5
 8009476:	2200      	movs	r2, #0
 8009478:	9901      	ldr	r1, [sp, #4]
 800947a:	428b      	cmp	r3, r1
 800947c:	da4d      	bge.n	800951a <__kernel_rem_pio2f+0x2ca>
 800947e:	2a00      	cmp	r2, #0
 8009480:	d07c      	beq.n	800957c <__kernel_rem_pio2f+0x32c>
 8009482:	ab0a      	add	r3, sp, #40	; 0x28
 8009484:	3f08      	subs	r7, #8
 8009486:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 800948a:	2b00      	cmp	r3, #0
 800948c:	f000 8088 	beq.w	80095a0 <__kernel_rem_pio2f+0x350>
 8009490:	4639      	mov	r1, r7
 8009492:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 8009496:	f000 fb77 	bl	8009b88 <scalbnf>
 800949a:	46aa      	mov	sl, r5
 800949c:	4681      	mov	r9, r0
 800949e:	af46      	add	r7, sp, #280	; 0x118
 80094a0:	f04f 586e 	mov.w	r8, #998244352	; 0x3b800000
 80094a4:	f1ba 0f00 	cmp.w	sl, #0
 80094a8:	f280 80b1 	bge.w	800960e <__kernel_rem_pio2f+0x3be>
 80094ac:	46a9      	mov	r9, r5
 80094ae:	f04f 0a00 	mov.w	sl, #0
 80094b2:	2200      	movs	r2, #0
 80094b4:	f1b9 0f00 	cmp.w	r9, #0
 80094b8:	f2c0 80db 	blt.w	8009672 <__kernel_rem_pio2f+0x422>
 80094bc:	a946      	add	r1, sp, #280	; 0x118
 80094be:	4b2e      	ldr	r3, [pc, #184]	; (8009578 <__kernel_rem_pio2f+0x328>)
 80094c0:	eb01 0b89 	add.w	fp, r1, r9, lsl #2
 80094c4:	4617      	mov	r7, r2
 80094c6:	f04f 0800 	mov.w	r8, #0
 80094ca:	e0c3      	b.n	8009654 <__kernel_rem_pio2f+0x404>
 80094cc:	2402      	movs	r4, #2
 80094ce:	e749      	b.n	8009364 <__kernel_rem_pio2f+0x114>
 80094d0:	682b      	ldr	r3, [r5, #0]
 80094d2:	f1ba 0f00 	cmp.w	sl, #0
 80094d6:	d108      	bne.n	80094ea <__kernel_rem_pio2f+0x29a>
 80094d8:	b11b      	cbz	r3, 80094e2 <__kernel_rem_pio2f+0x292>
 80094da:	f5c3 7380 	rsb	r3, r3, #256	; 0x100
 80094de:	602b      	str	r3, [r5, #0]
 80094e0:	2301      	movs	r3, #1
 80094e2:	3201      	adds	r2, #1
 80094e4:	3504      	adds	r5, #4
 80094e6:	469a      	mov	sl, r3
 80094e8:	e73f      	b.n	800936a <__kernel_rem_pio2f+0x11a>
 80094ea:	f1c3 03ff 	rsb	r3, r3, #255	; 0xff
 80094ee:	602b      	str	r3, [r5, #0]
 80094f0:	4653      	mov	r3, sl
 80094f2:	e7f6      	b.n	80094e2 <__kernel_rem_pio2f+0x292>
 80094f4:	f108 32ff 	add.w	r2, r8, #4294967295
 80094f8:	ab0a      	add	r3, sp, #40	; 0x28
 80094fa:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80094fe:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8009502:	a90a      	add	r1, sp, #40	; 0x28
 8009504:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 8009508:	e73a      	b.n	8009380 <__kernel_rem_pio2f+0x130>
 800950a:	f108 32ff 	add.w	r2, r8, #4294967295
 800950e:	ab0a      	add	r3, sp, #40	; 0x28
 8009510:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8009514:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8009518:	e7f3      	b.n	8009502 <__kernel_rem_pio2f+0x2b2>
 800951a:	a90a      	add	r1, sp, #40	; 0x28
 800951c:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 8009520:	3b01      	subs	r3, #1
 8009522:	430a      	orrs	r2, r1
 8009524:	e7a8      	b.n	8009478 <__kernel_rem_pio2f+0x228>
 8009526:	3301      	adds	r3, #1
 8009528:	f852 1d04 	ldr.w	r1, [r2, #-4]!
 800952c:	2900      	cmp	r1, #0
 800952e:	d0fa      	beq.n	8009526 <__kernel_rem_pio2f+0x2d6>
 8009530:	9a04      	ldr	r2, [sp, #16]
 8009532:	eb08 0402 	add.w	r4, r8, r2
 8009536:	aa1e      	add	r2, sp, #120	; 0x78
 8009538:	f108 0501 	add.w	r5, r8, #1
 800953c:	eb02 0484 	add.w	r4, r2, r4, lsl #2
 8009540:	4498      	add	r8, r3
 8009542:	f50d 798c 	add.w	r9, sp, #280	; 0x118
 8009546:	45a8      	cmp	r8, r5
 8009548:	f6ff aec7 	blt.w	80092da <__kernel_rem_pio2f+0x8a>
 800954c:	9b07      	ldr	r3, [sp, #28]
 800954e:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8009552:	f7f7 fc7d 	bl	8000e50 <__aeabi_i2f>
 8009556:	46a3      	mov	fp, r4
 8009558:	f04f 0a00 	mov.w	sl, #0
 800955c:	f84b 0b04 	str.w	r0, [fp], #4
 8009560:	2600      	movs	r6, #0
 8009562:	9b03      	ldr	r3, [sp, #12]
 8009564:	459a      	cmp	sl, r3
 8009566:	dd0c      	ble.n	8009582 <__kernel_rem_pio2f+0x332>
 8009568:	f849 6025 	str.w	r6, [r9, r5, lsl #2]
 800956c:	465c      	mov	r4, fp
 800956e:	3501      	adds	r5, #1
 8009570:	e7e9      	b.n	8009546 <__kernel_rem_pio2f+0x2f6>
 8009572:	bf00      	nop
 8009574:	0800acfc 	.word	0x0800acfc
 8009578:	0800acd0 	.word	0x0800acd0
 800957c:	9a08      	ldr	r2, [sp, #32]
 800957e:	2301      	movs	r3, #1
 8009580:	e7d2      	b.n	8009528 <__kernel_rem_pio2f+0x2d8>
 8009582:	9b05      	ldr	r3, [sp, #20]
 8009584:	f854 0904 	ldr.w	r0, [r4], #-4
 8009588:	f853 102a 	ldr.w	r1, [r3, sl, lsl #2]
 800958c:	f7f7 fcb4 	bl	8000ef8 <__aeabi_fmul>
 8009590:	4601      	mov	r1, r0
 8009592:	4630      	mov	r0, r6
 8009594:	f7f7 fba8 	bl	8000ce8 <__addsf3>
 8009598:	f10a 0a01 	add.w	sl, sl, #1
 800959c:	4606      	mov	r6, r0
 800959e:	e7e0      	b.n	8009562 <__kernel_rem_pio2f+0x312>
 80095a0:	3d01      	subs	r5, #1
 80095a2:	e76e      	b.n	8009482 <__kernel_rem_pio2f+0x232>
 80095a4:	9b06      	ldr	r3, [sp, #24]
 80095a6:	9a02      	ldr	r2, [sp, #8]
 80095a8:	4648      	mov	r0, r9
 80095aa:	1a99      	subs	r1, r3, r2
 80095ac:	f000 faec 	bl	8009b88 <scalbnf>
 80095b0:	f04f 4187 	mov.w	r1, #1132462080	; 0x43800000
 80095b4:	4605      	mov	r5, r0
 80095b6:	f7f7 fe51 	bl	800125c <__aeabi_fcmpge>
 80095ba:	b300      	cbz	r0, 80095fe <__kernel_rem_pio2f+0x3ae>
 80095bc:	f04f 516e 	mov.w	r1, #998244352	; 0x3b800000
 80095c0:	4628      	mov	r0, r5
 80095c2:	f7f7 fc99 	bl	8000ef8 <__aeabi_fmul>
 80095c6:	f7f7 fe73 	bl	80012b0 <__aeabi_f2iz>
 80095ca:	f7f7 fc41 	bl	8000e50 <__aeabi_i2f>
 80095ce:	f04f 4187 	mov.w	r1, #1132462080	; 0x43800000
 80095d2:	4681      	mov	r9, r0
 80095d4:	f7f7 fc90 	bl	8000ef8 <__aeabi_fmul>
 80095d8:	4601      	mov	r1, r0
 80095da:	4628      	mov	r0, r5
 80095dc:	f7f7 fb82 	bl	8000ce4 <__aeabi_fsub>
 80095e0:	f7f7 fe66 	bl	80012b0 <__aeabi_f2iz>
 80095e4:	ab0a      	add	r3, sp, #40	; 0x28
 80095e6:	f108 0501 	add.w	r5, r8, #1
 80095ea:	f843 0028 	str.w	r0, [r3, r8, lsl #2]
 80095ee:	4648      	mov	r0, r9
 80095f0:	f7f7 fe5e 	bl	80012b0 <__aeabi_f2iz>
 80095f4:	ab0a      	add	r3, sp, #40	; 0x28
 80095f6:	3708      	adds	r7, #8
 80095f8:	f843 0025 	str.w	r0, [r3, r5, lsl #2]
 80095fc:	e748      	b.n	8009490 <__kernel_rem_pio2f+0x240>
 80095fe:	4628      	mov	r0, r5
 8009600:	f7f7 fe56 	bl	80012b0 <__aeabi_f2iz>
 8009604:	ab0a      	add	r3, sp, #40	; 0x28
 8009606:	4645      	mov	r5, r8
 8009608:	f843 0028 	str.w	r0, [r3, r8, lsl #2]
 800960c:	e740      	b.n	8009490 <__kernel_rem_pio2f+0x240>
 800960e:	ab0a      	add	r3, sp, #40	; 0x28
 8009610:	f853 002a 	ldr.w	r0, [r3, sl, lsl #2]
 8009614:	f7f7 fc1c 	bl	8000e50 <__aeabi_i2f>
 8009618:	4649      	mov	r1, r9
 800961a:	f7f7 fc6d 	bl	8000ef8 <__aeabi_fmul>
 800961e:	4641      	mov	r1, r8
 8009620:	f847 002a 	str.w	r0, [r7, sl, lsl #2]
 8009624:	4648      	mov	r0, r9
 8009626:	f7f7 fc67 	bl	8000ef8 <__aeabi_fmul>
 800962a:	f10a 3aff 	add.w	sl, sl, #4294967295
 800962e:	4681      	mov	r9, r0
 8009630:	e738      	b.n	80094a4 <__kernel_rem_pio2f+0x254>
 8009632:	f853 0b04 	ldr.w	r0, [r3], #4
 8009636:	f85b 1b04 	ldr.w	r1, [fp], #4
 800963a:	9203      	str	r2, [sp, #12]
 800963c:	9302      	str	r3, [sp, #8]
 800963e:	f7f7 fc5b 	bl	8000ef8 <__aeabi_fmul>
 8009642:	4601      	mov	r1, r0
 8009644:	4638      	mov	r0, r7
 8009646:	f7f7 fb4f 	bl	8000ce8 <__addsf3>
 800964a:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 800964e:	4607      	mov	r7, r0
 8009650:	f108 0801 	add.w	r8, r8, #1
 8009654:	9901      	ldr	r1, [sp, #4]
 8009656:	4588      	cmp	r8, r1
 8009658:	dc01      	bgt.n	800965e <__kernel_rem_pio2f+0x40e>
 800965a:	45c2      	cmp	sl, r8
 800965c:	dae9      	bge.n	8009632 <__kernel_rem_pio2f+0x3e2>
 800965e:	ab5a      	add	r3, sp, #360	; 0x168
 8009660:	eb03 038a 	add.w	r3, r3, sl, lsl #2
 8009664:	f109 39ff 	add.w	r9, r9, #4294967295
 8009668:	f843 7ca0 	str.w	r7, [r3, #-160]
 800966c:	f10a 0a01 	add.w	sl, sl, #1
 8009670:	e720      	b.n	80094b4 <__kernel_rem_pio2f+0x264>
 8009672:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8009674:	2b02      	cmp	r3, #2
 8009676:	dc07      	bgt.n	8009688 <__kernel_rem_pio2f+0x438>
 8009678:	2b00      	cmp	r3, #0
 800967a:	dc4d      	bgt.n	8009718 <__kernel_rem_pio2f+0x4c8>
 800967c:	d02e      	beq.n	80096dc <__kernel_rem_pio2f+0x48c>
 800967e:	f006 0007 	and.w	r0, r6, #7
 8009682:	b05b      	add	sp, #364	; 0x16c
 8009684:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009688:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800968a:	2b03      	cmp	r3, #3
 800968c:	d1f7      	bne.n	800967e <__kernel_rem_pio2f+0x42e>
 800968e:	f10d 0bc8 	add.w	fp, sp, #200	; 0xc8
 8009692:	eb0b 0785 	add.w	r7, fp, r5, lsl #2
 8009696:	46b8      	mov	r8, r7
 8009698:	46aa      	mov	sl, r5
 800969a:	f1ba 0f00 	cmp.w	sl, #0
 800969e:	dc48      	bgt.n	8009732 <__kernel_rem_pio2f+0x4e2>
 80096a0:	46a9      	mov	r9, r5
 80096a2:	f1b9 0f01 	cmp.w	r9, #1
 80096a6:	dc5f      	bgt.n	8009768 <__kernel_rem_pio2f+0x518>
 80096a8:	2000      	movs	r0, #0
 80096aa:	2d01      	cmp	r5, #1
 80096ac:	dc75      	bgt.n	800979a <__kernel_rem_pio2f+0x54a>
 80096ae:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 80096b0:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80096b2:	2c00      	cmp	r4, #0
 80096b4:	d177      	bne.n	80097a6 <__kernel_rem_pio2f+0x556>
 80096b6:	9900      	ldr	r1, [sp, #0]
 80096b8:	600a      	str	r2, [r1, #0]
 80096ba:	604b      	str	r3, [r1, #4]
 80096bc:	460a      	mov	r2, r1
 80096be:	6090      	str	r0, [r2, #8]
 80096c0:	e7dd      	b.n	800967e <__kernel_rem_pio2f+0x42e>
 80096c2:	f857 1025 	ldr.w	r1, [r7, r5, lsl #2]
 80096c6:	f7f7 fb0f 	bl	8000ce8 <__addsf3>
 80096ca:	3d01      	subs	r5, #1
 80096cc:	2d00      	cmp	r5, #0
 80096ce:	daf8      	bge.n	80096c2 <__kernel_rem_pio2f+0x472>
 80096d0:	b10c      	cbz	r4, 80096d6 <__kernel_rem_pio2f+0x486>
 80096d2:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 80096d6:	9b00      	ldr	r3, [sp, #0]
 80096d8:	6018      	str	r0, [r3, #0]
 80096da:	e7d0      	b.n	800967e <__kernel_rem_pio2f+0x42e>
 80096dc:	2000      	movs	r0, #0
 80096de:	af32      	add	r7, sp, #200	; 0xc8
 80096e0:	e7f4      	b.n	80096cc <__kernel_rem_pio2f+0x47c>
 80096e2:	f858 1027 	ldr.w	r1, [r8, r7, lsl #2]
 80096e6:	f7f7 faff 	bl	8000ce8 <__addsf3>
 80096ea:	3f01      	subs	r7, #1
 80096ec:	2f00      	cmp	r7, #0
 80096ee:	daf8      	bge.n	80096e2 <__kernel_rem_pio2f+0x492>
 80096f0:	b1bc      	cbz	r4, 8009722 <__kernel_rem_pio2f+0x4d2>
 80096f2:	f100 4300 	add.w	r3, r0, #2147483648	; 0x80000000
 80096f6:	9a00      	ldr	r2, [sp, #0]
 80096f8:	4601      	mov	r1, r0
 80096fa:	6013      	str	r3, [r2, #0]
 80096fc:	9832      	ldr	r0, [sp, #200]	; 0xc8
 80096fe:	f7f7 faf1 	bl	8000ce4 <__aeabi_fsub>
 8009702:	2701      	movs	r7, #1
 8009704:	f10d 08c8 	add.w	r8, sp, #200	; 0xc8
 8009708:	42bd      	cmp	r5, r7
 800970a:	da0c      	bge.n	8009726 <__kernel_rem_pio2f+0x4d6>
 800970c:	b10c      	cbz	r4, 8009712 <__kernel_rem_pio2f+0x4c2>
 800970e:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 8009712:	9b00      	ldr	r3, [sp, #0]
 8009714:	6058      	str	r0, [r3, #4]
 8009716:	e7b2      	b.n	800967e <__kernel_rem_pio2f+0x42e>
 8009718:	462f      	mov	r7, r5
 800971a:	2000      	movs	r0, #0
 800971c:	f10d 08c8 	add.w	r8, sp, #200	; 0xc8
 8009720:	e7e4      	b.n	80096ec <__kernel_rem_pio2f+0x49c>
 8009722:	4603      	mov	r3, r0
 8009724:	e7e7      	b.n	80096f6 <__kernel_rem_pio2f+0x4a6>
 8009726:	f858 1027 	ldr.w	r1, [r8, r7, lsl #2]
 800972a:	f7f7 fadd 	bl	8000ce8 <__addsf3>
 800972e:	3701      	adds	r7, #1
 8009730:	e7ea      	b.n	8009708 <__kernel_rem_pio2f+0x4b8>
 8009732:	f8d8 3000 	ldr.w	r3, [r8]
 8009736:	f858 2c04 	ldr.w	r2, [r8, #-4]
 800973a:	9302      	str	r3, [sp, #8]
 800973c:	4619      	mov	r1, r3
 800973e:	4610      	mov	r0, r2
 8009740:	9201      	str	r2, [sp, #4]
 8009742:	f7f7 fad1 	bl	8000ce8 <__addsf3>
 8009746:	9a01      	ldr	r2, [sp, #4]
 8009748:	4601      	mov	r1, r0
 800974a:	4681      	mov	r9, r0
 800974c:	4610      	mov	r0, r2
 800974e:	f7f7 fac9 	bl	8000ce4 <__aeabi_fsub>
 8009752:	9b02      	ldr	r3, [sp, #8]
 8009754:	4619      	mov	r1, r3
 8009756:	f7f7 fac7 	bl	8000ce8 <__addsf3>
 800975a:	f848 0904 	str.w	r0, [r8], #-4
 800975e:	f10a 3aff 	add.w	sl, sl, #4294967295
 8009762:	f8c8 9000 	str.w	r9, [r8]
 8009766:	e798      	b.n	800969a <__kernel_rem_pio2f+0x44a>
 8009768:	f857 3c04 	ldr.w	r3, [r7, #-4]
 800976c:	f8d7 a000 	ldr.w	sl, [r7]
 8009770:	9301      	str	r3, [sp, #4]
 8009772:	4651      	mov	r1, sl
 8009774:	4618      	mov	r0, r3
 8009776:	f7f7 fab7 	bl	8000ce8 <__addsf3>
 800977a:	9b01      	ldr	r3, [sp, #4]
 800977c:	4601      	mov	r1, r0
 800977e:	4680      	mov	r8, r0
 8009780:	4618      	mov	r0, r3
 8009782:	f7f7 faaf 	bl	8000ce4 <__aeabi_fsub>
 8009786:	4651      	mov	r1, sl
 8009788:	f7f7 faae 	bl	8000ce8 <__addsf3>
 800978c:	f847 0904 	str.w	r0, [r7], #-4
 8009790:	f109 39ff 	add.w	r9, r9, #4294967295
 8009794:	f8c7 8000 	str.w	r8, [r7]
 8009798:	e783      	b.n	80096a2 <__kernel_rem_pio2f+0x452>
 800979a:	f85b 1025 	ldr.w	r1, [fp, r5, lsl #2]
 800979e:	f7f7 faa3 	bl	8000ce8 <__addsf3>
 80097a2:	3d01      	subs	r5, #1
 80097a4:	e781      	b.n	80096aa <__kernel_rem_pio2f+0x45a>
 80097a6:	9900      	ldr	r1, [sp, #0]
 80097a8:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80097ac:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 80097b0:	600a      	str	r2, [r1, #0]
 80097b2:	604b      	str	r3, [r1, #4]
 80097b4:	460a      	mov	r2, r1
 80097b6:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 80097ba:	e780      	b.n	80096be <__kernel_rem_pio2f+0x46e>

080097bc <__kernel_sinf>:
 80097bc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80097c0:	f020 4300 	bic.w	r3, r0, #2147483648	; 0x80000000
 80097c4:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 80097c8:	4604      	mov	r4, r0
 80097ca:	460f      	mov	r7, r1
 80097cc:	4691      	mov	r9, r2
 80097ce:	da03      	bge.n	80097d8 <__kernel_sinf+0x1c>
 80097d0:	f7f7 fd6e 	bl	80012b0 <__aeabi_f2iz>
 80097d4:	2800      	cmp	r0, #0
 80097d6:	d035      	beq.n	8009844 <__kernel_sinf+0x88>
 80097d8:	4621      	mov	r1, r4
 80097da:	4620      	mov	r0, r4
 80097dc:	f7f7 fb8c 	bl	8000ef8 <__aeabi_fmul>
 80097e0:	4605      	mov	r5, r0
 80097e2:	4601      	mov	r1, r0
 80097e4:	4620      	mov	r0, r4
 80097e6:	f7f7 fb87 	bl	8000ef8 <__aeabi_fmul>
 80097ea:	4929      	ldr	r1, [pc, #164]	; (8009890 <__kernel_sinf+0xd4>)
 80097ec:	4606      	mov	r6, r0
 80097ee:	4628      	mov	r0, r5
 80097f0:	f7f7 fb82 	bl	8000ef8 <__aeabi_fmul>
 80097f4:	4927      	ldr	r1, [pc, #156]	; (8009894 <__kernel_sinf+0xd8>)
 80097f6:	f7f7 fa75 	bl	8000ce4 <__aeabi_fsub>
 80097fa:	4629      	mov	r1, r5
 80097fc:	f7f7 fb7c 	bl	8000ef8 <__aeabi_fmul>
 8009800:	4925      	ldr	r1, [pc, #148]	; (8009898 <__kernel_sinf+0xdc>)
 8009802:	f7f7 fa71 	bl	8000ce8 <__addsf3>
 8009806:	4629      	mov	r1, r5
 8009808:	f7f7 fb76 	bl	8000ef8 <__aeabi_fmul>
 800980c:	4923      	ldr	r1, [pc, #140]	; (800989c <__kernel_sinf+0xe0>)
 800980e:	f7f7 fa69 	bl	8000ce4 <__aeabi_fsub>
 8009812:	4629      	mov	r1, r5
 8009814:	f7f7 fb70 	bl	8000ef8 <__aeabi_fmul>
 8009818:	4921      	ldr	r1, [pc, #132]	; (80098a0 <__kernel_sinf+0xe4>)
 800981a:	f7f7 fa65 	bl	8000ce8 <__addsf3>
 800981e:	4680      	mov	r8, r0
 8009820:	f1b9 0f00 	cmp.w	r9, #0
 8009824:	d111      	bne.n	800984a <__kernel_sinf+0x8e>
 8009826:	4601      	mov	r1, r0
 8009828:	4628      	mov	r0, r5
 800982a:	f7f7 fb65 	bl	8000ef8 <__aeabi_fmul>
 800982e:	491d      	ldr	r1, [pc, #116]	; (80098a4 <__kernel_sinf+0xe8>)
 8009830:	f7f7 fa58 	bl	8000ce4 <__aeabi_fsub>
 8009834:	4631      	mov	r1, r6
 8009836:	f7f7 fb5f 	bl	8000ef8 <__aeabi_fmul>
 800983a:	4601      	mov	r1, r0
 800983c:	4620      	mov	r0, r4
 800983e:	f7f7 fa53 	bl	8000ce8 <__addsf3>
 8009842:	4604      	mov	r4, r0
 8009844:	4620      	mov	r0, r4
 8009846:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800984a:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
 800984e:	4638      	mov	r0, r7
 8009850:	f7f7 fb52 	bl	8000ef8 <__aeabi_fmul>
 8009854:	4641      	mov	r1, r8
 8009856:	4681      	mov	r9, r0
 8009858:	4630      	mov	r0, r6
 800985a:	f7f7 fb4d 	bl	8000ef8 <__aeabi_fmul>
 800985e:	4601      	mov	r1, r0
 8009860:	4648      	mov	r0, r9
 8009862:	f7f7 fa3f 	bl	8000ce4 <__aeabi_fsub>
 8009866:	4629      	mov	r1, r5
 8009868:	f7f7 fb46 	bl	8000ef8 <__aeabi_fmul>
 800986c:	4639      	mov	r1, r7
 800986e:	f7f7 fa39 	bl	8000ce4 <__aeabi_fsub>
 8009872:	490c      	ldr	r1, [pc, #48]	; (80098a4 <__kernel_sinf+0xe8>)
 8009874:	4605      	mov	r5, r0
 8009876:	4630      	mov	r0, r6
 8009878:	f7f7 fb3e 	bl	8000ef8 <__aeabi_fmul>
 800987c:	4601      	mov	r1, r0
 800987e:	4628      	mov	r0, r5
 8009880:	f7f7 fa32 	bl	8000ce8 <__addsf3>
 8009884:	4601      	mov	r1, r0
 8009886:	4620      	mov	r0, r4
 8009888:	f7f7 fa2c 	bl	8000ce4 <__aeabi_fsub>
 800988c:	e7d9      	b.n	8009842 <__kernel_sinf+0x86>
 800988e:	bf00      	nop
 8009890:	2f2ec9d3 	.word	0x2f2ec9d3
 8009894:	32d72f34 	.word	0x32d72f34
 8009898:	3638ef1b 	.word	0x3638ef1b
 800989c:	39500d01 	.word	0x39500d01
 80098a0:	3c088889 	.word	0x3c088889
 80098a4:	3e2aaaab 	.word	0x3e2aaaab

080098a8 <__kernel_tanf>:
 80098a8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80098ac:	f020 4a00 	bic.w	sl, r0, #2147483648	; 0x80000000
 80098b0:	f1ba 5f46 	cmp.w	sl, #830472192	; 0x31800000
 80098b4:	4604      	mov	r4, r0
 80098b6:	460e      	mov	r6, r1
 80098b8:	4690      	mov	r8, r2
 80098ba:	4607      	mov	r7, r0
 80098bc:	da1b      	bge.n	80098f6 <__kernel_tanf+0x4e>
 80098be:	f7f7 fcf7 	bl	80012b0 <__aeabi_f2iz>
 80098c2:	2800      	cmp	r0, #0
 80098c4:	d12f      	bne.n	8009926 <__kernel_tanf+0x7e>
 80098c6:	f108 0301 	add.w	r3, r8, #1
 80098ca:	ea53 030a 	orrs.w	r3, r3, sl
 80098ce:	d10c      	bne.n	80098ea <__kernel_tanf+0x42>
 80098d0:	4620      	mov	r0, r4
 80098d2:	f7ff f8c9 	bl	8008a68 <fabsf>
 80098d6:	4601      	mov	r1, r0
 80098d8:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 80098dc:	f7f7 fbc0 	bl	8001060 <__aeabi_fdiv>
 80098e0:	4604      	mov	r4, r0
 80098e2:	4620      	mov	r0, r4
 80098e4:	b003      	add	sp, #12
 80098e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80098ea:	f1b8 0f01 	cmp.w	r8, #1
 80098ee:	d0f8      	beq.n	80098e2 <__kernel_tanf+0x3a>
 80098f0:	4872      	ldr	r0, [pc, #456]	; (8009abc <__kernel_tanf+0x214>)
 80098f2:	4621      	mov	r1, r4
 80098f4:	e7f2      	b.n	80098dc <__kernel_tanf+0x34>
 80098f6:	4b72      	ldr	r3, [pc, #456]	; (8009ac0 <__kernel_tanf+0x218>)
 80098f8:	459a      	cmp	sl, r3
 80098fa:	db14      	blt.n	8009926 <__kernel_tanf+0x7e>
 80098fc:	2800      	cmp	r0, #0
 80098fe:	bfbe      	ittt	lt
 8009900:	f100 4000 	addlt.w	r0, r0, #2147483648	; 0x80000000
 8009904:	4604      	movlt	r4, r0
 8009906:	f101 4600 	addlt.w	r6, r1, #2147483648	; 0x80000000
 800990a:	486e      	ldr	r0, [pc, #440]	; (8009ac4 <__kernel_tanf+0x21c>)
 800990c:	4621      	mov	r1, r4
 800990e:	f7f7 f9e9 	bl	8000ce4 <__aeabi_fsub>
 8009912:	4631      	mov	r1, r6
 8009914:	4604      	mov	r4, r0
 8009916:	486c      	ldr	r0, [pc, #432]	; (8009ac8 <__kernel_tanf+0x220>)
 8009918:	f7f7 f9e4 	bl	8000ce4 <__aeabi_fsub>
 800991c:	4621      	mov	r1, r4
 800991e:	f7f7 f9e3 	bl	8000ce8 <__addsf3>
 8009922:	2600      	movs	r6, #0
 8009924:	4604      	mov	r4, r0
 8009926:	4621      	mov	r1, r4
 8009928:	4620      	mov	r0, r4
 800992a:	f7f7 fae5 	bl	8000ef8 <__aeabi_fmul>
 800992e:	4601      	mov	r1, r0
 8009930:	4681      	mov	r9, r0
 8009932:	f7f7 fae1 	bl	8000ef8 <__aeabi_fmul>
 8009936:	4649      	mov	r1, r9
 8009938:	4605      	mov	r5, r0
 800993a:	4620      	mov	r0, r4
 800993c:	f7f7 fadc 	bl	8000ef8 <__aeabi_fmul>
 8009940:	4962      	ldr	r1, [pc, #392]	; (8009acc <__kernel_tanf+0x224>)
 8009942:	4683      	mov	fp, r0
 8009944:	4628      	mov	r0, r5
 8009946:	f7f7 fad7 	bl	8000ef8 <__aeabi_fmul>
 800994a:	4961      	ldr	r1, [pc, #388]	; (8009ad0 <__kernel_tanf+0x228>)
 800994c:	f7f7 f9cc 	bl	8000ce8 <__addsf3>
 8009950:	4629      	mov	r1, r5
 8009952:	f7f7 fad1 	bl	8000ef8 <__aeabi_fmul>
 8009956:	495f      	ldr	r1, [pc, #380]	; (8009ad4 <__kernel_tanf+0x22c>)
 8009958:	f7f7 f9c6 	bl	8000ce8 <__addsf3>
 800995c:	4629      	mov	r1, r5
 800995e:	f7f7 facb 	bl	8000ef8 <__aeabi_fmul>
 8009962:	495d      	ldr	r1, [pc, #372]	; (8009ad8 <__kernel_tanf+0x230>)
 8009964:	f7f7 f9c0 	bl	8000ce8 <__addsf3>
 8009968:	4629      	mov	r1, r5
 800996a:	f7f7 fac5 	bl	8000ef8 <__aeabi_fmul>
 800996e:	495b      	ldr	r1, [pc, #364]	; (8009adc <__kernel_tanf+0x234>)
 8009970:	f7f7 f9ba 	bl	8000ce8 <__addsf3>
 8009974:	4629      	mov	r1, r5
 8009976:	f7f7 fabf 	bl	8000ef8 <__aeabi_fmul>
 800997a:	4959      	ldr	r1, [pc, #356]	; (8009ae0 <__kernel_tanf+0x238>)
 800997c:	f7f7 f9b4 	bl	8000ce8 <__addsf3>
 8009980:	4649      	mov	r1, r9
 8009982:	f7f7 fab9 	bl	8000ef8 <__aeabi_fmul>
 8009986:	4957      	ldr	r1, [pc, #348]	; (8009ae4 <__kernel_tanf+0x23c>)
 8009988:	9001      	str	r0, [sp, #4]
 800998a:	4628      	mov	r0, r5
 800998c:	f7f7 fab4 	bl	8000ef8 <__aeabi_fmul>
 8009990:	4955      	ldr	r1, [pc, #340]	; (8009ae8 <__kernel_tanf+0x240>)
 8009992:	f7f7 f9a9 	bl	8000ce8 <__addsf3>
 8009996:	4629      	mov	r1, r5
 8009998:	f7f7 faae 	bl	8000ef8 <__aeabi_fmul>
 800999c:	4953      	ldr	r1, [pc, #332]	; (8009aec <__kernel_tanf+0x244>)
 800999e:	f7f7 f9a3 	bl	8000ce8 <__addsf3>
 80099a2:	4629      	mov	r1, r5
 80099a4:	f7f7 faa8 	bl	8000ef8 <__aeabi_fmul>
 80099a8:	4951      	ldr	r1, [pc, #324]	; (8009af0 <__kernel_tanf+0x248>)
 80099aa:	f7f7 f99d 	bl	8000ce8 <__addsf3>
 80099ae:	4629      	mov	r1, r5
 80099b0:	f7f7 faa2 	bl	8000ef8 <__aeabi_fmul>
 80099b4:	494f      	ldr	r1, [pc, #316]	; (8009af4 <__kernel_tanf+0x24c>)
 80099b6:	f7f7 f997 	bl	8000ce8 <__addsf3>
 80099ba:	4629      	mov	r1, r5
 80099bc:	f7f7 fa9c 	bl	8000ef8 <__aeabi_fmul>
 80099c0:	494d      	ldr	r1, [pc, #308]	; (8009af8 <__kernel_tanf+0x250>)
 80099c2:	f7f7 f991 	bl	8000ce8 <__addsf3>
 80099c6:	9b01      	ldr	r3, [sp, #4]
 80099c8:	4601      	mov	r1, r0
 80099ca:	4618      	mov	r0, r3
 80099cc:	f7f7 f98c 	bl	8000ce8 <__addsf3>
 80099d0:	4659      	mov	r1, fp
 80099d2:	f7f7 fa91 	bl	8000ef8 <__aeabi_fmul>
 80099d6:	4631      	mov	r1, r6
 80099d8:	f7f7 f986 	bl	8000ce8 <__addsf3>
 80099dc:	4649      	mov	r1, r9
 80099de:	f7f7 fa8b 	bl	8000ef8 <__aeabi_fmul>
 80099e2:	4631      	mov	r1, r6
 80099e4:	f7f7 f980 	bl	8000ce8 <__addsf3>
 80099e8:	4944      	ldr	r1, [pc, #272]	; (8009afc <__kernel_tanf+0x254>)
 80099ea:	4605      	mov	r5, r0
 80099ec:	4658      	mov	r0, fp
 80099ee:	f7f7 fa83 	bl	8000ef8 <__aeabi_fmul>
 80099f2:	4629      	mov	r1, r5
 80099f4:	f7f7 f978 	bl	8000ce8 <__addsf3>
 80099f8:	4601      	mov	r1, r0
 80099fa:	4681      	mov	r9, r0
 80099fc:	4620      	mov	r0, r4
 80099fe:	f7f7 f973 	bl	8000ce8 <__addsf3>
 8009a02:	4b2f      	ldr	r3, [pc, #188]	; (8009ac0 <__kernel_tanf+0x218>)
 8009a04:	459a      	cmp	sl, r3
 8009a06:	4605      	mov	r5, r0
 8009a08:	db2b      	blt.n	8009a62 <__kernel_tanf+0x1ba>
 8009a0a:	4640      	mov	r0, r8
 8009a0c:	f7f7 fa20 	bl	8000e50 <__aeabi_i2f>
 8009a10:	4629      	mov	r1, r5
 8009a12:	4606      	mov	r6, r0
 8009a14:	4628      	mov	r0, r5
 8009a16:	f7f7 fa6f 	bl	8000ef8 <__aeabi_fmul>
 8009a1a:	4631      	mov	r1, r6
 8009a1c:	4680      	mov	r8, r0
 8009a1e:	4628      	mov	r0, r5
 8009a20:	f7f7 f962 	bl	8000ce8 <__addsf3>
 8009a24:	4601      	mov	r1, r0
 8009a26:	4640      	mov	r0, r8
 8009a28:	f7f7 fb1a 	bl	8001060 <__aeabi_fdiv>
 8009a2c:	4649      	mov	r1, r9
 8009a2e:	f7f7 f959 	bl	8000ce4 <__aeabi_fsub>
 8009a32:	4601      	mov	r1, r0
 8009a34:	4620      	mov	r0, r4
 8009a36:	f7f7 f955 	bl	8000ce4 <__aeabi_fsub>
 8009a3a:	4601      	mov	r1, r0
 8009a3c:	f7f7 f954 	bl	8000ce8 <__addsf3>
 8009a40:	4601      	mov	r1, r0
 8009a42:	4630      	mov	r0, r6
 8009a44:	f7f7 f94e 	bl	8000ce4 <__aeabi_fsub>
 8009a48:	17bf      	asrs	r7, r7, #30
 8009a4a:	f007 0702 	and.w	r7, r7, #2
 8009a4e:	4604      	mov	r4, r0
 8009a50:	f1c7 0001 	rsb	r0, r7, #1
 8009a54:	f7f7 f9fc 	bl	8000e50 <__aeabi_i2f>
 8009a58:	4601      	mov	r1, r0
 8009a5a:	4620      	mov	r0, r4
 8009a5c:	f7f7 fa4c 	bl	8000ef8 <__aeabi_fmul>
 8009a60:	e73e      	b.n	80098e0 <__kernel_tanf+0x38>
 8009a62:	f1b8 0f01 	cmp.w	r8, #1
 8009a66:	d027      	beq.n	8009ab8 <__kernel_tanf+0x210>
 8009a68:	4e25      	ldr	r6, [pc, #148]	; (8009b00 <__kernel_tanf+0x258>)
 8009a6a:	4601      	mov	r1, r0
 8009a6c:	ea06 0800 	and.w	r8, r6, r0
 8009a70:	4812      	ldr	r0, [pc, #72]	; (8009abc <__kernel_tanf+0x214>)
 8009a72:	f7f7 faf5 	bl	8001060 <__aeabi_fdiv>
 8009a76:	4621      	mov	r1, r4
 8009a78:	4006      	ands	r6, r0
 8009a7a:	4607      	mov	r7, r0
 8009a7c:	4640      	mov	r0, r8
 8009a7e:	f7f7 f931 	bl	8000ce4 <__aeabi_fsub>
 8009a82:	4601      	mov	r1, r0
 8009a84:	4648      	mov	r0, r9
 8009a86:	f7f7 f92d 	bl	8000ce4 <__aeabi_fsub>
 8009a8a:	4631      	mov	r1, r6
 8009a8c:	f7f7 fa34 	bl	8000ef8 <__aeabi_fmul>
 8009a90:	4631      	mov	r1, r6
 8009a92:	4604      	mov	r4, r0
 8009a94:	4640      	mov	r0, r8
 8009a96:	f7f7 fa2f 	bl	8000ef8 <__aeabi_fmul>
 8009a9a:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 8009a9e:	f7f7 f923 	bl	8000ce8 <__addsf3>
 8009aa2:	4601      	mov	r1, r0
 8009aa4:	4620      	mov	r0, r4
 8009aa6:	f7f7 f91f 	bl	8000ce8 <__addsf3>
 8009aaa:	4639      	mov	r1, r7
 8009aac:	f7f7 fa24 	bl	8000ef8 <__aeabi_fmul>
 8009ab0:	4631      	mov	r1, r6
 8009ab2:	f7f7 f919 	bl	8000ce8 <__addsf3>
 8009ab6:	e713      	b.n	80098e0 <__kernel_tanf+0x38>
 8009ab8:	4604      	mov	r4, r0
 8009aba:	e712      	b.n	80098e2 <__kernel_tanf+0x3a>
 8009abc:	bf800000 	.word	0xbf800000
 8009ac0:	3f2ca140 	.word	0x3f2ca140
 8009ac4:	3f490fda 	.word	0x3f490fda
 8009ac8:	33222168 	.word	0x33222168
 8009acc:	37d95384 	.word	0x37d95384
 8009ad0:	3895c07a 	.word	0x3895c07a
 8009ad4:	398137b9 	.word	0x398137b9
 8009ad8:	3abede48 	.word	0x3abede48
 8009adc:	3c11371f 	.word	0x3c11371f
 8009ae0:	3d5d0dd1 	.word	0x3d5d0dd1
 8009ae4:	b79bae5f 	.word	0xb79bae5f
 8009ae8:	38a3f445 	.word	0x38a3f445
 8009aec:	3a1a26c8 	.word	0x3a1a26c8
 8009af0:	3b6b6916 	.word	0x3b6b6916
 8009af4:	3cb327a4 	.word	0x3cb327a4
 8009af8:	3e088889 	.word	0x3e088889
 8009afc:	3eaaaaab 	.word	0x3eaaaaab
 8009b00:	fffff000 	.word	0xfffff000

08009b04 <floorf>:
 8009b04:	b570      	push	{r4, r5, r6, lr}
 8009b06:	f3c0 55c7 	ubfx	r5, r0, #23, #8
 8009b0a:	3d7f      	subs	r5, #127	; 0x7f
 8009b0c:	2d16      	cmp	r5, #22
 8009b0e:	4601      	mov	r1, r0
 8009b10:	4604      	mov	r4, r0
 8009b12:	f020 4600 	bic.w	r6, r0, #2147483648	; 0x80000000
 8009b16:	dc26      	bgt.n	8009b66 <floorf+0x62>
 8009b18:	2d00      	cmp	r5, #0
 8009b1a:	da0e      	bge.n	8009b3a <floorf+0x36>
 8009b1c:	4917      	ldr	r1, [pc, #92]	; (8009b7c <floorf+0x78>)
 8009b1e:	f7f7 f8e3 	bl	8000ce8 <__addsf3>
 8009b22:	2100      	movs	r1, #0
 8009b24:	f7f7 fba4 	bl	8001270 <__aeabi_fcmpgt>
 8009b28:	b128      	cbz	r0, 8009b36 <floorf+0x32>
 8009b2a:	2c00      	cmp	r4, #0
 8009b2c:	da23      	bge.n	8009b76 <floorf+0x72>
 8009b2e:	4b14      	ldr	r3, [pc, #80]	; (8009b80 <floorf+0x7c>)
 8009b30:	2e00      	cmp	r6, #0
 8009b32:	bf18      	it	ne
 8009b34:	461c      	movne	r4, r3
 8009b36:	4621      	mov	r1, r4
 8009b38:	e01b      	b.n	8009b72 <floorf+0x6e>
 8009b3a:	4e12      	ldr	r6, [pc, #72]	; (8009b84 <floorf+0x80>)
 8009b3c:	412e      	asrs	r6, r5
 8009b3e:	4230      	tst	r0, r6
 8009b40:	d017      	beq.n	8009b72 <floorf+0x6e>
 8009b42:	490e      	ldr	r1, [pc, #56]	; (8009b7c <floorf+0x78>)
 8009b44:	f7f7 f8d0 	bl	8000ce8 <__addsf3>
 8009b48:	2100      	movs	r1, #0
 8009b4a:	f7f7 fb91 	bl	8001270 <__aeabi_fcmpgt>
 8009b4e:	2800      	cmp	r0, #0
 8009b50:	d0f1      	beq.n	8009b36 <floorf+0x32>
 8009b52:	2c00      	cmp	r4, #0
 8009b54:	bfbe      	ittt	lt
 8009b56:	f44f 0300 	movlt.w	r3, #8388608	; 0x800000
 8009b5a:	fa43 f505 	asrlt.w	r5, r3, r5
 8009b5e:	1964      	addlt	r4, r4, r5
 8009b60:	ea24 0406 	bic.w	r4, r4, r6
 8009b64:	e7e7      	b.n	8009b36 <floorf+0x32>
 8009b66:	f1b6 4fff 	cmp.w	r6, #2139095040	; 0x7f800000
 8009b6a:	d302      	bcc.n	8009b72 <floorf+0x6e>
 8009b6c:	f7f7 f8bc 	bl	8000ce8 <__addsf3>
 8009b70:	4601      	mov	r1, r0
 8009b72:	4608      	mov	r0, r1
 8009b74:	bd70      	pop	{r4, r5, r6, pc}
 8009b76:	2400      	movs	r4, #0
 8009b78:	e7dd      	b.n	8009b36 <floorf+0x32>
 8009b7a:	bf00      	nop
 8009b7c:	7149f2ca 	.word	0x7149f2ca
 8009b80:	bf800000 	.word	0xbf800000
 8009b84:	007fffff 	.word	0x007fffff

08009b88 <scalbnf>:
 8009b88:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 8009b8c:	b538      	push	{r3, r4, r5, lr}
 8009b8e:	4603      	mov	r3, r0
 8009b90:	460d      	mov	r5, r1
 8009b92:	4604      	mov	r4, r0
 8009b94:	d02a      	beq.n	8009bec <scalbnf+0x64>
 8009b96:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 8009b9a:	d304      	bcc.n	8009ba6 <scalbnf+0x1e>
 8009b9c:	4601      	mov	r1, r0
 8009b9e:	f7f7 f8a3 	bl	8000ce8 <__addsf3>
 8009ba2:	4603      	mov	r3, r0
 8009ba4:	e022      	b.n	8009bec <scalbnf+0x64>
 8009ba6:	f010 4fff 	tst.w	r0, #2139095040	; 0x7f800000
 8009baa:	d117      	bne.n	8009bdc <scalbnf+0x54>
 8009bac:	f04f 4198 	mov.w	r1, #1275068416	; 0x4c000000
 8009bb0:	f7f7 f9a2 	bl	8000ef8 <__aeabi_fmul>
 8009bb4:	4a17      	ldr	r2, [pc, #92]	; (8009c14 <scalbnf+0x8c>)
 8009bb6:	4295      	cmp	r5, r2
 8009bb8:	4603      	mov	r3, r0
 8009bba:	db0b      	blt.n	8009bd4 <scalbnf+0x4c>
 8009bbc:	f3c0 52c7 	ubfx	r2, r0, #23, #8
 8009bc0:	4604      	mov	r4, r0
 8009bc2:	3a19      	subs	r2, #25
 8009bc4:	442a      	add	r2, r5
 8009bc6:	2afe      	cmp	r2, #254	; 0xfe
 8009bc8:	dd0a      	ble.n	8009be0 <scalbnf+0x58>
 8009bca:	4913      	ldr	r1, [pc, #76]	; (8009c18 <scalbnf+0x90>)
 8009bcc:	4618      	mov	r0, r3
 8009bce:	f361 001e 	bfi	r0, r1, #0, #31
 8009bd2:	e000      	b.n	8009bd6 <scalbnf+0x4e>
 8009bd4:	4911      	ldr	r1, [pc, #68]	; (8009c1c <scalbnf+0x94>)
 8009bd6:	f7f7 f98f 	bl	8000ef8 <__aeabi_fmul>
 8009bda:	e7e2      	b.n	8009ba2 <scalbnf+0x1a>
 8009bdc:	0dd2      	lsrs	r2, r2, #23
 8009bde:	e7f1      	b.n	8009bc4 <scalbnf+0x3c>
 8009be0:	2a00      	cmp	r2, #0
 8009be2:	dd05      	ble.n	8009bf0 <scalbnf+0x68>
 8009be4:	f024 40ff 	bic.w	r0, r4, #2139095040	; 0x7f800000
 8009be8:	ea40 53c2 	orr.w	r3, r0, r2, lsl #23
 8009bec:	4618      	mov	r0, r3
 8009bee:	bd38      	pop	{r3, r4, r5, pc}
 8009bf0:	f112 0f16 	cmn.w	r2, #22
 8009bf4:	da05      	bge.n	8009c02 <scalbnf+0x7a>
 8009bf6:	f24c 3250 	movw	r2, #50000	; 0xc350
 8009bfa:	4295      	cmp	r5, r2
 8009bfc:	dce5      	bgt.n	8009bca <scalbnf+0x42>
 8009bfe:	4907      	ldr	r1, [pc, #28]	; (8009c1c <scalbnf+0x94>)
 8009c00:	e7e4      	b.n	8009bcc <scalbnf+0x44>
 8009c02:	3219      	adds	r2, #25
 8009c04:	f024 44ff 	bic.w	r4, r4, #2139095040	; 0x7f800000
 8009c08:	f04f 514c 	mov.w	r1, #855638016	; 0x33000000
 8009c0c:	ea44 50c2 	orr.w	r0, r4, r2, lsl #23
 8009c10:	e7e1      	b.n	8009bd6 <scalbnf+0x4e>
 8009c12:	bf00      	nop
 8009c14:	ffff3cb0 	.word	0xffff3cb0
 8009c18:	7149f2ca 	.word	0x7149f2ca
 8009c1c:	0da24260 	.word	0x0da24260

08009c20 <_init>:
 8009c20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009c22:	bf00      	nop
 8009c24:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8009c26:	bc08      	pop	{r3}
 8009c28:	469e      	mov	lr, r3
 8009c2a:	4770      	bx	lr

08009c2c <_fini>:
 8009c2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009c2e:	bf00      	nop
 8009c30:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8009c32:	bc08      	pop	{r3}
 8009c34:	469e      	mov	lr, r3
 8009c36:	4770      	bx	lr
