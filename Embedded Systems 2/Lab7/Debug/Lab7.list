
Lab7.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000073c0  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000c00  08007590  08007590  00017590  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08008190  08008190  00020ce4  2**0
                  CONTENTS
  4 .ARM          00000000  08008190  08008190  00020ce4  2**0
                  CONTENTS
  5 .preinit_array 00000000  08008190  08008190  00020ce4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08008190  08008190  00018190  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08008194  08008194  00018194  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000ce4  20000000  08008198  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000005c  20000ce4  08008e7c  00020ce4  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000d40  08008e7c  00020d40  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00020ce4  2**0
                  CONTENTS, READONLY
 12 .debug_info   00005b31  00000000  00000000  00020d0e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000ffb  00000000  00000000  0002683f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000250  00000000  00000000  00027840  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000001c8  00000000  00000000  00027a90  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00003f34  00000000  00000000  00027c58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000364c  00000000  00000000  0002bb8c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000b90e  00000000  00000000  0002f1d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0003aae6  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002124  00000000  00000000  0003ab3c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000ce4 	.word	0x20000ce4
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08007578 	.word	0x08007578

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000ce8 	.word	0x20000ce8
 800020c:	08007578 	.word	0x08007578

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <strcmp>:
 80002b0:	f810 2b01 	ldrb.w	r2, [r0], #1
 80002b4:	f811 3b01 	ldrb.w	r3, [r1], #1
 80002b8:	2a01      	cmp	r2, #1
 80002ba:	bf28      	it	cs
 80002bc:	429a      	cmpcs	r2, r3
 80002be:	d0f7      	beq.n	80002b0 <strcmp>
 80002c0:	1ad0      	subs	r0, r2, r3
 80002c2:	4770      	bx	lr

080002c4 <strlen>:
 80002c4:	4603      	mov	r3, r0
 80002c6:	f813 2b01 	ldrb.w	r2, [r3], #1
 80002ca:	2a00      	cmp	r2, #0
 80002cc:	d1fb      	bne.n	80002c6 <strlen+0x2>
 80002ce:	1a18      	subs	r0, r3, r0
 80002d0:	3801      	subs	r0, #1
 80002d2:	4770      	bx	lr

080002d4 <__aeabi_drsub>:
 80002d4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002d8:	e002      	b.n	80002e0 <__adddf3>
 80002da:	bf00      	nop

080002dc <__aeabi_dsub>:
 80002dc:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002e0 <__adddf3>:
 80002e0:	b530      	push	{r4, r5, lr}
 80002e2:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002e6:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002ea:	ea94 0f05 	teq	r4, r5
 80002ee:	bf08      	it	eq
 80002f0:	ea90 0f02 	teqeq	r0, r2
 80002f4:	bf1f      	itttt	ne
 80002f6:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002fa:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002fe:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000302:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000306:	f000 80e2 	beq.w	80004ce <__adddf3+0x1ee>
 800030a:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800030e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000312:	bfb8      	it	lt
 8000314:	426d      	neglt	r5, r5
 8000316:	dd0c      	ble.n	8000332 <__adddf3+0x52>
 8000318:	442c      	add	r4, r5
 800031a:	ea80 0202 	eor.w	r2, r0, r2
 800031e:	ea81 0303 	eor.w	r3, r1, r3
 8000322:	ea82 0000 	eor.w	r0, r2, r0
 8000326:	ea83 0101 	eor.w	r1, r3, r1
 800032a:	ea80 0202 	eor.w	r2, r0, r2
 800032e:	ea81 0303 	eor.w	r3, r1, r3
 8000332:	2d36      	cmp	r5, #54	; 0x36
 8000334:	bf88      	it	hi
 8000336:	bd30      	pophi	{r4, r5, pc}
 8000338:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800033c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000340:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000344:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x70>
 800034a:	4240      	negs	r0, r0
 800034c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000350:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000354:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000358:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800035c:	d002      	beq.n	8000364 <__adddf3+0x84>
 800035e:	4252      	negs	r2, r2
 8000360:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000364:	ea94 0f05 	teq	r4, r5
 8000368:	f000 80a7 	beq.w	80004ba <__adddf3+0x1da>
 800036c:	f1a4 0401 	sub.w	r4, r4, #1
 8000370:	f1d5 0e20 	rsbs	lr, r5, #32
 8000374:	db0d      	blt.n	8000392 <__adddf3+0xb2>
 8000376:	fa02 fc0e 	lsl.w	ip, r2, lr
 800037a:	fa22 f205 	lsr.w	r2, r2, r5
 800037e:	1880      	adds	r0, r0, r2
 8000380:	f141 0100 	adc.w	r1, r1, #0
 8000384:	fa03 f20e 	lsl.w	r2, r3, lr
 8000388:	1880      	adds	r0, r0, r2
 800038a:	fa43 f305 	asr.w	r3, r3, r5
 800038e:	4159      	adcs	r1, r3
 8000390:	e00e      	b.n	80003b0 <__adddf3+0xd0>
 8000392:	f1a5 0520 	sub.w	r5, r5, #32
 8000396:	f10e 0e20 	add.w	lr, lr, #32
 800039a:	2a01      	cmp	r2, #1
 800039c:	fa03 fc0e 	lsl.w	ip, r3, lr
 80003a0:	bf28      	it	cs
 80003a2:	f04c 0c02 	orrcs.w	ip, ip, #2
 80003a6:	fa43 f305 	asr.w	r3, r3, r5
 80003aa:	18c0      	adds	r0, r0, r3
 80003ac:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80003b0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003b4:	d507      	bpl.n	80003c6 <__adddf3+0xe6>
 80003b6:	f04f 0e00 	mov.w	lr, #0
 80003ba:	f1dc 0c00 	rsbs	ip, ip, #0
 80003be:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003c2:	eb6e 0101 	sbc.w	r1, lr, r1
 80003c6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003ca:	d31b      	bcc.n	8000404 <__adddf3+0x124>
 80003cc:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003d0:	d30c      	bcc.n	80003ec <__adddf3+0x10c>
 80003d2:	0849      	lsrs	r1, r1, #1
 80003d4:	ea5f 0030 	movs.w	r0, r0, rrx
 80003d8:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003dc:	f104 0401 	add.w	r4, r4, #1
 80003e0:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003e4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003e8:	f080 809a 	bcs.w	8000520 <__adddf3+0x240>
 80003ec:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003f0:	bf08      	it	eq
 80003f2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003f6:	f150 0000 	adcs.w	r0, r0, #0
 80003fa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003fe:	ea41 0105 	orr.w	r1, r1, r5
 8000402:	bd30      	pop	{r4, r5, pc}
 8000404:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000408:	4140      	adcs	r0, r0
 800040a:	eb41 0101 	adc.w	r1, r1, r1
 800040e:	3c01      	subs	r4, #1
 8000410:	bf28      	it	cs
 8000412:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000416:	d2e9      	bcs.n	80003ec <__adddf3+0x10c>
 8000418:	f091 0f00 	teq	r1, #0
 800041c:	bf04      	itt	eq
 800041e:	4601      	moveq	r1, r0
 8000420:	2000      	moveq	r0, #0
 8000422:	fab1 f381 	clz	r3, r1
 8000426:	bf08      	it	eq
 8000428:	3320      	addeq	r3, #32
 800042a:	f1a3 030b 	sub.w	r3, r3, #11
 800042e:	f1b3 0220 	subs.w	r2, r3, #32
 8000432:	da0c      	bge.n	800044e <__adddf3+0x16e>
 8000434:	320c      	adds	r2, #12
 8000436:	dd08      	ble.n	800044a <__adddf3+0x16a>
 8000438:	f102 0c14 	add.w	ip, r2, #20
 800043c:	f1c2 020c 	rsb	r2, r2, #12
 8000440:	fa01 f00c 	lsl.w	r0, r1, ip
 8000444:	fa21 f102 	lsr.w	r1, r1, r2
 8000448:	e00c      	b.n	8000464 <__adddf3+0x184>
 800044a:	f102 0214 	add.w	r2, r2, #20
 800044e:	bfd8      	it	le
 8000450:	f1c2 0c20 	rsble	ip, r2, #32
 8000454:	fa01 f102 	lsl.w	r1, r1, r2
 8000458:	fa20 fc0c 	lsr.w	ip, r0, ip
 800045c:	bfdc      	itt	le
 800045e:	ea41 010c 	orrle.w	r1, r1, ip
 8000462:	4090      	lslle	r0, r2
 8000464:	1ae4      	subs	r4, r4, r3
 8000466:	bfa2      	ittt	ge
 8000468:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800046c:	4329      	orrge	r1, r5
 800046e:	bd30      	popge	{r4, r5, pc}
 8000470:	ea6f 0404 	mvn.w	r4, r4
 8000474:	3c1f      	subs	r4, #31
 8000476:	da1c      	bge.n	80004b2 <__adddf3+0x1d2>
 8000478:	340c      	adds	r4, #12
 800047a:	dc0e      	bgt.n	800049a <__adddf3+0x1ba>
 800047c:	f104 0414 	add.w	r4, r4, #20
 8000480:	f1c4 0220 	rsb	r2, r4, #32
 8000484:	fa20 f004 	lsr.w	r0, r0, r4
 8000488:	fa01 f302 	lsl.w	r3, r1, r2
 800048c:	ea40 0003 	orr.w	r0, r0, r3
 8000490:	fa21 f304 	lsr.w	r3, r1, r4
 8000494:	ea45 0103 	orr.w	r1, r5, r3
 8000498:	bd30      	pop	{r4, r5, pc}
 800049a:	f1c4 040c 	rsb	r4, r4, #12
 800049e:	f1c4 0220 	rsb	r2, r4, #32
 80004a2:	fa20 f002 	lsr.w	r0, r0, r2
 80004a6:	fa01 f304 	lsl.w	r3, r1, r4
 80004aa:	ea40 0003 	orr.w	r0, r0, r3
 80004ae:	4629      	mov	r1, r5
 80004b0:	bd30      	pop	{r4, r5, pc}
 80004b2:	fa21 f004 	lsr.w	r0, r1, r4
 80004b6:	4629      	mov	r1, r5
 80004b8:	bd30      	pop	{r4, r5, pc}
 80004ba:	f094 0f00 	teq	r4, #0
 80004be:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004c2:	bf06      	itte	eq
 80004c4:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004c8:	3401      	addeq	r4, #1
 80004ca:	3d01      	subne	r5, #1
 80004cc:	e74e      	b.n	800036c <__adddf3+0x8c>
 80004ce:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004d2:	bf18      	it	ne
 80004d4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004d8:	d029      	beq.n	800052e <__adddf3+0x24e>
 80004da:	ea94 0f05 	teq	r4, r5
 80004de:	bf08      	it	eq
 80004e0:	ea90 0f02 	teqeq	r0, r2
 80004e4:	d005      	beq.n	80004f2 <__adddf3+0x212>
 80004e6:	ea54 0c00 	orrs.w	ip, r4, r0
 80004ea:	bf04      	itt	eq
 80004ec:	4619      	moveq	r1, r3
 80004ee:	4610      	moveq	r0, r2
 80004f0:	bd30      	pop	{r4, r5, pc}
 80004f2:	ea91 0f03 	teq	r1, r3
 80004f6:	bf1e      	ittt	ne
 80004f8:	2100      	movne	r1, #0
 80004fa:	2000      	movne	r0, #0
 80004fc:	bd30      	popne	{r4, r5, pc}
 80004fe:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000502:	d105      	bne.n	8000510 <__adddf3+0x230>
 8000504:	0040      	lsls	r0, r0, #1
 8000506:	4149      	adcs	r1, r1
 8000508:	bf28      	it	cs
 800050a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800050e:	bd30      	pop	{r4, r5, pc}
 8000510:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000514:	bf3c      	itt	cc
 8000516:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800051a:	bd30      	popcc	{r4, r5, pc}
 800051c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000520:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000524:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000528:	f04f 0000 	mov.w	r0, #0
 800052c:	bd30      	pop	{r4, r5, pc}
 800052e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000532:	bf1a      	itte	ne
 8000534:	4619      	movne	r1, r3
 8000536:	4610      	movne	r0, r2
 8000538:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 800053c:	bf1c      	itt	ne
 800053e:	460b      	movne	r3, r1
 8000540:	4602      	movne	r2, r0
 8000542:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000546:	bf06      	itte	eq
 8000548:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800054c:	ea91 0f03 	teqeq	r1, r3
 8000550:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000554:	bd30      	pop	{r4, r5, pc}
 8000556:	bf00      	nop

08000558 <__aeabi_ui2d>:
 8000558:	f090 0f00 	teq	r0, #0
 800055c:	bf04      	itt	eq
 800055e:	2100      	moveq	r1, #0
 8000560:	4770      	bxeq	lr
 8000562:	b530      	push	{r4, r5, lr}
 8000564:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000568:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800056c:	f04f 0500 	mov.w	r5, #0
 8000570:	f04f 0100 	mov.w	r1, #0
 8000574:	e750      	b.n	8000418 <__adddf3+0x138>
 8000576:	bf00      	nop

08000578 <__aeabi_i2d>:
 8000578:	f090 0f00 	teq	r0, #0
 800057c:	bf04      	itt	eq
 800057e:	2100      	moveq	r1, #0
 8000580:	4770      	bxeq	lr
 8000582:	b530      	push	{r4, r5, lr}
 8000584:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000588:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800058c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000590:	bf48      	it	mi
 8000592:	4240      	negmi	r0, r0
 8000594:	f04f 0100 	mov.w	r1, #0
 8000598:	e73e      	b.n	8000418 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_f2d>:
 800059c:	0042      	lsls	r2, r0, #1
 800059e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80005a2:	ea4f 0131 	mov.w	r1, r1, rrx
 80005a6:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80005aa:	bf1f      	itttt	ne
 80005ac:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80005b0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005b4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005b8:	4770      	bxne	lr
 80005ba:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005be:	bf08      	it	eq
 80005c0:	4770      	bxeq	lr
 80005c2:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005c6:	bf04      	itt	eq
 80005c8:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005cc:	4770      	bxeq	lr
 80005ce:	b530      	push	{r4, r5, lr}
 80005d0:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005d4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005d8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005dc:	e71c      	b.n	8000418 <__adddf3+0x138>
 80005de:	bf00      	nop

080005e0 <__aeabi_ul2d>:
 80005e0:	ea50 0201 	orrs.w	r2, r0, r1
 80005e4:	bf08      	it	eq
 80005e6:	4770      	bxeq	lr
 80005e8:	b530      	push	{r4, r5, lr}
 80005ea:	f04f 0500 	mov.w	r5, #0
 80005ee:	e00a      	b.n	8000606 <__aeabi_l2d+0x16>

080005f0 <__aeabi_l2d>:
 80005f0:	ea50 0201 	orrs.w	r2, r0, r1
 80005f4:	bf08      	it	eq
 80005f6:	4770      	bxeq	lr
 80005f8:	b530      	push	{r4, r5, lr}
 80005fa:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005fe:	d502      	bpl.n	8000606 <__aeabi_l2d+0x16>
 8000600:	4240      	negs	r0, r0
 8000602:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000606:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800060a:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800060e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000612:	f43f aed8 	beq.w	80003c6 <__adddf3+0xe6>
 8000616:	f04f 0203 	mov.w	r2, #3
 800061a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800061e:	bf18      	it	ne
 8000620:	3203      	addne	r2, #3
 8000622:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000626:	bf18      	it	ne
 8000628:	3203      	addne	r2, #3
 800062a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800062e:	f1c2 0320 	rsb	r3, r2, #32
 8000632:	fa00 fc03 	lsl.w	ip, r0, r3
 8000636:	fa20 f002 	lsr.w	r0, r0, r2
 800063a:	fa01 fe03 	lsl.w	lr, r1, r3
 800063e:	ea40 000e 	orr.w	r0, r0, lr
 8000642:	fa21 f102 	lsr.w	r1, r1, r2
 8000646:	4414      	add	r4, r2
 8000648:	e6bd      	b.n	80003c6 <__adddf3+0xe6>
 800064a:	bf00      	nop

0800064c <__aeabi_dmul>:
 800064c:	b570      	push	{r4, r5, r6, lr}
 800064e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000652:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000656:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800065a:	bf1d      	ittte	ne
 800065c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000660:	ea94 0f0c 	teqne	r4, ip
 8000664:	ea95 0f0c 	teqne	r5, ip
 8000668:	f000 f8de 	bleq	8000828 <__aeabi_dmul+0x1dc>
 800066c:	442c      	add	r4, r5
 800066e:	ea81 0603 	eor.w	r6, r1, r3
 8000672:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000676:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800067a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800067e:	bf18      	it	ne
 8000680:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000684:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000688:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800068c:	d038      	beq.n	8000700 <__aeabi_dmul+0xb4>
 800068e:	fba0 ce02 	umull	ip, lr, r0, r2
 8000692:	f04f 0500 	mov.w	r5, #0
 8000696:	fbe1 e502 	umlal	lr, r5, r1, r2
 800069a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800069e:	fbe0 e503 	umlal	lr, r5, r0, r3
 80006a2:	f04f 0600 	mov.w	r6, #0
 80006a6:	fbe1 5603 	umlal	r5, r6, r1, r3
 80006aa:	f09c 0f00 	teq	ip, #0
 80006ae:	bf18      	it	ne
 80006b0:	f04e 0e01 	orrne.w	lr, lr, #1
 80006b4:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80006b8:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80006bc:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006c0:	d204      	bcs.n	80006cc <__aeabi_dmul+0x80>
 80006c2:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006c6:	416d      	adcs	r5, r5
 80006c8:	eb46 0606 	adc.w	r6, r6, r6
 80006cc:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006d0:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006d4:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006d8:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006dc:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006e0:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006e4:	bf88      	it	hi
 80006e6:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006ea:	d81e      	bhi.n	800072a <__aeabi_dmul+0xde>
 80006ec:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006f0:	bf08      	it	eq
 80006f2:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006f6:	f150 0000 	adcs.w	r0, r0, #0
 80006fa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006fe:	bd70      	pop	{r4, r5, r6, pc}
 8000700:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000704:	ea46 0101 	orr.w	r1, r6, r1
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	ea81 0103 	eor.w	r1, r1, r3
 8000710:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000714:	bfc2      	ittt	gt
 8000716:	ebd4 050c 	rsbsgt	r5, r4, ip
 800071a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800071e:	bd70      	popgt	{r4, r5, r6, pc}
 8000720:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000724:	f04f 0e00 	mov.w	lr, #0
 8000728:	3c01      	subs	r4, #1
 800072a:	f300 80ab 	bgt.w	8000884 <__aeabi_dmul+0x238>
 800072e:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000732:	bfde      	ittt	le
 8000734:	2000      	movle	r0, #0
 8000736:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800073a:	bd70      	pople	{r4, r5, r6, pc}
 800073c:	f1c4 0400 	rsb	r4, r4, #0
 8000740:	3c20      	subs	r4, #32
 8000742:	da35      	bge.n	80007b0 <__aeabi_dmul+0x164>
 8000744:	340c      	adds	r4, #12
 8000746:	dc1b      	bgt.n	8000780 <__aeabi_dmul+0x134>
 8000748:	f104 0414 	add.w	r4, r4, #20
 800074c:	f1c4 0520 	rsb	r5, r4, #32
 8000750:	fa00 f305 	lsl.w	r3, r0, r5
 8000754:	fa20 f004 	lsr.w	r0, r0, r4
 8000758:	fa01 f205 	lsl.w	r2, r1, r5
 800075c:	ea40 0002 	orr.w	r0, r0, r2
 8000760:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000764:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000768:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800076c:	fa21 f604 	lsr.w	r6, r1, r4
 8000770:	eb42 0106 	adc.w	r1, r2, r6
 8000774:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000778:	bf08      	it	eq
 800077a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800077e:	bd70      	pop	{r4, r5, r6, pc}
 8000780:	f1c4 040c 	rsb	r4, r4, #12
 8000784:	f1c4 0520 	rsb	r5, r4, #32
 8000788:	fa00 f304 	lsl.w	r3, r0, r4
 800078c:	fa20 f005 	lsr.w	r0, r0, r5
 8000790:	fa01 f204 	lsl.w	r2, r1, r4
 8000794:	ea40 0002 	orr.w	r0, r0, r2
 8000798:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800079c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80007a0:	f141 0100 	adc.w	r1, r1, #0
 80007a4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007a8:	bf08      	it	eq
 80007aa:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007ae:	bd70      	pop	{r4, r5, r6, pc}
 80007b0:	f1c4 0520 	rsb	r5, r4, #32
 80007b4:	fa00 f205 	lsl.w	r2, r0, r5
 80007b8:	ea4e 0e02 	orr.w	lr, lr, r2
 80007bc:	fa20 f304 	lsr.w	r3, r0, r4
 80007c0:	fa01 f205 	lsl.w	r2, r1, r5
 80007c4:	ea43 0302 	orr.w	r3, r3, r2
 80007c8:	fa21 f004 	lsr.w	r0, r1, r4
 80007cc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007d0:	fa21 f204 	lsr.w	r2, r1, r4
 80007d4:	ea20 0002 	bic.w	r0, r0, r2
 80007d8:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007dc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007e0:	bf08      	it	eq
 80007e2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007e6:	bd70      	pop	{r4, r5, r6, pc}
 80007e8:	f094 0f00 	teq	r4, #0
 80007ec:	d10f      	bne.n	800080e <__aeabi_dmul+0x1c2>
 80007ee:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007f2:	0040      	lsls	r0, r0, #1
 80007f4:	eb41 0101 	adc.w	r1, r1, r1
 80007f8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007fc:	bf08      	it	eq
 80007fe:	3c01      	subeq	r4, #1
 8000800:	d0f7      	beq.n	80007f2 <__aeabi_dmul+0x1a6>
 8000802:	ea41 0106 	orr.w	r1, r1, r6
 8000806:	f095 0f00 	teq	r5, #0
 800080a:	bf18      	it	ne
 800080c:	4770      	bxne	lr
 800080e:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000812:	0052      	lsls	r2, r2, #1
 8000814:	eb43 0303 	adc.w	r3, r3, r3
 8000818:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 800081c:	bf08      	it	eq
 800081e:	3d01      	subeq	r5, #1
 8000820:	d0f7      	beq.n	8000812 <__aeabi_dmul+0x1c6>
 8000822:	ea43 0306 	orr.w	r3, r3, r6
 8000826:	4770      	bx	lr
 8000828:	ea94 0f0c 	teq	r4, ip
 800082c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000830:	bf18      	it	ne
 8000832:	ea95 0f0c 	teqne	r5, ip
 8000836:	d00c      	beq.n	8000852 <__aeabi_dmul+0x206>
 8000838:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800083c:	bf18      	it	ne
 800083e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000842:	d1d1      	bne.n	80007e8 <__aeabi_dmul+0x19c>
 8000844:	ea81 0103 	eor.w	r1, r1, r3
 8000848:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000856:	bf06      	itte	eq
 8000858:	4610      	moveq	r0, r2
 800085a:	4619      	moveq	r1, r3
 800085c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000860:	d019      	beq.n	8000896 <__aeabi_dmul+0x24a>
 8000862:	ea94 0f0c 	teq	r4, ip
 8000866:	d102      	bne.n	800086e <__aeabi_dmul+0x222>
 8000868:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 800086c:	d113      	bne.n	8000896 <__aeabi_dmul+0x24a>
 800086e:	ea95 0f0c 	teq	r5, ip
 8000872:	d105      	bne.n	8000880 <__aeabi_dmul+0x234>
 8000874:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000878:	bf1c      	itt	ne
 800087a:	4610      	movne	r0, r2
 800087c:	4619      	movne	r1, r3
 800087e:	d10a      	bne.n	8000896 <__aeabi_dmul+0x24a>
 8000880:	ea81 0103 	eor.w	r1, r1, r3
 8000884:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000888:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800088c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000890:	f04f 0000 	mov.w	r0, #0
 8000894:	bd70      	pop	{r4, r5, r6, pc}
 8000896:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800089a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800089e:	bd70      	pop	{r4, r5, r6, pc}

080008a0 <__aeabi_ddiv>:
 80008a0:	b570      	push	{r4, r5, r6, lr}
 80008a2:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80008a6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80008aa:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80008ae:	bf1d      	ittte	ne
 80008b0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008b4:	ea94 0f0c 	teqne	r4, ip
 80008b8:	ea95 0f0c 	teqne	r5, ip
 80008bc:	f000 f8a7 	bleq	8000a0e <__aeabi_ddiv+0x16e>
 80008c0:	eba4 0405 	sub.w	r4, r4, r5
 80008c4:	ea81 0e03 	eor.w	lr, r1, r3
 80008c8:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008cc:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008d0:	f000 8088 	beq.w	80009e4 <__aeabi_ddiv+0x144>
 80008d4:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008d8:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008dc:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008e0:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008e4:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008e8:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008ec:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008f0:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008f4:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008f8:	429d      	cmp	r5, r3
 80008fa:	bf08      	it	eq
 80008fc:	4296      	cmpeq	r6, r2
 80008fe:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8000902:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000906:	d202      	bcs.n	800090e <__aeabi_ddiv+0x6e>
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	1ab6      	subs	r6, r6, r2
 8000910:	eb65 0503 	sbc.w	r5, r5, r3
 8000914:	085b      	lsrs	r3, r3, #1
 8000916:	ea4f 0232 	mov.w	r2, r2, rrx
 800091a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800091e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8000922:	ebb6 0e02 	subs.w	lr, r6, r2
 8000926:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092a:	bf22      	ittt	cs
 800092c:	1ab6      	subcs	r6, r6, r2
 800092e:	4675      	movcs	r5, lr
 8000930:	ea40 000c 	orrcs.w	r0, r0, ip
 8000934:	085b      	lsrs	r3, r3, #1
 8000936:	ea4f 0232 	mov.w	r2, r2, rrx
 800093a:	ebb6 0e02 	subs.w	lr, r6, r2
 800093e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000942:	bf22      	ittt	cs
 8000944:	1ab6      	subcs	r6, r6, r2
 8000946:	4675      	movcs	r5, lr
 8000948:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 800094c:	085b      	lsrs	r3, r3, #1
 800094e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000952:	ebb6 0e02 	subs.w	lr, r6, r2
 8000956:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095a:	bf22      	ittt	cs
 800095c:	1ab6      	subcs	r6, r6, r2
 800095e:	4675      	movcs	r5, lr
 8000960:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000964:	085b      	lsrs	r3, r3, #1
 8000966:	ea4f 0232 	mov.w	r2, r2, rrx
 800096a:	ebb6 0e02 	subs.w	lr, r6, r2
 800096e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000972:	bf22      	ittt	cs
 8000974:	1ab6      	subcs	r6, r6, r2
 8000976:	4675      	movcs	r5, lr
 8000978:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 800097c:	ea55 0e06 	orrs.w	lr, r5, r6
 8000980:	d018      	beq.n	80009b4 <__aeabi_ddiv+0x114>
 8000982:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000986:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800098a:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800098e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000992:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000996:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800099a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800099e:	d1c0      	bne.n	8000922 <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009a4:	d10b      	bne.n	80009be <__aeabi_ddiv+0x11e>
 80009a6:	ea41 0100 	orr.w	r1, r1, r0
 80009aa:	f04f 0000 	mov.w	r0, #0
 80009ae:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 80009b2:	e7b6      	b.n	8000922 <__aeabi_ddiv+0x82>
 80009b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009b8:	bf04      	itt	eq
 80009ba:	4301      	orreq	r1, r0
 80009bc:	2000      	moveq	r0, #0
 80009be:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009c2:	bf88      	it	hi
 80009c4:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009c8:	f63f aeaf 	bhi.w	800072a <__aeabi_dmul+0xde>
 80009cc:	ebb5 0c03 	subs.w	ip, r5, r3
 80009d0:	bf04      	itt	eq
 80009d2:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009d6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009da:	f150 0000 	adcs.w	r0, r0, #0
 80009de:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009e2:	bd70      	pop	{r4, r5, r6, pc}
 80009e4:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009e8:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009ec:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009f0:	bfc2      	ittt	gt
 80009f2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009f6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009fa:	bd70      	popgt	{r4, r5, r6, pc}
 80009fc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000a00:	f04f 0e00 	mov.w	lr, #0
 8000a04:	3c01      	subs	r4, #1
 8000a06:	e690      	b.n	800072a <__aeabi_dmul+0xde>
 8000a08:	ea45 0e06 	orr.w	lr, r5, r6
 8000a0c:	e68d      	b.n	800072a <__aeabi_dmul+0xde>
 8000a0e:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000a12:	ea94 0f0c 	teq	r4, ip
 8000a16:	bf08      	it	eq
 8000a18:	ea95 0f0c 	teqeq	r5, ip
 8000a1c:	f43f af3b 	beq.w	8000896 <__aeabi_dmul+0x24a>
 8000a20:	ea94 0f0c 	teq	r4, ip
 8000a24:	d10a      	bne.n	8000a3c <__aeabi_ddiv+0x19c>
 8000a26:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a2a:	f47f af34 	bne.w	8000896 <__aeabi_dmul+0x24a>
 8000a2e:	ea95 0f0c 	teq	r5, ip
 8000a32:	f47f af25 	bne.w	8000880 <__aeabi_dmul+0x234>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e72c      	b.n	8000896 <__aeabi_dmul+0x24a>
 8000a3c:	ea95 0f0c 	teq	r5, ip
 8000a40:	d106      	bne.n	8000a50 <__aeabi_ddiv+0x1b0>
 8000a42:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a46:	f43f aefd 	beq.w	8000844 <__aeabi_dmul+0x1f8>
 8000a4a:	4610      	mov	r0, r2
 8000a4c:	4619      	mov	r1, r3
 8000a4e:	e722      	b.n	8000896 <__aeabi_dmul+0x24a>
 8000a50:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a54:	bf18      	it	ne
 8000a56:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a5a:	f47f aec5 	bne.w	80007e8 <__aeabi_dmul+0x19c>
 8000a5e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a62:	f47f af0d 	bne.w	8000880 <__aeabi_dmul+0x234>
 8000a66:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a6a:	f47f aeeb 	bne.w	8000844 <__aeabi_dmul+0x1f8>
 8000a6e:	e712      	b.n	8000896 <__aeabi_dmul+0x24a>

08000a70 <__gedf2>:
 8000a70:	f04f 3cff 	mov.w	ip, #4294967295
 8000a74:	e006      	b.n	8000a84 <__cmpdf2+0x4>
 8000a76:	bf00      	nop

08000a78 <__ledf2>:
 8000a78:	f04f 0c01 	mov.w	ip, #1
 8000a7c:	e002      	b.n	8000a84 <__cmpdf2+0x4>
 8000a7e:	bf00      	nop

08000a80 <__cmpdf2>:
 8000a80:	f04f 0c01 	mov.w	ip, #1
 8000a84:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a88:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a8c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	bf18      	it	ne
 8000a96:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a9a:	d01b      	beq.n	8000ad4 <__cmpdf2+0x54>
 8000a9c:	b001      	add	sp, #4
 8000a9e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000aa2:	bf0c      	ite	eq
 8000aa4:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000aa8:	ea91 0f03 	teqne	r1, r3
 8000aac:	bf02      	ittt	eq
 8000aae:	ea90 0f02 	teqeq	r0, r2
 8000ab2:	2000      	moveq	r0, #0
 8000ab4:	4770      	bxeq	lr
 8000ab6:	f110 0f00 	cmn.w	r0, #0
 8000aba:	ea91 0f03 	teq	r1, r3
 8000abe:	bf58      	it	pl
 8000ac0:	4299      	cmppl	r1, r3
 8000ac2:	bf08      	it	eq
 8000ac4:	4290      	cmpeq	r0, r2
 8000ac6:	bf2c      	ite	cs
 8000ac8:	17d8      	asrcs	r0, r3, #31
 8000aca:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000ace:	f040 0001 	orr.w	r0, r0, #1
 8000ad2:	4770      	bx	lr
 8000ad4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ad8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000adc:	d102      	bne.n	8000ae4 <__cmpdf2+0x64>
 8000ade:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ae2:	d107      	bne.n	8000af4 <__cmpdf2+0x74>
 8000ae4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ae8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aec:	d1d6      	bne.n	8000a9c <__cmpdf2+0x1c>
 8000aee:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000af2:	d0d3      	beq.n	8000a9c <__cmpdf2+0x1c>
 8000af4:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000af8:	4770      	bx	lr
 8000afa:	bf00      	nop

08000afc <__aeabi_cdrcmple>:
 8000afc:	4684      	mov	ip, r0
 8000afe:	4610      	mov	r0, r2
 8000b00:	4662      	mov	r2, ip
 8000b02:	468c      	mov	ip, r1
 8000b04:	4619      	mov	r1, r3
 8000b06:	4663      	mov	r3, ip
 8000b08:	e000      	b.n	8000b0c <__aeabi_cdcmpeq>
 8000b0a:	bf00      	nop

08000b0c <__aeabi_cdcmpeq>:
 8000b0c:	b501      	push	{r0, lr}
 8000b0e:	f7ff ffb7 	bl	8000a80 <__cmpdf2>
 8000b12:	2800      	cmp	r0, #0
 8000b14:	bf48      	it	mi
 8000b16:	f110 0f00 	cmnmi.w	r0, #0
 8000b1a:	bd01      	pop	{r0, pc}

08000b1c <__aeabi_dcmpeq>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff fff4 	bl	8000b0c <__aeabi_cdcmpeq>
 8000b24:	bf0c      	ite	eq
 8000b26:	2001      	moveq	r0, #1
 8000b28:	2000      	movne	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmplt>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffea 	bl	8000b0c <__aeabi_cdcmpeq>
 8000b38:	bf34      	ite	cc
 8000b3a:	2001      	movcc	r0, #1
 8000b3c:	2000      	movcs	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmple>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffe0 	bl	8000b0c <__aeabi_cdcmpeq>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpge>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffce 	bl	8000afc <__aeabi_cdrcmple>
 8000b60:	bf94      	ite	ls
 8000b62:	2001      	movls	r0, #1
 8000b64:	2000      	movhi	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpgt>:
 8000b6c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b70:	f7ff ffc4 	bl	8000afc <__aeabi_cdrcmple>
 8000b74:	bf34      	ite	cc
 8000b76:	2001      	movcc	r0, #1
 8000b78:	2000      	movcs	r0, #0
 8000b7a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b7e:	bf00      	nop

08000b80 <__aeabi_dcmpun>:
 8000b80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b88:	d102      	bne.n	8000b90 <__aeabi_dcmpun+0x10>
 8000b8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b8e:	d10a      	bne.n	8000ba6 <__aeabi_dcmpun+0x26>
 8000b90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b98:	d102      	bne.n	8000ba0 <__aeabi_dcmpun+0x20>
 8000b9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b9e:	d102      	bne.n	8000ba6 <__aeabi_dcmpun+0x26>
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	f04f 0001 	mov.w	r0, #1
 8000baa:	4770      	bx	lr

08000bac <__aeabi_d2iz>:
 8000bac:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bb0:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bb4:	d215      	bcs.n	8000be2 <__aeabi_d2iz+0x36>
 8000bb6:	d511      	bpl.n	8000bdc <__aeabi_d2iz+0x30>
 8000bb8:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bbc:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bc0:	d912      	bls.n	8000be8 <__aeabi_d2iz+0x3c>
 8000bc2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bc6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bca:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bce:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000bd2:	fa23 f002 	lsr.w	r0, r3, r2
 8000bd6:	bf18      	it	ne
 8000bd8:	4240      	negne	r0, r0
 8000bda:	4770      	bx	lr
 8000bdc:	f04f 0000 	mov.w	r0, #0
 8000be0:	4770      	bx	lr
 8000be2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000be6:	d105      	bne.n	8000bf4 <__aeabi_d2iz+0x48>
 8000be8:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bec:	bf08      	it	eq
 8000bee:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bf2:	4770      	bx	lr
 8000bf4:	f04f 0000 	mov.w	r0, #0
 8000bf8:	4770      	bx	lr
 8000bfa:	bf00      	nop

08000bfc <__aeabi_d2uiz>:
 8000bfc:	004a      	lsls	r2, r1, #1
 8000bfe:	d211      	bcs.n	8000c24 <__aeabi_d2uiz+0x28>
 8000c00:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000c04:	d211      	bcs.n	8000c2a <__aeabi_d2uiz+0x2e>
 8000c06:	d50d      	bpl.n	8000c24 <__aeabi_d2uiz+0x28>
 8000c08:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000c0c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000c10:	d40e      	bmi.n	8000c30 <__aeabi_d2uiz+0x34>
 8000c12:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c16:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000c1a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000c1e:	fa23 f002 	lsr.w	r0, r3, r2
 8000c22:	4770      	bx	lr
 8000c24:	f04f 0000 	mov.w	r0, #0
 8000c28:	4770      	bx	lr
 8000c2a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000c2e:	d102      	bne.n	8000c36 <__aeabi_d2uiz+0x3a>
 8000c30:	f04f 30ff 	mov.w	r0, #4294967295
 8000c34:	4770      	bx	lr
 8000c36:	f04f 0000 	mov.w	r0, #0
 8000c3a:	4770      	bx	lr

08000c3c <__aeabi_d2f>:
 8000c3c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000c40:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000c44:	bf24      	itt	cs
 8000c46:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000c4a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000c4e:	d90d      	bls.n	8000c6c <__aeabi_d2f+0x30>
 8000c50:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c54:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c58:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c5c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c60:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c64:	bf08      	it	eq
 8000c66:	f020 0001 	biceq.w	r0, r0, #1
 8000c6a:	4770      	bx	lr
 8000c6c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c70:	d121      	bne.n	8000cb6 <__aeabi_d2f+0x7a>
 8000c72:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c76:	bfbc      	itt	lt
 8000c78:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c7c:	4770      	bxlt	lr
 8000c7e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c82:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c86:	f1c2 0218 	rsb	r2, r2, #24
 8000c8a:	f1c2 0c20 	rsb	ip, r2, #32
 8000c8e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c92:	fa20 f002 	lsr.w	r0, r0, r2
 8000c96:	bf18      	it	ne
 8000c98:	f040 0001 	orrne.w	r0, r0, #1
 8000c9c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000ca0:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000ca4:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000ca8:	ea40 000c 	orr.w	r0, r0, ip
 8000cac:	fa23 f302 	lsr.w	r3, r3, r2
 8000cb0:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000cb4:	e7cc      	b.n	8000c50 <__aeabi_d2f+0x14>
 8000cb6:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000cba:	d107      	bne.n	8000ccc <__aeabi_d2f+0x90>
 8000cbc:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000cc0:	bf1e      	ittt	ne
 8000cc2:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000cc6:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000cca:	4770      	bxne	lr
 8000ccc:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000cd0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000cd4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000cd8:	4770      	bx	lr
 8000cda:	bf00      	nop

08000cdc <__aeabi_d2lz>:
 8000cdc:	b538      	push	{r3, r4, r5, lr}
 8000cde:	4605      	mov	r5, r0
 8000ce0:	460c      	mov	r4, r1
 8000ce2:	4628      	mov	r0, r5
 8000ce4:	4621      	mov	r1, r4
 8000ce6:	2200      	movs	r2, #0
 8000ce8:	2300      	movs	r3, #0
 8000cea:	f7ff ff21 	bl	8000b30 <__aeabi_dcmplt>
 8000cee:	b928      	cbnz	r0, 8000cfc <__aeabi_d2lz+0x20>
 8000cf0:	4628      	mov	r0, r5
 8000cf2:	4621      	mov	r1, r4
 8000cf4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000cf8:	f000 b80a 	b.w	8000d10 <__aeabi_d2ulz>
 8000cfc:	4628      	mov	r0, r5
 8000cfe:	f104 4100 	add.w	r1, r4, #2147483648	; 0x80000000
 8000d02:	f000 f805 	bl	8000d10 <__aeabi_d2ulz>
 8000d06:	4240      	negs	r0, r0
 8000d08:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d0c:	bd38      	pop	{r3, r4, r5, pc}
 8000d0e:	bf00      	nop

08000d10 <__aeabi_d2ulz>:
 8000d10:	b5d0      	push	{r4, r6, r7, lr}
 8000d12:	4b0c      	ldr	r3, [pc, #48]	; (8000d44 <__aeabi_d2ulz+0x34>)
 8000d14:	2200      	movs	r2, #0
 8000d16:	4606      	mov	r6, r0
 8000d18:	460f      	mov	r7, r1
 8000d1a:	f7ff fc97 	bl	800064c <__aeabi_dmul>
 8000d1e:	f7ff ff6d 	bl	8000bfc <__aeabi_d2uiz>
 8000d22:	4604      	mov	r4, r0
 8000d24:	f7ff fc18 	bl	8000558 <__aeabi_ui2d>
 8000d28:	4b07      	ldr	r3, [pc, #28]	; (8000d48 <__aeabi_d2ulz+0x38>)
 8000d2a:	2200      	movs	r2, #0
 8000d2c:	f7ff fc8e 	bl	800064c <__aeabi_dmul>
 8000d30:	4602      	mov	r2, r0
 8000d32:	460b      	mov	r3, r1
 8000d34:	4630      	mov	r0, r6
 8000d36:	4639      	mov	r1, r7
 8000d38:	f7ff fad0 	bl	80002dc <__aeabi_dsub>
 8000d3c:	f7ff ff5e 	bl	8000bfc <__aeabi_d2uiz>
 8000d40:	4621      	mov	r1, r4
 8000d42:	bdd0      	pop	{r4, r6, r7, pc}
 8000d44:	3df00000 	.word	0x3df00000
 8000d48:	41f00000 	.word	0x41f00000

08000d4c <delay_Init>:
	Note: Uses TIM2 prescaled to 1MHz
*/

#include "registers_new.h"
#include <inttypes.h>
void delay_Init() {
 8000d4c:	b480      	push	{r7}
 8000d4e:	b083      	sub	sp, #12
 8000d50:	af00      	add	r7, sp, #0
	volatile RCC* RCC_Target = (RCC*) RCC_BASE;
 8000d52:	4b11      	ldr	r3, [pc, #68]	; (8000d98 <delay_Init+0x4c>)
 8000d54:	607b      	str	r3, [r7, #4]
	volatile TIMER* TIM2 = (TIMER*) TIM2_BASE;
 8000d56:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000d5a:	603b      	str	r3, [r7, #0]

	// Enable TIM2 in APB1ENR
	RCC_Target->APB1ENR |= RCC_TIM2EN;
 8000d5c:	687b      	ldr	r3, [r7, #4]
 8000d5e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000d60:	f043 0201 	orr.w	r2, r3, #1
 8000d64:	687b      	ldr	r3, [r7, #4]
 8000d66:	641a      	str	r2, [r3, #64]	; 0x40

	// Set TIM2 CR configurations, one-pulse & countdown
	TIM2->CR1 |= (TIM_OPM | TIM_DIR);
 8000d68:	683b      	ldr	r3, [r7, #0]
 8000d6a:	681b      	ldr	r3, [r3, #0]
 8000d6c:	f043 0218 	orr.w	r2, r3, #24
 8000d70:	683b      	ldr	r3, [r7, #0]
 8000d72:	601a      	str	r2, [r3, #0]

	// Set TIM2 prescale to 16, aka 1 count = 1us
	TIM2->PSC = 16;
 8000d74:	683b      	ldr	r3, [r7, #0]
 8000d76:	2210      	movs	r2, #16
 8000d78:	629a      	str	r2, [r3, #40]	; 0x28

	// Prescale fix
	// Forces an event to be generated and then
	// clears it right away which tricks the timer
	// into applying the prescale somehow
	TIM2->EGR = 1;
 8000d7a:	683b      	ldr	r3, [r7, #0]
 8000d7c:	2201      	movs	r2, #1
 8000d7e:	615a      	str	r2, [r3, #20]
	TIM2->SR &= ~(1);
 8000d80:	683b      	ldr	r3, [r7, #0]
 8000d82:	691b      	ldr	r3, [r3, #16]
 8000d84:	f023 0201 	bic.w	r2, r3, #1
 8000d88:	683b      	ldr	r3, [r7, #0]
 8000d8a:	611a      	str	r2, [r3, #16]

	return;
 8000d8c:	bf00      	nop
}
 8000d8e:	370c      	adds	r7, #12
 8000d90:	46bd      	mov	sp, r7
 8000d92:	bc80      	pop	{r7}
 8000d94:	4770      	bx	lr
 8000d96:	bf00      	nop
 8000d98:	40023800 	.word	0x40023800

08000d9c <delay_us>:
	}

	return;
}

void delay_us(uint32_t delay) {
 8000d9c:	b480      	push	{r7}
 8000d9e:	b087      	sub	sp, #28
 8000da0:	af00      	add	r7, sp, #0
 8000da2:	6078      	str	r0, [r7, #4]
	// Initialize Variables
	volatile TIMER* TIM2 = (TIMER*) TIM2_BASE;
 8000da4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000da8:	617b      	str	r3, [r7, #20]

	// Assert counting is not enabled
	TIM2->CR1 &= ~(TIM_CEN);
 8000daa:	697b      	ldr	r3, [r7, #20]
 8000dac:	681b      	ldr	r3, [r3, #0]
 8000dae:	f023 0201 	bic.w	r2, r3, #1
 8000db2:	697b      	ldr	r3, [r7, #20]
 8000db4:	601a      	str	r2, [r3, #0]

	// Write the desired count
	TIM2->CNT = delay;
 8000db6:	697b      	ldr	r3, [r7, #20]
 8000db8:	687a      	ldr	r2, [r7, #4]
 8000dba:	625a      	str	r2, [r3, #36]	; 0x24

	// Enable count
	TIM2->CR1 |= TIM_CEN;
 8000dbc:	697b      	ldr	r3, [r7, #20]
 8000dbe:	681b      	ldr	r3, [r3, #0]
 8000dc0:	f043 0201 	orr.w	r2, r3, #1
 8000dc4:	697b      	ldr	r3, [r7, #20]
 8000dc6:	601a      	str	r2, [r3, #0]

	// Busy loop
	uint32_t mask = (TIM_CEN);
 8000dc8:	2301      	movs	r3, #1
 8000dca:	613b      	str	r3, [r7, #16]
	volatile uint32_t contents = TIM2->CR1 & mask;
 8000dcc:	697b      	ldr	r3, [r7, #20]
 8000dce:	681a      	ldr	r2, [r3, #0]
 8000dd0:	693b      	ldr	r3, [r7, #16]
 8000dd2:	4013      	ands	r3, r2
 8000dd4:	60fb      	str	r3, [r7, #12]

	while(contents != 0) {
 8000dd6:	e004      	b.n	8000de2 <delay_us+0x46>
		contents = TIM2->CR1 & mask;
 8000dd8:	697b      	ldr	r3, [r7, #20]
 8000dda:	681a      	ldr	r2, [r3, #0]
 8000ddc:	693b      	ldr	r3, [r7, #16]
 8000dde:	4013      	ands	r3, r2
 8000de0:	60fb      	str	r3, [r7, #12]
	while(contents != 0) {
 8000de2:	68fb      	ldr	r3, [r7, #12]
 8000de4:	2b00      	cmp	r3, #0
 8000de6:	d1f7      	bne.n	8000dd8 <delay_us+0x3c>
	}

	return;
 8000de8:	bf00      	nop
}
 8000dea:	371c      	adds	r7, #28
 8000dec:	46bd      	mov	sp, r7
 8000dee:	bc80      	pop	{r7}
 8000df0:	4770      	bx	lr
	...

08000df4 <main>:
		{E, 5, zeldaTempo>>1},
		{0, 0, 0}
};

// main
int main(void){
 8000df4:	b580      	push	{r7, lr}
 8000df6:	b090      	sub	sp, #64	; 0x40
 8000df8:	af00      	add	r7, sp, #0
	init_usart2(115200,F_CPU);
 8000dfa:	4989      	ldr	r1, [pc, #548]	; (8001020 <main+0x22c>)
 8000dfc:	f44f 30e1 	mov.w	r0, #115200	; 0x1c200
 8000e00:	f000 ffca 	bl	8001d98 <init_usart2>

	delay_Init();
 8000e04:	f7ff ffa2 	bl	8000d4c <delay_Init>

	music_Init();
 8000e08:	f000 fbd2 	bl	80015b0 <music_Init>

	period_Init();
 8000e0c:	f000 fd76 	bl	80018fc <period_Init>

	// Blank string for input
	char input[30] = "";
 8000e10:	2300      	movs	r3, #0
 8000e12:	603b      	str	r3, [r7, #0]
 8000e14:	1d3b      	adds	r3, r7, #4
 8000e16:	2200      	movs	r2, #0
 8000e18:	601a      	str	r2, [r3, #0]
 8000e1a:	605a      	str	r2, [r3, #4]
 8000e1c:	609a      	str	r2, [r3, #8]
 8000e1e:	60da      	str	r2, [r3, #12]
 8000e20:	611a      	str	r2, [r3, #16]
 8000e22:	615a      	str	r2, [r3, #20]
 8000e24:	831a      	strh	r2, [r3, #24]

	// Address to interact with
	uint32_t* address = 0;
 8000e26:	2300      	movs	r3, #0
 8000e28:	63fb      	str	r3, [r7, #60]	; 0x3c

	// Command variable
	int command = -1;
 8000e2a:	f04f 33ff 	mov.w	r3, #4294967295
 8000e2e:	637b      	str	r3, [r7, #52]	; 0x34

	// Last argument, either length to read or value to write
	uint32_t argument = 0;
 8000e30:	2300      	movs	r3, #0
 8000e32:	63bb      	str	r3, [r7, #56]	; 0x38

	// Welcome message
	printf("Evan's Memory Management Console\n\r");
 8000e34:	487b      	ldr	r0, [pc, #492]	; (8001024 <main+0x230>)
 8000e36:	f002 f8d1 	bl	8002fdc <iprintf>
	printf("Type \'?\' for help\n\r");
 8000e3a:	487b      	ldr	r0, [pc, #492]	; (8001028 <main+0x234>)
 8000e3c:	f002 f8ce 	bl	8002fdc <iprintf>

	// Infinite loop for program
	while(1==1) {
		// Prompt
		printf("> ");
 8000e40:	487a      	ldr	r0, [pc, #488]	; (800102c <main+0x238>)
 8000e42:	f002 f8cb 	bl	8002fdc <iprintf>
		fgets(input, 29, stdin);
 8000e46:	4b7a      	ldr	r3, [pc, #488]	; (8001030 <main+0x23c>)
 8000e48:	681b      	ldr	r3, [r3, #0]
 8000e4a:	685a      	ldr	r2, [r3, #4]
 8000e4c:	463b      	mov	r3, r7
 8000e4e:	211d      	movs	r1, #29
 8000e50:	4618      	mov	r0, r3
 8000e52:	f001 f8a3 	bl	8001f9c <fgets>
		// First token, determines command
		char* token = strtok(input, " ");
 8000e56:	463b      	mov	r3, r7
 8000e58:	4976      	ldr	r1, [pc, #472]	; (8001034 <main+0x240>)
 8000e5a:	4618      	mov	r0, r3
 8000e5c:	f003 f982 	bl	8004164 <strtok>
 8000e60:	6338      	str	r0, [r7, #48]	; 0x30

		// Second token, determines address
		char* arg1 = strtok(NULL, " ");
 8000e62:	4974      	ldr	r1, [pc, #464]	; (8001034 <main+0x240>)
 8000e64:	2000      	movs	r0, #0
 8000e66:	f003 f97d 	bl	8004164 <strtok>
 8000e6a:	62f8      	str	r0, [r7, #44]	; 0x2c

		// Third token, optional third argument, required for wmw, optional for dm
		char* arg2 = strtok(NULL, " ");
 8000e6c:	4971      	ldr	r1, [pc, #452]	; (8001034 <main+0x240>)
 8000e6e:	2000      	movs	r0, #0
 8000e70:	f003 f978 	bl	8004164 <strtok>
 8000e74:	62b8      	str	r0, [r7, #40]	; 0x28

		// If there is an extracted command
		if(token != NULL) {
 8000e76:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8000e78:	2b00      	cmp	r3, #0
 8000e7a:	f000 80bb 	beq.w	8000ff4 <main+0x200>
			// Attempt to parse the command
			command = parseCommand(token);
 8000e7e:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8000e80:	f000 fa5c 	bl	800133c <parseCommand>
 8000e84:	6378      	str	r0, [r7, #52]	; 0x34

			// Attempt to parse address
			if(arg1 != NULL) {
 8000e86:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8000e88:	2b00      	cmp	r3, #0
 8000e8a:	d003      	beq.n	8000e94 <main+0xa0>
				address = parseAddress(arg1);
 8000e8c:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8000e8e:	f000 fb39 	bl	8001504 <parseAddress>
 8000e92:	63f8      	str	r0, [r7, #60]	; 0x3c
			}

			// Attempt to parse second argument
			if(arg2 != NULL) {
 8000e94:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000e96:	2b00      	cmp	r3, #0
 8000e98:	d003      	beq.n	8000ea2 <main+0xae>
				argument = parseArgument(arg2);
 8000e9a:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8000e9c:	f000 fb46 	bl	800152c <parseArgument>
 8000ea0:	63b8      	str	r0, [r7, #56]	; 0x38
 8000ea2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000ea4:	2b05      	cmp	r3, #5
 8000ea6:	f200 80a1 	bhi.w	8000fec <main+0x1f8>
 8000eaa:	a201      	add	r2, pc, #4	; (adr r2, 8000eb0 <main+0xbc>)
 8000eac:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000eb0:	08000ec9 	.word	0x08000ec9
 8000eb4:	08000ecf 	.word	0x08000ecf
 8000eb8:	08000ef5 	.word	0x08000ef5
 8000ebc:	08000f0b 	.word	0x08000f0b
 8000ec0:	08000f31 	.word	0x08000f31
 8000ec4:	08000faf 	.word	0x08000faf

			// Switch case for reported commands
			switch (command) {
			// Help command
			case 0:
				help();
 8000ec8:	f000 faca 	bl	8001460 <help>
				break;
 8000ecc:	e095      	b.n	8000ffa <main+0x206>

			// Dump memory command
			case 1:
				if(arg1 != NULL) {
 8000ece:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8000ed0:	2b00      	cmp	r3, #0
 8000ed2:	d00b      	beq.n	8000eec <main+0xf8>
					if(arg2 == NULL) {
 8000ed4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000ed6:	2b00      	cmp	r3, #0
 8000ed8:	d103      	bne.n	8000ee2 <main+0xee>
						memdmpDefault((uint8_t*)address);
 8000eda:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
 8000edc:	f000 f8ce 	bl	800107c <memdmpDefault>
						memdmp((uint8_t*)address, argument);
					}
				} else {
					printf("No address provided\n\r");
				}
				break;
 8000ee0:	e08b      	b.n	8000ffa <main+0x206>
						memdmp((uint8_t*)address, argument);
 8000ee2:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8000ee4:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
 8000ee6:	f000 f925 	bl	8001134 <memdmp>
				break;
 8000eea:	e086      	b.n	8000ffa <main+0x206>
					printf("No address provided\n\r");
 8000eec:	4852      	ldr	r0, [pc, #328]	; (8001038 <main+0x244>)
 8000eee:	f002 f875 	bl	8002fdc <iprintf>
				break;
 8000ef2:	e082      	b.n	8000ffa <main+0x206>

			// Read word command
			case 2:
				if(arg1 != NULL) {
 8000ef4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8000ef6:	2b00      	cmp	r3, #0
 8000ef8:	d003      	beq.n	8000f02 <main+0x10e>
					memwrd(address);
 8000efa:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
 8000efc:	f000 f9e0 	bl	80012c0 <memwrd>
				} else {
					printf("No address provided\n\r");
				}
				break;
 8000f00:	e07b      	b.n	8000ffa <main+0x206>
					printf("No address provided\n\r");
 8000f02:	484d      	ldr	r0, [pc, #308]	; (8001038 <main+0x244>)
 8000f04:	f002 f86a 	bl	8002fdc <iprintf>
				break;
 8000f08:	e077      	b.n	8000ffa <main+0x206>

			// Write word command
			case 3:
				if(arg1 != NULL) {
 8000f0a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8000f0c:	2b00      	cmp	r3, #0
 8000f0e:	d00b      	beq.n	8000f28 <main+0x134>
					if(arg2 != NULL) {
 8000f10:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000f12:	2b00      	cmp	r3, #0
 8000f14:	d004      	beq.n	8000f20 <main+0x12c>
						wmemwrd(address, argument);
 8000f16:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8000f18:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
 8000f1a:	f000 f9f3 	bl	8001304 <wmemwrd>
						printf("No value to write provided\n\r");
					}
				} else {
					printf("No address provided\n\r");
				}
				break;
 8000f1e:	e06c      	b.n	8000ffa <main+0x206>
						printf("No value to write provided\n\r");
 8000f20:	4846      	ldr	r0, [pc, #280]	; (800103c <main+0x248>)
 8000f22:	f002 f85b 	bl	8002fdc <iprintf>
				break;
 8000f26:	e068      	b.n	8000ffa <main+0x206>
					printf("No address provided\n\r");
 8000f28:	4843      	ldr	r0, [pc, #268]	; (8001038 <main+0x244>)
 8000f2a:	f002 f857 	bl	8002fdc <iprintf>
				break;
 8000f2e:	e064      	b.n	8000ffa <main+0x206>

			// Music command
			case 4:
				// Determine song to be played
				if(strcmp(arg1, "doom") == 0 || strcmp(arg1, "doom\n") == 0) {
 8000f30:	4943      	ldr	r1, [pc, #268]	; (8001040 <main+0x24c>)
 8000f32:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8000f34:	f7ff f9bc 	bl	80002b0 <strcmp>
 8000f38:	4603      	mov	r3, r0
 8000f3a:	2b00      	cmp	r3, #0
 8000f3c:	d006      	beq.n	8000f4c <main+0x158>
 8000f3e:	4941      	ldr	r1, [pc, #260]	; (8001044 <main+0x250>)
 8000f40:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8000f42:	f7ff f9b5 	bl	80002b0 <strcmp>
 8000f46:	4603      	mov	r3, r0
 8000f48:	2b00      	cmp	r3, #0
 8000f4a:	d10e      	bne.n	8000f6a <main+0x176>

					// Play background/foreground accordingly
					if(strcmp(arg2, "background\n") == 0) {
 8000f4c:	493e      	ldr	r1, [pc, #248]	; (8001048 <main+0x254>)
 8000f4e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8000f50:	f7ff f9ae 	bl	80002b0 <strcmp>
 8000f54:	4603      	mov	r3, r0
 8000f56:	2b00      	cmp	r3, #0
 8000f58:	d103      	bne.n	8000f62 <main+0x16e>
						music_Background(atDoomsGate);
 8000f5a:	483c      	ldr	r0, [pc, #240]	; (800104c <main+0x258>)
 8000f5c:	f000 fc10 	bl	8001780 <music_Background>
					if(strcmp(arg2, "background\n") == 0) {
 8000f60:	e024      	b.n	8000fac <main+0x1b8>
					} else {
						music_Play(atDoomsGate);
 8000f62:	483a      	ldr	r0, [pc, #232]	; (800104c <main+0x258>)
 8000f64:	f000 fb94 	bl	8001690 <music_Play>
					if(strcmp(arg2, "background\n") == 0) {
 8000f68:	e020      	b.n	8000fac <main+0x1b8>
					}

				} else if(strcmp(arg1, "zelda") == 0 || strcmp(arg1, "zelda\n") == 0) {
 8000f6a:	4939      	ldr	r1, [pc, #228]	; (8001050 <main+0x25c>)
 8000f6c:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8000f6e:	f7ff f99f 	bl	80002b0 <strcmp>
 8000f72:	4603      	mov	r3, r0
 8000f74:	2b00      	cmp	r3, #0
 8000f76:	d006      	beq.n	8000f86 <main+0x192>
 8000f78:	4936      	ldr	r1, [pc, #216]	; (8001054 <main+0x260>)
 8000f7a:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8000f7c:	f7ff f998 	bl	80002b0 <strcmp>
 8000f80:	4603      	mov	r3, r0
 8000f82:	2b00      	cmp	r3, #0
 8000f84:	d10e      	bne.n	8000fa4 <main+0x1b0>

					// Play background/foreground accordingly
					if(strcmp(arg2, "background\n") == 0) {
 8000f86:	4930      	ldr	r1, [pc, #192]	; (8001048 <main+0x254>)
 8000f88:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8000f8a:	f7ff f991 	bl	80002b0 <strcmp>
 8000f8e:	4603      	mov	r3, r0
 8000f90:	2b00      	cmp	r3, #0
 8000f92:	d103      	bne.n	8000f9c <main+0x1a8>
						music_Background(zelda);
 8000f94:	4830      	ldr	r0, [pc, #192]	; (8001058 <main+0x264>)
 8000f96:	f000 fbf3 	bl	8001780 <music_Background>
					if(strcmp(arg2, "background\n") == 0) {
 8000f9a:	e007      	b.n	8000fac <main+0x1b8>
					} else {
						music_Play(zelda);
 8000f9c:	482e      	ldr	r0, [pc, #184]	; (8001058 <main+0x264>)
 8000f9e:	f000 fb77 	bl	8001690 <music_Play>
					if(strcmp(arg2, "background\n") == 0) {
 8000fa2:	e003      	b.n	8000fac <main+0x1b8>
					}

				} else {
					printf("Invalid song\n");
 8000fa4:	482d      	ldr	r0, [pc, #180]	; (800105c <main+0x268>)
 8000fa6:	f002 f89f 	bl	80030e8 <puts>
				}
				break;
 8000faa:	e026      	b.n	8000ffa <main+0x206>
 8000fac:	e025      	b.n	8000ffa <main+0x206>
			case 5:
				if(arg1 != NULL) {
 8000fae:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8000fb0:	2b00      	cmp	r3, #0
 8000fb2:	d017      	beq.n	8000fe4 <main+0x1f0>
					if(strcmp(arg1, "frequency\n") == 0) {
 8000fb4:	492a      	ldr	r1, [pc, #168]	; (8001060 <main+0x26c>)
 8000fb6:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8000fb8:	f7ff f97a 	bl	80002b0 <strcmp>
 8000fbc:	4603      	mov	r3, r0
 8000fbe:	2b00      	cmp	r3, #0
 8000fc0:	d10c      	bne.n	8000fdc <main+0x1e8>
						printf("\nMeasuring frequency...\n\n");
 8000fc2:	4828      	ldr	r0, [pc, #160]	; (8001064 <main+0x270>)
 8000fc4:	f002 f890 	bl	80030e8 <puts>
						double average = period_Measure();
 8000fc8:	f000 fcf2 	bl	80019b0 <period_Measure>
 8000fcc:	e9c7 0108 	strd	r0, r1, [r7, #32]
						printf("Measured frequency was %.2f Hz\n", average);
 8000fd0:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8000fd4:	4824      	ldr	r0, [pc, #144]	; (8001068 <main+0x274>)
 8000fd6:	f002 f801 	bl	8002fdc <iprintf>
						printf("Invalid measurement\n");
					}
				} else {
					printf("Measurement type required\n");
				}
				break;
 8000fda:	e00e      	b.n	8000ffa <main+0x206>
						printf("Invalid measurement\n");
 8000fdc:	4823      	ldr	r0, [pc, #140]	; (800106c <main+0x278>)
 8000fde:	f002 f883 	bl	80030e8 <puts>
				break;
 8000fe2:	e00a      	b.n	8000ffa <main+0x206>
					printf("Measurement type required\n");
 8000fe4:	4822      	ldr	r0, [pc, #136]	; (8001070 <main+0x27c>)
 8000fe6:	f002 f87f 	bl	80030e8 <puts>
				break;
 8000fea:	e006      	b.n	8000ffa <main+0x206>

			default:
				printf("Invalid command\n\r");
 8000fec:	4821      	ldr	r0, [pc, #132]	; (8001074 <main+0x280>)
 8000fee:	f001 fff5 	bl	8002fdc <iprintf>
 8000ff2:	e002      	b.n	8000ffa <main+0x206>
			}

		} else {
			printf("No input\n\r");
 8000ff4:	4820      	ldr	r0, [pc, #128]	; (8001078 <main+0x284>)
 8000ff6:	f001 fff1 	bl	8002fdc <iprintf>
		}

		// fgets again because it will read the newline from previous entry
		fgets(input, 29, stdin);
 8000ffa:	4b0d      	ldr	r3, [pc, #52]	; (8001030 <main+0x23c>)
 8000ffc:	681b      	ldr	r3, [r3, #0]
 8000ffe:	685a      	ldr	r2, [r3, #4]
 8001000:	463b      	mov	r3, r7
 8001002:	211d      	movs	r1, #29
 8001004:	4618      	mov	r0, r3
 8001006:	f000 ffc9 	bl	8001f9c <fgets>

		// Clear the input string
		memset(input, 0, strlen(input));
 800100a:	463b      	mov	r3, r7
 800100c:	4618      	mov	r0, r3
 800100e:	f7ff f959 	bl	80002c4 <strlen>
 8001012:	4602      	mov	r2, r0
 8001014:	463b      	mov	r3, r7
 8001016:	2100      	movs	r1, #0
 8001018:	4618      	mov	r0, r3
 800101a:	f001 f910 	bl	800223e <memset>
	while(1==1) {
 800101e:	e70f      	b.n	8000e40 <main+0x4c>
 8001020:	00f42400 	.word	0x00f42400
 8001024:	08007590 	.word	0x08007590
 8001028:	080075b4 	.word	0x080075b4
 800102c:	080075c8 	.word	0x080075c8
 8001030:	20000b10 	.word	0x20000b10
 8001034:	080075cc 	.word	0x080075cc
 8001038:	080075d0 	.word	0x080075d0
 800103c:	080075e8 	.word	0x080075e8
 8001040:	08007608 	.word	0x08007608
 8001044:	08007610 	.word	0x08007610
 8001048:	08007618 	.word	0x08007618
 800104c:	20000000 	.word	0x20000000
 8001050:	08007624 	.word	0x08007624
 8001054:	0800762c 	.word	0x0800762c
 8001058:	20000540 	.word	0x20000540
 800105c:	08007634 	.word	0x08007634
 8001060:	08007644 	.word	0x08007644
 8001064:	08007650 	.word	0x08007650
 8001068:	0800766c 	.word	0x0800766c
 800106c:	0800768c 	.word	0x0800768c
 8001070:	080076a0 	.word	0x080076a0
 8001074:	080076bc 	.word	0x080076bc
 8001078:	080076d0 	.word	0x080076d0

0800107c <memdmpDefault>:
 * Syntax: dm [address]
 *
 * Address must be hexadecimal, prefaced with '0x' and the letters
 * must be caps.
 */
void memdmpDefault(uint8_t* const addr) {
 800107c:	b580      	push	{r7, lr}
 800107e:	b0a2      	sub	sp, #136	; 0x88
 8001080:	af00      	add	r7, sp, #0
 8001082:	6078      	str	r0, [r7, #4]
	// Empty string containing memory dump
	char output[100] = "";
 8001084:	2300      	movs	r3, #0
 8001086:	61bb      	str	r3, [r7, #24]
 8001088:	f107 031c 	add.w	r3, r7, #28
 800108c:	2260      	movs	r2, #96	; 0x60
 800108e:	2100      	movs	r1, #0
 8001090:	4618      	mov	r0, r3
 8001092:	f001 f8d4 	bl	800223e <memset>

	// Add hex dump
	for(int i = 0; i < DEFAULT_SIZE; i++) {
 8001096:	2300      	movs	r3, #0
 8001098:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800109c:	e035      	b.n	800110a <memdmpDefault+0x8e>
		uint8_t* target = addr + i;
 800109e:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 80010a2:	687a      	ldr	r2, [r7, #4]
 80010a4:	4413      	add	r3, r2
 80010a6:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
		//delay_us(MEM_DELAY);
		uint8_t contents = *target;
 80010aa:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 80010ae:	781b      	ldrb	r3, [r3, #0]
 80010b0:	f887 307f 	strb.w	r3, [r7, #127]	; 0x7f
		//delay_us(MEM_DELAY);
		char temp[10] = "";
 80010b4:	2300      	movs	r3, #0
 80010b6:	60fb      	str	r3, [r7, #12]
 80010b8:	f107 0310 	add.w	r3, r7, #16
 80010bc:	2200      	movs	r2, #0
 80010be:	601a      	str	r2, [r3, #0]
 80010c0:	809a      	strh	r2, [r3, #4]
		sprintf(temp, "%X", contents);
 80010c2:	f897 207f 	ldrb.w	r2, [r7, #127]	; 0x7f
 80010c6:	f107 030c 	add.w	r3, r7, #12
 80010ca:	4917      	ldr	r1, [pc, #92]	; (8001128 <memdmpDefault+0xac>)
 80010cc:	4618      	mov	r0, r3
 80010ce:	f002 f981 	bl	80033d4 <siprintf>
		strcat(temp, " ");
 80010d2:	f107 030c 	add.w	r3, r7, #12
 80010d6:	4618      	mov	r0, r3
 80010d8:	f7ff f8f4 	bl	80002c4 <strlen>
 80010dc:	4603      	mov	r3, r0
 80010de:	461a      	mov	r2, r3
 80010e0:	f107 030c 	add.w	r3, r7, #12
 80010e4:	4413      	add	r3, r2
 80010e6:	4911      	ldr	r1, [pc, #68]	; (800112c <memdmpDefault+0xb0>)
 80010e8:	461a      	mov	r2, r3
 80010ea:	460b      	mov	r3, r1
 80010ec:	881b      	ldrh	r3, [r3, #0]
 80010ee:	8013      	strh	r3, [r2, #0]
		strcat(output, temp);
 80010f0:	f107 020c 	add.w	r2, r7, #12
 80010f4:	f107 0318 	add.w	r3, r7, #24
 80010f8:	4611      	mov	r1, r2
 80010fa:	4618      	mov	r0, r3
 80010fc:	f002 f9f9 	bl	80034f2 <strcat>
	for(int i = 0; i < DEFAULT_SIZE; i++) {
 8001100:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8001104:	3301      	adds	r3, #1
 8001106:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800110a:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800110e:	2b0f      	cmp	r3, #15
 8001110:	ddc5      	ble.n	800109e <memdmpDefault+0x22>
	}

	// Print the formatted result
	printf("0x%X: %s\n\r", (unsigned int)addr, output);
 8001112:	687b      	ldr	r3, [r7, #4]
 8001114:	f107 0218 	add.w	r2, r7, #24
 8001118:	4619      	mov	r1, r3
 800111a:	4805      	ldr	r0, [pc, #20]	; (8001130 <memdmpDefault+0xb4>)
 800111c:	f001 ff5e 	bl	8002fdc <iprintf>

	return;
 8001120:	bf00      	nop
}
 8001122:	3788      	adds	r7, #136	; 0x88
 8001124:	46bd      	mov	sp, r7
 8001126:	bd80      	pop	{r7, pc}
 8001128:	080076dc 	.word	0x080076dc
 800112c:	080076e0 	.word	0x080076e0
 8001130:	080076e4 	.word	0x080076e4

08001134 <memdmp>:
 * Syntax: dm [address] [length]
 *
 * Address must be hexadecimal, prefaced with '0x' and the letters
 * must be caps.
 */
void memdmp(uint8_t* const addr, uint32_t len) {
 8001134:	b580      	push	{r7, lr}
 8001136:	b0a6      	sub	sp, #152	; 0x98
 8001138:	af00      	add	r7, sp, #0
 800113a:	6078      	str	r0, [r7, #4]
 800113c:	6039      	str	r1, [r7, #0]
	char output[100] = "";
 800113e:	2300      	movs	r3, #0
 8001140:	623b      	str	r3, [r7, #32]
 8001142:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001146:	2260      	movs	r2, #96	; 0x60
 8001148:	2100      	movs	r1, #0
 800114a:	4618      	mov	r0, r3
 800114c:	f001 f877 	bl	800223e <memset>
	unsigned int newlines = 0;
 8001150:	2300      	movs	r3, #0
 8001152:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
	uint8_t* newaddr = 0;
 8001156:	2300      	movs	r3, #0
 8001158:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
	uint8_t contents = 0;
 800115c:	2300      	movs	r3, #0
 800115e:	f887 308b 	strb.w	r3, [r7, #139]	; 0x8b

	// Hex dump
	for(int i = 0; i < len; i++) {
 8001162:	2300      	movs	r3, #0
 8001164:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8001168:	e080      	b.n	800126c <memdmp+0x138>
		newaddr = addr + i;
 800116a:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 800116e:	687a      	ldr	r2, [r7, #4]
 8001170:	4413      	add	r3, r2
 8001172:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
		contents = *newaddr;
 8001176:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800117a:	781b      	ldrb	r3, [r3, #0]
 800117c:	f887 308b 	strb.w	r3, [r7, #139]	; 0x8b
		// New line every 16 bytes, clear output buffer after printing
		if((i%16 == 0) && i > 0) {
 8001180:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8001184:	f003 030f 	and.w	r3, r3, #15
 8001188:	2b00      	cmp	r3, #0
 800118a:	d144      	bne.n	8001216 <memdmp+0xe2>
 800118c:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8001190:	2b00      	cmp	r3, #0
 8001192:	dd40      	ble.n	8001216 <memdmp+0xe2>
			printf("0x%X: %s\n\r", (unsigned int)newaddr-16, output);
 8001194:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8001198:	3b10      	subs	r3, #16
 800119a:	f107 0220 	add.w	r2, r7, #32
 800119e:	4619      	mov	r1, r3
 80011a0:	4844      	ldr	r0, [pc, #272]	; (80012b4 <memdmp+0x180>)
 80011a2:	f001 ff1b 	bl	8002fdc <iprintf>
			memset(output, 0, strlen(output));
 80011a6:	f107 0320 	add.w	r3, r7, #32
 80011aa:	4618      	mov	r0, r3
 80011ac:	f7ff f88a 	bl	80002c4 <strlen>
 80011b0:	4602      	mov	r2, r0
 80011b2:	f107 0320 	add.w	r3, r7, #32
 80011b6:	2100      	movs	r1, #0
 80011b8:	4618      	mov	r0, r3
 80011ba:	f001 f840 	bl	800223e <memset>
			newlines++;
 80011be:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 80011c2:	3301      	adds	r3, #1
 80011c4:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94

			char temp[10] = "";
 80011c8:	2300      	movs	r3, #0
 80011ca:	617b      	str	r3, [r7, #20]
 80011cc:	f107 0318 	add.w	r3, r7, #24
 80011d0:	2200      	movs	r2, #0
 80011d2:	601a      	str	r2, [r3, #0]
 80011d4:	809a      	strh	r2, [r3, #4]
			sprintf(temp, "%X", contents);
 80011d6:	f897 208b 	ldrb.w	r2, [r7, #139]	; 0x8b
 80011da:	f107 0314 	add.w	r3, r7, #20
 80011de:	4936      	ldr	r1, [pc, #216]	; (80012b8 <memdmp+0x184>)
 80011e0:	4618      	mov	r0, r3
 80011e2:	f002 f8f7 	bl	80033d4 <siprintf>

			// Append a space
			strcat(temp, " ");
 80011e6:	f107 0314 	add.w	r3, r7, #20
 80011ea:	4618      	mov	r0, r3
 80011ec:	f7ff f86a 	bl	80002c4 <strlen>
 80011f0:	4603      	mov	r3, r0
 80011f2:	461a      	mov	r2, r3
 80011f4:	f107 0314 	add.w	r3, r7, #20
 80011f8:	4413      	add	r3, r2
 80011fa:	4930      	ldr	r1, [pc, #192]	; (80012bc <memdmp+0x188>)
 80011fc:	461a      	mov	r2, r3
 80011fe:	460b      	mov	r3, r1
 8001200:	881b      	ldrh	r3, [r3, #0]
 8001202:	8013      	strh	r3, [r2, #0]

			// Append contents to output
			strcat(output, temp);
 8001204:	f107 0214 	add.w	r2, r7, #20
 8001208:	f107 0320 	add.w	r3, r7, #32
 800120c:	4611      	mov	r1, r2
 800120e:	4618      	mov	r0, r3
 8001210:	f002 f96f 	bl	80034f2 <strcat>
		if((i%16 == 0) && i > 0) {
 8001214:	e025      	b.n	8001262 <memdmp+0x12e>
		} else {
			// Current contents string
			char temp[10] = "";
 8001216:	2300      	movs	r3, #0
 8001218:	60bb      	str	r3, [r7, #8]
 800121a:	f107 030c 	add.w	r3, r7, #12
 800121e:	2200      	movs	r2, #0
 8001220:	601a      	str	r2, [r3, #0]
 8001222:	809a      	strh	r2, [r3, #4]
			sprintf(temp, "%X", contents);
 8001224:	f897 208b 	ldrb.w	r2, [r7, #139]	; 0x8b
 8001228:	f107 0308 	add.w	r3, r7, #8
 800122c:	4922      	ldr	r1, [pc, #136]	; (80012b8 <memdmp+0x184>)
 800122e:	4618      	mov	r0, r3
 8001230:	f002 f8d0 	bl	80033d4 <siprintf>

			// Append a space
			strcat(temp, " ");
 8001234:	f107 0308 	add.w	r3, r7, #8
 8001238:	4618      	mov	r0, r3
 800123a:	f7ff f843 	bl	80002c4 <strlen>
 800123e:	4603      	mov	r3, r0
 8001240:	461a      	mov	r2, r3
 8001242:	f107 0308 	add.w	r3, r7, #8
 8001246:	4413      	add	r3, r2
 8001248:	491c      	ldr	r1, [pc, #112]	; (80012bc <memdmp+0x188>)
 800124a:	461a      	mov	r2, r3
 800124c:	460b      	mov	r3, r1
 800124e:	881b      	ldrh	r3, [r3, #0]
 8001250:	8013      	strh	r3, [r2, #0]

			// Append contents to output
			strcat(output, temp);
 8001252:	f107 0208 	add.w	r2, r7, #8
 8001256:	f107 0320 	add.w	r3, r7, #32
 800125a:	4611      	mov	r1, r2
 800125c:	4618      	mov	r0, r3
 800125e:	f002 f948 	bl	80034f2 <strcat>
	for(int i = 0; i < len; i++) {
 8001262:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8001266:	3301      	adds	r3, #1
 8001268:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800126c:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8001270:	683a      	ldr	r2, [r7, #0]
 8001272:	429a      	cmp	r2, r3
 8001274:	f63f af79 	bhi.w	800116a <memdmp+0x36>
		}
	}

	// If output is not empty, print it
	if(strnlen((const char*)output, 99) > 1) {
 8001278:	f107 0320 	add.w	r3, r7, #32
 800127c:	2163      	movs	r1, #99	; 0x63
 800127e:	4618      	mov	r0, r3
 8001280:	f002 f946 	bl	8003510 <strnlen>
 8001284:	4603      	mov	r3, r0
 8001286:	2b01      	cmp	r3, #1
 8001288:	d90f      	bls.n	80012aa <memdmp+0x176>
		unsigned int actualAddr = (unsigned int)addr + (newlines * 16);
 800128a:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800128e:	011a      	lsls	r2, r3, #4
 8001290:	687b      	ldr	r3, [r7, #4]
 8001292:	4413      	add	r3, r2
 8001294:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
		printf("0x%X: %s\n\r", actualAddr, output);
 8001298:	f107 0320 	add.w	r3, r7, #32
 800129c:	461a      	mov	r2, r3
 800129e:	f8d7 1084 	ldr.w	r1, [r7, #132]	; 0x84
 80012a2:	4804      	ldr	r0, [pc, #16]	; (80012b4 <memdmp+0x180>)
 80012a4:	f001 fe9a 	bl	8002fdc <iprintf>
	}

	return;
 80012a8:	bf00      	nop
 80012aa:	bf00      	nop
}
 80012ac:	3798      	adds	r7, #152	; 0x98
 80012ae:	46bd      	mov	sp, r7
 80012b0:	bd80      	pop	{r7, pc}
 80012b2:	bf00      	nop
 80012b4:	080076e4 	.word	0x080076e4
 80012b8:	080076dc 	.word	0x080076dc
 80012bc:	080076e0 	.word	0x080076e0

080012c0 <memwrd>:
 * Syntax: rmw [address]
 *
 * Address must be hexadecimal and word aligned, prefaced with '0x'
 * and the letters must be caps.
 */
void memwrd(const uint32_t* addr) {
 80012c0:	b580      	push	{r7, lr}
 80012c2:	b084      	sub	sp, #16
 80012c4:	af00      	add	r7, sp, #0
 80012c6:	6078      	str	r0, [r7, #4]
	// One word in our system is 32 bits, so word alignment is every 32 bits
	unsigned int contents = 0;
 80012c8:	2300      	movs	r3, #0
 80012ca:	60fb      	str	r3, [r7, #12]

	if((unsigned int)addr%32 == 0) {
 80012cc:	687b      	ldr	r3, [r7, #4]
 80012ce:	f003 031f 	and.w	r3, r3, #31
 80012d2:	2b00      	cmp	r3, #0
 80012d4:	d109      	bne.n	80012ea <memwrd+0x2a>
		contents = *addr;
 80012d6:	687b      	ldr	r3, [r7, #4]
 80012d8:	681b      	ldr	r3, [r3, #0]
 80012da:	60fb      	str	r3, [r7, #12]
		printf("0x%X: 0x%X %d\n\r", (unsigned int)addr, contents, contents);
 80012dc:	6879      	ldr	r1, [r7, #4]
 80012de:	68fb      	ldr	r3, [r7, #12]
 80012e0:	68fa      	ldr	r2, [r7, #12]
 80012e2:	4806      	ldr	r0, [pc, #24]	; (80012fc <memwrd+0x3c>)
 80012e4:	f001 fe7a 	bl	8002fdc <iprintf>
	} else {
		// Print the address and the text "Bad alignment" if it breaks word boundaries
		printf("0x%X: Bad alignment\n\r", (unsigned int)addr);
	}

	return;
 80012e8:	e005      	b.n	80012f6 <memwrd+0x36>
		printf("0x%X: Bad alignment\n\r", (unsigned int)addr);
 80012ea:	687b      	ldr	r3, [r7, #4]
 80012ec:	4619      	mov	r1, r3
 80012ee:	4804      	ldr	r0, [pc, #16]	; (8001300 <memwrd+0x40>)
 80012f0:	f001 fe74 	bl	8002fdc <iprintf>
	return;
 80012f4:	bf00      	nop
}
 80012f6:	3710      	adds	r7, #16
 80012f8:	46bd      	mov	sp, r7
 80012fa:	bd80      	pop	{r7, pc}
 80012fc:	080076f0 	.word	0x080076f0
 8001300:	08007700 	.word	0x08007700

08001304 <wmemwrd>:
 * Syntax: wmw [address] [value]
 *
 * Address must be hexadecimal and word aligned, prefaced with '0x'
 * and the letters must be caps.
 */
void wmemwrd(uint32_t* const dest, uint32_t contents) {
 8001304:	b580      	push	{r7, lr}
 8001306:	b082      	sub	sp, #8
 8001308:	af00      	add	r7, sp, #0
 800130a:	6078      	str	r0, [r7, #4]
 800130c:	6039      	str	r1, [r7, #0]
	if((unsigned int)dest % 32 == 0) {
 800130e:	687b      	ldr	r3, [r7, #4]
 8001310:	f003 031f 	and.w	r3, r3, #31
 8001314:	2b00      	cmp	r3, #0
 8001316:	d106      	bne.n	8001326 <wmemwrd+0x22>
		// Write value
		*dest = contents;
 8001318:	687b      	ldr	r3, [r7, #4]
 800131a:	683a      	ldr	r2, [r7, #0]
 800131c:	601a      	str	r2, [r3, #0]

		// Print new value
		memwrd(dest);
 800131e:	6878      	ldr	r0, [r7, #4]
 8001320:	f7ff ffce 	bl	80012c0 <memwrd>
	} else {
		// Error message
		printf("0x%X: Bad alignment, nothing written\n\r", (unsigned int)dest);
	}
	return;
 8001324:	e005      	b.n	8001332 <wmemwrd+0x2e>
		printf("0x%X: Bad alignment, nothing written\n\r", (unsigned int)dest);
 8001326:	687b      	ldr	r3, [r7, #4]
 8001328:	4619      	mov	r1, r3
 800132a:	4803      	ldr	r0, [pc, #12]	; (8001338 <wmemwrd+0x34>)
 800132c:	f001 fe56 	bl	8002fdc <iprintf>
	return;
 8001330:	bf00      	nop
}
 8001332:	3708      	adds	r7, #8
 8001334:	46bd      	mov	sp, r7
 8001336:	bd80      	pop	{r7, pc}
 8001338:	08007718 	.word	0x08007718

0800133c <parseCommand>:
 * 'wmw' = 3
 * 'music' = 4
 * 'measure' = 5
 * invalid = -1
 */
int parseCommand(const char* input) {
 800133c:	b580      	push	{r7, lr}
 800133e:	b084      	sub	sp, #16
 8001340:	af00      	add	r7, sp, #0
 8001342:	6078      	str	r0, [r7, #4]
	// Default command, -1 = invalid command
	int command = -1;
 8001344:	f04f 33ff 	mov.w	r3, #4294967295
 8001348:	60fb      	str	r3, [r7, #12]

	// Switch statement based on first char
	switch(input[0]) {
 800134a:	687b      	ldr	r3, [r7, #4]
 800134c:	781b      	ldrb	r3, [r3, #0]
 800134e:	2b3f      	cmp	r3, #63	; 0x3f
 8001350:	d034      	beq.n	80013bc <parseCommand+0x80>
 8001352:	2b3f      	cmp	r3, #63	; 0x3f
 8001354:	db7d      	blt.n	8001452 <parseCommand+0x116>
 8001356:	2b77      	cmp	r3, #119	; 0x77
 8001358:	dc7b      	bgt.n	8001452 <parseCommand+0x116>
 800135a:	2b64      	cmp	r3, #100	; 0x64
 800135c:	db79      	blt.n	8001452 <parseCommand+0x116>
 800135e:	3b64      	subs	r3, #100	; 0x64
 8001360:	2b13      	cmp	r3, #19
 8001362:	d876      	bhi.n	8001452 <parseCommand+0x116>
 8001364:	a201      	add	r2, pc, #4	; (adr r2, 800136c <parseCommand+0x30>)
 8001366:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800136a:	bf00      	nop
 800136c:	080013c3 	.word	0x080013c3
 8001370:	08001453 	.word	0x08001453
 8001374:	08001453 	.word	0x08001453
 8001378:	08001453 	.word	0x08001453
 800137c:	08001453 	.word	0x08001453
 8001380:	08001453 	.word	0x08001453
 8001384:	08001453 	.word	0x08001453
 8001388:	08001453 	.word	0x08001453
 800138c:	08001453 	.word	0x08001453
 8001390:	08001407 	.word	0x08001407
 8001394:	08001453 	.word	0x08001453
 8001398:	08001453 	.word	0x08001453
 800139c:	08001453 	.word	0x08001453
 80013a0:	08001453 	.word	0x08001453
 80013a4:	080013d3 	.word	0x080013d3
 80013a8:	08001453 	.word	0x08001453
 80013ac:	08001453 	.word	0x08001453
 80013b0:	08001453 	.word	0x08001453
 80013b4:	08001453 	.word	0x08001453
 80013b8:	080013ed 	.word	0x080013ed
	// Help command, return 0
	case '?':
		command = 0;
 80013bc:	2300      	movs	r3, #0
 80013be:	60fb      	str	r3, [r7, #12]
		break;
 80013c0:	e047      	b.n	8001452 <parseCommand+0x116>

	// Dump memory command, return 1
	case 'd':
		if(input[1] == 'm') {
 80013c2:	687b      	ldr	r3, [r7, #4]
 80013c4:	3301      	adds	r3, #1
 80013c6:	781b      	ldrb	r3, [r3, #0]
 80013c8:	2b6d      	cmp	r3, #109	; 0x6d
 80013ca:	d13d      	bne.n	8001448 <parseCommand+0x10c>
			command = 1;
 80013cc:	2301      	movs	r3, #1
 80013ce:	60fb      	str	r3, [r7, #12]
		}
		break;
 80013d0:	e03a      	b.n	8001448 <parseCommand+0x10c>

	// Read word command, return 2
	case 'r':
		if(input[1] == 'm' && input[2] == 'w') {
 80013d2:	687b      	ldr	r3, [r7, #4]
 80013d4:	3301      	adds	r3, #1
 80013d6:	781b      	ldrb	r3, [r3, #0]
 80013d8:	2b6d      	cmp	r3, #109	; 0x6d
 80013da:	d137      	bne.n	800144c <parseCommand+0x110>
 80013dc:	687b      	ldr	r3, [r7, #4]
 80013de:	3302      	adds	r3, #2
 80013e0:	781b      	ldrb	r3, [r3, #0]
 80013e2:	2b77      	cmp	r3, #119	; 0x77
 80013e4:	d132      	bne.n	800144c <parseCommand+0x110>
			command = 2;
 80013e6:	2302      	movs	r3, #2
 80013e8:	60fb      	str	r3, [r7, #12]
		}
		break;
 80013ea:	e02f      	b.n	800144c <parseCommand+0x110>

	// Write word command, return 3
	case 'w':
		if(input[1] == 'm' && input[2] == 'w') {
 80013ec:	687b      	ldr	r3, [r7, #4]
 80013ee:	3301      	adds	r3, #1
 80013f0:	781b      	ldrb	r3, [r3, #0]
 80013f2:	2b6d      	cmp	r3, #109	; 0x6d
 80013f4:	d12c      	bne.n	8001450 <parseCommand+0x114>
 80013f6:	687b      	ldr	r3, [r7, #4]
 80013f8:	3302      	adds	r3, #2
 80013fa:	781b      	ldrb	r3, [r3, #0]
 80013fc:	2b77      	cmp	r3, #119	; 0x77
 80013fe:	d127      	bne.n	8001450 <parseCommand+0x114>
			command = 3;
 8001400:	2303      	movs	r3, #3
 8001402:	60fb      	str	r3, [r7, #12]
		}
		break;
 8001404:	e024      	b.n	8001450 <parseCommand+0x114>

	case 'm':
		if(input[1] == 'u' && input[2] == 's' && input[3] == 'i' && input[4] == 'c') {
 8001406:	687b      	ldr	r3, [r7, #4]
 8001408:	3301      	adds	r3, #1
 800140a:	781b      	ldrb	r3, [r3, #0]
 800140c:	2b75      	cmp	r3, #117	; 0x75
 800140e:	d111      	bne.n	8001434 <parseCommand+0xf8>
 8001410:	687b      	ldr	r3, [r7, #4]
 8001412:	3302      	adds	r3, #2
 8001414:	781b      	ldrb	r3, [r3, #0]
 8001416:	2b73      	cmp	r3, #115	; 0x73
 8001418:	d10c      	bne.n	8001434 <parseCommand+0xf8>
 800141a:	687b      	ldr	r3, [r7, #4]
 800141c:	3303      	adds	r3, #3
 800141e:	781b      	ldrb	r3, [r3, #0]
 8001420:	2b69      	cmp	r3, #105	; 0x69
 8001422:	d107      	bne.n	8001434 <parseCommand+0xf8>
 8001424:	687b      	ldr	r3, [r7, #4]
 8001426:	3304      	adds	r3, #4
 8001428:	781b      	ldrb	r3, [r3, #0]
 800142a:	2b63      	cmp	r3, #99	; 0x63
 800142c:	d102      	bne.n	8001434 <parseCommand+0xf8>
			command = 4;
 800142e:	2304      	movs	r3, #4
 8001430:	60fb      	str	r3, [r7, #12]
 8001432:	e00e      	b.n	8001452 <parseCommand+0x116>
		} else if(strcmp(input, "measure") == 0) {
 8001434:	4909      	ldr	r1, [pc, #36]	; (800145c <parseCommand+0x120>)
 8001436:	6878      	ldr	r0, [r7, #4]
 8001438:	f7fe ff3a 	bl	80002b0 <strcmp>
 800143c:	4603      	mov	r3, r0
 800143e:	2b00      	cmp	r3, #0
 8001440:	d107      	bne.n	8001452 <parseCommand+0x116>
			command = 5;
 8001442:	2305      	movs	r3, #5
 8001444:	60fb      	str	r3, [r7, #12]
 8001446:	e004      	b.n	8001452 <parseCommand+0x116>
		break;
 8001448:	bf00      	nop
 800144a:	e002      	b.n	8001452 <parseCommand+0x116>
		break;
 800144c:	bf00      	nop
 800144e:	e000      	b.n	8001452 <parseCommand+0x116>
		break;
 8001450:	bf00      	nop
		}
	}

	return command;
 8001452:	68fb      	ldr	r3, [r7, #12]
}
 8001454:	4618      	mov	r0, r3
 8001456:	3710      	adds	r7, #16
 8001458:	46bd      	mov	sp, r7
 800145a:	bd80      	pop	{r7, pc}
 800145c:	08007740 	.word	0x08007740

08001460 <help>:
/**
 * help
 * Prints a bunch of lines to stdout to help
 * with syntaxes of the commands
 */
void help() {
 8001460:	b580      	push	{r7, lr}
 8001462:	af00      	add	r7, sp, #0
	printf("NOTE: All commands are case-sensitive!\n\n");
 8001464:	4818      	ldr	r0, [pc, #96]	; (80014c8 <help+0x68>)
 8001466:	f001 fe3f 	bl	80030e8 <puts>

	// WMW
	printf("command \'wmw\' - write memory word - writes a provided 32-bit value into the specified address in memory\n\r");
 800146a:	4818      	ldr	r0, [pc, #96]	; (80014cc <help+0x6c>)
 800146c:	f001 fdb6 	bl	8002fdc <iprintf>
	printf("\tsyntax: wmw [address] [value]\n\r");
 8001470:	4817      	ldr	r0, [pc, #92]	; (80014d0 <help+0x70>)
 8001472:	f001 fdb3 	bl	8002fdc <iprintf>
	printf("the provided address must be hexadecimal with capital letters and prefaced with \'0x\'\n\r");
 8001476:	4817      	ldr	r0, [pc, #92]	; (80014d4 <help+0x74>)
 8001478:	f001 fdb0 	bl	8002fdc <iprintf>
	printf("the value to be written can be provided in either hex or decimal, default is decimal, unless a \'0x\' is found\n\n\r");
 800147c:	4816      	ldr	r0, [pc, #88]	; (80014d8 <help+0x78>)
 800147e:	f001 fdad 	bl	8002fdc <iprintf>

	// RMW
	printf("command \'rmw\' - read memory word - reads a provided address and outputs the unsigned contents of that address in both hex and decimal\n\r");
 8001482:	4816      	ldr	r0, [pc, #88]	; (80014dc <help+0x7c>)
 8001484:	f001 fdaa 	bl	8002fdc <iprintf>
	printf("\tsyntax: rmw [address]\n\r");
 8001488:	4815      	ldr	r0, [pc, #84]	; (80014e0 <help+0x80>)
 800148a:	f001 fda7 	bl	8002fdc <iprintf>
	printf("the provided address must be hexadecimal with capital letters and prefaced with \'0x\'\n\n\r");
 800148e:	4815      	ldr	r0, [pc, #84]	; (80014e4 <help+0x84>)
 8001490:	f001 fda4 	bl	8002fdc <iprintf>

	// DM
	printf("command \'dm\' - dump memory - reads memory starting at the provided address for the provided length in bytes, outputs byte-sized hex values\n\r");
 8001494:	4814      	ldr	r0, [pc, #80]	; (80014e8 <help+0x88>)
 8001496:	f001 fda1 	bl	8002fdc <iprintf>
	printf("\tsyntax: dm [address] [OPT:length]\n\r");
 800149a:	4814      	ldr	r0, [pc, #80]	; (80014ec <help+0x8c>)
 800149c:	f001 fd9e 	bl	8002fdc <iprintf>
	printf("\tif no length is specified, default is 16 bytes\n\r");
 80014a0:	4813      	ldr	r0, [pc, #76]	; (80014f0 <help+0x90>)
 80014a2:	f001 fd9b 	bl	8002fdc <iprintf>
	printf("the provided address must be hexadecimal with capital letters and prefaced with \'0x\'\n\r");
 80014a6:	480b      	ldr	r0, [pc, #44]	; (80014d4 <help+0x74>)
 80014a8:	f001 fd98 	bl	8002fdc <iprintf>
	printf("the length can be provided in either hex or decimal, default is decimal, unless a \'0x\' is found\n\r");
 80014ac:	4811      	ldr	r0, [pc, #68]	; (80014f4 <help+0x94>)
 80014ae:	f001 fd95 	bl	8002fdc <iprintf>

	// music
	printf("command \'music\' - Plays a song\n");
 80014b2:	4811      	ldr	r0, [pc, #68]	; (80014f8 <help+0x98>)
 80014b4:	f001 fe18 	bl	80030e8 <puts>
	printf("\tsyntax: music [song] [OPT:background]\n");
 80014b8:	4810      	ldr	r0, [pc, #64]	; (80014fc <help+0x9c>)
 80014ba:	f001 fe15 	bl	80030e8 <puts>
	printf("current songs as of lab 5: \n\t\'doom\' - At Doom's Gate\n\t\'zelda\' - Legend of Zelda Main Theme");
 80014be:	4810      	ldr	r0, [pc, #64]	; (8001500 <help+0xa0>)
 80014c0:	f001 fd8c 	bl	8002fdc <iprintf>
	return;
 80014c4:	bf00      	nop
}
 80014c6:	bd80      	pop	{r7, pc}
 80014c8:	08007748 	.word	0x08007748
 80014cc:	08007770 	.word	0x08007770
 80014d0:	080077dc 	.word	0x080077dc
 80014d4:	08007800 	.word	0x08007800
 80014d8:	08007858 	.word	0x08007858
 80014dc:	080078c8 	.word	0x080078c8
 80014e0:	08007950 	.word	0x08007950
 80014e4:	0800796c 	.word	0x0800796c
 80014e8:	080079c4 	.word	0x080079c4
 80014ec:	08007a54 	.word	0x08007a54
 80014f0:	08007a7c 	.word	0x08007a7c
 80014f4:	08007ab0 	.word	0x08007ab0
 80014f8:	08007b14 	.word	0x08007b14
 80014fc:	08007b34 	.word	0x08007b34
 8001500:	08007b5c 	.word	0x08007b5c

08001504 <parseAddress>:
 * Attempts to parse a string containing an address into that address.
 * Uses sscanf
 * Input must be hex and prefaced with '0x'
 * All hex chars after the preface must be caps
 */
uint32_t* parseAddress(const char* input) {
 8001504:	b580      	push	{r7, lr}
 8001506:	b084      	sub	sp, #16
 8001508:	af00      	add	r7, sp, #0
 800150a:	6078      	str	r0, [r7, #4]
	// Variable to store parsed address
	unsigned int address = 0;
 800150c:	2300      	movs	r3, #0
 800150e:	60fb      	str	r3, [r7, #12]

	// Parse the address
	sscanf(input, "0x%X", &address);
 8001510:	f107 030c 	add.w	r3, r7, #12
 8001514:	461a      	mov	r2, r3
 8001516:	4904      	ldr	r1, [pc, #16]	; (8001528 <parseAddress+0x24>)
 8001518:	6878      	ldr	r0, [r7, #4]
 800151a:	f001 ff7b 	bl	8003414 <siscanf>

	// Return the address
	return (uint32_t*)address;
 800151e:	68fb      	ldr	r3, [r7, #12]
}
 8001520:	4618      	mov	r0, r3
 8001522:	3710      	adds	r7, #16
 8001524:	46bd      	mov	sp, r7
 8001526:	bd80      	pop	{r7, pc}
 8001528:	08007bb8 	.word	0x08007bb8

0800152c <parseArgument>:
/**
 * parseArgument
 * Takes a string and attempts to convert it to a number.
 * Input must be in decimal and unsigned.
 */
uint32_t parseArgument(const char* input) {
 800152c:	b580      	push	{r7, lr}
 800152e:	b084      	sub	sp, #16
 8001530:	af00      	add	r7, sp, #0
 8001532:	6078      	str	r0, [r7, #4]
	// Default value if the input can't be parsed
	uint32_t parsed = -1;
 8001534:	f04f 33ff 	mov.w	r3, #4294967295
 8001538:	60fb      	str	r3, [r7, #12]

	// Attempt to parse
	sscanf(input, "%lu", &parsed);
 800153a:	f107 030c 	add.w	r3, r7, #12
 800153e:	461a      	mov	r2, r3
 8001540:	4904      	ldr	r1, [pc, #16]	; (8001554 <parseArgument+0x28>)
 8001542:	6878      	ldr	r0, [r7, #4]
 8001544:	f001 ff66 	bl	8003414 <siscanf>

	// Return the parsed value
	return parsed;
 8001548:	68fb      	ldr	r3, [r7, #12]
}
 800154a:	4618      	mov	r0, r3
 800154c:	3710      	adds	r7, #16
 800154e:	46bd      	mov	sp, r7
 8001550:	bd80      	pop	{r7, pc}
 8001552:	bf00      	nop
 8001554:	08007bc0 	.word	0x08007bc0

08001558 <note_Play>:
static uint8_t backgroundPlaying = 0;

/**
 * Plays individual notes using a busy wait
 */
void note_Play(uint32_t period, uint32_t duration) {
 8001558:	b580      	push	{r7, lr}
 800155a:	b084      	sub	sp, #16
 800155c:	af00      	add	r7, sp, #0
 800155e:	6078      	str	r0, [r7, #4]
 8001560:	6039      	str	r1, [r7, #0]
	volatile TIMER* TIM3 = (TIMER*) TIM3_BASE;
 8001562:	4b12      	ldr	r3, [pc, #72]	; (80015ac <note_Play+0x54>)
 8001564:	60fb      	str	r3, [r7, #12]
	if(period == 0) {
 8001566:	687b      	ldr	r3, [r7, #4]
 8001568:	2b00      	cmp	r3, #0
 800156a:	d103      	bne.n	8001574 <note_Play+0x1c>
		// If period = 0, just do a delay
		delay_us(duration);
 800156c:	6838      	ldr	r0, [r7, #0]
 800156e:	f7ff fc15 	bl	8000d9c <delay_us>

		// Stop playing note
		TIM3->CR1 &= ~(1);
	}

	return;
 8001572:	e017      	b.n	80015a4 <note_Play+0x4c>
		TIM3->CCR1 = period >> 1;
 8001574:	687b      	ldr	r3, [r7, #4]
 8001576:	085a      	lsrs	r2, r3, #1
 8001578:	68fb      	ldr	r3, [r7, #12]
 800157a:	635a      	str	r2, [r3, #52]	; 0x34
		TIM3->ARR = period - 1;
 800157c:	687b      	ldr	r3, [r7, #4]
 800157e:	1e5a      	subs	r2, r3, #1
 8001580:	68fb      	ldr	r3, [r7, #12]
 8001582:	62da      	str	r2, [r3, #44]	; 0x2c
		TIM3->CR1 |= 1;
 8001584:	68fb      	ldr	r3, [r7, #12]
 8001586:	681b      	ldr	r3, [r3, #0]
 8001588:	f043 0201 	orr.w	r2, r3, #1
 800158c:	68fb      	ldr	r3, [r7, #12]
 800158e:	601a      	str	r2, [r3, #0]
		delay_us(duration);
 8001590:	6838      	ldr	r0, [r7, #0]
 8001592:	f7ff fc03 	bl	8000d9c <delay_us>
		TIM3->CR1 &= ~(1);
 8001596:	68fb      	ldr	r3, [r7, #12]
 8001598:	681b      	ldr	r3, [r3, #0]
 800159a:	f023 0201 	bic.w	r2, r3, #1
 800159e:	68fb      	ldr	r3, [r7, #12]
 80015a0:	601a      	str	r2, [r3, #0]
	return;
 80015a2:	bf00      	nop
}
 80015a4:	3710      	adds	r7, #16
 80015a6:	46bd      	mov	sp, r7
 80015a8:	bd80      	pop	{r7, pc}
 80015aa:	bf00      	nop
 80015ac:	40000400 	.word	0x40000400

080015b0 <music_Init>:

/**
 * Initializes the appropriate timers and GPIO port
 */
void music_Init() {
 80015b0:	b480      	push	{r7}
 80015b2:	b087      	sub	sp, #28
 80015b4:	af00      	add	r7, sp, #0
	// Pointers for all used peripherals
	// TIM5 will be a simple down-counter which will trigger interrupts
	// 	each time a note completes playing in the background.
	volatile RCC* RCC_Target = (RCC*) RCC_BASE;
 80015b6:	4b31      	ldr	r3, [pc, #196]	; (800167c <music_Init+0xcc>)
 80015b8:	617b      	str	r3, [r7, #20]
	volatile GPIO* GPIOB = (GPIO*) GPIOB_BASE;
 80015ba:	4b31      	ldr	r3, [pc, #196]	; (8001680 <music_Init+0xd0>)
 80015bc:	613b      	str	r3, [r7, #16]
	volatile TIMER* TIM3 = (TIMER*) TIM3_BASE;
 80015be:	4b31      	ldr	r3, [pc, #196]	; (8001684 <music_Init+0xd4>)
 80015c0:	60fb      	str	r3, [r7, #12]
	volatile TIMER* TIM5 = (TIMER*) TIM5_BASE;
 80015c2:	4b31      	ldr	r3, [pc, #196]	; (8001688 <music_Init+0xd8>)
 80015c4:	60bb      	str	r3, [r7, #8]
	volatile NVIC* NVIC_Target = (NVIC*) NVIC_BASE;
 80015c6:	4b31      	ldr	r3, [pc, #196]	; (800168c <music_Init+0xdc>)
 80015c8:	607b      	str	r3, [r7, #4]

	// Enable GPIOB in RCC
	RCC_Target->AHB1ENR |= RCC_GPIOBEN;
 80015ca:	697b      	ldr	r3, [r7, #20]
 80015cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80015ce:	f043 0202 	orr.w	r2, r3, #2
 80015d2:	697b      	ldr	r3, [r7, #20]
 80015d4:	631a      	str	r2, [r3, #48]	; 0x30

	// Enable TIM3 and TIM5 in RCC
	RCC_Target->APB1ENR |= (RCC_TIM3EN | RCC_TIM5EN);
 80015d6:	697b      	ldr	r3, [r7, #20]
 80015d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80015da:	f043 020a 	orr.w	r2, r3, #10
 80015de:	697b      	ldr	r3, [r7, #20]
 80015e0:	641a      	str	r2, [r3, #64]	; 0x40

	// Set PB4 to alternate function
	GPIOB->MODER = GPIO_ALTFUN << 8;
 80015e2:	693b      	ldr	r3, [r7, #16]
 80015e4:	f44f 7200 	mov.w	r2, #512	; 0x200
 80015e8:	601a      	str	r2, [r3, #0]

	// Set AFRL such that PB4 is connected to TIM3
	GPIOB->AFRL = PB4_PIEZO;
 80015ea:	693b      	ldr	r3, [r7, #16]
 80015ec:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 80015f0:	621a      	str	r2, [r3, #32]

	// Set TIM3 & TIM5 prescale to 16, AKA 1 count = 1us
	TIM3->PSC = 16;
 80015f2:	68fb      	ldr	r3, [r7, #12]
 80015f4:	2210      	movs	r2, #16
 80015f6:	629a      	str	r2, [r3, #40]	; 0x28
	TIM5->PSC = 16;
 80015f8:	68bb      	ldr	r3, [r7, #8]
 80015fa:	2210      	movs	r2, #16
 80015fc:	629a      	str	r2, [r3, #40]	; 0x28

	// Prescale fix
	// Forces an event to be generated and then
	// clears it right away which tricks the timer
	// into applying the prescale somehow
	TIM3->EGR = 1;
 80015fe:	68fb      	ldr	r3, [r7, #12]
 8001600:	2201      	movs	r2, #1
 8001602:	615a      	str	r2, [r3, #20]
	TIM3->SR &= ~(1);
 8001604:	68fb      	ldr	r3, [r7, #12]
 8001606:	691b      	ldr	r3, [r3, #16]
 8001608:	f023 0201 	bic.w	r2, r3, #1
 800160c:	68fb      	ldr	r3, [r7, #12]
 800160e:	611a      	str	r2, [r3, #16]
	TIM5->EGR = 1;
 8001610:	68bb      	ldr	r3, [r7, #8]
 8001612:	2201      	movs	r2, #1
 8001614:	615a      	str	r2, [r3, #20]
	TIM5->SR &= ~(1);
 8001616:	68bb      	ldr	r3, [r7, #8]
 8001618:	691b      	ldr	r3, [r3, #16]
 800161a:	f023 0201 	bic.w	r2, r3, #1
 800161e:	68bb      	ldr	r3, [r7, #8]
 8001620:	611a      	str	r2, [r3, #16]

	// Configure CCMR for PWM mode
	TIM3->CCMR1 |= (OC1M_PWM | OC1M_PE);
 8001622:	68fb      	ldr	r3, [r7, #12]
 8001624:	699b      	ldr	r3, [r3, #24]
 8001626:	f043 0268 	orr.w	r2, r3, #104	; 0x68
 800162a:	68fb      	ldr	r3, [r7, #12]
 800162c:	619a      	str	r2, [r3, #24]

	// Enable in CCER
	TIM3->CCER |= CCER_CC1E;
 800162e:	68fb      	ldr	r3, [r7, #12]
 8001630:	6a1b      	ldr	r3, [r3, #32]
 8001632:	f043 0201 	orr.w	r2, r3, #1
 8001636:	68fb      	ldr	r3, [r7, #12]
 8001638:	621a      	str	r2, [r3, #32]

	// Assert not counting in CR1
	TIM3->CR1 &= ~(TIM_CEN);
 800163a:	68fb      	ldr	r3, [r7, #12]
 800163c:	681b      	ldr	r3, [r3, #0]
 800163e:	f023 0201 	bic.w	r2, r3, #1
 8001642:	68fb      	ldr	r3, [r7, #12]
 8001644:	601a      	str	r2, [r3, #0]
	TIM5->CR1 &= ~(TIM_CEN);
 8001646:	68bb      	ldr	r3, [r7, #8]
 8001648:	681b      	ldr	r3, [r3, #0]
 800164a:	f023 0201 	bic.w	r2, r3, #1
 800164e:	68bb      	ldr	r3, [r7, #8]
 8001650:	601a      	str	r2, [r3, #0]

	// Enable interrupts for TIM5
	TIM5->DIER |= TIM_UIE;
 8001652:	68bb      	ldr	r3, [r7, #8]
 8001654:	68db      	ldr	r3, [r3, #12]
 8001656:	f043 0201 	orr.w	r2, r3, #1
 800165a:	68bb      	ldr	r3, [r7, #8]
 800165c:	60da      	str	r2, [r3, #12]

	// Set TIM5 to count-down and one-pulse
	TIM5->CR1 |= (TIM_OPM | TIM_DIR);
 800165e:	68bb      	ldr	r3, [r7, #8]
 8001660:	681b      	ldr	r3, [r3, #0]
 8001662:	f043 0218 	orr.w	r2, r3, #24
 8001666:	68bb      	ldr	r3, [r7, #8]
 8001668:	601a      	str	r2, [r3, #0]

	// Enable the TIM5 interrupt in ISER, slot 50
	//	aka 1<<18 in ISER1
	NVIC_Target->ISER[1] = 1<<18;
 800166a:	687b      	ldr	r3, [r7, #4]
 800166c:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 8001670:	605a      	str	r2, [r3, #4]

	return;
 8001672:	bf00      	nop
}
 8001674:	371c      	adds	r7, #28
 8001676:	46bd      	mov	sp, r7
 8001678:	bc80      	pop	{r7}
 800167a:	4770      	bx	lr
 800167c:	40023800 	.word	0x40023800
 8001680:	40020400 	.word	0x40020400
 8001684:	40000400 	.word	0x40000400
 8001688:	40000c00 	.word	0x40000c00
 800168c:	e000e100 	.word	0xe000e100

08001690 <music_Play>:

/**
 * Iterates through the provided array of notes until a null
 * note is found
 */
void music_Play(const note song[]) {
 8001690:	b5b0      	push	{r4, r5, r7, lr}
 8001692:	b084      	sub	sp, #16
 8001694:	af00      	add	r7, sp, #0
 8001696:	6078      	str	r0, [r7, #4]
	// Index counter
	int i = 0;
 8001698:	2300      	movs	r3, #0
 800169a:	60fb      	str	r3, [r7, #12]

	if(backgroundPlaying == 0) {
 800169c:	4b23      	ldr	r3, [pc, #140]	; (800172c <music_Play+0x9c>)
 800169e:	781b      	ldrb	r3, [r3, #0]
 80016a0:	2b00      	cmp	r3, #0
 80016a2:	d13c      	bne.n	800171e <music_Play+0x8e>
		// Loop through array until we find a note with 0 period and 0 length
		while(!(song[i].period == 0 && song[i].length == 0)) {
 80016a4:	e024      	b.n	80016f0 <music_Play+0x60>
			// Attempt to put these in a register for passing to the funct
			register uint32_t length = song[i].length;
 80016a6:	68fa      	ldr	r2, [r7, #12]
 80016a8:	4613      	mov	r3, r2
 80016aa:	005b      	lsls	r3, r3, #1
 80016ac:	4413      	add	r3, r2
 80016ae:	009b      	lsls	r3, r3, #2
 80016b0:	461a      	mov	r2, r3
 80016b2:	687b      	ldr	r3, [r7, #4]
 80016b4:	4413      	add	r3, r2
 80016b6:	689d      	ldr	r5, [r3, #8]
			register uint32_t period = song[i].period;
 80016b8:	68fa      	ldr	r2, [r7, #12]
 80016ba:	4613      	mov	r3, r2
 80016bc:	005b      	lsls	r3, r3, #1
 80016be:	4413      	add	r3, r2
 80016c0:	009b      	lsls	r3, r3, #2
 80016c2:	461a      	mov	r2, r3
 80016c4:	687b      	ldr	r3, [r7, #4]
 80016c6:	4413      	add	r3, r2
 80016c8:	681c      	ldr	r4, [r3, #0]

			uint32_t octave = song[i].octave;
 80016ca:	68fa      	ldr	r2, [r7, #12]
 80016cc:	4613      	mov	r3, r2
 80016ce:	005b      	lsls	r3, r3, #1
 80016d0:	4413      	add	r3, r2
 80016d2:	009b      	lsls	r3, r3, #2
 80016d4:	461a      	mov	r2, r3
 80016d6:	687b      	ldr	r3, [r7, #4]
 80016d8:	4413      	add	r3, r2
 80016da:	685b      	ldr	r3, [r3, #4]
 80016dc:	60bb      	str	r3, [r7, #8]
			period = period >> octave;
 80016de:	68bb      	ldr	r3, [r7, #8]
 80016e0:	40dc      	lsrs	r4, r3
			note_Play(period, length);
 80016e2:	4629      	mov	r1, r5
 80016e4:	4620      	mov	r0, r4
 80016e6:	f7ff ff37 	bl	8001558 <note_Play>
			i++;
 80016ea:	68fb      	ldr	r3, [r7, #12]
 80016ec:	3301      	adds	r3, #1
 80016ee:	60fb      	str	r3, [r7, #12]
		while(!(song[i].period == 0 && song[i].length == 0)) {
 80016f0:	68fa      	ldr	r2, [r7, #12]
 80016f2:	4613      	mov	r3, r2
 80016f4:	005b      	lsls	r3, r3, #1
 80016f6:	4413      	add	r3, r2
 80016f8:	009b      	lsls	r3, r3, #2
 80016fa:	461a      	mov	r2, r3
 80016fc:	687b      	ldr	r3, [r7, #4]
 80016fe:	4413      	add	r3, r2
 8001700:	681b      	ldr	r3, [r3, #0]
 8001702:	2b00      	cmp	r3, #0
 8001704:	d1cf      	bne.n	80016a6 <music_Play+0x16>
 8001706:	68fa      	ldr	r2, [r7, #12]
 8001708:	4613      	mov	r3, r2
 800170a:	005b      	lsls	r3, r3, #1
 800170c:	4413      	add	r3, r2
 800170e:	009b      	lsls	r3, r3, #2
 8001710:	461a      	mov	r2, r3
 8001712:	687b      	ldr	r3, [r7, #4]
 8001714:	4413      	add	r3, r2
 8001716:	689b      	ldr	r3, [r3, #8]
 8001718:	2b00      	cmp	r3, #0
 800171a:	d1c4      	bne.n	80016a6 <music_Play+0x16>
		}
	} else {
		printf("Cannot play a song while one is playing in the background\n");
	}

	return;
 800171c:	e003      	b.n	8001726 <music_Play+0x96>
		printf("Cannot play a song while one is playing in the background\n");
 800171e:	4804      	ldr	r0, [pc, #16]	; (8001730 <music_Play+0xa0>)
 8001720:	f001 fce2 	bl	80030e8 <puts>
	return;
 8001724:	bf00      	nop
}
 8001726:	3710      	adds	r7, #16
 8001728:	46bd      	mov	sp, r7
 800172a:	bdb0      	pop	{r4, r5, r7, pc}
 800172c:	20000d08 	.word	0x20000d08
 8001730:	08007bc4 	.word	0x08007bc4

08001734 <music_StopBackground>:

/**
 * Stops a background song that is playing
 */
void music_StopBackground() {
 8001734:	b480      	push	{r7}
 8001736:	b083      	sub	sp, #12
 8001738:	af00      	add	r7, sp, #0
	volatile TIMER* TIM3 = (TIMER*) TIM3_BASE;
 800173a:	4b0d      	ldr	r3, [pc, #52]	; (8001770 <music_StopBackground+0x3c>)
 800173c:	607b      	str	r3, [r7, #4]
	volatile TIMER* TIM5 = (TIMER*) TIM5_BASE;
 800173e:	4b0d      	ldr	r3, [pc, #52]	; (8001774 <music_StopBackground+0x40>)
 8001740:	603b      	str	r3, [r7, #0]

	// Stop the timers
	TIM5->CR1 &= ~(TIM_CEN);
 8001742:	683b      	ldr	r3, [r7, #0]
 8001744:	681b      	ldr	r3, [r3, #0]
 8001746:	f023 0201 	bic.w	r2, r3, #1
 800174a:	683b      	ldr	r3, [r7, #0]
 800174c:	601a      	str	r2, [r3, #0]
	TIM3->CR1 &= ~(TIM_CEN);
 800174e:	687b      	ldr	r3, [r7, #4]
 8001750:	681b      	ldr	r3, [r3, #0]
 8001752:	f023 0201 	bic.w	r2, r3, #1
 8001756:	687b      	ldr	r3, [r7, #4]
 8001758:	601a      	str	r2, [r3, #0]

	// Reset controls
	backgroundPlaying = 0;
 800175a:	4b07      	ldr	r3, [pc, #28]	; (8001778 <music_StopBackground+0x44>)
 800175c:	2200      	movs	r2, #0
 800175e:	701a      	strb	r2, [r3, #0]
	musicIndex = 0;
 8001760:	4b06      	ldr	r3, [pc, #24]	; (800177c <music_StopBackground+0x48>)
 8001762:	2200      	movs	r2, #0
 8001764:	601a      	str	r2, [r3, #0]

	return;
 8001766:	bf00      	nop
}
 8001768:	370c      	adds	r7, #12
 800176a:	46bd      	mov	sp, r7
 800176c:	bc80      	pop	{r7}
 800176e:	4770      	bx	lr
 8001770:	40000400 	.word	0x40000400
 8001774:	40000c00 	.word	0x40000c00
 8001778:	20000d08 	.word	0x20000d08
 800177c:	20000d00 	.word	0x20000d00

08001780 <music_Background>:

/**
 * Starts the provided song playing in the background
 */
void music_Background(note song[]) {
 8001780:	b580      	push	{r7, lr}
 8001782:	b086      	sub	sp, #24
 8001784:	af00      	add	r7, sp, #0
 8001786:	6078      	str	r0, [r7, #4]
	volatile TIMER* TIM3 = (TIMER*) TIM3_BASE;
 8001788:	4b1d      	ldr	r3, [pc, #116]	; (8001800 <music_Background+0x80>)
 800178a:	617b      	str	r3, [r7, #20]
	volatile TIMER* TIM5 = (TIMER*) TIM5_BASE;
 800178c:	4b1d      	ldr	r3, [pc, #116]	; (8001804 <music_Background+0x84>)
 800178e:	613b      	str	r3, [r7, #16]

	// Stop background song
	music_StopBackground();
 8001790:	f7ff ffd0 	bl	8001734 <music_StopBackground>

	// Set flag to show music is playing
	backgroundPlaying = 1;
 8001794:	4b1c      	ldr	r3, [pc, #112]	; (8001808 <music_Background+0x88>)
 8001796:	2201      	movs	r2, #1
 8001798:	701a      	strb	r2, [r3, #0]

	// Set new address and reset note index
	// note index gets set to one because this method
	// plays the 0th note on its own, then the interrupts
	// take over
	backgroundSong = song;
 800179a:	4a1c      	ldr	r2, [pc, #112]	; (800180c <music_Background+0x8c>)
 800179c:	687b      	ldr	r3, [r7, #4]
 800179e:	6013      	str	r3, [r2, #0]
	musicIndex = 1;
 80017a0:	4b1b      	ldr	r3, [pc, #108]	; (8001810 <music_Background+0x90>)
 80017a2:	2201      	movs	r2, #1
 80017a4:	601a      	str	r2, [r3, #0]

	// Load the period and length
	uint32_t period = song[0].period;
 80017a6:	687b      	ldr	r3, [r7, #4]
 80017a8:	681b      	ldr	r3, [r3, #0]
 80017aa:	60fb      	str	r3, [r7, #12]
	period = period >> song[0].octave;
 80017ac:	687b      	ldr	r3, [r7, #4]
 80017ae:	685b      	ldr	r3, [r3, #4]
 80017b0:	68fa      	ldr	r2, [r7, #12]
 80017b2:	fa22 f303 	lsr.w	r3, r2, r3
 80017b6:	60fb      	str	r3, [r7, #12]
	uint32_t length = song[0].length;
 80017b8:	687b      	ldr	r3, [r7, #4]
 80017ba:	689b      	ldr	r3, [r3, #8]
 80017bc:	60bb      	str	r3, [r7, #8]

	// Write values
	TIM5->CNT = length;
 80017be:	693b      	ldr	r3, [r7, #16]
 80017c0:	68ba      	ldr	r2, [r7, #8]
 80017c2:	625a      	str	r2, [r3, #36]	; 0x24
	TIM3->ARR = period - 1;
 80017c4:	68fb      	ldr	r3, [r7, #12]
 80017c6:	1e5a      	subs	r2, r3, #1
 80017c8:	697b      	ldr	r3, [r7, #20]
 80017ca:	62da      	str	r2, [r3, #44]	; 0x2c
	TIM3->CCR1= period >> 1;
 80017cc:	68fb      	ldr	r3, [r7, #12]
 80017ce:	085a      	lsrs	r2, r3, #1
 80017d0:	697b      	ldr	r3, [r7, #20]
 80017d2:	635a      	str	r2, [r3, #52]	; 0x34

	// Start timers
	TIM5->DIER|= TIM_UIE;
 80017d4:	693b      	ldr	r3, [r7, #16]
 80017d6:	68db      	ldr	r3, [r3, #12]
 80017d8:	f043 0201 	orr.w	r2, r3, #1
 80017dc:	693b      	ldr	r3, [r7, #16]
 80017de:	60da      	str	r2, [r3, #12]
	TIM3->CR1 |= TIM_CEN;
 80017e0:	697b      	ldr	r3, [r7, #20]
 80017e2:	681b      	ldr	r3, [r3, #0]
 80017e4:	f043 0201 	orr.w	r2, r3, #1
 80017e8:	697b      	ldr	r3, [r7, #20]
 80017ea:	601a      	str	r2, [r3, #0]
	TIM5->CR1 |= TIM_CEN;
 80017ec:	693b      	ldr	r3, [r7, #16]
 80017ee:	681b      	ldr	r3, [r3, #0]
 80017f0:	f043 0201 	orr.w	r2, r3, #1
 80017f4:	693b      	ldr	r3, [r7, #16]
 80017f6:	601a      	str	r2, [r3, #0]

	return;
 80017f8:	bf00      	nop
}
 80017fa:	3718      	adds	r7, #24
 80017fc:	46bd      	mov	sp, r7
 80017fe:	bd80      	pop	{r7, pc}
 8001800:	40000400 	.word	0x40000400
 8001804:	40000c00 	.word	0x40000c00
 8001808:	20000d08 	.word	0x20000d08
 800180c:	20000d04 	.word	0x20000d04
 8001810:	20000d00 	.word	0x20000d00

08001814 <TIM5_IRQHandler>:
 * ISR
 * Triggers when TIM5 hits zero;
 * loads next note from the global song array into appropriate
 * timers and increments the global note index
 */
void TIM5_IRQHandler() {
 8001814:	b480      	push	{r7}
 8001816:	b089      	sub	sp, #36	; 0x24
 8001818:	af00      	add	r7, sp, #0
	volatile TIMER* TIM3 = (TIMER*) TIM3_BASE;
 800181a:	4b33      	ldr	r3, [pc, #204]	; (80018e8 <TIM5_IRQHandler+0xd4>)
 800181c:	61fb      	str	r3, [r7, #28]
	volatile TIMER* TIM5 = (TIMER*) TIM5_BASE;
 800181e:	4b33      	ldr	r3, [pc, #204]	; (80018ec <TIM5_IRQHandler+0xd8>)
 8001820:	61bb      	str	r3, [r7, #24]


	// Clear the register that triggers interrupts
	TIM5->SR = 0;
 8001822:	69bb      	ldr	r3, [r7, #24]
 8001824:	2200      	movs	r2, #0
 8001826:	611a      	str	r2, [r3, #16]

	// Stop the frequency timer
	TIM3->CR1 &= ~(TIM_CEN);
 8001828:	69fb      	ldr	r3, [r7, #28]
 800182a:	681b      	ldr	r3, [r3, #0]
 800182c:	f023 0201 	bic.w	r2, r3, #1
 8001830:	69fb      	ldr	r3, [r7, #28]
 8001832:	601a      	str	r2, [r3, #0]

	// Load current note info
	note current = backgroundSong[musicIndex];
 8001834:	4b2e      	ldr	r3, [pc, #184]	; (80018f0 <TIM5_IRQHandler+0xdc>)
 8001836:	6819      	ldr	r1, [r3, #0]
 8001838:	4b2e      	ldr	r3, [pc, #184]	; (80018f4 <TIM5_IRQHandler+0xe0>)
 800183a:	681a      	ldr	r2, [r3, #0]
 800183c:	4613      	mov	r3, r2
 800183e:	005b      	lsls	r3, r3, #1
 8001840:	4413      	add	r3, r2
 8001842:	009b      	lsls	r3, r3, #2
 8001844:	18ca      	adds	r2, r1, r3
 8001846:	1d3b      	adds	r3, r7, #4
 8001848:	ca07      	ldmia	r2, {r0, r1, r2}
 800184a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
	uint32_t period = current.period;
 800184e:	687b      	ldr	r3, [r7, #4]
 8001850:	617b      	str	r3, [r7, #20]
	period = period >> current.octave;
 8001852:	68bb      	ldr	r3, [r7, #8]
 8001854:	697a      	ldr	r2, [r7, #20]
 8001856:	fa22 f303 	lsr.w	r3, r2, r3
 800185a:	617b      	str	r3, [r7, #20]
	uint32_t length = current.length;
 800185c:	68fb      	ldr	r3, [r7, #12]
 800185e:	613b      	str	r3, [r7, #16]

	// If the note isn't a terminator
	if(!(period == 0 && length == 0)) {
 8001860:	697b      	ldr	r3, [r7, #20]
 8001862:	2b00      	cmp	r3, #0
 8001864:	d102      	bne.n	800186c <TIM5_IRQHandler+0x58>
 8001866:	693b      	ldr	r3, [r7, #16]
 8001868:	2b00      	cmp	r3, #0
 800186a:	d01c      	beq.n	80018a6 <TIM5_IRQHandler+0x92>
		// Write the period values accordingly
		TIM3->ARR = period - 1;
 800186c:	697b      	ldr	r3, [r7, #20]
 800186e:	1e5a      	subs	r2, r3, #1
 8001870:	69fb      	ldr	r3, [r7, #28]
 8001872:	62da      	str	r2, [r3, #44]	; 0x2c
		TIM3->CCR1 = period >> 1;
 8001874:	697b      	ldr	r3, [r7, #20]
 8001876:	085a      	lsrs	r2, r3, #1
 8001878:	69fb      	ldr	r3, [r7, #28]
 800187a:	635a      	str	r2, [r3, #52]	; 0x34
		// Write the note duration
		TIM5->CNT = length;
 800187c:	69bb      	ldr	r3, [r7, #24]
 800187e:	693a      	ldr	r2, [r7, #16]
 8001880:	625a      	str	r2, [r3, #36]	; 0x24

		// Increment the note counter
		musicIndex++;
 8001882:	4b1c      	ldr	r3, [pc, #112]	; (80018f4 <TIM5_IRQHandler+0xe0>)
 8001884:	681b      	ldr	r3, [r3, #0]
 8001886:	3301      	adds	r3, #1
 8001888:	4a1a      	ldr	r2, [pc, #104]	; (80018f4 <TIM5_IRQHandler+0xe0>)
 800188a:	6013      	str	r3, [r2, #0]

		// Enable both timers
		TIM3->CR1 |= TIM_CEN;
 800188c:	69fb      	ldr	r3, [r7, #28]
 800188e:	681b      	ldr	r3, [r3, #0]
 8001890:	f043 0201 	orr.w	r2, r3, #1
 8001894:	69fb      	ldr	r3, [r7, #28]
 8001896:	601a      	str	r2, [r3, #0]
		TIM5->CR1 |= TIM_CEN;
 8001898:	69bb      	ldr	r3, [r7, #24]
 800189a:	681b      	ldr	r3, [r3, #0]
 800189c:	f043 0201 	orr.w	r2, r3, #1
 80018a0:	69bb      	ldr	r3, [r7, #24]
 80018a2:	601a      	str	r2, [r3, #0]
 80018a4:	e01a      	b.n	80018dc <TIM5_IRQHandler+0xc8>

	// If the note is a terminator
	} else if(period == 0 && length == 0) {
 80018a6:	697b      	ldr	r3, [r7, #20]
 80018a8:	2b00      	cmp	r3, #0
 80018aa:	d118      	bne.n	80018de <TIM5_IRQHandler+0xca>
 80018ac:	693b      	ldr	r3, [r7, #16]
 80018ae:	2b00      	cmp	r3, #0
 80018b0:	d115      	bne.n	80018de <TIM5_IRQHandler+0xca>
		// Clear the note counter
		musicIndex = 0;
 80018b2:	4b10      	ldr	r3, [pc, #64]	; (80018f4 <TIM5_IRQHandler+0xe0>)
 80018b4:	2200      	movs	r2, #0
 80018b6:	601a      	str	r2, [r3, #0]

		// Clear the flag for background songs
		backgroundPlaying = 0;
 80018b8:	4b0f      	ldr	r3, [pc, #60]	; (80018f8 <TIM5_IRQHandler+0xe4>)
 80018ba:	2200      	movs	r2, #0
 80018bc:	701a      	strb	r2, [r3, #0]

		// Disable timer 5's interrupts
		TIM5->DIER &= ~(TIM_UIE);
 80018be:	69bb      	ldr	r3, [r7, #24]
 80018c0:	68db      	ldr	r3, [r3, #12]
 80018c2:	f023 0201 	bic.w	r2, r3, #1
 80018c6:	69bb      	ldr	r3, [r7, #24]
 80018c8:	60da      	str	r2, [r3, #12]

		// Clear the timers
		TIM3->ARR = 0;
 80018ca:	69fb      	ldr	r3, [r7, #28]
 80018cc:	2200      	movs	r2, #0
 80018ce:	62da      	str	r2, [r3, #44]	; 0x2c
		TIM3->CCR1 = 0;
 80018d0:	69fb      	ldr	r3, [r7, #28]
 80018d2:	2200      	movs	r2, #0
 80018d4:	635a      	str	r2, [r3, #52]	; 0x34
		TIM5->CNT = 0;
 80018d6:	69bb      	ldr	r3, [r7, #24]
 80018d8:	2200      	movs	r2, #0
 80018da:	625a      	str	r2, [r3, #36]	; 0x24
	}

	return;
 80018dc:	bf00      	nop
 80018de:	bf00      	nop
}
 80018e0:	3724      	adds	r7, #36	; 0x24
 80018e2:	46bd      	mov	sp, r7
 80018e4:	bc80      	pop	{r7}
 80018e6:	4770      	bx	lr
 80018e8:	40000400 	.word	0x40000400
 80018ec:	40000c00 	.word	0x40000c00
 80018f0:	20000d04 	.word	0x20000d04
 80018f4:	20000d00 	.word	0x20000d00
 80018f8:	20000d08 	.word	0x20000d08

080018fc <period_Init>:
#include <stdio.h>

static uint8_t period_Status;
static uint16_t readings[10];

void period_Init() {
 80018fc:	b480      	push	{r7}
 80018fe:	b085      	sub	sp, #20
 8001900:	af00      	add	r7, sp, #0
	// Setup peripheral objects
	volatile RCC* RCC_Target = (RCC*) RCC_BASE;
 8001902:	4b26      	ldr	r3, [pc, #152]	; (800199c <period_Init+0xa0>)
 8001904:	60fb      	str	r3, [r7, #12]
	volatile TIMER* TIM4 = (TIMER*) TIM4_BASE;
 8001906:	4b26      	ldr	r3, [pc, #152]	; (80019a0 <period_Init+0xa4>)
 8001908:	60bb      	str	r3, [r7, #8]
	volatile NVIC* NVIC_Target = (NVIC*)NVIC_BASE;
 800190a:	4b26      	ldr	r3, [pc, #152]	; (80019a4 <period_Init+0xa8>)
 800190c:	607b      	str	r3, [r7, #4]
	volatile GPIO* GPIOB = (GPIO*) GPIOB_BASE;
 800190e:	4b26      	ldr	r3, [pc, #152]	; (80019a8 <period_Init+0xac>)
 8001910:	603b      	str	r3, [r7, #0]

	// Enable GPIOB, even though it most likely already was
	RCC_Target->AHB1ENR |= RCC_GPIOBEN;
 8001912:	68fb      	ldr	r3, [r7, #12]
 8001914:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001916:	f043 0202 	orr.w	r2, r3, #2
 800191a:	68fb      	ldr	r3, [r7, #12]
 800191c:	631a      	str	r2, [r3, #48]	; 0x30

	// Enable TIM4 in APB1ENR
	RCC_Target->APB1ENR |= RCC_TIM4EN;
 800191e:	68fb      	ldr	r3, [r7, #12]
 8001920:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001922:	f043 0204 	orr.w	r2, r3, #4
 8001926:	68fb      	ldr	r3, [r7, #12]
 8001928:	641a      	str	r2, [r3, #64]	; 0x40

	// Set the 10us prescale on TIM4
	TIM4->PSC = 16;
 800192a:	68bb      	ldr	r3, [r7, #8]
 800192c:	2210      	movs	r2, #16
 800192e:	629a      	str	r2, [r3, #40]	; 0x28

	// Set PB6 MODER to alternate funct
	GPIOB->MODER |= (GPIO_ALTFUN << 12);
 8001930:	683b      	ldr	r3, [r7, #0]
 8001932:	681b      	ldr	r3, [r3, #0]
 8001934:	f443 5200 	orr.w	r2, r3, #8192	; 0x2000
 8001938:	683b      	ldr	r3, [r7, #0]
 800193a:	601a      	str	r2, [r3, #0]

	// Configure PB6 to Alternate Funct 2; TIM4_CH1
	GPIOB->AFRL |= (2<<24);
 800193c:	683b      	ldr	r3, [r7, #0]
 800193e:	6a1b      	ldr	r3, [r3, #32]
 8001940:	f043 7200 	orr.w	r2, r3, #33554432	; 0x2000000
 8001944:	683b      	ldr	r3, [r7, #0]
 8001946:	621a      	str	r2, [r3, #32]

	// Setup PWM Input mode for TIM4 CH1
	// CC1P and CC1NP in CCER stay defaults; active-high input
	TIM4->CCMR1 |= 0b01<<0;	// CC1S input mapped on TI1
 8001948:	68bb      	ldr	r3, [r7, #8]
 800194a:	699b      	ldr	r3, [r3, #24]
 800194c:	f043 0201 	orr.w	r2, r3, #1
 8001950:	68bb      	ldr	r3, [r7, #8]
 8001952:	619a      	str	r2, [r3, #24]
	TIM4->SMCR |= (0b101 << 4);	// Set trigger to Timer Input Ch1
 8001954:	68bb      	ldr	r3, [r7, #8]
 8001956:	689b      	ldr	r3, [r3, #8]
 8001958:	f043 0250 	orr.w	r2, r3, #80	; 0x50
 800195c:	68bb      	ldr	r3, [r7, #8]
 800195e:	609a      	str	r2, [r3, #8]
	TIM4->SMCR |= (0b100 << 0); // Set slave mode to reset on TI1 rising edge
 8001960:	68bb      	ldr	r3, [r7, #8]
 8001962:	689b      	ldr	r3, [r3, #8]
 8001964:	f043 0204 	orr.w	r2, r3, #4
 8001968:	68bb      	ldr	r3, [r7, #8]
 800196a:	609a      	str	r2, [r3, #8]
	TIM4->CCER |= 1;			// Enable capture/compare Ch1
 800196c:	68bb      	ldr	r3, [r7, #8]
 800196e:	6a1b      	ldr	r3, [r3, #32]
 8001970:	f043 0201 	orr.w	r2, r3, #1
 8001974:	68bb      	ldr	r3, [r7, #8]
 8001976:	621a      	str	r2, [r3, #32]
	TIM4->CR1 |= TIM_CEN;
 8001978:	68bb      	ldr	r3, [r7, #8]
 800197a:	681b      	ldr	r3, [r3, #0]
 800197c:	f043 0201 	orr.w	r2, r3, #1
 8001980:	68bb      	ldr	r3, [r7, #8]
 8001982:	601a      	str	r2, [r3, #0]

	// Enable TIM4 interrupts in NVIC
	NVIC_Target->ISER[0] |= (1<<30);
 8001984:	687b      	ldr	r3, [r7, #4]
 8001986:	681b      	ldr	r3, [r3, #0]
 8001988:	f043 4280 	orr.w	r2, r3, #1073741824	; 0x40000000
 800198c:	687b      	ldr	r3, [r7, #4]
 800198e:	601a      	str	r2, [r3, #0]

	return;
 8001990:	bf00      	nop
}
 8001992:	3714      	adds	r7, #20
 8001994:	46bd      	mov	sp, r7
 8001996:	bc80      	pop	{r7}
 8001998:	4770      	bx	lr
 800199a:	bf00      	nop
 800199c:	40023800 	.word	0x40023800
 80019a0:	40000800 	.word	0x40000800
 80019a4:	e000e100 	.word	0xe000e100
 80019a8:	40020400 	.word	0x40020400
 80019ac:	00000000 	.word	0x00000000

080019b0 <period_Measure>:

double period_Measure() {
 80019b0:	b580      	push	{r7, lr}
 80019b2:	b08a      	sub	sp, #40	; 0x28
 80019b4:	af00      	add	r7, sp, #0
	volatile TIMER* TIM4 = (TIMER*)TIM4_BASE;
 80019b6:	4b52      	ldr	r3, [pc, #328]	; (8001b00 <period_Measure+0x150>)
 80019b8:	60bb      	str	r3, [r7, #8]

	double average = 0;
 80019ba:	f04f 0200 	mov.w	r2, #0
 80019be:	f04f 0300 	mov.w	r3, #0
 80019c2:	e9c7 2308 	strd	r2, r3, [r7, #32]

	// This method takes the main thread of execution, but still
	if(!period_Status) {
 80019c6:	4b4f      	ldr	r3, [pc, #316]	; (8001b04 <period_Measure+0x154>)
 80019c8:	781b      	ldrb	r3, [r3, #0]
 80019ca:	2b00      	cmp	r3, #0
 80019cc:	f040 808b 	bne.w	8001ae6 <period_Measure+0x136>
		// Enable interrupt and counter, set flag
		period_Status = 1;
 80019d0:	4b4c      	ldr	r3, [pc, #304]	; (8001b04 <period_Measure+0x154>)
 80019d2:	2201      	movs	r2, #1
 80019d4:	701a      	strb	r2, [r3, #0]
		TIM4->DIER |= (1<<6);
 80019d6:	68bb      	ldr	r3, [r7, #8]
 80019d8:	68db      	ldr	r3, [r3, #12]
 80019da:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 80019de:	68bb      	ldr	r3, [r7, #8]
 80019e0:	60da      	str	r2, [r3, #12]

		// Busy wait until measurements are done
		while(period_Status) {}
 80019e2:	bf00      	nop
 80019e4:	4b47      	ldr	r3, [pc, #284]	; (8001b04 <period_Measure+0x154>)
 80019e6:	781b      	ldrb	r3, [r3, #0]
 80019e8:	2b00      	cmp	r3, #0
 80019ea:	d1fb      	bne.n	80019e4 <period_Measure+0x34>

		double minimum = 131072;
 80019ec:	f04f 0200 	mov.w	r2, #0
 80019f0:	f04f 4382 	mov.w	r3, #1090519040	; 0x41000000
 80019f4:	e9c7 2306 	strd	r2, r3, [r7, #24]
		double maximum = 0;
 80019f8:	f04f 0200 	mov.w	r2, #0
 80019fc:	f04f 0300 	mov.w	r3, #0
 8001a00:	e9c7 2304 	strd	r2, r3, [r7, #16]

		// Calculate the average period
		for(int i = 0; i < 10; i++) {
 8001a04:	2300      	movs	r3, #0
 8001a06:	60fb      	str	r3, [r7, #12]
 8001a08:	e03f      	b.n	8001a8a <period_Measure+0xda>
			uint16_t value = readings[i];
 8001a0a:	4a3f      	ldr	r2, [pc, #252]	; (8001b08 <period_Measure+0x158>)
 8001a0c:	68fb      	ldr	r3, [r7, #12]
 8001a0e:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8001a12:	80fb      	strh	r3, [r7, #6]

			// Record min/max
			if((double)value >= maximum) {
 8001a14:	88fb      	ldrh	r3, [r7, #6]
 8001a16:	4618      	mov	r0, r3
 8001a18:	f7fe fd9e 	bl	8000558 <__aeabi_ui2d>
 8001a1c:	4602      	mov	r2, r0
 8001a1e:	460b      	mov	r3, r1
 8001a20:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8001a24:	f7ff f88e 	bl	8000b44 <__aeabi_dcmple>
 8001a28:	4603      	mov	r3, r0
 8001a2a:	2b00      	cmp	r3, #0
 8001a2c:	d007      	beq.n	8001a3e <period_Measure+0x8e>
				maximum = value;
 8001a2e:	88fb      	ldrh	r3, [r7, #6]
 8001a30:	4618      	mov	r0, r3
 8001a32:	f7fe fd91 	bl	8000558 <__aeabi_ui2d>
 8001a36:	4602      	mov	r2, r0
 8001a38:	460b      	mov	r3, r1
 8001a3a:	e9c7 2304 	strd	r2, r3, [r7, #16]
			}
			if((double)value <= minimum) {
 8001a3e:	88fb      	ldrh	r3, [r7, #6]
 8001a40:	4618      	mov	r0, r3
 8001a42:	f7fe fd89 	bl	8000558 <__aeabi_ui2d>
 8001a46:	4602      	mov	r2, r0
 8001a48:	460b      	mov	r3, r1
 8001a4a:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8001a4e:	f7ff f883 	bl	8000b58 <__aeabi_dcmpge>
 8001a52:	4603      	mov	r3, r0
 8001a54:	2b00      	cmp	r3, #0
 8001a56:	d007      	beq.n	8001a68 <period_Measure+0xb8>
				minimum = value;
 8001a58:	88fb      	ldrh	r3, [r7, #6]
 8001a5a:	4618      	mov	r0, r3
 8001a5c:	f7fe fd7c 	bl	8000558 <__aeabi_ui2d>
 8001a60:	4602      	mov	r2, r0
 8001a62:	460b      	mov	r3, r1
 8001a64:	e9c7 2306 	strd	r2, r3, [r7, #24]
			}

			average += value;
 8001a68:	88fb      	ldrh	r3, [r7, #6]
 8001a6a:	4618      	mov	r0, r3
 8001a6c:	f7fe fd84 	bl	8000578 <__aeabi_i2d>
 8001a70:	4602      	mov	r2, r0
 8001a72:	460b      	mov	r3, r1
 8001a74:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8001a78:	f7fe fc32 	bl	80002e0 <__adddf3>
 8001a7c:	4602      	mov	r2, r0
 8001a7e:	460b      	mov	r3, r1
 8001a80:	e9c7 2308 	strd	r2, r3, [r7, #32]
		for(int i = 0; i < 10; i++) {
 8001a84:	68fb      	ldr	r3, [r7, #12]
 8001a86:	3301      	adds	r3, #1
 8001a88:	60fb      	str	r3, [r7, #12]
 8001a8a:	68fb      	ldr	r3, [r7, #12]
 8001a8c:	2b09      	cmp	r3, #9
 8001a8e:	ddbc      	ble.n	8001a0a <period_Measure+0x5a>
		}

		// Calculate average period in us
		average = average / 10;
 8001a90:	f04f 0200 	mov.w	r2, #0
 8001a94:	4b1d      	ldr	r3, [pc, #116]	; (8001b0c <period_Measure+0x15c>)
 8001a96:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8001a9a:	f7fe ff01 	bl	80008a0 <__aeabi_ddiv>
 8001a9e:	4602      	mov	r2, r0
 8001aa0:	460b      	mov	r3, r1
 8001aa2:	e9c7 2308 	strd	r2, r3, [r7, #32]

		// Convert to period in seconds
		average *= (1E-6);
 8001aa6:	a314      	add	r3, pc, #80	; (adr r3, 8001af8 <period_Measure+0x148>)
 8001aa8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001aac:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8001ab0:	f7fe fdcc 	bl	800064c <__aeabi_dmul>
 8001ab4:	4602      	mov	r2, r0
 8001ab6:	460b      	mov	r3, r1
 8001ab8:	e9c7 2308 	strd	r2, r3, [r7, #32]

		// Convert period to frequency
		average = 1/average;
 8001abc:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8001ac0:	f04f 0000 	mov.w	r0, #0
 8001ac4:	4912      	ldr	r1, [pc, #72]	; (8001b10 <period_Measure+0x160>)
 8001ac6:	f7fe feeb 	bl	80008a0 <__aeabi_ddiv>
 8001aca:	4602      	mov	r2, r0
 8001acc:	460b      	mov	r3, r1
 8001ace:	e9c7 2308 	strd	r2, r3, [r7, #32]
		printf("Smallest recorded pulse was %.2f nanoseconds\n", minimum);
 8001ad2:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8001ad6:	480f      	ldr	r0, [pc, #60]	; (8001b14 <period_Measure+0x164>)
 8001ad8:	f001 fa80 	bl	8002fdc <iprintf>
		printf("Largest recorded pulse was %.2f nanoseconds\n", maximum);
 8001adc:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8001ae0:	480d      	ldr	r0, [pc, #52]	; (8001b18 <period_Measure+0x168>)
 8001ae2:	f001 fa7b 	bl	8002fdc <iprintf>
	}

	return average;
 8001ae6:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
}
 8001aea:	4610      	mov	r0, r2
 8001aec:	4619      	mov	r1, r3
 8001aee:	3728      	adds	r7, #40	; 0x28
 8001af0:	46bd      	mov	sp, r7
 8001af2:	bd80      	pop	{r7, pc}
 8001af4:	f3af 8000 	nop.w
 8001af8:	a0b5ed8d 	.word	0xa0b5ed8d
 8001afc:	3eb0c6f7 	.word	0x3eb0c6f7
 8001b00:	40000800 	.word	0x40000800
 8001b04:	20000d09 	.word	0x20000d09
 8001b08:	20000d0c 	.word	0x20000d0c
 8001b0c:	40240000 	.word	0x40240000
 8001b10:	3ff00000 	.word	0x3ff00000
 8001b14:	08007c00 	.word	0x08007c00
 8001b18:	08007c30 	.word	0x08007c30

08001b1c <TIM4_IRQHandler>:

void TIM4_IRQHandler(void) {
 8001b1c:	b490      	push	{r4, r7}
 8001b1e:	b082      	sub	sp, #8
 8001b20:	af00      	add	r7, sp, #0
	// Timer object
	// CCR1 stores period in units of 1us
	volatile TIMER* TIM4 = (TIMER*) TIM4_BASE;
 8001b22:	4b15      	ldr	r3, [pc, #84]	; (8001b78 <TIM4_IRQHandler+0x5c>)
 8001b24:	607b      	str	r3, [r7, #4]

	// Clear status register so this doesn't keep triggering
	TIM4->SR = 0;
 8001b26:	687b      	ldr	r3, [r7, #4]
 8001b28:	2200      	movs	r2, #0
 8001b2a:	611a      	str	r2, [r3, #16]

	// Static to retain count between calls, but not file-scope
	static uint8_t count;

	// Partially for debugging purposes to see what value was read
	register uint16_t value = TIM4->CCR1;
 8001b2c:	687b      	ldr	r3, [r7, #4]
 8001b2e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001b30:	b29c      	uxth	r4, r3

	if(count < 10) {
 8001b32:	4b12      	ldr	r3, [pc, #72]	; (8001b7c <TIM4_IRQHandler+0x60>)
 8001b34:	781b      	ldrb	r3, [r3, #0]
 8001b36:	2b09      	cmp	r3, #9
 8001b38:	d80d      	bhi.n	8001b56 <TIM4_IRQHandler+0x3a>
		// Store recorded value and increment counter
		readings[count] = value;
 8001b3a:	4b10      	ldr	r3, [pc, #64]	; (8001b7c <TIM4_IRQHandler+0x60>)
 8001b3c:	781b      	ldrb	r3, [r3, #0]
 8001b3e:	461a      	mov	r2, r3
 8001b40:	4b0f      	ldr	r3, [pc, #60]	; (8001b80 <TIM4_IRQHandler+0x64>)
 8001b42:	4621      	mov	r1, r4
 8001b44:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
		count++;
 8001b48:	4b0c      	ldr	r3, [pc, #48]	; (8001b7c <TIM4_IRQHandler+0x60>)
 8001b4a:	781b      	ldrb	r3, [r3, #0]
 8001b4c:	3301      	adds	r3, #1
 8001b4e:	b2da      	uxtb	r2, r3
 8001b50:	4b0a      	ldr	r3, [pc, #40]	; (8001b7c <TIM4_IRQHandler+0x60>)
 8001b52:	701a      	strb	r2, [r3, #0]
		TIM4->DIER &= ~(1<<6);
		period_Status = 0;
		count = 0;
	}

	return;
 8001b54:	e00c      	b.n	8001b70 <TIM4_IRQHandler+0x54>
		TIM4->DIER &= ~(1<<6);
 8001b56:	687b      	ldr	r3, [r7, #4]
 8001b58:	68db      	ldr	r3, [r3, #12]
 8001b5a:	f023 0240 	bic.w	r2, r3, #64	; 0x40
 8001b5e:	687b      	ldr	r3, [r7, #4]
 8001b60:	60da      	str	r2, [r3, #12]
		period_Status = 0;
 8001b62:	4b08      	ldr	r3, [pc, #32]	; (8001b84 <TIM4_IRQHandler+0x68>)
 8001b64:	2200      	movs	r2, #0
 8001b66:	701a      	strb	r2, [r3, #0]
		count = 0;
 8001b68:	4b04      	ldr	r3, [pc, #16]	; (8001b7c <TIM4_IRQHandler+0x60>)
 8001b6a:	2200      	movs	r2, #0
 8001b6c:	701a      	strb	r2, [r3, #0]
	return;
 8001b6e:	bf00      	nop
}
 8001b70:	3708      	adds	r7, #8
 8001b72:	46bd      	mov	sp, r7
 8001b74:	bc90      	pop	{r4, r7}
 8001b76:	4770      	bx	lr
 8001b78:	40000800 	.word	0x40000800
 8001b7c:	20000d20 	.word	0x20000d20
 8001b80:	20000d0c 	.word	0x20000d0c
 8001b84:	20000d09 	.word	0x20000d09

08001b88 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001b88:	b480      	push	{r7}
 8001b8a:	af00      	add	r7, sp, #0
	return 1;
 8001b8c:	2301      	movs	r3, #1
}
 8001b8e:	4618      	mov	r0, r3
 8001b90:	46bd      	mov	sp, r7
 8001b92:	bc80      	pop	{r7}
 8001b94:	4770      	bx	lr

08001b96 <_kill>:

int _kill(int pid, int sig)
{
 8001b96:	b580      	push	{r7, lr}
 8001b98:	b082      	sub	sp, #8
 8001b9a:	af00      	add	r7, sp, #0
 8001b9c:	6078      	str	r0, [r7, #4]
 8001b9e:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 8001ba0:	f000 f97c 	bl	8001e9c <__errno>
 8001ba4:	4603      	mov	r3, r0
 8001ba6:	2216      	movs	r2, #22
 8001ba8:	601a      	str	r2, [r3, #0]
	return -1;
 8001baa:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001bae:	4618      	mov	r0, r3
 8001bb0:	3708      	adds	r7, #8
 8001bb2:	46bd      	mov	sp, r7
 8001bb4:	bd80      	pop	{r7, pc}

08001bb6 <_exit>:

void _exit (int status)
{
 8001bb6:	b580      	push	{r7, lr}
 8001bb8:	b082      	sub	sp, #8
 8001bba:	af00      	add	r7, sp, #0
 8001bbc:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 8001bbe:	f04f 31ff 	mov.w	r1, #4294967295
 8001bc2:	6878      	ldr	r0, [r7, #4]
 8001bc4:	f7ff ffe7 	bl	8001b96 <_kill>
	while (1) {}		/* Make sure we hang here */
 8001bc8:	e7fe      	b.n	8001bc8 <_exit+0x12>

08001bca <_close>:
	}
	return len;
}

int _close(int file)
{
 8001bca:	b480      	push	{r7}
 8001bcc:	b083      	sub	sp, #12
 8001bce:	af00      	add	r7, sp, #0
 8001bd0:	6078      	str	r0, [r7, #4]
	return -1;
 8001bd2:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001bd6:	4618      	mov	r0, r3
 8001bd8:	370c      	adds	r7, #12
 8001bda:	46bd      	mov	sp, r7
 8001bdc:	bc80      	pop	{r7}
 8001bde:	4770      	bx	lr

08001be0 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8001be0:	b480      	push	{r7}
 8001be2:	b083      	sub	sp, #12
 8001be4:	af00      	add	r7, sp, #0
 8001be6:	6078      	str	r0, [r7, #4]
 8001be8:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8001bea:	683b      	ldr	r3, [r7, #0]
 8001bec:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8001bf0:	605a      	str	r2, [r3, #4]
	return 0;
 8001bf2:	2300      	movs	r3, #0
}
 8001bf4:	4618      	mov	r0, r3
 8001bf6:	370c      	adds	r7, #12
 8001bf8:	46bd      	mov	sp, r7
 8001bfa:	bc80      	pop	{r7}
 8001bfc:	4770      	bx	lr

08001bfe <_isatty>:

int _isatty(int file)
{
 8001bfe:	b480      	push	{r7}
 8001c00:	b083      	sub	sp, #12
 8001c02:	af00      	add	r7, sp, #0
 8001c04:	6078      	str	r0, [r7, #4]
	return 1;
 8001c06:	2301      	movs	r3, #1
}
 8001c08:	4618      	mov	r0, r3
 8001c0a:	370c      	adds	r7, #12
 8001c0c:	46bd      	mov	sp, r7
 8001c0e:	bc80      	pop	{r7}
 8001c10:	4770      	bx	lr

08001c12 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001c12:	b480      	push	{r7}
 8001c14:	b085      	sub	sp, #20
 8001c16:	af00      	add	r7, sp, #0
 8001c18:	60f8      	str	r0, [r7, #12]
 8001c1a:	60b9      	str	r1, [r7, #8]
 8001c1c:	607a      	str	r2, [r7, #4]
	return 0;
 8001c1e:	2300      	movs	r3, #0
}
 8001c20:	4618      	mov	r0, r3
 8001c22:	3714      	adds	r7, #20
 8001c24:	46bd      	mov	sp, r7
 8001c26:	bc80      	pop	{r7}
 8001c28:	4770      	bx	lr
	...

08001c2c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001c2c:	b580      	push	{r7, lr}
 8001c2e:	b086      	sub	sp, #24
 8001c30:	af00      	add	r7, sp, #0
 8001c32:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001c34:	4a14      	ldr	r2, [pc, #80]	; (8001c88 <_sbrk+0x5c>)
 8001c36:	4b15      	ldr	r3, [pc, #84]	; (8001c8c <_sbrk+0x60>)
 8001c38:	1ad3      	subs	r3, r2, r3
 8001c3a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001c3c:	697b      	ldr	r3, [r7, #20]
 8001c3e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001c40:	4b13      	ldr	r3, [pc, #76]	; (8001c90 <_sbrk+0x64>)
 8001c42:	681b      	ldr	r3, [r3, #0]
 8001c44:	2b00      	cmp	r3, #0
 8001c46:	d102      	bne.n	8001c4e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001c48:	4b11      	ldr	r3, [pc, #68]	; (8001c90 <_sbrk+0x64>)
 8001c4a:	4a12      	ldr	r2, [pc, #72]	; (8001c94 <_sbrk+0x68>)
 8001c4c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001c4e:	4b10      	ldr	r3, [pc, #64]	; (8001c90 <_sbrk+0x64>)
 8001c50:	681a      	ldr	r2, [r3, #0]
 8001c52:	687b      	ldr	r3, [r7, #4]
 8001c54:	4413      	add	r3, r2
 8001c56:	693a      	ldr	r2, [r7, #16]
 8001c58:	429a      	cmp	r2, r3
 8001c5a:	d207      	bcs.n	8001c6c <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001c5c:	f000 f91e 	bl	8001e9c <__errno>
 8001c60:	4603      	mov	r3, r0
 8001c62:	220c      	movs	r2, #12
 8001c64:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001c66:	f04f 33ff 	mov.w	r3, #4294967295
 8001c6a:	e009      	b.n	8001c80 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001c6c:	4b08      	ldr	r3, [pc, #32]	; (8001c90 <_sbrk+0x64>)
 8001c6e:	681b      	ldr	r3, [r3, #0]
 8001c70:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001c72:	4b07      	ldr	r3, [pc, #28]	; (8001c90 <_sbrk+0x64>)
 8001c74:	681a      	ldr	r2, [r3, #0]
 8001c76:	687b      	ldr	r3, [r7, #4]
 8001c78:	4413      	add	r3, r2
 8001c7a:	4a05      	ldr	r2, [pc, #20]	; (8001c90 <_sbrk+0x64>)
 8001c7c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001c7e:	68fb      	ldr	r3, [r7, #12]
}
 8001c80:	4618      	mov	r0, r3
 8001c82:	3718      	adds	r7, #24
 8001c84:	46bd      	mov	sp, r7
 8001c86:	bd80      	pop	{r7, pc}
 8001c88:	20020000 	.word	0x20020000
 8001c8c:	00000400 	.word	0x00000400
 8001c90:	20000d24 	.word	0x20000d24
 8001c94:	20000d40 	.word	0x20000d40

08001c98 <_read>:


// These will override _read and _write in syscalls.c, which are
// prototyped as weak
int _read(int file, char *ptr, int len)
{
 8001c98:	b580      	push	{r7, lr}
 8001c9a:	b086      	sub	sp, #24
 8001c9c:	af00      	add	r7, sp, #0
 8001c9e:	60f8      	str	r0, [r7, #12]
 8001ca0:	60b9      	str	r1, [r7, #8]
 8001ca2:	607a      	str	r2, [r7, #4]
	int DataIdx;
	// Modified the for loop in order to get the correct behavior for fgets
	int byteCnt = 0;
 8001ca4:	2300      	movs	r3, #0
 8001ca6:	613b      	str	r3, [r7, #16]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001ca8:	2300      	movs	r3, #0
 8001caa:	617b      	str	r3, [r7, #20]
 8001cac:	e012      	b.n	8001cd4 <_read+0x3c>
	{
		//*ptr++ = __io_getchar();
		byteCnt++;
 8001cae:	693b      	ldr	r3, [r7, #16]
 8001cb0:	3301      	adds	r3, #1
 8001cb2:	613b      	str	r3, [r7, #16]
		//*ptr++ = usart2_getch();
		*ptr = usart2_getch();
 8001cb4:	f000 f836 	bl	8001d24 <usart2_getch>
 8001cb8:	4603      	mov	r3, r0
 8001cba:	461a      	mov	r2, r3
 8001cbc:	68bb      	ldr	r3, [r7, #8]
 8001cbe:	701a      	strb	r2, [r3, #0]
		if(*ptr == '\n') break;
 8001cc0:	68bb      	ldr	r3, [r7, #8]
 8001cc2:	781b      	ldrb	r3, [r3, #0]
 8001cc4:	2b0a      	cmp	r3, #10
 8001cc6:	d00a      	beq.n	8001cde <_read+0x46>
		ptr++;
 8001cc8:	68bb      	ldr	r3, [r7, #8]
 8001cca:	3301      	adds	r3, #1
 8001ccc:	60bb      	str	r3, [r7, #8]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001cce:	697b      	ldr	r3, [r7, #20]
 8001cd0:	3301      	adds	r3, #1
 8001cd2:	617b      	str	r3, [r7, #20]
 8001cd4:	697a      	ldr	r2, [r7, #20]
 8001cd6:	687b      	ldr	r3, [r7, #4]
 8001cd8:	429a      	cmp	r2, r3
 8001cda:	dbe8      	blt.n	8001cae <_read+0x16>
 8001cdc:	e000      	b.n	8001ce0 <_read+0x48>
		if(*ptr == '\n') break;
 8001cde:	bf00      	nop
	}

	//return len;
	return byteCnt; // Return byte count
 8001ce0:	693b      	ldr	r3, [r7, #16]
}
 8001ce2:	4618      	mov	r0, r3
 8001ce4:	3718      	adds	r7, #24
 8001ce6:	46bd      	mov	sp, r7
 8001ce8:	bd80      	pop	{r7, pc}

08001cea <_write>:

int _write(int file, char *ptr, int len)
{
 8001cea:	b580      	push	{r7, lr}
 8001cec:	b086      	sub	sp, #24
 8001cee:	af00      	add	r7, sp, #0
 8001cf0:	60f8      	str	r0, [r7, #12]
 8001cf2:	60b9      	str	r1, [r7, #8]
 8001cf4:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001cf6:	2300      	movs	r3, #0
 8001cf8:	617b      	str	r3, [r7, #20]
 8001cfa:	e009      	b.n	8001d10 <_write+0x26>
	{
		usart2_putch(*ptr++);
 8001cfc:	68bb      	ldr	r3, [r7, #8]
 8001cfe:	1c5a      	adds	r2, r3, #1
 8001d00:	60ba      	str	r2, [r7, #8]
 8001d02:	781b      	ldrb	r3, [r3, #0]
 8001d04:	4618      	mov	r0, r3
 8001d06:	f000 f82f 	bl	8001d68 <usart2_putch>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001d0a:	697b      	ldr	r3, [r7, #20]
 8001d0c:	3301      	adds	r3, #1
 8001d0e:	617b      	str	r3, [r7, #20]
 8001d10:	697a      	ldr	r2, [r7, #20]
 8001d12:	687b      	ldr	r3, [r7, #4]
 8001d14:	429a      	cmp	r2, r3
 8001d16:	dbf1      	blt.n	8001cfc <_write+0x12>
	}
	return len;
 8001d18:	687b      	ldr	r3, [r7, #4]
}
 8001d1a:	4618      	mov	r0, r3
 8001d1c:	3718      	adds	r7, #24
 8001d1e:	46bd      	mov	sp, r7
 8001d20:	bd80      	pop	{r7, pc}
	...

08001d24 <usart2_getch>:



char usart2_getch(){
 8001d24:	b580      	push	{r7, lr}
 8001d26:	b082      	sub	sp, #8
 8001d28:	af00      	add	r7, sp, #0
	char c;
	while((*(USART_SR)&(1<<RXNE)) != (1<<RXNE));
 8001d2a:	bf00      	nop
 8001d2c:	4b0c      	ldr	r3, [pc, #48]	; (8001d60 <usart2_getch+0x3c>)
 8001d2e:	681b      	ldr	r3, [r3, #0]
 8001d30:	f003 0320 	and.w	r3, r3, #32
 8001d34:	2b20      	cmp	r3, #32
 8001d36:	d1f9      	bne.n	8001d2c <usart2_getch+0x8>
	c = ((char) *USART_DR);  // Read character from usart
 8001d38:	4b0a      	ldr	r3, [pc, #40]	; (8001d64 <usart2_getch+0x40>)
 8001d3a:	681b      	ldr	r3, [r3, #0]
 8001d3c:	71fb      	strb	r3, [r7, #7]
	usart2_putch(c);  // Echo back
 8001d3e:	79fb      	ldrb	r3, [r7, #7]
 8001d40:	4618      	mov	r0, r3
 8001d42:	f000 f811 	bl	8001d68 <usart2_putch>

	if (c == '\r'){  // If character is CR
 8001d46:	79fb      	ldrb	r3, [r7, #7]
 8001d48:	2b0d      	cmp	r3, #13
 8001d4a:	d104      	bne.n	8001d56 <usart2_getch+0x32>
		usart2_putch('\n');  // send it
 8001d4c:	200a      	movs	r0, #10
 8001d4e:	f000 f80b 	bl	8001d68 <usart2_putch>
		c = '\n';   // Return LF. fgets is terminated by LF
 8001d52:	230a      	movs	r3, #10
 8001d54:	71fb      	strb	r3, [r7, #7]
	}

	return c;
 8001d56:	79fb      	ldrb	r3, [r7, #7]
}
 8001d58:	4618      	mov	r0, r3
 8001d5a:	3708      	adds	r7, #8
 8001d5c:	46bd      	mov	sp, r7
 8001d5e:	bd80      	pop	{r7, pc}
 8001d60:	40004400 	.word	0x40004400
 8001d64:	40004404 	.word	0x40004404

08001d68 <usart2_putch>:

void usart2_putch(char c){
 8001d68:	b480      	push	{r7}
 8001d6a:	b083      	sub	sp, #12
 8001d6c:	af00      	add	r7, sp, #0
 8001d6e:	4603      	mov	r3, r0
 8001d70:	71fb      	strb	r3, [r7, #7]
	while((*(USART_SR)&(1<<TXE)) != (1<<TXE));
 8001d72:	bf00      	nop
 8001d74:	4b06      	ldr	r3, [pc, #24]	; (8001d90 <usart2_putch+0x28>)
 8001d76:	681b      	ldr	r3, [r3, #0]
 8001d78:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001d7c:	2b80      	cmp	r3, #128	; 0x80
 8001d7e:	d1f9      	bne.n	8001d74 <usart2_putch+0xc>
	*(USART_DR) = c;
 8001d80:	4a04      	ldr	r2, [pc, #16]	; (8001d94 <usart2_putch+0x2c>)
 8001d82:	79fb      	ldrb	r3, [r7, #7]
 8001d84:	6013      	str	r3, [r2, #0]
}
 8001d86:	bf00      	nop
 8001d88:	370c      	adds	r7, #12
 8001d8a:	46bd      	mov	sp, r7
 8001d8c:	bc80      	pop	{r7}
 8001d8e:	4770      	bx	lr
 8001d90:	40004400 	.word	0x40004400
 8001d94:	40004404 	.word	0x40004404

08001d98 <init_usart2>:

void init_usart2(uint32_t baud, uint32_t sysclk){
 8001d98:	b580      	push	{r7, lr}
 8001d9a:	b082      	sub	sp, #8
 8001d9c:	af00      	add	r7, sp, #0
 8001d9e:	6078      	str	r0, [r7, #4]
 8001da0:	6039      	str	r1, [r7, #0]
	// Enable clocks for GPIOA and USART2
	*(RCC_AHB1ENR) |= (1<<GPIOAEN);
 8001da2:	4b20      	ldr	r3, [pc, #128]	; (8001e24 <init_usart2+0x8c>)
 8001da4:	681b      	ldr	r3, [r3, #0]
 8001da6:	4a1f      	ldr	r2, [pc, #124]	; (8001e24 <init_usart2+0x8c>)
 8001da8:	f043 0301 	orr.w	r3, r3, #1
 8001dac:	6013      	str	r3, [r2, #0]
	*(RCC_APB1ENR) |= (1<<USART2EN);
 8001dae:	4b1e      	ldr	r3, [pc, #120]	; (8001e28 <init_usart2+0x90>)
 8001db0:	681b      	ldr	r3, [r3, #0]
 8001db2:	4a1d      	ldr	r2, [pc, #116]	; (8001e28 <init_usart2+0x90>)
 8001db4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001db8:	6013      	str	r3, [r2, #0]

	// Function 7 of PORTA pins is USART
	*(GPIOA_AFRL) &= (0xFFFF00FF); // Clear the bits associated with PA3 and PA2
 8001dba:	4b1c      	ldr	r3, [pc, #112]	; (8001e2c <init_usart2+0x94>)
 8001dbc:	681b      	ldr	r3, [r3, #0]
 8001dbe:	4a1b      	ldr	r2, [pc, #108]	; (8001e2c <init_usart2+0x94>)
 8001dc0:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8001dc4:	6013      	str	r3, [r2, #0]
	*(GPIOA_AFRL) |= (0b01110111<<8);  // Choose function 7 for both PA3 and PA2
 8001dc6:	4b19      	ldr	r3, [pc, #100]	; (8001e2c <init_usart2+0x94>)
 8001dc8:	681b      	ldr	r3, [r3, #0]
 8001dca:	4a18      	ldr	r2, [pc, #96]	; (8001e2c <init_usart2+0x94>)
 8001dcc:	f443 43ee 	orr.w	r3, r3, #30464	; 0x7700
 8001dd0:	6013      	str	r3, [r2, #0]
	*(GPIOA_MODER) &= (0xFFFFFF0F);  // Clear mode bits for PA3 and PA2
 8001dd2:	4b17      	ldr	r3, [pc, #92]	; (8001e30 <init_usart2+0x98>)
 8001dd4:	681b      	ldr	r3, [r3, #0]
 8001dd6:	4a16      	ldr	r2, [pc, #88]	; (8001e30 <init_usart2+0x98>)
 8001dd8:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8001ddc:	6013      	str	r3, [r2, #0]
	*(GPIOA_MODER) |= (0b1010<<4);  // Both PA3 and PA2 in alt function mode
 8001dde:	4b14      	ldr	r3, [pc, #80]	; (8001e30 <init_usart2+0x98>)
 8001de0:	681b      	ldr	r3, [r3, #0]
 8001de2:	4a13      	ldr	r2, [pc, #76]	; (8001e30 <init_usart2+0x98>)
 8001de4:	f043 03a0 	orr.w	r3, r3, #160	; 0xa0
 8001de8:	6013      	str	r3, [r2, #0]
	//USART2_init();  //8n1 no flow control
	// over8 = 0..oversample by 16
	// M = 0..1 start bit, data size is 8, 1 stop bit
	// PCE= 0..Parity check not enabled
	// no interrupts... using polling
	*(USART_CR1) = (1<<UE)|(1<<TE)|(1<<RE); // Enable UART, Tx and Rx
 8001dea:	4b12      	ldr	r3, [pc, #72]	; (8001e34 <init_usart2+0x9c>)
 8001dec:	f242 020c 	movw	r2, #8204	; 0x200c
 8001df0:	601a      	str	r2, [r3, #0]
	*(USART_CR2) = 0;  // This is the default, but do it anyway
 8001df2:	4b11      	ldr	r3, [pc, #68]	; (8001e38 <init_usart2+0xa0>)
 8001df4:	2200      	movs	r2, #0
 8001df6:	601a      	str	r2, [r3, #0]
	*(USART_CR3) = 0;  // This is the default, but do it anyway
 8001df8:	4b10      	ldr	r3, [pc, #64]	; (8001e3c <init_usart2+0xa4>)
 8001dfa:	2200      	movs	r2, #0
 8001dfc:	601a      	str	r2, [r3, #0]
	*(USART_BRR) = sysclk/baud;
 8001dfe:	4910      	ldr	r1, [pc, #64]	; (8001e40 <init_usart2+0xa8>)
 8001e00:	683a      	ldr	r2, [r7, #0]
 8001e02:	687b      	ldr	r3, [r7, #4]
 8001e04:	fbb2 f3f3 	udiv	r3, r2, r3
 8001e08:	600b      	str	r3, [r1, #0]

	/* I'm not sure if this is needed for standard IO*/
	 //setvbuf(stderr, NULL, _IONBF, 0);
	 //setvbuf(stdin, NULL, _IONBF, 0);
	 setvbuf(stdout, NULL, _IONBF, 0);
 8001e0a:	4b0e      	ldr	r3, [pc, #56]	; (8001e44 <init_usart2+0xac>)
 8001e0c:	681b      	ldr	r3, [r3, #0]
 8001e0e:	6898      	ldr	r0, [r3, #8]
 8001e10:	2300      	movs	r3, #0
 8001e12:	2202      	movs	r2, #2
 8001e14:	2100      	movs	r1, #0
 8001e16:	f001 fa13 	bl	8003240 <setvbuf>
}
 8001e1a:	bf00      	nop
 8001e1c:	3708      	adds	r7, #8
 8001e1e:	46bd      	mov	sp, r7
 8001e20:	bd80      	pop	{r7, pc}
 8001e22:	bf00      	nop
 8001e24:	40023830 	.word	0x40023830
 8001e28:	40023840 	.word	0x40023840
 8001e2c:	40020020 	.word	0x40020020
 8001e30:	40020000 	.word	0x40020000
 8001e34:	4000440c 	.word	0x4000440c
 8001e38:	40004410 	.word	0x40004410
 8001e3c:	40004414 	.word	0x40004414
 8001e40:	40004408 	.word	0x40004408
 8001e44:	20000b10 	.word	0x20000b10

08001e48 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8001e48:	480d      	ldr	r0, [pc, #52]	; (8001e80 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8001e4a:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8001e4c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001e50:	480c      	ldr	r0, [pc, #48]	; (8001e84 <LoopForever+0x6>)
  ldr r1, =_edata
 8001e52:	490d      	ldr	r1, [pc, #52]	; (8001e88 <LoopForever+0xa>)
  ldr r2, =_sidata
 8001e54:	4a0d      	ldr	r2, [pc, #52]	; (8001e8c <LoopForever+0xe>)
  movs r3, #0
 8001e56:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001e58:	e002      	b.n	8001e60 <LoopCopyDataInit>

08001e5a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001e5a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001e5c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001e5e:	3304      	adds	r3, #4

08001e60 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001e60:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001e62:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001e64:	d3f9      	bcc.n	8001e5a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001e66:	4a0a      	ldr	r2, [pc, #40]	; (8001e90 <LoopForever+0x12>)
  ldr r4, =_ebss
 8001e68:	4c0a      	ldr	r4, [pc, #40]	; (8001e94 <LoopForever+0x16>)
  movs r3, #0
 8001e6a:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001e6c:	e001      	b.n	8001e72 <LoopFillZerobss>

08001e6e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001e6e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001e70:	3204      	adds	r2, #4

08001e72 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001e72:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001e74:	d3fb      	bcc.n	8001e6e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8001e76:	f000 f9ad 	bl	80021d4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8001e7a:	f7fe ffbb 	bl	8000df4 <main>

08001e7e <LoopForever>:

LoopForever:
    b LoopForever
 8001e7e:	e7fe      	b.n	8001e7e <LoopForever>
  ldr   r0, =_estack
 8001e80:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8001e84:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001e88:	20000ce4 	.word	0x20000ce4
  ldr r2, =_sidata
 8001e8c:	08008198 	.word	0x08008198
  ldr r2, =_sbss
 8001e90:	20000ce4 	.word	0x20000ce4
  ldr r4, =_ebss
 8001e94:	20000d40 	.word	0x20000d40

08001e98 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8001e98:	e7fe      	b.n	8001e98 <ADC_IRQHandler>
	...

08001e9c <__errno>:
 8001e9c:	4b01      	ldr	r3, [pc, #4]	; (8001ea4 <__errno+0x8>)
 8001e9e:	6818      	ldr	r0, [r3, #0]
 8001ea0:	4770      	bx	lr
 8001ea2:	bf00      	nop
 8001ea4:	20000b10 	.word	0x20000b10

08001ea8 <_fgets_r>:
 8001ea8:	2a01      	cmp	r2, #1
 8001eaa:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001eae:	4680      	mov	r8, r0
 8001eb0:	460d      	mov	r5, r1
 8001eb2:	4617      	mov	r7, r2
 8001eb4:	461c      	mov	r4, r3
 8001eb6:	dc03      	bgt.n	8001ec0 <_fgets_r+0x18>
 8001eb8:	2500      	movs	r5, #0
 8001eba:	4628      	mov	r0, r5
 8001ebc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001ec0:	b118      	cbz	r0, 8001eca <_fgets_r+0x22>
 8001ec2:	6983      	ldr	r3, [r0, #24]
 8001ec4:	b90b      	cbnz	r3, 8001eca <_fgets_r+0x22>
 8001ec6:	f000 f8cb 	bl	8002060 <__sinit>
 8001eca:	4b31      	ldr	r3, [pc, #196]	; (8001f90 <_fgets_r+0xe8>)
 8001ecc:	429c      	cmp	r4, r3
 8001ece:	d120      	bne.n	8001f12 <_fgets_r+0x6a>
 8001ed0:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8001ed4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001ed6:	07de      	lsls	r6, r3, #31
 8001ed8:	d405      	bmi.n	8001ee6 <_fgets_r+0x3e>
 8001eda:	89a3      	ldrh	r3, [r4, #12]
 8001edc:	0598      	lsls	r0, r3, #22
 8001ede:	d402      	bmi.n	8001ee6 <_fgets_r+0x3e>
 8001ee0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001ee2:	f000 f99c 	bl	800221e <__retarget_lock_acquire_recursive>
 8001ee6:	3f01      	subs	r7, #1
 8001ee8:	46a9      	mov	r9, r5
 8001eea:	6866      	ldr	r6, [r4, #4]
 8001eec:	b9f6      	cbnz	r6, 8001f2c <_fgets_r+0x84>
 8001eee:	4621      	mov	r1, r4
 8001ef0:	4640      	mov	r0, r8
 8001ef2:	f001 f90b 	bl	800310c <__srefill_r>
 8001ef6:	b1c0      	cbz	r0, 8001f2a <_fgets_r+0x82>
 8001ef8:	45a9      	cmp	r9, r5
 8001efa:	d145      	bne.n	8001f88 <_fgets_r+0xe0>
 8001efc:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001efe:	07d9      	lsls	r1, r3, #31
 8001f00:	d4da      	bmi.n	8001eb8 <_fgets_r+0x10>
 8001f02:	89a5      	ldrh	r5, [r4, #12]
 8001f04:	f415 7500 	ands.w	r5, r5, #512	; 0x200
 8001f08:	d1d6      	bne.n	8001eb8 <_fgets_r+0x10>
 8001f0a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001f0c:	f000 f988 	bl	8002220 <__retarget_lock_release_recursive>
 8001f10:	e7d3      	b.n	8001eba <_fgets_r+0x12>
 8001f12:	4b20      	ldr	r3, [pc, #128]	; (8001f94 <_fgets_r+0xec>)
 8001f14:	429c      	cmp	r4, r3
 8001f16:	d102      	bne.n	8001f1e <_fgets_r+0x76>
 8001f18:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8001f1c:	e7da      	b.n	8001ed4 <_fgets_r+0x2c>
 8001f1e:	4b1e      	ldr	r3, [pc, #120]	; (8001f98 <_fgets_r+0xf0>)
 8001f20:	429c      	cmp	r4, r3
 8001f22:	bf08      	it	eq
 8001f24:	f8d8 400c 	ldreq.w	r4, [r8, #12]
 8001f28:	e7d4      	b.n	8001ed4 <_fgets_r+0x2c>
 8001f2a:	6866      	ldr	r6, [r4, #4]
 8001f2c:	f8d4 a000 	ldr.w	sl, [r4]
 8001f30:	42be      	cmp	r6, r7
 8001f32:	bf28      	it	cs
 8001f34:	463e      	movcs	r6, r7
 8001f36:	4632      	mov	r2, r6
 8001f38:	210a      	movs	r1, #10
 8001f3a:	4650      	mov	r0, sl
 8001f3c:	f7fe f968 	bl	8000210 <memchr>
 8001f40:	6863      	ldr	r3, [r4, #4]
 8001f42:	b1a0      	cbz	r0, 8001f6e <_fgets_r+0xc6>
 8001f44:	3001      	adds	r0, #1
 8001f46:	eba0 060a 	sub.w	r6, r0, sl
 8001f4a:	1b9b      	subs	r3, r3, r6
 8001f4c:	e9c4 0300 	strd	r0, r3, [r4]
 8001f50:	4632      	mov	r2, r6
 8001f52:	4651      	mov	r1, sl
 8001f54:	4648      	mov	r0, r9
 8001f56:	f000 f964 	bl	8002222 <memcpy>
 8001f5a:	2300      	movs	r3, #0
 8001f5c:	f809 3006 	strb.w	r3, [r9, r6]
 8001f60:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001f62:	07da      	lsls	r2, r3, #31
 8001f64:	d4a9      	bmi.n	8001eba <_fgets_r+0x12>
 8001f66:	89a3      	ldrh	r3, [r4, #12]
 8001f68:	059b      	lsls	r3, r3, #22
 8001f6a:	d4a6      	bmi.n	8001eba <_fgets_r+0x12>
 8001f6c:	e7cd      	b.n	8001f0a <_fgets_r+0x62>
 8001f6e:	1b9b      	subs	r3, r3, r6
 8001f70:	6063      	str	r3, [r4, #4]
 8001f72:	6823      	ldr	r3, [r4, #0]
 8001f74:	4433      	add	r3, r6
 8001f76:	4648      	mov	r0, r9
 8001f78:	6023      	str	r3, [r4, #0]
 8001f7a:	4632      	mov	r2, r6
 8001f7c:	4651      	mov	r1, sl
 8001f7e:	f000 f950 	bl	8002222 <memcpy>
 8001f82:	1bbf      	subs	r7, r7, r6
 8001f84:	44b1      	add	r9, r6
 8001f86:	d1b0      	bne.n	8001eea <_fgets_r+0x42>
 8001f88:	2300      	movs	r3, #0
 8001f8a:	f889 3000 	strb.w	r3, [r9]
 8001f8e:	e7e7      	b.n	8001f60 <_fgets_r+0xb8>
 8001f90:	08007c8c 	.word	0x08007c8c
 8001f94:	08007cac 	.word	0x08007cac
 8001f98:	08007c6c 	.word	0x08007c6c

08001f9c <fgets>:
 8001f9c:	4613      	mov	r3, r2
 8001f9e:	460a      	mov	r2, r1
 8001fa0:	4601      	mov	r1, r0
 8001fa2:	4802      	ldr	r0, [pc, #8]	; (8001fac <fgets+0x10>)
 8001fa4:	6800      	ldr	r0, [r0, #0]
 8001fa6:	f7ff bf7f 	b.w	8001ea8 <_fgets_r>
 8001faa:	bf00      	nop
 8001fac:	20000b10 	.word	0x20000b10

08001fb0 <std>:
 8001fb0:	2300      	movs	r3, #0
 8001fb2:	b510      	push	{r4, lr}
 8001fb4:	4604      	mov	r4, r0
 8001fb6:	e9c0 3300 	strd	r3, r3, [r0]
 8001fba:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8001fbe:	6083      	str	r3, [r0, #8]
 8001fc0:	8181      	strh	r1, [r0, #12]
 8001fc2:	6643      	str	r3, [r0, #100]	; 0x64
 8001fc4:	81c2      	strh	r2, [r0, #14]
 8001fc6:	6183      	str	r3, [r0, #24]
 8001fc8:	4619      	mov	r1, r3
 8001fca:	2208      	movs	r2, #8
 8001fcc:	305c      	adds	r0, #92	; 0x5c
 8001fce:	f000 f936 	bl	800223e <memset>
 8001fd2:	4b05      	ldr	r3, [pc, #20]	; (8001fe8 <std+0x38>)
 8001fd4:	6263      	str	r3, [r4, #36]	; 0x24
 8001fd6:	4b05      	ldr	r3, [pc, #20]	; (8001fec <std+0x3c>)
 8001fd8:	62a3      	str	r3, [r4, #40]	; 0x28
 8001fda:	4b05      	ldr	r3, [pc, #20]	; (8001ff0 <std+0x40>)
 8001fdc:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001fde:	4b05      	ldr	r3, [pc, #20]	; (8001ff4 <std+0x44>)
 8001fe0:	6224      	str	r4, [r4, #32]
 8001fe2:	6323      	str	r3, [r4, #48]	; 0x30
 8001fe4:	bd10      	pop	{r4, pc}
 8001fe6:	bf00      	nop
 8001fe8:	08003469 	.word	0x08003469
 8001fec:	0800348f 	.word	0x0800348f
 8001ff0:	080034c7 	.word	0x080034c7
 8001ff4:	080034eb 	.word	0x080034eb

08001ff8 <_cleanup_r>:
 8001ff8:	4901      	ldr	r1, [pc, #4]	; (8002000 <_cleanup_r+0x8>)
 8001ffa:	f000 b8cc 	b.w	8002196 <_fwalk_reent>
 8001ffe:	bf00      	nop
 8002000:	08005331 	.word	0x08005331

08002004 <__sfmoreglue>:
 8002004:	b570      	push	{r4, r5, r6, lr}
 8002006:	1e4a      	subs	r2, r1, #1
 8002008:	2568      	movs	r5, #104	; 0x68
 800200a:	4355      	muls	r5, r2
 800200c:	460e      	mov	r6, r1
 800200e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8002012:	f000 f91d 	bl	8002250 <_malloc_r>
 8002016:	4604      	mov	r4, r0
 8002018:	b140      	cbz	r0, 800202c <__sfmoreglue+0x28>
 800201a:	2100      	movs	r1, #0
 800201c:	e9c0 1600 	strd	r1, r6, [r0]
 8002020:	300c      	adds	r0, #12
 8002022:	60a0      	str	r0, [r4, #8]
 8002024:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8002028:	f000 f909 	bl	800223e <memset>
 800202c:	4620      	mov	r0, r4
 800202e:	bd70      	pop	{r4, r5, r6, pc}

08002030 <__sfp_lock_acquire>:
 8002030:	4801      	ldr	r0, [pc, #4]	; (8002038 <__sfp_lock_acquire+0x8>)
 8002032:	f000 b8f4 	b.w	800221e <__retarget_lock_acquire_recursive>
 8002036:	bf00      	nop
 8002038:	20000d38 	.word	0x20000d38

0800203c <__sfp_lock_release>:
 800203c:	4801      	ldr	r0, [pc, #4]	; (8002044 <__sfp_lock_release+0x8>)
 800203e:	f000 b8ef 	b.w	8002220 <__retarget_lock_release_recursive>
 8002042:	bf00      	nop
 8002044:	20000d38 	.word	0x20000d38

08002048 <__sinit_lock_acquire>:
 8002048:	4801      	ldr	r0, [pc, #4]	; (8002050 <__sinit_lock_acquire+0x8>)
 800204a:	f000 b8e8 	b.w	800221e <__retarget_lock_acquire_recursive>
 800204e:	bf00      	nop
 8002050:	20000d33 	.word	0x20000d33

08002054 <__sinit_lock_release>:
 8002054:	4801      	ldr	r0, [pc, #4]	; (800205c <__sinit_lock_release+0x8>)
 8002056:	f000 b8e3 	b.w	8002220 <__retarget_lock_release_recursive>
 800205a:	bf00      	nop
 800205c:	20000d33 	.word	0x20000d33

08002060 <__sinit>:
 8002060:	b510      	push	{r4, lr}
 8002062:	4604      	mov	r4, r0
 8002064:	f7ff fff0 	bl	8002048 <__sinit_lock_acquire>
 8002068:	69a3      	ldr	r3, [r4, #24]
 800206a:	b11b      	cbz	r3, 8002074 <__sinit+0x14>
 800206c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002070:	f7ff bff0 	b.w	8002054 <__sinit_lock_release>
 8002074:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8002078:	6523      	str	r3, [r4, #80]	; 0x50
 800207a:	4b13      	ldr	r3, [pc, #76]	; (80020c8 <__sinit+0x68>)
 800207c:	4a13      	ldr	r2, [pc, #76]	; (80020cc <__sinit+0x6c>)
 800207e:	681b      	ldr	r3, [r3, #0]
 8002080:	62a2      	str	r2, [r4, #40]	; 0x28
 8002082:	42a3      	cmp	r3, r4
 8002084:	bf04      	itt	eq
 8002086:	2301      	moveq	r3, #1
 8002088:	61a3      	streq	r3, [r4, #24]
 800208a:	4620      	mov	r0, r4
 800208c:	f000 f820 	bl	80020d0 <__sfp>
 8002090:	6060      	str	r0, [r4, #4]
 8002092:	4620      	mov	r0, r4
 8002094:	f000 f81c 	bl	80020d0 <__sfp>
 8002098:	60a0      	str	r0, [r4, #8]
 800209a:	4620      	mov	r0, r4
 800209c:	f000 f818 	bl	80020d0 <__sfp>
 80020a0:	2200      	movs	r2, #0
 80020a2:	60e0      	str	r0, [r4, #12]
 80020a4:	2104      	movs	r1, #4
 80020a6:	6860      	ldr	r0, [r4, #4]
 80020a8:	f7ff ff82 	bl	8001fb0 <std>
 80020ac:	68a0      	ldr	r0, [r4, #8]
 80020ae:	2201      	movs	r2, #1
 80020b0:	2109      	movs	r1, #9
 80020b2:	f7ff ff7d 	bl	8001fb0 <std>
 80020b6:	68e0      	ldr	r0, [r4, #12]
 80020b8:	2202      	movs	r2, #2
 80020ba:	2112      	movs	r1, #18
 80020bc:	f7ff ff78 	bl	8001fb0 <std>
 80020c0:	2301      	movs	r3, #1
 80020c2:	61a3      	str	r3, [r4, #24]
 80020c4:	e7d2      	b.n	800206c <__sinit+0xc>
 80020c6:	bf00      	nop
 80020c8:	08007ccc 	.word	0x08007ccc
 80020cc:	08001ff9 	.word	0x08001ff9

080020d0 <__sfp>:
 80020d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80020d2:	4607      	mov	r7, r0
 80020d4:	f7ff ffac 	bl	8002030 <__sfp_lock_acquire>
 80020d8:	4b1e      	ldr	r3, [pc, #120]	; (8002154 <__sfp+0x84>)
 80020da:	681e      	ldr	r6, [r3, #0]
 80020dc:	69b3      	ldr	r3, [r6, #24]
 80020de:	b913      	cbnz	r3, 80020e6 <__sfp+0x16>
 80020e0:	4630      	mov	r0, r6
 80020e2:	f7ff ffbd 	bl	8002060 <__sinit>
 80020e6:	3648      	adds	r6, #72	; 0x48
 80020e8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80020ec:	3b01      	subs	r3, #1
 80020ee:	d503      	bpl.n	80020f8 <__sfp+0x28>
 80020f0:	6833      	ldr	r3, [r6, #0]
 80020f2:	b30b      	cbz	r3, 8002138 <__sfp+0x68>
 80020f4:	6836      	ldr	r6, [r6, #0]
 80020f6:	e7f7      	b.n	80020e8 <__sfp+0x18>
 80020f8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80020fc:	b9d5      	cbnz	r5, 8002134 <__sfp+0x64>
 80020fe:	4b16      	ldr	r3, [pc, #88]	; (8002158 <__sfp+0x88>)
 8002100:	60e3      	str	r3, [r4, #12]
 8002102:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8002106:	6665      	str	r5, [r4, #100]	; 0x64
 8002108:	f000 f888 	bl	800221c <__retarget_lock_init_recursive>
 800210c:	f7ff ff96 	bl	800203c <__sfp_lock_release>
 8002110:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8002114:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8002118:	6025      	str	r5, [r4, #0]
 800211a:	61a5      	str	r5, [r4, #24]
 800211c:	2208      	movs	r2, #8
 800211e:	4629      	mov	r1, r5
 8002120:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8002124:	f000 f88b 	bl	800223e <memset>
 8002128:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800212c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8002130:	4620      	mov	r0, r4
 8002132:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002134:	3468      	adds	r4, #104	; 0x68
 8002136:	e7d9      	b.n	80020ec <__sfp+0x1c>
 8002138:	2104      	movs	r1, #4
 800213a:	4638      	mov	r0, r7
 800213c:	f7ff ff62 	bl	8002004 <__sfmoreglue>
 8002140:	4604      	mov	r4, r0
 8002142:	6030      	str	r0, [r6, #0]
 8002144:	2800      	cmp	r0, #0
 8002146:	d1d5      	bne.n	80020f4 <__sfp+0x24>
 8002148:	f7ff ff78 	bl	800203c <__sfp_lock_release>
 800214c:	230c      	movs	r3, #12
 800214e:	603b      	str	r3, [r7, #0]
 8002150:	e7ee      	b.n	8002130 <__sfp+0x60>
 8002152:	bf00      	nop
 8002154:	08007ccc 	.word	0x08007ccc
 8002158:	ffff0001 	.word	0xffff0001

0800215c <_fwalk>:
 800215c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002160:	460f      	mov	r7, r1
 8002162:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8002166:	2600      	movs	r6, #0
 8002168:	e9d4 8501 	ldrd	r8, r5, [r4, #4]
 800216c:	f1b8 0801 	subs.w	r8, r8, #1
 8002170:	d505      	bpl.n	800217e <_fwalk+0x22>
 8002172:	6824      	ldr	r4, [r4, #0]
 8002174:	2c00      	cmp	r4, #0
 8002176:	d1f7      	bne.n	8002168 <_fwalk+0xc>
 8002178:	4630      	mov	r0, r6
 800217a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800217e:	89ab      	ldrh	r3, [r5, #12]
 8002180:	2b01      	cmp	r3, #1
 8002182:	d906      	bls.n	8002192 <_fwalk+0x36>
 8002184:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8002188:	3301      	adds	r3, #1
 800218a:	d002      	beq.n	8002192 <_fwalk+0x36>
 800218c:	4628      	mov	r0, r5
 800218e:	47b8      	blx	r7
 8002190:	4306      	orrs	r6, r0
 8002192:	3568      	adds	r5, #104	; 0x68
 8002194:	e7ea      	b.n	800216c <_fwalk+0x10>

08002196 <_fwalk_reent>:
 8002196:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800219a:	4606      	mov	r6, r0
 800219c:	4688      	mov	r8, r1
 800219e:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80021a2:	2700      	movs	r7, #0
 80021a4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80021a8:	f1b9 0901 	subs.w	r9, r9, #1
 80021ac:	d505      	bpl.n	80021ba <_fwalk_reent+0x24>
 80021ae:	6824      	ldr	r4, [r4, #0]
 80021b0:	2c00      	cmp	r4, #0
 80021b2:	d1f7      	bne.n	80021a4 <_fwalk_reent+0xe>
 80021b4:	4638      	mov	r0, r7
 80021b6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80021ba:	89ab      	ldrh	r3, [r5, #12]
 80021bc:	2b01      	cmp	r3, #1
 80021be:	d907      	bls.n	80021d0 <_fwalk_reent+0x3a>
 80021c0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80021c4:	3301      	adds	r3, #1
 80021c6:	d003      	beq.n	80021d0 <_fwalk_reent+0x3a>
 80021c8:	4629      	mov	r1, r5
 80021ca:	4630      	mov	r0, r6
 80021cc:	47c0      	blx	r8
 80021ce:	4307      	orrs	r7, r0
 80021d0:	3568      	adds	r5, #104	; 0x68
 80021d2:	e7e9      	b.n	80021a8 <_fwalk_reent+0x12>

080021d4 <__libc_init_array>:
 80021d4:	b570      	push	{r4, r5, r6, lr}
 80021d6:	4d0d      	ldr	r5, [pc, #52]	; (800220c <__libc_init_array+0x38>)
 80021d8:	4c0d      	ldr	r4, [pc, #52]	; (8002210 <__libc_init_array+0x3c>)
 80021da:	1b64      	subs	r4, r4, r5
 80021dc:	10a4      	asrs	r4, r4, #2
 80021de:	2600      	movs	r6, #0
 80021e0:	42a6      	cmp	r6, r4
 80021e2:	d109      	bne.n	80021f8 <__libc_init_array+0x24>
 80021e4:	4d0b      	ldr	r5, [pc, #44]	; (8002214 <__libc_init_array+0x40>)
 80021e6:	4c0c      	ldr	r4, [pc, #48]	; (8002218 <__libc_init_array+0x44>)
 80021e8:	f005 f9c6 	bl	8007578 <_init>
 80021ec:	1b64      	subs	r4, r4, r5
 80021ee:	10a4      	asrs	r4, r4, #2
 80021f0:	2600      	movs	r6, #0
 80021f2:	42a6      	cmp	r6, r4
 80021f4:	d105      	bne.n	8002202 <__libc_init_array+0x2e>
 80021f6:	bd70      	pop	{r4, r5, r6, pc}
 80021f8:	f855 3b04 	ldr.w	r3, [r5], #4
 80021fc:	4798      	blx	r3
 80021fe:	3601      	adds	r6, #1
 8002200:	e7ee      	b.n	80021e0 <__libc_init_array+0xc>
 8002202:	f855 3b04 	ldr.w	r3, [r5], #4
 8002206:	4798      	blx	r3
 8002208:	3601      	adds	r6, #1
 800220a:	e7f2      	b.n	80021f2 <__libc_init_array+0x1e>
 800220c:	08008190 	.word	0x08008190
 8002210:	08008190 	.word	0x08008190
 8002214:	08008190 	.word	0x08008190
 8002218:	08008194 	.word	0x08008194

0800221c <__retarget_lock_init_recursive>:
 800221c:	4770      	bx	lr

0800221e <__retarget_lock_acquire_recursive>:
 800221e:	4770      	bx	lr

08002220 <__retarget_lock_release_recursive>:
 8002220:	4770      	bx	lr

08002222 <memcpy>:
 8002222:	440a      	add	r2, r1
 8002224:	4291      	cmp	r1, r2
 8002226:	f100 33ff 	add.w	r3, r0, #4294967295
 800222a:	d100      	bne.n	800222e <memcpy+0xc>
 800222c:	4770      	bx	lr
 800222e:	b510      	push	{r4, lr}
 8002230:	f811 4b01 	ldrb.w	r4, [r1], #1
 8002234:	f803 4f01 	strb.w	r4, [r3, #1]!
 8002238:	4291      	cmp	r1, r2
 800223a:	d1f9      	bne.n	8002230 <memcpy+0xe>
 800223c:	bd10      	pop	{r4, pc}

0800223e <memset>:
 800223e:	4402      	add	r2, r0
 8002240:	4603      	mov	r3, r0
 8002242:	4293      	cmp	r3, r2
 8002244:	d100      	bne.n	8002248 <memset+0xa>
 8002246:	4770      	bx	lr
 8002248:	f803 1b01 	strb.w	r1, [r3], #1
 800224c:	e7f9      	b.n	8002242 <memset+0x4>
	...

08002250 <_malloc_r>:
 8002250:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002252:	1ccd      	adds	r5, r1, #3
 8002254:	f025 0503 	bic.w	r5, r5, #3
 8002258:	3508      	adds	r5, #8
 800225a:	2d0c      	cmp	r5, #12
 800225c:	bf38      	it	cc
 800225e:	250c      	movcc	r5, #12
 8002260:	2d00      	cmp	r5, #0
 8002262:	4606      	mov	r6, r0
 8002264:	db01      	blt.n	800226a <_malloc_r+0x1a>
 8002266:	42a9      	cmp	r1, r5
 8002268:	d903      	bls.n	8002272 <_malloc_r+0x22>
 800226a:	230c      	movs	r3, #12
 800226c:	6033      	str	r3, [r6, #0]
 800226e:	2000      	movs	r0, #0
 8002270:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002272:	f003 fcb5 	bl	8005be0 <__malloc_lock>
 8002276:	4921      	ldr	r1, [pc, #132]	; (80022fc <_malloc_r+0xac>)
 8002278:	680a      	ldr	r2, [r1, #0]
 800227a:	4614      	mov	r4, r2
 800227c:	b99c      	cbnz	r4, 80022a6 <_malloc_r+0x56>
 800227e:	4f20      	ldr	r7, [pc, #128]	; (8002300 <_malloc_r+0xb0>)
 8002280:	683b      	ldr	r3, [r7, #0]
 8002282:	b923      	cbnz	r3, 800228e <_malloc_r+0x3e>
 8002284:	4621      	mov	r1, r4
 8002286:	4630      	mov	r0, r6
 8002288:	f000 ffca 	bl	8003220 <_sbrk_r>
 800228c:	6038      	str	r0, [r7, #0]
 800228e:	4629      	mov	r1, r5
 8002290:	4630      	mov	r0, r6
 8002292:	f000 ffc5 	bl	8003220 <_sbrk_r>
 8002296:	1c43      	adds	r3, r0, #1
 8002298:	d123      	bne.n	80022e2 <_malloc_r+0x92>
 800229a:	230c      	movs	r3, #12
 800229c:	6033      	str	r3, [r6, #0]
 800229e:	4630      	mov	r0, r6
 80022a0:	f003 fca4 	bl	8005bec <__malloc_unlock>
 80022a4:	e7e3      	b.n	800226e <_malloc_r+0x1e>
 80022a6:	6823      	ldr	r3, [r4, #0]
 80022a8:	1b5b      	subs	r3, r3, r5
 80022aa:	d417      	bmi.n	80022dc <_malloc_r+0x8c>
 80022ac:	2b0b      	cmp	r3, #11
 80022ae:	d903      	bls.n	80022b8 <_malloc_r+0x68>
 80022b0:	6023      	str	r3, [r4, #0]
 80022b2:	441c      	add	r4, r3
 80022b4:	6025      	str	r5, [r4, #0]
 80022b6:	e004      	b.n	80022c2 <_malloc_r+0x72>
 80022b8:	6863      	ldr	r3, [r4, #4]
 80022ba:	42a2      	cmp	r2, r4
 80022bc:	bf0c      	ite	eq
 80022be:	600b      	streq	r3, [r1, #0]
 80022c0:	6053      	strne	r3, [r2, #4]
 80022c2:	4630      	mov	r0, r6
 80022c4:	f003 fc92 	bl	8005bec <__malloc_unlock>
 80022c8:	f104 000b 	add.w	r0, r4, #11
 80022cc:	1d23      	adds	r3, r4, #4
 80022ce:	f020 0007 	bic.w	r0, r0, #7
 80022d2:	1ac2      	subs	r2, r0, r3
 80022d4:	d0cc      	beq.n	8002270 <_malloc_r+0x20>
 80022d6:	1a1b      	subs	r3, r3, r0
 80022d8:	50a3      	str	r3, [r4, r2]
 80022da:	e7c9      	b.n	8002270 <_malloc_r+0x20>
 80022dc:	4622      	mov	r2, r4
 80022de:	6864      	ldr	r4, [r4, #4]
 80022e0:	e7cc      	b.n	800227c <_malloc_r+0x2c>
 80022e2:	1cc4      	adds	r4, r0, #3
 80022e4:	f024 0403 	bic.w	r4, r4, #3
 80022e8:	42a0      	cmp	r0, r4
 80022ea:	d0e3      	beq.n	80022b4 <_malloc_r+0x64>
 80022ec:	1a21      	subs	r1, r4, r0
 80022ee:	4630      	mov	r0, r6
 80022f0:	f000 ff96 	bl	8003220 <_sbrk_r>
 80022f4:	3001      	adds	r0, #1
 80022f6:	d1dd      	bne.n	80022b4 <_malloc_r+0x64>
 80022f8:	e7cf      	b.n	800229a <_malloc_r+0x4a>
 80022fa:	bf00      	nop
 80022fc:	20000d28 	.word	0x20000d28
 8002300:	20000d2c 	.word	0x20000d2c

08002304 <__cvt>:
 8002304:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002308:	b088      	sub	sp, #32
 800230a:	2b00      	cmp	r3, #0
 800230c:	461f      	mov	r7, r3
 800230e:	4614      	mov	r4, r2
 8002310:	bfb8      	it	lt
 8002312:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 8002316:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8002318:	9d10      	ldr	r5, [sp, #64]	; 0x40
 800231a:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
 800231e:	bfb6      	itet	lt
 8002320:	461f      	movlt	r7, r3
 8002322:	2300      	movge	r3, #0
 8002324:	232d      	movlt	r3, #45	; 0x2d
 8002326:	7013      	strb	r3, [r2, #0]
 8002328:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800232a:	f023 0820 	bic.w	r8, r3, #32
 800232e:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8002332:	d005      	beq.n	8002340 <__cvt+0x3c>
 8002334:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 8002338:	d100      	bne.n	800233c <__cvt+0x38>
 800233a:	3501      	adds	r5, #1
 800233c:	2302      	movs	r3, #2
 800233e:	e000      	b.n	8002342 <__cvt+0x3e>
 8002340:	2303      	movs	r3, #3
 8002342:	aa07      	add	r2, sp, #28
 8002344:	9204      	str	r2, [sp, #16]
 8002346:	aa06      	add	r2, sp, #24
 8002348:	e9cd a202 	strd	sl, r2, [sp, #8]
 800234c:	e9cd 3500 	strd	r3, r5, [sp]
 8002350:	4622      	mov	r2, r4
 8002352:	463b      	mov	r3, r7
 8002354:	f002 f978 	bl	8004648 <_dtoa_r>
 8002358:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 800235c:	4606      	mov	r6, r0
 800235e:	d102      	bne.n	8002366 <__cvt+0x62>
 8002360:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002362:	07db      	lsls	r3, r3, #31
 8002364:	d522      	bpl.n	80023ac <__cvt+0xa8>
 8002366:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800236a:	eb06 0905 	add.w	r9, r6, r5
 800236e:	d110      	bne.n	8002392 <__cvt+0x8e>
 8002370:	7833      	ldrb	r3, [r6, #0]
 8002372:	2b30      	cmp	r3, #48	; 0x30
 8002374:	d10a      	bne.n	800238c <__cvt+0x88>
 8002376:	2200      	movs	r2, #0
 8002378:	2300      	movs	r3, #0
 800237a:	4620      	mov	r0, r4
 800237c:	4639      	mov	r1, r7
 800237e:	f7fe fbcd 	bl	8000b1c <__aeabi_dcmpeq>
 8002382:	b918      	cbnz	r0, 800238c <__cvt+0x88>
 8002384:	f1c5 0501 	rsb	r5, r5, #1
 8002388:	f8ca 5000 	str.w	r5, [sl]
 800238c:	f8da 3000 	ldr.w	r3, [sl]
 8002390:	4499      	add	r9, r3
 8002392:	2200      	movs	r2, #0
 8002394:	2300      	movs	r3, #0
 8002396:	4620      	mov	r0, r4
 8002398:	4639      	mov	r1, r7
 800239a:	f7fe fbbf 	bl	8000b1c <__aeabi_dcmpeq>
 800239e:	b108      	cbz	r0, 80023a4 <__cvt+0xa0>
 80023a0:	f8cd 901c 	str.w	r9, [sp, #28]
 80023a4:	2230      	movs	r2, #48	; 0x30
 80023a6:	9b07      	ldr	r3, [sp, #28]
 80023a8:	454b      	cmp	r3, r9
 80023aa:	d307      	bcc.n	80023bc <__cvt+0xb8>
 80023ac:	9b07      	ldr	r3, [sp, #28]
 80023ae:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80023b0:	1b9b      	subs	r3, r3, r6
 80023b2:	4630      	mov	r0, r6
 80023b4:	6013      	str	r3, [r2, #0]
 80023b6:	b008      	add	sp, #32
 80023b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80023bc:	1c59      	adds	r1, r3, #1
 80023be:	9107      	str	r1, [sp, #28]
 80023c0:	701a      	strb	r2, [r3, #0]
 80023c2:	e7f0      	b.n	80023a6 <__cvt+0xa2>

080023c4 <__exponent>:
 80023c4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80023c6:	4603      	mov	r3, r0
 80023c8:	2900      	cmp	r1, #0
 80023ca:	bfb8      	it	lt
 80023cc:	4249      	neglt	r1, r1
 80023ce:	f803 2b02 	strb.w	r2, [r3], #2
 80023d2:	bfb4      	ite	lt
 80023d4:	222d      	movlt	r2, #45	; 0x2d
 80023d6:	222b      	movge	r2, #43	; 0x2b
 80023d8:	2909      	cmp	r1, #9
 80023da:	7042      	strb	r2, [r0, #1]
 80023dc:	dd2a      	ble.n	8002434 <__exponent+0x70>
 80023de:	f10d 0407 	add.w	r4, sp, #7
 80023e2:	46a4      	mov	ip, r4
 80023e4:	270a      	movs	r7, #10
 80023e6:	46a6      	mov	lr, r4
 80023e8:	460a      	mov	r2, r1
 80023ea:	fb91 f6f7 	sdiv	r6, r1, r7
 80023ee:	fb07 1516 	mls	r5, r7, r6, r1
 80023f2:	3530      	adds	r5, #48	; 0x30
 80023f4:	2a63      	cmp	r2, #99	; 0x63
 80023f6:	f104 34ff 	add.w	r4, r4, #4294967295
 80023fa:	f80e 5c01 	strb.w	r5, [lr, #-1]
 80023fe:	4631      	mov	r1, r6
 8002400:	dcf1      	bgt.n	80023e6 <__exponent+0x22>
 8002402:	3130      	adds	r1, #48	; 0x30
 8002404:	f1ae 0502 	sub.w	r5, lr, #2
 8002408:	f804 1c01 	strb.w	r1, [r4, #-1]
 800240c:	1c44      	adds	r4, r0, #1
 800240e:	4629      	mov	r1, r5
 8002410:	4561      	cmp	r1, ip
 8002412:	d30a      	bcc.n	800242a <__exponent+0x66>
 8002414:	f10d 0209 	add.w	r2, sp, #9
 8002418:	eba2 020e 	sub.w	r2, r2, lr
 800241c:	4565      	cmp	r5, ip
 800241e:	bf88      	it	hi
 8002420:	2200      	movhi	r2, #0
 8002422:	4413      	add	r3, r2
 8002424:	1a18      	subs	r0, r3, r0
 8002426:	b003      	add	sp, #12
 8002428:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800242a:	f811 2b01 	ldrb.w	r2, [r1], #1
 800242e:	f804 2f01 	strb.w	r2, [r4, #1]!
 8002432:	e7ed      	b.n	8002410 <__exponent+0x4c>
 8002434:	2330      	movs	r3, #48	; 0x30
 8002436:	3130      	adds	r1, #48	; 0x30
 8002438:	7083      	strb	r3, [r0, #2]
 800243a:	70c1      	strb	r1, [r0, #3]
 800243c:	1d03      	adds	r3, r0, #4
 800243e:	e7f1      	b.n	8002424 <__exponent+0x60>

08002440 <_printf_float>:
 8002440:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002444:	b091      	sub	sp, #68	; 0x44
 8002446:	460c      	mov	r4, r1
 8002448:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 800244c:	4616      	mov	r6, r2
 800244e:	461f      	mov	r7, r3
 8002450:	4605      	mov	r5, r0
 8002452:	f003 fb31 	bl	8005ab8 <_localeconv_r>
 8002456:	6803      	ldr	r3, [r0, #0]
 8002458:	9309      	str	r3, [sp, #36]	; 0x24
 800245a:	4618      	mov	r0, r3
 800245c:	f7fd ff32 	bl	80002c4 <strlen>
 8002460:	2300      	movs	r3, #0
 8002462:	930e      	str	r3, [sp, #56]	; 0x38
 8002464:	f8d8 3000 	ldr.w	r3, [r8]
 8002468:	900a      	str	r0, [sp, #40]	; 0x28
 800246a:	3307      	adds	r3, #7
 800246c:	f023 0307 	bic.w	r3, r3, #7
 8002470:	f103 0208 	add.w	r2, r3, #8
 8002474:	f894 9018 	ldrb.w	r9, [r4, #24]
 8002478:	f8d4 b000 	ldr.w	fp, [r4]
 800247c:	f8c8 2000 	str.w	r2, [r8]
 8002480:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002484:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 8002488:	e9d4 8a12 	ldrd	r8, sl, [r4, #72]	; 0x48
 800248c:	f02a 4300 	bic.w	r3, sl, #2147483648	; 0x80000000
 8002490:	930b      	str	r3, [sp, #44]	; 0x2c
 8002492:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8002494:	4b9c      	ldr	r3, [pc, #624]	; (8002708 <_printf_float+0x2c8>)
 8002496:	f04f 32ff 	mov.w	r2, #4294967295
 800249a:	4640      	mov	r0, r8
 800249c:	f7fe fb70 	bl	8000b80 <__aeabi_dcmpun>
 80024a0:	bb70      	cbnz	r0, 8002500 <_printf_float+0xc0>
 80024a2:	4b99      	ldr	r3, [pc, #612]	; (8002708 <_printf_float+0x2c8>)
 80024a4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80024a6:	f04f 32ff 	mov.w	r2, #4294967295
 80024aa:	4640      	mov	r0, r8
 80024ac:	f7fe fb4a 	bl	8000b44 <__aeabi_dcmple>
 80024b0:	bb30      	cbnz	r0, 8002500 <_printf_float+0xc0>
 80024b2:	2200      	movs	r2, #0
 80024b4:	2300      	movs	r3, #0
 80024b6:	4640      	mov	r0, r8
 80024b8:	4651      	mov	r1, sl
 80024ba:	f7fe fb39 	bl	8000b30 <__aeabi_dcmplt>
 80024be:	b110      	cbz	r0, 80024c6 <_printf_float+0x86>
 80024c0:	232d      	movs	r3, #45	; 0x2d
 80024c2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80024c6:	4b91      	ldr	r3, [pc, #580]	; (800270c <_printf_float+0x2cc>)
 80024c8:	4891      	ldr	r0, [pc, #580]	; (8002710 <_printf_float+0x2d0>)
 80024ca:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
 80024ce:	bf94      	ite	ls
 80024d0:	4698      	movls	r8, r3
 80024d2:	4680      	movhi	r8, r0
 80024d4:	2303      	movs	r3, #3
 80024d6:	6123      	str	r3, [r4, #16]
 80024d8:	f02b 0304 	bic.w	r3, fp, #4
 80024dc:	6023      	str	r3, [r4, #0]
 80024de:	f04f 0a00 	mov.w	sl, #0
 80024e2:	9700      	str	r7, [sp, #0]
 80024e4:	4633      	mov	r3, r6
 80024e6:	aa0f      	add	r2, sp, #60	; 0x3c
 80024e8:	4621      	mov	r1, r4
 80024ea:	4628      	mov	r0, r5
 80024ec:	f000 f9d2 	bl	8002894 <_printf_common>
 80024f0:	3001      	adds	r0, #1
 80024f2:	f040 808f 	bne.w	8002614 <_printf_float+0x1d4>
 80024f6:	f04f 30ff 	mov.w	r0, #4294967295
 80024fa:	b011      	add	sp, #68	; 0x44
 80024fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002500:	4642      	mov	r2, r8
 8002502:	4653      	mov	r3, sl
 8002504:	4640      	mov	r0, r8
 8002506:	4651      	mov	r1, sl
 8002508:	f7fe fb3a 	bl	8000b80 <__aeabi_dcmpun>
 800250c:	b140      	cbz	r0, 8002520 <_printf_float+0xe0>
 800250e:	f1ba 0f00 	cmp.w	sl, #0
 8002512:	bfbc      	itt	lt
 8002514:	232d      	movlt	r3, #45	; 0x2d
 8002516:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 800251a:	487e      	ldr	r0, [pc, #504]	; (8002714 <_printf_float+0x2d4>)
 800251c:	4b7e      	ldr	r3, [pc, #504]	; (8002718 <_printf_float+0x2d8>)
 800251e:	e7d4      	b.n	80024ca <_printf_float+0x8a>
 8002520:	6863      	ldr	r3, [r4, #4]
 8002522:	1c5a      	adds	r2, r3, #1
 8002524:	f009 01df 	and.w	r1, r9, #223	; 0xdf
 8002528:	d142      	bne.n	80025b0 <_printf_float+0x170>
 800252a:	2306      	movs	r3, #6
 800252c:	6063      	str	r3, [r4, #4]
 800252e:	2200      	movs	r2, #0
 8002530:	9206      	str	r2, [sp, #24]
 8002532:	aa0e      	add	r2, sp, #56	; 0x38
 8002534:	e9cd 9204 	strd	r9, r2, [sp, #16]
 8002538:	aa0d      	add	r2, sp, #52	; 0x34
 800253a:	f44b 6380 	orr.w	r3, fp, #1024	; 0x400
 800253e:	9203      	str	r2, [sp, #12]
 8002540:	f10d 0233 	add.w	r2, sp, #51	; 0x33
 8002544:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002548:	6023      	str	r3, [r4, #0]
 800254a:	6863      	ldr	r3, [r4, #4]
 800254c:	9300      	str	r3, [sp, #0]
 800254e:	4642      	mov	r2, r8
 8002550:	4653      	mov	r3, sl
 8002552:	4628      	mov	r0, r5
 8002554:	910b      	str	r1, [sp, #44]	; 0x2c
 8002556:	f7ff fed5 	bl	8002304 <__cvt>
 800255a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800255c:	2947      	cmp	r1, #71	; 0x47
 800255e:	4680      	mov	r8, r0
 8002560:	990d      	ldr	r1, [sp, #52]	; 0x34
 8002562:	d108      	bne.n	8002576 <_printf_float+0x136>
 8002564:	1cc8      	adds	r0, r1, #3
 8002566:	db02      	blt.n	800256e <_printf_float+0x12e>
 8002568:	6863      	ldr	r3, [r4, #4]
 800256a:	4299      	cmp	r1, r3
 800256c:	dd40      	ble.n	80025f0 <_printf_float+0x1b0>
 800256e:	f1a9 0902 	sub.w	r9, r9, #2
 8002572:	fa5f f989 	uxtb.w	r9, r9
 8002576:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 800257a:	d81f      	bhi.n	80025bc <_printf_float+0x17c>
 800257c:	3901      	subs	r1, #1
 800257e:	464a      	mov	r2, r9
 8002580:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8002584:	910d      	str	r1, [sp, #52]	; 0x34
 8002586:	f7ff ff1d 	bl	80023c4 <__exponent>
 800258a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800258c:	1813      	adds	r3, r2, r0
 800258e:	2a01      	cmp	r2, #1
 8002590:	4682      	mov	sl, r0
 8002592:	6123      	str	r3, [r4, #16]
 8002594:	dc02      	bgt.n	800259c <_printf_float+0x15c>
 8002596:	6822      	ldr	r2, [r4, #0]
 8002598:	07d2      	lsls	r2, r2, #31
 800259a:	d501      	bpl.n	80025a0 <_printf_float+0x160>
 800259c:	3301      	adds	r3, #1
 800259e:	6123      	str	r3, [r4, #16]
 80025a0:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 80025a4:	2b00      	cmp	r3, #0
 80025a6:	d09c      	beq.n	80024e2 <_printf_float+0xa2>
 80025a8:	232d      	movs	r3, #45	; 0x2d
 80025aa:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80025ae:	e798      	b.n	80024e2 <_printf_float+0xa2>
 80025b0:	2947      	cmp	r1, #71	; 0x47
 80025b2:	d1bc      	bne.n	800252e <_printf_float+0xee>
 80025b4:	2b00      	cmp	r3, #0
 80025b6:	d1ba      	bne.n	800252e <_printf_float+0xee>
 80025b8:	2301      	movs	r3, #1
 80025ba:	e7b7      	b.n	800252c <_printf_float+0xec>
 80025bc:	f1b9 0f66 	cmp.w	r9, #102	; 0x66
 80025c0:	d118      	bne.n	80025f4 <_printf_float+0x1b4>
 80025c2:	2900      	cmp	r1, #0
 80025c4:	6863      	ldr	r3, [r4, #4]
 80025c6:	dd0b      	ble.n	80025e0 <_printf_float+0x1a0>
 80025c8:	6121      	str	r1, [r4, #16]
 80025ca:	b913      	cbnz	r3, 80025d2 <_printf_float+0x192>
 80025cc:	6822      	ldr	r2, [r4, #0]
 80025ce:	07d0      	lsls	r0, r2, #31
 80025d0:	d502      	bpl.n	80025d8 <_printf_float+0x198>
 80025d2:	3301      	adds	r3, #1
 80025d4:	440b      	add	r3, r1
 80025d6:	6123      	str	r3, [r4, #16]
 80025d8:	65a1      	str	r1, [r4, #88]	; 0x58
 80025da:	f04f 0a00 	mov.w	sl, #0
 80025de:	e7df      	b.n	80025a0 <_printf_float+0x160>
 80025e0:	b913      	cbnz	r3, 80025e8 <_printf_float+0x1a8>
 80025e2:	6822      	ldr	r2, [r4, #0]
 80025e4:	07d2      	lsls	r2, r2, #31
 80025e6:	d501      	bpl.n	80025ec <_printf_float+0x1ac>
 80025e8:	3302      	adds	r3, #2
 80025ea:	e7f4      	b.n	80025d6 <_printf_float+0x196>
 80025ec:	2301      	movs	r3, #1
 80025ee:	e7f2      	b.n	80025d6 <_printf_float+0x196>
 80025f0:	f04f 0967 	mov.w	r9, #103	; 0x67
 80025f4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80025f6:	4299      	cmp	r1, r3
 80025f8:	db05      	blt.n	8002606 <_printf_float+0x1c6>
 80025fa:	6823      	ldr	r3, [r4, #0]
 80025fc:	6121      	str	r1, [r4, #16]
 80025fe:	07d8      	lsls	r0, r3, #31
 8002600:	d5ea      	bpl.n	80025d8 <_printf_float+0x198>
 8002602:	1c4b      	adds	r3, r1, #1
 8002604:	e7e7      	b.n	80025d6 <_printf_float+0x196>
 8002606:	2900      	cmp	r1, #0
 8002608:	bfd4      	ite	le
 800260a:	f1c1 0202 	rsble	r2, r1, #2
 800260e:	2201      	movgt	r2, #1
 8002610:	4413      	add	r3, r2
 8002612:	e7e0      	b.n	80025d6 <_printf_float+0x196>
 8002614:	6823      	ldr	r3, [r4, #0]
 8002616:	055a      	lsls	r2, r3, #21
 8002618:	d407      	bmi.n	800262a <_printf_float+0x1ea>
 800261a:	6923      	ldr	r3, [r4, #16]
 800261c:	4642      	mov	r2, r8
 800261e:	4631      	mov	r1, r6
 8002620:	4628      	mov	r0, r5
 8002622:	47b8      	blx	r7
 8002624:	3001      	adds	r0, #1
 8002626:	d12b      	bne.n	8002680 <_printf_float+0x240>
 8002628:	e765      	b.n	80024f6 <_printf_float+0xb6>
 800262a:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 800262e:	f240 80dc 	bls.w	80027ea <_printf_float+0x3aa>
 8002632:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8002636:	2200      	movs	r2, #0
 8002638:	2300      	movs	r3, #0
 800263a:	f7fe fa6f 	bl	8000b1c <__aeabi_dcmpeq>
 800263e:	2800      	cmp	r0, #0
 8002640:	d033      	beq.n	80026aa <_printf_float+0x26a>
 8002642:	4a36      	ldr	r2, [pc, #216]	; (800271c <_printf_float+0x2dc>)
 8002644:	2301      	movs	r3, #1
 8002646:	4631      	mov	r1, r6
 8002648:	4628      	mov	r0, r5
 800264a:	47b8      	blx	r7
 800264c:	3001      	adds	r0, #1
 800264e:	f43f af52 	beq.w	80024f6 <_printf_float+0xb6>
 8002652:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8002656:	429a      	cmp	r2, r3
 8002658:	db02      	blt.n	8002660 <_printf_float+0x220>
 800265a:	6823      	ldr	r3, [r4, #0]
 800265c:	07d8      	lsls	r0, r3, #31
 800265e:	d50f      	bpl.n	8002680 <_printf_float+0x240>
 8002660:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8002664:	4631      	mov	r1, r6
 8002666:	4628      	mov	r0, r5
 8002668:	47b8      	blx	r7
 800266a:	3001      	adds	r0, #1
 800266c:	f43f af43 	beq.w	80024f6 <_printf_float+0xb6>
 8002670:	f04f 0800 	mov.w	r8, #0
 8002674:	f104 091a 	add.w	r9, r4, #26
 8002678:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800267a:	3b01      	subs	r3, #1
 800267c:	4543      	cmp	r3, r8
 800267e:	dc09      	bgt.n	8002694 <_printf_float+0x254>
 8002680:	6823      	ldr	r3, [r4, #0]
 8002682:	079b      	lsls	r3, r3, #30
 8002684:	f100 8101 	bmi.w	800288a <_printf_float+0x44a>
 8002688:	68e0      	ldr	r0, [r4, #12]
 800268a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800268c:	4298      	cmp	r0, r3
 800268e:	bfb8      	it	lt
 8002690:	4618      	movlt	r0, r3
 8002692:	e732      	b.n	80024fa <_printf_float+0xba>
 8002694:	2301      	movs	r3, #1
 8002696:	464a      	mov	r2, r9
 8002698:	4631      	mov	r1, r6
 800269a:	4628      	mov	r0, r5
 800269c:	47b8      	blx	r7
 800269e:	3001      	adds	r0, #1
 80026a0:	f43f af29 	beq.w	80024f6 <_printf_float+0xb6>
 80026a4:	f108 0801 	add.w	r8, r8, #1
 80026a8:	e7e6      	b.n	8002678 <_printf_float+0x238>
 80026aa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80026ac:	2b00      	cmp	r3, #0
 80026ae:	dc37      	bgt.n	8002720 <_printf_float+0x2e0>
 80026b0:	4a1a      	ldr	r2, [pc, #104]	; (800271c <_printf_float+0x2dc>)
 80026b2:	2301      	movs	r3, #1
 80026b4:	4631      	mov	r1, r6
 80026b6:	4628      	mov	r0, r5
 80026b8:	47b8      	blx	r7
 80026ba:	3001      	adds	r0, #1
 80026bc:	f43f af1b 	beq.w	80024f6 <_printf_float+0xb6>
 80026c0:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 80026c4:	4313      	orrs	r3, r2
 80026c6:	d102      	bne.n	80026ce <_printf_float+0x28e>
 80026c8:	6823      	ldr	r3, [r4, #0]
 80026ca:	07d9      	lsls	r1, r3, #31
 80026cc:	d5d8      	bpl.n	8002680 <_printf_float+0x240>
 80026ce:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80026d2:	4631      	mov	r1, r6
 80026d4:	4628      	mov	r0, r5
 80026d6:	47b8      	blx	r7
 80026d8:	3001      	adds	r0, #1
 80026da:	f43f af0c 	beq.w	80024f6 <_printf_float+0xb6>
 80026de:	f04f 0900 	mov.w	r9, #0
 80026e2:	f104 0a1a 	add.w	sl, r4, #26
 80026e6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80026e8:	425b      	negs	r3, r3
 80026ea:	454b      	cmp	r3, r9
 80026ec:	dc01      	bgt.n	80026f2 <_printf_float+0x2b2>
 80026ee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80026f0:	e794      	b.n	800261c <_printf_float+0x1dc>
 80026f2:	2301      	movs	r3, #1
 80026f4:	4652      	mov	r2, sl
 80026f6:	4631      	mov	r1, r6
 80026f8:	4628      	mov	r0, r5
 80026fa:	47b8      	blx	r7
 80026fc:	3001      	adds	r0, #1
 80026fe:	f43f aefa 	beq.w	80024f6 <_printf_float+0xb6>
 8002702:	f109 0901 	add.w	r9, r9, #1
 8002706:	e7ee      	b.n	80026e6 <_printf_float+0x2a6>
 8002708:	7fefffff 	.word	0x7fefffff
 800270c:	08007cd0 	.word	0x08007cd0
 8002710:	08007cd4 	.word	0x08007cd4
 8002714:	08007cdc 	.word	0x08007cdc
 8002718:	08007cd8 	.word	0x08007cd8
 800271c:	08008179 	.word	0x08008179
 8002720:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8002722:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8002724:	429a      	cmp	r2, r3
 8002726:	bfa8      	it	ge
 8002728:	461a      	movge	r2, r3
 800272a:	2a00      	cmp	r2, #0
 800272c:	4691      	mov	r9, r2
 800272e:	dc37      	bgt.n	80027a0 <_printf_float+0x360>
 8002730:	f04f 0b00 	mov.w	fp, #0
 8002734:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8002738:	f104 021a 	add.w	r2, r4, #26
 800273c:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
 8002740:	ebaa 0309 	sub.w	r3, sl, r9
 8002744:	455b      	cmp	r3, fp
 8002746:	dc33      	bgt.n	80027b0 <_printf_float+0x370>
 8002748:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800274c:	429a      	cmp	r2, r3
 800274e:	db3b      	blt.n	80027c8 <_printf_float+0x388>
 8002750:	6823      	ldr	r3, [r4, #0]
 8002752:	07da      	lsls	r2, r3, #31
 8002754:	d438      	bmi.n	80027c8 <_printf_float+0x388>
 8002756:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8002758:	990d      	ldr	r1, [sp, #52]	; 0x34
 800275a:	eba2 030a 	sub.w	r3, r2, sl
 800275e:	eba2 0901 	sub.w	r9, r2, r1
 8002762:	4599      	cmp	r9, r3
 8002764:	bfa8      	it	ge
 8002766:	4699      	movge	r9, r3
 8002768:	f1b9 0f00 	cmp.w	r9, #0
 800276c:	dc34      	bgt.n	80027d8 <_printf_float+0x398>
 800276e:	f04f 0800 	mov.w	r8, #0
 8002772:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8002776:	f104 0a1a 	add.w	sl, r4, #26
 800277a:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800277e:	1a9b      	subs	r3, r3, r2
 8002780:	eba3 0309 	sub.w	r3, r3, r9
 8002784:	4543      	cmp	r3, r8
 8002786:	f77f af7b 	ble.w	8002680 <_printf_float+0x240>
 800278a:	2301      	movs	r3, #1
 800278c:	4652      	mov	r2, sl
 800278e:	4631      	mov	r1, r6
 8002790:	4628      	mov	r0, r5
 8002792:	47b8      	blx	r7
 8002794:	3001      	adds	r0, #1
 8002796:	f43f aeae 	beq.w	80024f6 <_printf_float+0xb6>
 800279a:	f108 0801 	add.w	r8, r8, #1
 800279e:	e7ec      	b.n	800277a <_printf_float+0x33a>
 80027a0:	4613      	mov	r3, r2
 80027a2:	4631      	mov	r1, r6
 80027a4:	4642      	mov	r2, r8
 80027a6:	4628      	mov	r0, r5
 80027a8:	47b8      	blx	r7
 80027aa:	3001      	adds	r0, #1
 80027ac:	d1c0      	bne.n	8002730 <_printf_float+0x2f0>
 80027ae:	e6a2      	b.n	80024f6 <_printf_float+0xb6>
 80027b0:	2301      	movs	r3, #1
 80027b2:	4631      	mov	r1, r6
 80027b4:	4628      	mov	r0, r5
 80027b6:	920b      	str	r2, [sp, #44]	; 0x2c
 80027b8:	47b8      	blx	r7
 80027ba:	3001      	adds	r0, #1
 80027bc:	f43f ae9b 	beq.w	80024f6 <_printf_float+0xb6>
 80027c0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80027c2:	f10b 0b01 	add.w	fp, fp, #1
 80027c6:	e7b9      	b.n	800273c <_printf_float+0x2fc>
 80027c8:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80027cc:	4631      	mov	r1, r6
 80027ce:	4628      	mov	r0, r5
 80027d0:	47b8      	blx	r7
 80027d2:	3001      	adds	r0, #1
 80027d4:	d1bf      	bne.n	8002756 <_printf_float+0x316>
 80027d6:	e68e      	b.n	80024f6 <_printf_float+0xb6>
 80027d8:	464b      	mov	r3, r9
 80027da:	eb08 020a 	add.w	r2, r8, sl
 80027de:	4631      	mov	r1, r6
 80027e0:	4628      	mov	r0, r5
 80027e2:	47b8      	blx	r7
 80027e4:	3001      	adds	r0, #1
 80027e6:	d1c2      	bne.n	800276e <_printf_float+0x32e>
 80027e8:	e685      	b.n	80024f6 <_printf_float+0xb6>
 80027ea:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80027ec:	2a01      	cmp	r2, #1
 80027ee:	dc01      	bgt.n	80027f4 <_printf_float+0x3b4>
 80027f0:	07db      	lsls	r3, r3, #31
 80027f2:	d537      	bpl.n	8002864 <_printf_float+0x424>
 80027f4:	2301      	movs	r3, #1
 80027f6:	4642      	mov	r2, r8
 80027f8:	4631      	mov	r1, r6
 80027fa:	4628      	mov	r0, r5
 80027fc:	47b8      	blx	r7
 80027fe:	3001      	adds	r0, #1
 8002800:	f43f ae79 	beq.w	80024f6 <_printf_float+0xb6>
 8002804:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8002808:	4631      	mov	r1, r6
 800280a:	4628      	mov	r0, r5
 800280c:	47b8      	blx	r7
 800280e:	3001      	adds	r0, #1
 8002810:	f43f ae71 	beq.w	80024f6 <_printf_float+0xb6>
 8002814:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8002818:	2200      	movs	r2, #0
 800281a:	2300      	movs	r3, #0
 800281c:	f7fe f97e 	bl	8000b1c <__aeabi_dcmpeq>
 8002820:	b9d8      	cbnz	r0, 800285a <_printf_float+0x41a>
 8002822:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002824:	f108 0201 	add.w	r2, r8, #1
 8002828:	3b01      	subs	r3, #1
 800282a:	4631      	mov	r1, r6
 800282c:	4628      	mov	r0, r5
 800282e:	47b8      	blx	r7
 8002830:	3001      	adds	r0, #1
 8002832:	d10e      	bne.n	8002852 <_printf_float+0x412>
 8002834:	e65f      	b.n	80024f6 <_printf_float+0xb6>
 8002836:	2301      	movs	r3, #1
 8002838:	464a      	mov	r2, r9
 800283a:	4631      	mov	r1, r6
 800283c:	4628      	mov	r0, r5
 800283e:	47b8      	blx	r7
 8002840:	3001      	adds	r0, #1
 8002842:	f43f ae58 	beq.w	80024f6 <_printf_float+0xb6>
 8002846:	f108 0801 	add.w	r8, r8, #1
 800284a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800284c:	3b01      	subs	r3, #1
 800284e:	4543      	cmp	r3, r8
 8002850:	dcf1      	bgt.n	8002836 <_printf_float+0x3f6>
 8002852:	4653      	mov	r3, sl
 8002854:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8002858:	e6e1      	b.n	800261e <_printf_float+0x1de>
 800285a:	f04f 0800 	mov.w	r8, #0
 800285e:	f104 091a 	add.w	r9, r4, #26
 8002862:	e7f2      	b.n	800284a <_printf_float+0x40a>
 8002864:	2301      	movs	r3, #1
 8002866:	4642      	mov	r2, r8
 8002868:	e7df      	b.n	800282a <_printf_float+0x3ea>
 800286a:	2301      	movs	r3, #1
 800286c:	464a      	mov	r2, r9
 800286e:	4631      	mov	r1, r6
 8002870:	4628      	mov	r0, r5
 8002872:	47b8      	blx	r7
 8002874:	3001      	adds	r0, #1
 8002876:	f43f ae3e 	beq.w	80024f6 <_printf_float+0xb6>
 800287a:	f108 0801 	add.w	r8, r8, #1
 800287e:	68e3      	ldr	r3, [r4, #12]
 8002880:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8002882:	1a5b      	subs	r3, r3, r1
 8002884:	4543      	cmp	r3, r8
 8002886:	dcf0      	bgt.n	800286a <_printf_float+0x42a>
 8002888:	e6fe      	b.n	8002688 <_printf_float+0x248>
 800288a:	f04f 0800 	mov.w	r8, #0
 800288e:	f104 0919 	add.w	r9, r4, #25
 8002892:	e7f4      	b.n	800287e <_printf_float+0x43e>

08002894 <_printf_common>:
 8002894:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002898:	4616      	mov	r6, r2
 800289a:	4699      	mov	r9, r3
 800289c:	688a      	ldr	r2, [r1, #8]
 800289e:	690b      	ldr	r3, [r1, #16]
 80028a0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80028a4:	4293      	cmp	r3, r2
 80028a6:	bfb8      	it	lt
 80028a8:	4613      	movlt	r3, r2
 80028aa:	6033      	str	r3, [r6, #0]
 80028ac:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80028b0:	4607      	mov	r7, r0
 80028b2:	460c      	mov	r4, r1
 80028b4:	b10a      	cbz	r2, 80028ba <_printf_common+0x26>
 80028b6:	3301      	adds	r3, #1
 80028b8:	6033      	str	r3, [r6, #0]
 80028ba:	6823      	ldr	r3, [r4, #0]
 80028bc:	0699      	lsls	r1, r3, #26
 80028be:	bf42      	ittt	mi
 80028c0:	6833      	ldrmi	r3, [r6, #0]
 80028c2:	3302      	addmi	r3, #2
 80028c4:	6033      	strmi	r3, [r6, #0]
 80028c6:	6825      	ldr	r5, [r4, #0]
 80028c8:	f015 0506 	ands.w	r5, r5, #6
 80028cc:	d106      	bne.n	80028dc <_printf_common+0x48>
 80028ce:	f104 0a19 	add.w	sl, r4, #25
 80028d2:	68e3      	ldr	r3, [r4, #12]
 80028d4:	6832      	ldr	r2, [r6, #0]
 80028d6:	1a9b      	subs	r3, r3, r2
 80028d8:	42ab      	cmp	r3, r5
 80028da:	dc26      	bgt.n	800292a <_printf_common+0x96>
 80028dc:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80028e0:	1e13      	subs	r3, r2, #0
 80028e2:	6822      	ldr	r2, [r4, #0]
 80028e4:	bf18      	it	ne
 80028e6:	2301      	movne	r3, #1
 80028e8:	0692      	lsls	r2, r2, #26
 80028ea:	d42b      	bmi.n	8002944 <_printf_common+0xb0>
 80028ec:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80028f0:	4649      	mov	r1, r9
 80028f2:	4638      	mov	r0, r7
 80028f4:	47c0      	blx	r8
 80028f6:	3001      	adds	r0, #1
 80028f8:	d01e      	beq.n	8002938 <_printf_common+0xa4>
 80028fa:	6823      	ldr	r3, [r4, #0]
 80028fc:	68e5      	ldr	r5, [r4, #12]
 80028fe:	6832      	ldr	r2, [r6, #0]
 8002900:	f003 0306 	and.w	r3, r3, #6
 8002904:	2b04      	cmp	r3, #4
 8002906:	bf08      	it	eq
 8002908:	1aad      	subeq	r5, r5, r2
 800290a:	68a3      	ldr	r3, [r4, #8]
 800290c:	6922      	ldr	r2, [r4, #16]
 800290e:	bf0c      	ite	eq
 8002910:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002914:	2500      	movne	r5, #0
 8002916:	4293      	cmp	r3, r2
 8002918:	bfc4      	itt	gt
 800291a:	1a9b      	subgt	r3, r3, r2
 800291c:	18ed      	addgt	r5, r5, r3
 800291e:	2600      	movs	r6, #0
 8002920:	341a      	adds	r4, #26
 8002922:	42b5      	cmp	r5, r6
 8002924:	d11a      	bne.n	800295c <_printf_common+0xc8>
 8002926:	2000      	movs	r0, #0
 8002928:	e008      	b.n	800293c <_printf_common+0xa8>
 800292a:	2301      	movs	r3, #1
 800292c:	4652      	mov	r2, sl
 800292e:	4649      	mov	r1, r9
 8002930:	4638      	mov	r0, r7
 8002932:	47c0      	blx	r8
 8002934:	3001      	adds	r0, #1
 8002936:	d103      	bne.n	8002940 <_printf_common+0xac>
 8002938:	f04f 30ff 	mov.w	r0, #4294967295
 800293c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002940:	3501      	adds	r5, #1
 8002942:	e7c6      	b.n	80028d2 <_printf_common+0x3e>
 8002944:	18e1      	adds	r1, r4, r3
 8002946:	1c5a      	adds	r2, r3, #1
 8002948:	2030      	movs	r0, #48	; 0x30
 800294a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800294e:	4422      	add	r2, r4
 8002950:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8002954:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8002958:	3302      	adds	r3, #2
 800295a:	e7c7      	b.n	80028ec <_printf_common+0x58>
 800295c:	2301      	movs	r3, #1
 800295e:	4622      	mov	r2, r4
 8002960:	4649      	mov	r1, r9
 8002962:	4638      	mov	r0, r7
 8002964:	47c0      	blx	r8
 8002966:	3001      	adds	r0, #1
 8002968:	d0e6      	beq.n	8002938 <_printf_common+0xa4>
 800296a:	3601      	adds	r6, #1
 800296c:	e7d9      	b.n	8002922 <_printf_common+0x8e>
	...

08002970 <_printf_i>:
 8002970:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8002974:	460c      	mov	r4, r1
 8002976:	4691      	mov	r9, r2
 8002978:	7e27      	ldrb	r7, [r4, #24]
 800297a:	990c      	ldr	r1, [sp, #48]	; 0x30
 800297c:	2f78      	cmp	r7, #120	; 0x78
 800297e:	4680      	mov	r8, r0
 8002980:	469a      	mov	sl, r3
 8002982:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8002986:	d807      	bhi.n	8002998 <_printf_i+0x28>
 8002988:	2f62      	cmp	r7, #98	; 0x62
 800298a:	d80a      	bhi.n	80029a2 <_printf_i+0x32>
 800298c:	2f00      	cmp	r7, #0
 800298e:	f000 80d8 	beq.w	8002b42 <_printf_i+0x1d2>
 8002992:	2f58      	cmp	r7, #88	; 0x58
 8002994:	f000 80a3 	beq.w	8002ade <_printf_i+0x16e>
 8002998:	f104 0642 	add.w	r6, r4, #66	; 0x42
 800299c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80029a0:	e03a      	b.n	8002a18 <_printf_i+0xa8>
 80029a2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80029a6:	2b15      	cmp	r3, #21
 80029a8:	d8f6      	bhi.n	8002998 <_printf_i+0x28>
 80029aa:	a001      	add	r0, pc, #4	; (adr r0, 80029b0 <_printf_i+0x40>)
 80029ac:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 80029b0:	08002a09 	.word	0x08002a09
 80029b4:	08002a1d 	.word	0x08002a1d
 80029b8:	08002999 	.word	0x08002999
 80029bc:	08002999 	.word	0x08002999
 80029c0:	08002999 	.word	0x08002999
 80029c4:	08002999 	.word	0x08002999
 80029c8:	08002a1d 	.word	0x08002a1d
 80029cc:	08002999 	.word	0x08002999
 80029d0:	08002999 	.word	0x08002999
 80029d4:	08002999 	.word	0x08002999
 80029d8:	08002999 	.word	0x08002999
 80029dc:	08002b29 	.word	0x08002b29
 80029e0:	08002a4d 	.word	0x08002a4d
 80029e4:	08002b0b 	.word	0x08002b0b
 80029e8:	08002999 	.word	0x08002999
 80029ec:	08002999 	.word	0x08002999
 80029f0:	08002b4b 	.word	0x08002b4b
 80029f4:	08002999 	.word	0x08002999
 80029f8:	08002a4d 	.word	0x08002a4d
 80029fc:	08002999 	.word	0x08002999
 8002a00:	08002999 	.word	0x08002999
 8002a04:	08002b13 	.word	0x08002b13
 8002a08:	680b      	ldr	r3, [r1, #0]
 8002a0a:	1d1a      	adds	r2, r3, #4
 8002a0c:	681b      	ldr	r3, [r3, #0]
 8002a0e:	600a      	str	r2, [r1, #0]
 8002a10:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8002a14:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8002a18:	2301      	movs	r3, #1
 8002a1a:	e0a3      	b.n	8002b64 <_printf_i+0x1f4>
 8002a1c:	6825      	ldr	r5, [r4, #0]
 8002a1e:	6808      	ldr	r0, [r1, #0]
 8002a20:	062e      	lsls	r6, r5, #24
 8002a22:	f100 0304 	add.w	r3, r0, #4
 8002a26:	d50a      	bpl.n	8002a3e <_printf_i+0xce>
 8002a28:	6805      	ldr	r5, [r0, #0]
 8002a2a:	600b      	str	r3, [r1, #0]
 8002a2c:	2d00      	cmp	r5, #0
 8002a2e:	da03      	bge.n	8002a38 <_printf_i+0xc8>
 8002a30:	232d      	movs	r3, #45	; 0x2d
 8002a32:	426d      	negs	r5, r5
 8002a34:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002a38:	485e      	ldr	r0, [pc, #376]	; (8002bb4 <_printf_i+0x244>)
 8002a3a:	230a      	movs	r3, #10
 8002a3c:	e019      	b.n	8002a72 <_printf_i+0x102>
 8002a3e:	f015 0f40 	tst.w	r5, #64	; 0x40
 8002a42:	6805      	ldr	r5, [r0, #0]
 8002a44:	600b      	str	r3, [r1, #0]
 8002a46:	bf18      	it	ne
 8002a48:	b22d      	sxthne	r5, r5
 8002a4a:	e7ef      	b.n	8002a2c <_printf_i+0xbc>
 8002a4c:	680b      	ldr	r3, [r1, #0]
 8002a4e:	6825      	ldr	r5, [r4, #0]
 8002a50:	1d18      	adds	r0, r3, #4
 8002a52:	6008      	str	r0, [r1, #0]
 8002a54:	0628      	lsls	r0, r5, #24
 8002a56:	d501      	bpl.n	8002a5c <_printf_i+0xec>
 8002a58:	681d      	ldr	r5, [r3, #0]
 8002a5a:	e002      	b.n	8002a62 <_printf_i+0xf2>
 8002a5c:	0669      	lsls	r1, r5, #25
 8002a5e:	d5fb      	bpl.n	8002a58 <_printf_i+0xe8>
 8002a60:	881d      	ldrh	r5, [r3, #0]
 8002a62:	4854      	ldr	r0, [pc, #336]	; (8002bb4 <_printf_i+0x244>)
 8002a64:	2f6f      	cmp	r7, #111	; 0x6f
 8002a66:	bf0c      	ite	eq
 8002a68:	2308      	moveq	r3, #8
 8002a6a:	230a      	movne	r3, #10
 8002a6c:	2100      	movs	r1, #0
 8002a6e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8002a72:	6866      	ldr	r6, [r4, #4]
 8002a74:	60a6      	str	r6, [r4, #8]
 8002a76:	2e00      	cmp	r6, #0
 8002a78:	bfa2      	ittt	ge
 8002a7a:	6821      	ldrge	r1, [r4, #0]
 8002a7c:	f021 0104 	bicge.w	r1, r1, #4
 8002a80:	6021      	strge	r1, [r4, #0]
 8002a82:	b90d      	cbnz	r5, 8002a88 <_printf_i+0x118>
 8002a84:	2e00      	cmp	r6, #0
 8002a86:	d04d      	beq.n	8002b24 <_printf_i+0x1b4>
 8002a88:	4616      	mov	r6, r2
 8002a8a:	fbb5 f1f3 	udiv	r1, r5, r3
 8002a8e:	fb03 5711 	mls	r7, r3, r1, r5
 8002a92:	5dc7      	ldrb	r7, [r0, r7]
 8002a94:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8002a98:	462f      	mov	r7, r5
 8002a9a:	42bb      	cmp	r3, r7
 8002a9c:	460d      	mov	r5, r1
 8002a9e:	d9f4      	bls.n	8002a8a <_printf_i+0x11a>
 8002aa0:	2b08      	cmp	r3, #8
 8002aa2:	d10b      	bne.n	8002abc <_printf_i+0x14c>
 8002aa4:	6823      	ldr	r3, [r4, #0]
 8002aa6:	07df      	lsls	r7, r3, #31
 8002aa8:	d508      	bpl.n	8002abc <_printf_i+0x14c>
 8002aaa:	6923      	ldr	r3, [r4, #16]
 8002aac:	6861      	ldr	r1, [r4, #4]
 8002aae:	4299      	cmp	r1, r3
 8002ab0:	bfde      	ittt	le
 8002ab2:	2330      	movle	r3, #48	; 0x30
 8002ab4:	f806 3c01 	strble.w	r3, [r6, #-1]
 8002ab8:	f106 36ff 	addle.w	r6, r6, #4294967295
 8002abc:	1b92      	subs	r2, r2, r6
 8002abe:	6122      	str	r2, [r4, #16]
 8002ac0:	f8cd a000 	str.w	sl, [sp]
 8002ac4:	464b      	mov	r3, r9
 8002ac6:	aa03      	add	r2, sp, #12
 8002ac8:	4621      	mov	r1, r4
 8002aca:	4640      	mov	r0, r8
 8002acc:	f7ff fee2 	bl	8002894 <_printf_common>
 8002ad0:	3001      	adds	r0, #1
 8002ad2:	d14c      	bne.n	8002b6e <_printf_i+0x1fe>
 8002ad4:	f04f 30ff 	mov.w	r0, #4294967295
 8002ad8:	b004      	add	sp, #16
 8002ada:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002ade:	4835      	ldr	r0, [pc, #212]	; (8002bb4 <_printf_i+0x244>)
 8002ae0:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8002ae4:	6823      	ldr	r3, [r4, #0]
 8002ae6:	680e      	ldr	r6, [r1, #0]
 8002ae8:	061f      	lsls	r7, r3, #24
 8002aea:	f856 5b04 	ldr.w	r5, [r6], #4
 8002aee:	600e      	str	r6, [r1, #0]
 8002af0:	d514      	bpl.n	8002b1c <_printf_i+0x1ac>
 8002af2:	07d9      	lsls	r1, r3, #31
 8002af4:	bf44      	itt	mi
 8002af6:	f043 0320 	orrmi.w	r3, r3, #32
 8002afa:	6023      	strmi	r3, [r4, #0]
 8002afc:	b91d      	cbnz	r5, 8002b06 <_printf_i+0x196>
 8002afe:	6823      	ldr	r3, [r4, #0]
 8002b00:	f023 0320 	bic.w	r3, r3, #32
 8002b04:	6023      	str	r3, [r4, #0]
 8002b06:	2310      	movs	r3, #16
 8002b08:	e7b0      	b.n	8002a6c <_printf_i+0xfc>
 8002b0a:	6823      	ldr	r3, [r4, #0]
 8002b0c:	f043 0320 	orr.w	r3, r3, #32
 8002b10:	6023      	str	r3, [r4, #0]
 8002b12:	2378      	movs	r3, #120	; 0x78
 8002b14:	4828      	ldr	r0, [pc, #160]	; (8002bb8 <_printf_i+0x248>)
 8002b16:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8002b1a:	e7e3      	b.n	8002ae4 <_printf_i+0x174>
 8002b1c:	065e      	lsls	r6, r3, #25
 8002b1e:	bf48      	it	mi
 8002b20:	b2ad      	uxthmi	r5, r5
 8002b22:	e7e6      	b.n	8002af2 <_printf_i+0x182>
 8002b24:	4616      	mov	r6, r2
 8002b26:	e7bb      	b.n	8002aa0 <_printf_i+0x130>
 8002b28:	680b      	ldr	r3, [r1, #0]
 8002b2a:	6826      	ldr	r6, [r4, #0]
 8002b2c:	6960      	ldr	r0, [r4, #20]
 8002b2e:	1d1d      	adds	r5, r3, #4
 8002b30:	600d      	str	r5, [r1, #0]
 8002b32:	0635      	lsls	r5, r6, #24
 8002b34:	681b      	ldr	r3, [r3, #0]
 8002b36:	d501      	bpl.n	8002b3c <_printf_i+0x1cc>
 8002b38:	6018      	str	r0, [r3, #0]
 8002b3a:	e002      	b.n	8002b42 <_printf_i+0x1d2>
 8002b3c:	0671      	lsls	r1, r6, #25
 8002b3e:	d5fb      	bpl.n	8002b38 <_printf_i+0x1c8>
 8002b40:	8018      	strh	r0, [r3, #0]
 8002b42:	2300      	movs	r3, #0
 8002b44:	6123      	str	r3, [r4, #16]
 8002b46:	4616      	mov	r6, r2
 8002b48:	e7ba      	b.n	8002ac0 <_printf_i+0x150>
 8002b4a:	680b      	ldr	r3, [r1, #0]
 8002b4c:	1d1a      	adds	r2, r3, #4
 8002b4e:	600a      	str	r2, [r1, #0]
 8002b50:	681e      	ldr	r6, [r3, #0]
 8002b52:	6862      	ldr	r2, [r4, #4]
 8002b54:	2100      	movs	r1, #0
 8002b56:	4630      	mov	r0, r6
 8002b58:	f7fd fb5a 	bl	8000210 <memchr>
 8002b5c:	b108      	cbz	r0, 8002b62 <_printf_i+0x1f2>
 8002b5e:	1b80      	subs	r0, r0, r6
 8002b60:	6060      	str	r0, [r4, #4]
 8002b62:	6863      	ldr	r3, [r4, #4]
 8002b64:	6123      	str	r3, [r4, #16]
 8002b66:	2300      	movs	r3, #0
 8002b68:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002b6c:	e7a8      	b.n	8002ac0 <_printf_i+0x150>
 8002b6e:	6923      	ldr	r3, [r4, #16]
 8002b70:	4632      	mov	r2, r6
 8002b72:	4649      	mov	r1, r9
 8002b74:	4640      	mov	r0, r8
 8002b76:	47d0      	blx	sl
 8002b78:	3001      	adds	r0, #1
 8002b7a:	d0ab      	beq.n	8002ad4 <_printf_i+0x164>
 8002b7c:	6823      	ldr	r3, [r4, #0]
 8002b7e:	079b      	lsls	r3, r3, #30
 8002b80:	d413      	bmi.n	8002baa <_printf_i+0x23a>
 8002b82:	68e0      	ldr	r0, [r4, #12]
 8002b84:	9b03      	ldr	r3, [sp, #12]
 8002b86:	4298      	cmp	r0, r3
 8002b88:	bfb8      	it	lt
 8002b8a:	4618      	movlt	r0, r3
 8002b8c:	e7a4      	b.n	8002ad8 <_printf_i+0x168>
 8002b8e:	2301      	movs	r3, #1
 8002b90:	4632      	mov	r2, r6
 8002b92:	4649      	mov	r1, r9
 8002b94:	4640      	mov	r0, r8
 8002b96:	47d0      	blx	sl
 8002b98:	3001      	adds	r0, #1
 8002b9a:	d09b      	beq.n	8002ad4 <_printf_i+0x164>
 8002b9c:	3501      	adds	r5, #1
 8002b9e:	68e3      	ldr	r3, [r4, #12]
 8002ba0:	9903      	ldr	r1, [sp, #12]
 8002ba2:	1a5b      	subs	r3, r3, r1
 8002ba4:	42ab      	cmp	r3, r5
 8002ba6:	dcf2      	bgt.n	8002b8e <_printf_i+0x21e>
 8002ba8:	e7eb      	b.n	8002b82 <_printf_i+0x212>
 8002baa:	2500      	movs	r5, #0
 8002bac:	f104 0619 	add.w	r6, r4, #25
 8002bb0:	e7f5      	b.n	8002b9e <_printf_i+0x22e>
 8002bb2:	bf00      	nop
 8002bb4:	08007ce0 	.word	0x08007ce0
 8002bb8:	08007cf1 	.word	0x08007cf1

08002bbc <_scanf_float>:
 8002bbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002bc0:	b087      	sub	sp, #28
 8002bc2:	4617      	mov	r7, r2
 8002bc4:	9303      	str	r3, [sp, #12]
 8002bc6:	688b      	ldr	r3, [r1, #8]
 8002bc8:	1e5a      	subs	r2, r3, #1
 8002bca:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 8002bce:	bf83      	ittte	hi
 8002bd0:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 8002bd4:	195b      	addhi	r3, r3, r5
 8002bd6:	9302      	strhi	r3, [sp, #8]
 8002bd8:	2300      	movls	r3, #0
 8002bda:	bf86      	itte	hi
 8002bdc:	f240 135d 	movwhi	r3, #349	; 0x15d
 8002be0:	608b      	strhi	r3, [r1, #8]
 8002be2:	9302      	strls	r3, [sp, #8]
 8002be4:	680b      	ldr	r3, [r1, #0]
 8002be6:	468b      	mov	fp, r1
 8002be8:	2500      	movs	r5, #0
 8002bea:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 8002bee:	f84b 3b1c 	str.w	r3, [fp], #28
 8002bf2:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8002bf6:	4680      	mov	r8, r0
 8002bf8:	460c      	mov	r4, r1
 8002bfa:	465e      	mov	r6, fp
 8002bfc:	46aa      	mov	sl, r5
 8002bfe:	46a9      	mov	r9, r5
 8002c00:	9501      	str	r5, [sp, #4]
 8002c02:	68a2      	ldr	r2, [r4, #8]
 8002c04:	b152      	cbz	r2, 8002c1c <_scanf_float+0x60>
 8002c06:	683b      	ldr	r3, [r7, #0]
 8002c08:	781b      	ldrb	r3, [r3, #0]
 8002c0a:	2b4e      	cmp	r3, #78	; 0x4e
 8002c0c:	d864      	bhi.n	8002cd8 <_scanf_float+0x11c>
 8002c0e:	2b40      	cmp	r3, #64	; 0x40
 8002c10:	d83c      	bhi.n	8002c8c <_scanf_float+0xd0>
 8002c12:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 8002c16:	b2c8      	uxtb	r0, r1
 8002c18:	280e      	cmp	r0, #14
 8002c1a:	d93a      	bls.n	8002c92 <_scanf_float+0xd6>
 8002c1c:	f1b9 0f00 	cmp.w	r9, #0
 8002c20:	d003      	beq.n	8002c2a <_scanf_float+0x6e>
 8002c22:	6823      	ldr	r3, [r4, #0]
 8002c24:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8002c28:	6023      	str	r3, [r4, #0]
 8002c2a:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002c2e:	f1ba 0f01 	cmp.w	sl, #1
 8002c32:	f200 8113 	bhi.w	8002e5c <_scanf_float+0x2a0>
 8002c36:	455e      	cmp	r6, fp
 8002c38:	f200 8105 	bhi.w	8002e46 <_scanf_float+0x28a>
 8002c3c:	2501      	movs	r5, #1
 8002c3e:	4628      	mov	r0, r5
 8002c40:	b007      	add	sp, #28
 8002c42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002c46:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 8002c4a:	2a0d      	cmp	r2, #13
 8002c4c:	d8e6      	bhi.n	8002c1c <_scanf_float+0x60>
 8002c4e:	a101      	add	r1, pc, #4	; (adr r1, 8002c54 <_scanf_float+0x98>)
 8002c50:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8002c54:	08002d93 	.word	0x08002d93
 8002c58:	08002c1d 	.word	0x08002c1d
 8002c5c:	08002c1d 	.word	0x08002c1d
 8002c60:	08002c1d 	.word	0x08002c1d
 8002c64:	08002df3 	.word	0x08002df3
 8002c68:	08002dcb 	.word	0x08002dcb
 8002c6c:	08002c1d 	.word	0x08002c1d
 8002c70:	08002c1d 	.word	0x08002c1d
 8002c74:	08002da1 	.word	0x08002da1
 8002c78:	08002c1d 	.word	0x08002c1d
 8002c7c:	08002c1d 	.word	0x08002c1d
 8002c80:	08002c1d 	.word	0x08002c1d
 8002c84:	08002c1d 	.word	0x08002c1d
 8002c88:	08002d59 	.word	0x08002d59
 8002c8c:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002c90:	e7db      	b.n	8002c4a <_scanf_float+0x8e>
 8002c92:	290e      	cmp	r1, #14
 8002c94:	d8c2      	bhi.n	8002c1c <_scanf_float+0x60>
 8002c96:	a001      	add	r0, pc, #4	; (adr r0, 8002c9c <_scanf_float+0xe0>)
 8002c98:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8002c9c:	08002d4b 	.word	0x08002d4b
 8002ca0:	08002c1d 	.word	0x08002c1d
 8002ca4:	08002d4b 	.word	0x08002d4b
 8002ca8:	08002ddf 	.word	0x08002ddf
 8002cac:	08002c1d 	.word	0x08002c1d
 8002cb0:	08002cf9 	.word	0x08002cf9
 8002cb4:	08002d35 	.word	0x08002d35
 8002cb8:	08002d35 	.word	0x08002d35
 8002cbc:	08002d35 	.word	0x08002d35
 8002cc0:	08002d35 	.word	0x08002d35
 8002cc4:	08002d35 	.word	0x08002d35
 8002cc8:	08002d35 	.word	0x08002d35
 8002ccc:	08002d35 	.word	0x08002d35
 8002cd0:	08002d35 	.word	0x08002d35
 8002cd4:	08002d35 	.word	0x08002d35
 8002cd8:	2b6e      	cmp	r3, #110	; 0x6e
 8002cda:	d809      	bhi.n	8002cf0 <_scanf_float+0x134>
 8002cdc:	2b60      	cmp	r3, #96	; 0x60
 8002cde:	d8b2      	bhi.n	8002c46 <_scanf_float+0x8a>
 8002ce0:	2b54      	cmp	r3, #84	; 0x54
 8002ce2:	d077      	beq.n	8002dd4 <_scanf_float+0x218>
 8002ce4:	2b59      	cmp	r3, #89	; 0x59
 8002ce6:	d199      	bne.n	8002c1c <_scanf_float+0x60>
 8002ce8:	2d07      	cmp	r5, #7
 8002cea:	d197      	bne.n	8002c1c <_scanf_float+0x60>
 8002cec:	2508      	movs	r5, #8
 8002cee:	e029      	b.n	8002d44 <_scanf_float+0x188>
 8002cf0:	2b74      	cmp	r3, #116	; 0x74
 8002cf2:	d06f      	beq.n	8002dd4 <_scanf_float+0x218>
 8002cf4:	2b79      	cmp	r3, #121	; 0x79
 8002cf6:	e7f6      	b.n	8002ce6 <_scanf_float+0x12a>
 8002cf8:	6821      	ldr	r1, [r4, #0]
 8002cfa:	05c8      	lsls	r0, r1, #23
 8002cfc:	d51a      	bpl.n	8002d34 <_scanf_float+0x178>
 8002cfe:	9b02      	ldr	r3, [sp, #8]
 8002d00:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8002d04:	6021      	str	r1, [r4, #0]
 8002d06:	f109 0901 	add.w	r9, r9, #1
 8002d0a:	b11b      	cbz	r3, 8002d14 <_scanf_float+0x158>
 8002d0c:	3b01      	subs	r3, #1
 8002d0e:	3201      	adds	r2, #1
 8002d10:	9302      	str	r3, [sp, #8]
 8002d12:	60a2      	str	r2, [r4, #8]
 8002d14:	68a3      	ldr	r3, [r4, #8]
 8002d16:	3b01      	subs	r3, #1
 8002d18:	60a3      	str	r3, [r4, #8]
 8002d1a:	6923      	ldr	r3, [r4, #16]
 8002d1c:	3301      	adds	r3, #1
 8002d1e:	6123      	str	r3, [r4, #16]
 8002d20:	687b      	ldr	r3, [r7, #4]
 8002d22:	3b01      	subs	r3, #1
 8002d24:	2b00      	cmp	r3, #0
 8002d26:	607b      	str	r3, [r7, #4]
 8002d28:	f340 8084 	ble.w	8002e34 <_scanf_float+0x278>
 8002d2c:	683b      	ldr	r3, [r7, #0]
 8002d2e:	3301      	adds	r3, #1
 8002d30:	603b      	str	r3, [r7, #0]
 8002d32:	e766      	b.n	8002c02 <_scanf_float+0x46>
 8002d34:	eb1a 0f05 	cmn.w	sl, r5
 8002d38:	f47f af70 	bne.w	8002c1c <_scanf_float+0x60>
 8002d3c:	6822      	ldr	r2, [r4, #0]
 8002d3e:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 8002d42:	6022      	str	r2, [r4, #0]
 8002d44:	f806 3b01 	strb.w	r3, [r6], #1
 8002d48:	e7e4      	b.n	8002d14 <_scanf_float+0x158>
 8002d4a:	6822      	ldr	r2, [r4, #0]
 8002d4c:	0610      	lsls	r0, r2, #24
 8002d4e:	f57f af65 	bpl.w	8002c1c <_scanf_float+0x60>
 8002d52:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8002d56:	e7f4      	b.n	8002d42 <_scanf_float+0x186>
 8002d58:	f1ba 0f00 	cmp.w	sl, #0
 8002d5c:	d10e      	bne.n	8002d7c <_scanf_float+0x1c0>
 8002d5e:	f1b9 0f00 	cmp.w	r9, #0
 8002d62:	d10e      	bne.n	8002d82 <_scanf_float+0x1c6>
 8002d64:	6822      	ldr	r2, [r4, #0]
 8002d66:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8002d6a:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8002d6e:	d108      	bne.n	8002d82 <_scanf_float+0x1c6>
 8002d70:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8002d74:	6022      	str	r2, [r4, #0]
 8002d76:	f04f 0a01 	mov.w	sl, #1
 8002d7a:	e7e3      	b.n	8002d44 <_scanf_float+0x188>
 8002d7c:	f1ba 0f02 	cmp.w	sl, #2
 8002d80:	d055      	beq.n	8002e2e <_scanf_float+0x272>
 8002d82:	2d01      	cmp	r5, #1
 8002d84:	d002      	beq.n	8002d8c <_scanf_float+0x1d0>
 8002d86:	2d04      	cmp	r5, #4
 8002d88:	f47f af48 	bne.w	8002c1c <_scanf_float+0x60>
 8002d8c:	3501      	adds	r5, #1
 8002d8e:	b2ed      	uxtb	r5, r5
 8002d90:	e7d8      	b.n	8002d44 <_scanf_float+0x188>
 8002d92:	f1ba 0f01 	cmp.w	sl, #1
 8002d96:	f47f af41 	bne.w	8002c1c <_scanf_float+0x60>
 8002d9a:	f04f 0a02 	mov.w	sl, #2
 8002d9e:	e7d1      	b.n	8002d44 <_scanf_float+0x188>
 8002da0:	b97d      	cbnz	r5, 8002dc2 <_scanf_float+0x206>
 8002da2:	f1b9 0f00 	cmp.w	r9, #0
 8002da6:	f47f af3c 	bne.w	8002c22 <_scanf_float+0x66>
 8002daa:	6822      	ldr	r2, [r4, #0]
 8002dac:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8002db0:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8002db4:	f47f af39 	bne.w	8002c2a <_scanf_float+0x6e>
 8002db8:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8002dbc:	6022      	str	r2, [r4, #0]
 8002dbe:	2501      	movs	r5, #1
 8002dc0:	e7c0      	b.n	8002d44 <_scanf_float+0x188>
 8002dc2:	2d03      	cmp	r5, #3
 8002dc4:	d0e2      	beq.n	8002d8c <_scanf_float+0x1d0>
 8002dc6:	2d05      	cmp	r5, #5
 8002dc8:	e7de      	b.n	8002d88 <_scanf_float+0x1cc>
 8002dca:	2d02      	cmp	r5, #2
 8002dcc:	f47f af26 	bne.w	8002c1c <_scanf_float+0x60>
 8002dd0:	2503      	movs	r5, #3
 8002dd2:	e7b7      	b.n	8002d44 <_scanf_float+0x188>
 8002dd4:	2d06      	cmp	r5, #6
 8002dd6:	f47f af21 	bne.w	8002c1c <_scanf_float+0x60>
 8002dda:	2507      	movs	r5, #7
 8002ddc:	e7b2      	b.n	8002d44 <_scanf_float+0x188>
 8002dde:	6822      	ldr	r2, [r4, #0]
 8002de0:	0591      	lsls	r1, r2, #22
 8002de2:	f57f af1b 	bpl.w	8002c1c <_scanf_float+0x60>
 8002de6:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 8002dea:	6022      	str	r2, [r4, #0]
 8002dec:	f8cd 9004 	str.w	r9, [sp, #4]
 8002df0:	e7a8      	b.n	8002d44 <_scanf_float+0x188>
 8002df2:	6822      	ldr	r2, [r4, #0]
 8002df4:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 8002df8:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 8002dfc:	d006      	beq.n	8002e0c <_scanf_float+0x250>
 8002dfe:	0550      	lsls	r0, r2, #21
 8002e00:	f57f af0c 	bpl.w	8002c1c <_scanf_float+0x60>
 8002e04:	f1b9 0f00 	cmp.w	r9, #0
 8002e08:	f43f af0f 	beq.w	8002c2a <_scanf_float+0x6e>
 8002e0c:	0591      	lsls	r1, r2, #22
 8002e0e:	bf58      	it	pl
 8002e10:	9901      	ldrpl	r1, [sp, #4]
 8002e12:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8002e16:	bf58      	it	pl
 8002e18:	eba9 0101 	subpl.w	r1, r9, r1
 8002e1c:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 8002e20:	bf58      	it	pl
 8002e22:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 8002e26:	6022      	str	r2, [r4, #0]
 8002e28:	f04f 0900 	mov.w	r9, #0
 8002e2c:	e78a      	b.n	8002d44 <_scanf_float+0x188>
 8002e2e:	f04f 0a03 	mov.w	sl, #3
 8002e32:	e787      	b.n	8002d44 <_scanf_float+0x188>
 8002e34:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8002e38:	4639      	mov	r1, r7
 8002e3a:	4640      	mov	r0, r8
 8002e3c:	4798      	blx	r3
 8002e3e:	2800      	cmp	r0, #0
 8002e40:	f43f aedf 	beq.w	8002c02 <_scanf_float+0x46>
 8002e44:	e6ea      	b.n	8002c1c <_scanf_float+0x60>
 8002e46:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002e4a:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8002e4e:	463a      	mov	r2, r7
 8002e50:	4640      	mov	r0, r8
 8002e52:	4798      	blx	r3
 8002e54:	6923      	ldr	r3, [r4, #16]
 8002e56:	3b01      	subs	r3, #1
 8002e58:	6123      	str	r3, [r4, #16]
 8002e5a:	e6ec      	b.n	8002c36 <_scanf_float+0x7a>
 8002e5c:	1e6b      	subs	r3, r5, #1
 8002e5e:	2b06      	cmp	r3, #6
 8002e60:	d825      	bhi.n	8002eae <_scanf_float+0x2f2>
 8002e62:	2d02      	cmp	r5, #2
 8002e64:	d836      	bhi.n	8002ed4 <_scanf_float+0x318>
 8002e66:	455e      	cmp	r6, fp
 8002e68:	f67f aee8 	bls.w	8002c3c <_scanf_float+0x80>
 8002e6c:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002e70:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8002e74:	463a      	mov	r2, r7
 8002e76:	4640      	mov	r0, r8
 8002e78:	4798      	blx	r3
 8002e7a:	6923      	ldr	r3, [r4, #16]
 8002e7c:	3b01      	subs	r3, #1
 8002e7e:	6123      	str	r3, [r4, #16]
 8002e80:	e7f1      	b.n	8002e66 <_scanf_float+0x2aa>
 8002e82:	9802      	ldr	r0, [sp, #8]
 8002e84:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002e88:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 8002e8c:	9002      	str	r0, [sp, #8]
 8002e8e:	463a      	mov	r2, r7
 8002e90:	4640      	mov	r0, r8
 8002e92:	4798      	blx	r3
 8002e94:	6923      	ldr	r3, [r4, #16]
 8002e96:	3b01      	subs	r3, #1
 8002e98:	6123      	str	r3, [r4, #16]
 8002e9a:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002e9e:	fa5f fa8a 	uxtb.w	sl, sl
 8002ea2:	f1ba 0f02 	cmp.w	sl, #2
 8002ea6:	d1ec      	bne.n	8002e82 <_scanf_float+0x2c6>
 8002ea8:	3d03      	subs	r5, #3
 8002eaa:	b2ed      	uxtb	r5, r5
 8002eac:	1b76      	subs	r6, r6, r5
 8002eae:	6823      	ldr	r3, [r4, #0]
 8002eb0:	05da      	lsls	r2, r3, #23
 8002eb2:	d52f      	bpl.n	8002f14 <_scanf_float+0x358>
 8002eb4:	055b      	lsls	r3, r3, #21
 8002eb6:	d510      	bpl.n	8002eda <_scanf_float+0x31e>
 8002eb8:	455e      	cmp	r6, fp
 8002eba:	f67f aebf 	bls.w	8002c3c <_scanf_float+0x80>
 8002ebe:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002ec2:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8002ec6:	463a      	mov	r2, r7
 8002ec8:	4640      	mov	r0, r8
 8002eca:	4798      	blx	r3
 8002ecc:	6923      	ldr	r3, [r4, #16]
 8002ece:	3b01      	subs	r3, #1
 8002ed0:	6123      	str	r3, [r4, #16]
 8002ed2:	e7f1      	b.n	8002eb8 <_scanf_float+0x2fc>
 8002ed4:	46aa      	mov	sl, r5
 8002ed6:	9602      	str	r6, [sp, #8]
 8002ed8:	e7df      	b.n	8002e9a <_scanf_float+0x2de>
 8002eda:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 8002ede:	6923      	ldr	r3, [r4, #16]
 8002ee0:	2965      	cmp	r1, #101	; 0x65
 8002ee2:	f103 33ff 	add.w	r3, r3, #4294967295
 8002ee6:	f106 35ff 	add.w	r5, r6, #4294967295
 8002eea:	6123      	str	r3, [r4, #16]
 8002eec:	d00c      	beq.n	8002f08 <_scanf_float+0x34c>
 8002eee:	2945      	cmp	r1, #69	; 0x45
 8002ef0:	d00a      	beq.n	8002f08 <_scanf_float+0x34c>
 8002ef2:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002ef6:	463a      	mov	r2, r7
 8002ef8:	4640      	mov	r0, r8
 8002efa:	4798      	blx	r3
 8002efc:	6923      	ldr	r3, [r4, #16]
 8002efe:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 8002f02:	3b01      	subs	r3, #1
 8002f04:	1eb5      	subs	r5, r6, #2
 8002f06:	6123      	str	r3, [r4, #16]
 8002f08:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002f0c:	463a      	mov	r2, r7
 8002f0e:	4640      	mov	r0, r8
 8002f10:	4798      	blx	r3
 8002f12:	462e      	mov	r6, r5
 8002f14:	6825      	ldr	r5, [r4, #0]
 8002f16:	f015 0510 	ands.w	r5, r5, #16
 8002f1a:	d159      	bne.n	8002fd0 <_scanf_float+0x414>
 8002f1c:	7035      	strb	r5, [r6, #0]
 8002f1e:	6823      	ldr	r3, [r4, #0]
 8002f20:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8002f24:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002f28:	d11c      	bne.n	8002f64 <_scanf_float+0x3a8>
 8002f2a:	9b01      	ldr	r3, [sp, #4]
 8002f2c:	454b      	cmp	r3, r9
 8002f2e:	eba3 0209 	sub.w	r2, r3, r9
 8002f32:	d124      	bne.n	8002f7e <_scanf_float+0x3c2>
 8002f34:	2200      	movs	r2, #0
 8002f36:	4659      	mov	r1, fp
 8002f38:	4640      	mov	r0, r8
 8002f3a:	f001 f90d 	bl	8004158 <_strtod_r>
 8002f3e:	f8d4 c000 	ldr.w	ip, [r4]
 8002f42:	9b03      	ldr	r3, [sp, #12]
 8002f44:	f01c 0f02 	tst.w	ip, #2
 8002f48:	681b      	ldr	r3, [r3, #0]
 8002f4a:	4606      	mov	r6, r0
 8002f4c:	460f      	mov	r7, r1
 8002f4e:	d021      	beq.n	8002f94 <_scanf_float+0x3d8>
 8002f50:	9903      	ldr	r1, [sp, #12]
 8002f52:	1d1a      	adds	r2, r3, #4
 8002f54:	600a      	str	r2, [r1, #0]
 8002f56:	681b      	ldr	r3, [r3, #0]
 8002f58:	e9c3 6700 	strd	r6, r7, [r3]
 8002f5c:	68e3      	ldr	r3, [r4, #12]
 8002f5e:	3301      	adds	r3, #1
 8002f60:	60e3      	str	r3, [r4, #12]
 8002f62:	e66c      	b.n	8002c3e <_scanf_float+0x82>
 8002f64:	9b04      	ldr	r3, [sp, #16]
 8002f66:	2b00      	cmp	r3, #0
 8002f68:	d0e4      	beq.n	8002f34 <_scanf_float+0x378>
 8002f6a:	9905      	ldr	r1, [sp, #20]
 8002f6c:	230a      	movs	r3, #10
 8002f6e:	462a      	mov	r2, r5
 8002f70:	3101      	adds	r1, #1
 8002f72:	4640      	mov	r0, r8
 8002f74:	f001 f9d8 	bl	8004328 <_strtol_r>
 8002f78:	9b04      	ldr	r3, [sp, #16]
 8002f7a:	9e05      	ldr	r6, [sp, #20]
 8002f7c:	1ac2      	subs	r2, r0, r3
 8002f7e:	f204 136f 	addw	r3, r4, #367	; 0x16f
 8002f82:	429e      	cmp	r6, r3
 8002f84:	bf28      	it	cs
 8002f86:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 8002f8a:	4912      	ldr	r1, [pc, #72]	; (8002fd4 <_scanf_float+0x418>)
 8002f8c:	4630      	mov	r0, r6
 8002f8e:	f000 fa21 	bl	80033d4 <siprintf>
 8002f92:	e7cf      	b.n	8002f34 <_scanf_float+0x378>
 8002f94:	f01c 0f04 	tst.w	ip, #4
 8002f98:	f103 0e04 	add.w	lr, r3, #4
 8002f9c:	d003      	beq.n	8002fa6 <_scanf_float+0x3ea>
 8002f9e:	9903      	ldr	r1, [sp, #12]
 8002fa0:	f8c1 e000 	str.w	lr, [r1]
 8002fa4:	e7d7      	b.n	8002f56 <_scanf_float+0x39a>
 8002fa6:	9a03      	ldr	r2, [sp, #12]
 8002fa8:	f8c2 e000 	str.w	lr, [r2]
 8002fac:	f8d3 8000 	ldr.w	r8, [r3]
 8002fb0:	4602      	mov	r2, r0
 8002fb2:	460b      	mov	r3, r1
 8002fb4:	f7fd fde4 	bl	8000b80 <__aeabi_dcmpun>
 8002fb8:	b128      	cbz	r0, 8002fc6 <_scanf_float+0x40a>
 8002fba:	4807      	ldr	r0, [pc, #28]	; (8002fd8 <_scanf_float+0x41c>)
 8002fbc:	f000 fa06 	bl	80033cc <nanf>
 8002fc0:	f8c8 0000 	str.w	r0, [r8]
 8002fc4:	e7ca      	b.n	8002f5c <_scanf_float+0x3a0>
 8002fc6:	4630      	mov	r0, r6
 8002fc8:	4639      	mov	r1, r7
 8002fca:	f7fd fe37 	bl	8000c3c <__aeabi_d2f>
 8002fce:	e7f7      	b.n	8002fc0 <_scanf_float+0x404>
 8002fd0:	2500      	movs	r5, #0
 8002fd2:	e634      	b.n	8002c3e <_scanf_float+0x82>
 8002fd4:	08007d02 	.word	0x08007d02
 8002fd8:	08007e0b 	.word	0x08007e0b

08002fdc <iprintf>:
 8002fdc:	b40f      	push	{r0, r1, r2, r3}
 8002fde:	4b0a      	ldr	r3, [pc, #40]	; (8003008 <iprintf+0x2c>)
 8002fe0:	b513      	push	{r0, r1, r4, lr}
 8002fe2:	681c      	ldr	r4, [r3, #0]
 8002fe4:	b124      	cbz	r4, 8002ff0 <iprintf+0x14>
 8002fe6:	69a3      	ldr	r3, [r4, #24]
 8002fe8:	b913      	cbnz	r3, 8002ff0 <iprintf+0x14>
 8002fea:	4620      	mov	r0, r4
 8002fec:	f7ff f838 	bl	8002060 <__sinit>
 8002ff0:	ab05      	add	r3, sp, #20
 8002ff2:	9a04      	ldr	r2, [sp, #16]
 8002ff4:	68a1      	ldr	r1, [r4, #8]
 8002ff6:	9301      	str	r3, [sp, #4]
 8002ff8:	4620      	mov	r0, r4
 8002ffa:	f003 fe63 	bl	8006cc4 <_vfiprintf_r>
 8002ffe:	b002      	add	sp, #8
 8003000:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003004:	b004      	add	sp, #16
 8003006:	4770      	bx	lr
 8003008:	20000b10 	.word	0x20000b10

0800300c <_puts_r>:
 800300c:	b570      	push	{r4, r5, r6, lr}
 800300e:	460e      	mov	r6, r1
 8003010:	4605      	mov	r5, r0
 8003012:	b118      	cbz	r0, 800301c <_puts_r+0x10>
 8003014:	6983      	ldr	r3, [r0, #24]
 8003016:	b90b      	cbnz	r3, 800301c <_puts_r+0x10>
 8003018:	f7ff f822 	bl	8002060 <__sinit>
 800301c:	69ab      	ldr	r3, [r5, #24]
 800301e:	68ac      	ldr	r4, [r5, #8]
 8003020:	b913      	cbnz	r3, 8003028 <_puts_r+0x1c>
 8003022:	4628      	mov	r0, r5
 8003024:	f7ff f81c 	bl	8002060 <__sinit>
 8003028:	4b2c      	ldr	r3, [pc, #176]	; (80030dc <_puts_r+0xd0>)
 800302a:	429c      	cmp	r4, r3
 800302c:	d120      	bne.n	8003070 <_puts_r+0x64>
 800302e:	686c      	ldr	r4, [r5, #4]
 8003030:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8003032:	07db      	lsls	r3, r3, #31
 8003034:	d405      	bmi.n	8003042 <_puts_r+0x36>
 8003036:	89a3      	ldrh	r3, [r4, #12]
 8003038:	0598      	lsls	r0, r3, #22
 800303a:	d402      	bmi.n	8003042 <_puts_r+0x36>
 800303c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800303e:	f7ff f8ee 	bl	800221e <__retarget_lock_acquire_recursive>
 8003042:	89a3      	ldrh	r3, [r4, #12]
 8003044:	0719      	lsls	r1, r3, #28
 8003046:	d51d      	bpl.n	8003084 <_puts_r+0x78>
 8003048:	6923      	ldr	r3, [r4, #16]
 800304a:	b1db      	cbz	r3, 8003084 <_puts_r+0x78>
 800304c:	3e01      	subs	r6, #1
 800304e:	68a3      	ldr	r3, [r4, #8]
 8003050:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8003054:	3b01      	subs	r3, #1
 8003056:	60a3      	str	r3, [r4, #8]
 8003058:	bb39      	cbnz	r1, 80030aa <_puts_r+0x9e>
 800305a:	2b00      	cmp	r3, #0
 800305c:	da38      	bge.n	80030d0 <_puts_r+0xc4>
 800305e:	4622      	mov	r2, r4
 8003060:	210a      	movs	r1, #10
 8003062:	4628      	mov	r0, r5
 8003064:	f001 f962 	bl	800432c <__swbuf_r>
 8003068:	3001      	adds	r0, #1
 800306a:	d011      	beq.n	8003090 <_puts_r+0x84>
 800306c:	250a      	movs	r5, #10
 800306e:	e011      	b.n	8003094 <_puts_r+0x88>
 8003070:	4b1b      	ldr	r3, [pc, #108]	; (80030e0 <_puts_r+0xd4>)
 8003072:	429c      	cmp	r4, r3
 8003074:	d101      	bne.n	800307a <_puts_r+0x6e>
 8003076:	68ac      	ldr	r4, [r5, #8]
 8003078:	e7da      	b.n	8003030 <_puts_r+0x24>
 800307a:	4b1a      	ldr	r3, [pc, #104]	; (80030e4 <_puts_r+0xd8>)
 800307c:	429c      	cmp	r4, r3
 800307e:	bf08      	it	eq
 8003080:	68ec      	ldreq	r4, [r5, #12]
 8003082:	e7d5      	b.n	8003030 <_puts_r+0x24>
 8003084:	4621      	mov	r1, r4
 8003086:	4628      	mov	r0, r5
 8003088:	f001 f9b4 	bl	80043f4 <__swsetup_r>
 800308c:	2800      	cmp	r0, #0
 800308e:	d0dd      	beq.n	800304c <_puts_r+0x40>
 8003090:	f04f 35ff 	mov.w	r5, #4294967295
 8003094:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8003096:	07da      	lsls	r2, r3, #31
 8003098:	d405      	bmi.n	80030a6 <_puts_r+0x9a>
 800309a:	89a3      	ldrh	r3, [r4, #12]
 800309c:	059b      	lsls	r3, r3, #22
 800309e:	d402      	bmi.n	80030a6 <_puts_r+0x9a>
 80030a0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80030a2:	f7ff f8bd 	bl	8002220 <__retarget_lock_release_recursive>
 80030a6:	4628      	mov	r0, r5
 80030a8:	bd70      	pop	{r4, r5, r6, pc}
 80030aa:	2b00      	cmp	r3, #0
 80030ac:	da04      	bge.n	80030b8 <_puts_r+0xac>
 80030ae:	69a2      	ldr	r2, [r4, #24]
 80030b0:	429a      	cmp	r2, r3
 80030b2:	dc06      	bgt.n	80030c2 <_puts_r+0xb6>
 80030b4:	290a      	cmp	r1, #10
 80030b6:	d004      	beq.n	80030c2 <_puts_r+0xb6>
 80030b8:	6823      	ldr	r3, [r4, #0]
 80030ba:	1c5a      	adds	r2, r3, #1
 80030bc:	6022      	str	r2, [r4, #0]
 80030be:	7019      	strb	r1, [r3, #0]
 80030c0:	e7c5      	b.n	800304e <_puts_r+0x42>
 80030c2:	4622      	mov	r2, r4
 80030c4:	4628      	mov	r0, r5
 80030c6:	f001 f931 	bl	800432c <__swbuf_r>
 80030ca:	3001      	adds	r0, #1
 80030cc:	d1bf      	bne.n	800304e <_puts_r+0x42>
 80030ce:	e7df      	b.n	8003090 <_puts_r+0x84>
 80030d0:	6823      	ldr	r3, [r4, #0]
 80030d2:	250a      	movs	r5, #10
 80030d4:	1c5a      	adds	r2, r3, #1
 80030d6:	6022      	str	r2, [r4, #0]
 80030d8:	701d      	strb	r5, [r3, #0]
 80030da:	e7db      	b.n	8003094 <_puts_r+0x88>
 80030dc:	08007c8c 	.word	0x08007c8c
 80030e0:	08007cac 	.word	0x08007cac
 80030e4:	08007c6c 	.word	0x08007c6c

080030e8 <puts>:
 80030e8:	4b02      	ldr	r3, [pc, #8]	; (80030f4 <puts+0xc>)
 80030ea:	4601      	mov	r1, r0
 80030ec:	6818      	ldr	r0, [r3, #0]
 80030ee:	f7ff bf8d 	b.w	800300c <_puts_r>
 80030f2:	bf00      	nop
 80030f4:	20000b10 	.word	0x20000b10

080030f8 <lflush>:
 80030f8:	8983      	ldrh	r3, [r0, #12]
 80030fa:	f003 0309 	and.w	r3, r3, #9
 80030fe:	2b09      	cmp	r3, #9
 8003100:	d101      	bne.n	8003106 <lflush+0xe>
 8003102:	f002 b951 	b.w	80053a8 <fflush>
 8003106:	2000      	movs	r0, #0
 8003108:	4770      	bx	lr
	...

0800310c <__srefill_r>:
 800310c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800310e:	460c      	mov	r4, r1
 8003110:	4605      	mov	r5, r0
 8003112:	b118      	cbz	r0, 800311c <__srefill_r+0x10>
 8003114:	6983      	ldr	r3, [r0, #24]
 8003116:	b90b      	cbnz	r3, 800311c <__srefill_r+0x10>
 8003118:	f7fe ffa2 	bl	8002060 <__sinit>
 800311c:	4b3b      	ldr	r3, [pc, #236]	; (800320c <__srefill_r+0x100>)
 800311e:	429c      	cmp	r4, r3
 8003120:	d10a      	bne.n	8003138 <__srefill_r+0x2c>
 8003122:	686c      	ldr	r4, [r5, #4]
 8003124:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003128:	2300      	movs	r3, #0
 800312a:	6063      	str	r3, [r4, #4]
 800312c:	89a3      	ldrh	r3, [r4, #12]
 800312e:	069e      	lsls	r6, r3, #26
 8003130:	d50c      	bpl.n	800314c <__srefill_r+0x40>
 8003132:	f04f 30ff 	mov.w	r0, #4294967295
 8003136:	e066      	b.n	8003206 <__srefill_r+0xfa>
 8003138:	4b35      	ldr	r3, [pc, #212]	; (8003210 <__srefill_r+0x104>)
 800313a:	429c      	cmp	r4, r3
 800313c:	d101      	bne.n	8003142 <__srefill_r+0x36>
 800313e:	68ac      	ldr	r4, [r5, #8]
 8003140:	e7f0      	b.n	8003124 <__srefill_r+0x18>
 8003142:	4b34      	ldr	r3, [pc, #208]	; (8003214 <__srefill_r+0x108>)
 8003144:	429c      	cmp	r4, r3
 8003146:	bf08      	it	eq
 8003148:	68ec      	ldreq	r4, [r5, #12]
 800314a:	e7eb      	b.n	8003124 <__srefill_r+0x18>
 800314c:	0758      	lsls	r0, r3, #29
 800314e:	d448      	bmi.n	80031e2 <__srefill_r+0xd6>
 8003150:	06d9      	lsls	r1, r3, #27
 8003152:	d405      	bmi.n	8003160 <__srefill_r+0x54>
 8003154:	2309      	movs	r3, #9
 8003156:	602b      	str	r3, [r5, #0]
 8003158:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800315c:	81a3      	strh	r3, [r4, #12]
 800315e:	e7e8      	b.n	8003132 <__srefill_r+0x26>
 8003160:	071a      	lsls	r2, r3, #28
 8003162:	d50b      	bpl.n	800317c <__srefill_r+0x70>
 8003164:	4621      	mov	r1, r4
 8003166:	4628      	mov	r0, r5
 8003168:	f002 f8e2 	bl	8005330 <_fflush_r>
 800316c:	2800      	cmp	r0, #0
 800316e:	d1e0      	bne.n	8003132 <__srefill_r+0x26>
 8003170:	89a3      	ldrh	r3, [r4, #12]
 8003172:	60a0      	str	r0, [r4, #8]
 8003174:	f023 0308 	bic.w	r3, r3, #8
 8003178:	81a3      	strh	r3, [r4, #12]
 800317a:	61a0      	str	r0, [r4, #24]
 800317c:	89a3      	ldrh	r3, [r4, #12]
 800317e:	f043 0304 	orr.w	r3, r3, #4
 8003182:	81a3      	strh	r3, [r4, #12]
 8003184:	6923      	ldr	r3, [r4, #16]
 8003186:	b91b      	cbnz	r3, 8003190 <__srefill_r+0x84>
 8003188:	4621      	mov	r1, r4
 800318a:	4628      	mov	r0, r5
 800318c:	f002 fcce 	bl	8005b2c <__smakebuf_r>
 8003190:	89a6      	ldrh	r6, [r4, #12]
 8003192:	f9b4 700c 	ldrsh.w	r7, [r4, #12]
 8003196:	07b3      	lsls	r3, r6, #30
 8003198:	d00f      	beq.n	80031ba <__srefill_r+0xae>
 800319a:	2301      	movs	r3, #1
 800319c:	81a3      	strh	r3, [r4, #12]
 800319e:	4b1e      	ldr	r3, [pc, #120]	; (8003218 <__srefill_r+0x10c>)
 80031a0:	491e      	ldr	r1, [pc, #120]	; (800321c <__srefill_r+0x110>)
 80031a2:	6818      	ldr	r0, [r3, #0]
 80031a4:	f006 0609 	and.w	r6, r6, #9
 80031a8:	f7fe ffd8 	bl	800215c <_fwalk>
 80031ac:	2e09      	cmp	r6, #9
 80031ae:	81a7      	strh	r7, [r4, #12]
 80031b0:	d103      	bne.n	80031ba <__srefill_r+0xae>
 80031b2:	4621      	mov	r1, r4
 80031b4:	4628      	mov	r0, r5
 80031b6:	f002 f835 	bl	8005224 <__sflush_r>
 80031ba:	6922      	ldr	r2, [r4, #16]
 80031bc:	6a66      	ldr	r6, [r4, #36]	; 0x24
 80031be:	6963      	ldr	r3, [r4, #20]
 80031c0:	6a21      	ldr	r1, [r4, #32]
 80031c2:	6022      	str	r2, [r4, #0]
 80031c4:	4628      	mov	r0, r5
 80031c6:	47b0      	blx	r6
 80031c8:	2800      	cmp	r0, #0
 80031ca:	6060      	str	r0, [r4, #4]
 80031cc:	dc1c      	bgt.n	8003208 <__srefill_r+0xfc>
 80031ce:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80031d2:	bf17      	itett	ne
 80031d4:	2200      	movne	r2, #0
 80031d6:	f043 0320 	orreq.w	r3, r3, #32
 80031da:	6062      	strne	r2, [r4, #4]
 80031dc:	f043 0340 	orrne.w	r3, r3, #64	; 0x40
 80031e0:	e7bc      	b.n	800315c <__srefill_r+0x50>
 80031e2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80031e4:	2900      	cmp	r1, #0
 80031e6:	d0cd      	beq.n	8003184 <__srefill_r+0x78>
 80031e8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80031ec:	4299      	cmp	r1, r3
 80031ee:	d002      	beq.n	80031f6 <__srefill_r+0xea>
 80031f0:	4628      	mov	r0, r5
 80031f2:	f003 f9c3 	bl	800657c <_free_r>
 80031f6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80031f8:	6063      	str	r3, [r4, #4]
 80031fa:	2000      	movs	r0, #0
 80031fc:	6360      	str	r0, [r4, #52]	; 0x34
 80031fe:	2b00      	cmp	r3, #0
 8003200:	d0c0      	beq.n	8003184 <__srefill_r+0x78>
 8003202:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003204:	6023      	str	r3, [r4, #0]
 8003206:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003208:	2000      	movs	r0, #0
 800320a:	e7fc      	b.n	8003206 <__srefill_r+0xfa>
 800320c:	08007c8c 	.word	0x08007c8c
 8003210:	08007cac 	.word	0x08007cac
 8003214:	08007c6c 	.word	0x08007c6c
 8003218:	08007ccc 	.word	0x08007ccc
 800321c:	080030f9 	.word	0x080030f9

08003220 <_sbrk_r>:
 8003220:	b538      	push	{r3, r4, r5, lr}
 8003222:	4d06      	ldr	r5, [pc, #24]	; (800323c <_sbrk_r+0x1c>)
 8003224:	2300      	movs	r3, #0
 8003226:	4604      	mov	r4, r0
 8003228:	4608      	mov	r0, r1
 800322a:	602b      	str	r3, [r5, #0]
 800322c:	f7fe fcfe 	bl	8001c2c <_sbrk>
 8003230:	1c43      	adds	r3, r0, #1
 8003232:	d102      	bne.n	800323a <_sbrk_r+0x1a>
 8003234:	682b      	ldr	r3, [r5, #0]
 8003236:	b103      	cbz	r3, 800323a <_sbrk_r+0x1a>
 8003238:	6023      	str	r3, [r4, #0]
 800323a:	bd38      	pop	{r3, r4, r5, pc}
 800323c:	20000d3c 	.word	0x20000d3c

08003240 <setvbuf>:
 8003240:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8003244:	461d      	mov	r5, r3
 8003246:	4b5d      	ldr	r3, [pc, #372]	; (80033bc <setvbuf+0x17c>)
 8003248:	681f      	ldr	r7, [r3, #0]
 800324a:	4604      	mov	r4, r0
 800324c:	460e      	mov	r6, r1
 800324e:	4690      	mov	r8, r2
 8003250:	b127      	cbz	r7, 800325c <setvbuf+0x1c>
 8003252:	69bb      	ldr	r3, [r7, #24]
 8003254:	b913      	cbnz	r3, 800325c <setvbuf+0x1c>
 8003256:	4638      	mov	r0, r7
 8003258:	f7fe ff02 	bl	8002060 <__sinit>
 800325c:	4b58      	ldr	r3, [pc, #352]	; (80033c0 <setvbuf+0x180>)
 800325e:	429c      	cmp	r4, r3
 8003260:	d167      	bne.n	8003332 <setvbuf+0xf2>
 8003262:	687c      	ldr	r4, [r7, #4]
 8003264:	f1b8 0f02 	cmp.w	r8, #2
 8003268:	d006      	beq.n	8003278 <setvbuf+0x38>
 800326a:	f1b8 0f01 	cmp.w	r8, #1
 800326e:	f200 809f 	bhi.w	80033b0 <setvbuf+0x170>
 8003272:	2d00      	cmp	r5, #0
 8003274:	f2c0 809c 	blt.w	80033b0 <setvbuf+0x170>
 8003278:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800327a:	07db      	lsls	r3, r3, #31
 800327c:	d405      	bmi.n	800328a <setvbuf+0x4a>
 800327e:	89a3      	ldrh	r3, [r4, #12]
 8003280:	0598      	lsls	r0, r3, #22
 8003282:	d402      	bmi.n	800328a <setvbuf+0x4a>
 8003284:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003286:	f7fe ffca 	bl	800221e <__retarget_lock_acquire_recursive>
 800328a:	4621      	mov	r1, r4
 800328c:	4638      	mov	r0, r7
 800328e:	f002 f84f 	bl	8005330 <_fflush_r>
 8003292:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8003294:	b141      	cbz	r1, 80032a8 <setvbuf+0x68>
 8003296:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800329a:	4299      	cmp	r1, r3
 800329c:	d002      	beq.n	80032a4 <setvbuf+0x64>
 800329e:	4638      	mov	r0, r7
 80032a0:	f003 f96c 	bl	800657c <_free_r>
 80032a4:	2300      	movs	r3, #0
 80032a6:	6363      	str	r3, [r4, #52]	; 0x34
 80032a8:	2300      	movs	r3, #0
 80032aa:	61a3      	str	r3, [r4, #24]
 80032ac:	6063      	str	r3, [r4, #4]
 80032ae:	89a3      	ldrh	r3, [r4, #12]
 80032b0:	0619      	lsls	r1, r3, #24
 80032b2:	d503      	bpl.n	80032bc <setvbuf+0x7c>
 80032b4:	6921      	ldr	r1, [r4, #16]
 80032b6:	4638      	mov	r0, r7
 80032b8:	f003 f960 	bl	800657c <_free_r>
 80032bc:	89a3      	ldrh	r3, [r4, #12]
 80032be:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
 80032c2:	f023 0303 	bic.w	r3, r3, #3
 80032c6:	f1b8 0f02 	cmp.w	r8, #2
 80032ca:	81a3      	strh	r3, [r4, #12]
 80032cc:	d06c      	beq.n	80033a8 <setvbuf+0x168>
 80032ce:	ab01      	add	r3, sp, #4
 80032d0:	466a      	mov	r2, sp
 80032d2:	4621      	mov	r1, r4
 80032d4:	4638      	mov	r0, r7
 80032d6:	f002 fc05 	bl	8005ae4 <__swhatbuf_r>
 80032da:	89a3      	ldrh	r3, [r4, #12]
 80032dc:	4318      	orrs	r0, r3
 80032de:	81a0      	strh	r0, [r4, #12]
 80032e0:	2d00      	cmp	r5, #0
 80032e2:	d130      	bne.n	8003346 <setvbuf+0x106>
 80032e4:	9d00      	ldr	r5, [sp, #0]
 80032e6:	4628      	mov	r0, r5
 80032e8:	f002 fc60 	bl	8005bac <malloc>
 80032ec:	4606      	mov	r6, r0
 80032ee:	2800      	cmp	r0, #0
 80032f0:	d155      	bne.n	800339e <setvbuf+0x15e>
 80032f2:	f8dd 9000 	ldr.w	r9, [sp]
 80032f6:	45a9      	cmp	r9, r5
 80032f8:	d14a      	bne.n	8003390 <setvbuf+0x150>
 80032fa:	f04f 35ff 	mov.w	r5, #4294967295
 80032fe:	2200      	movs	r2, #0
 8003300:	60a2      	str	r2, [r4, #8]
 8003302:	f104 0247 	add.w	r2, r4, #71	; 0x47
 8003306:	6022      	str	r2, [r4, #0]
 8003308:	6122      	str	r2, [r4, #16]
 800330a:	2201      	movs	r2, #1
 800330c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003310:	6162      	str	r2, [r4, #20]
 8003312:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8003314:	f043 0302 	orr.w	r3, r3, #2
 8003318:	07d2      	lsls	r2, r2, #31
 800331a:	81a3      	strh	r3, [r4, #12]
 800331c:	d405      	bmi.n	800332a <setvbuf+0xea>
 800331e:	f413 7f00 	tst.w	r3, #512	; 0x200
 8003322:	d102      	bne.n	800332a <setvbuf+0xea>
 8003324:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003326:	f7fe ff7b 	bl	8002220 <__retarget_lock_release_recursive>
 800332a:	4628      	mov	r0, r5
 800332c:	b003      	add	sp, #12
 800332e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003332:	4b24      	ldr	r3, [pc, #144]	; (80033c4 <setvbuf+0x184>)
 8003334:	429c      	cmp	r4, r3
 8003336:	d101      	bne.n	800333c <setvbuf+0xfc>
 8003338:	68bc      	ldr	r4, [r7, #8]
 800333a:	e793      	b.n	8003264 <setvbuf+0x24>
 800333c:	4b22      	ldr	r3, [pc, #136]	; (80033c8 <setvbuf+0x188>)
 800333e:	429c      	cmp	r4, r3
 8003340:	bf08      	it	eq
 8003342:	68fc      	ldreq	r4, [r7, #12]
 8003344:	e78e      	b.n	8003264 <setvbuf+0x24>
 8003346:	2e00      	cmp	r6, #0
 8003348:	d0cd      	beq.n	80032e6 <setvbuf+0xa6>
 800334a:	69bb      	ldr	r3, [r7, #24]
 800334c:	b913      	cbnz	r3, 8003354 <setvbuf+0x114>
 800334e:	4638      	mov	r0, r7
 8003350:	f7fe fe86 	bl	8002060 <__sinit>
 8003354:	f1b8 0f01 	cmp.w	r8, #1
 8003358:	bf08      	it	eq
 800335a:	89a3      	ldrheq	r3, [r4, #12]
 800335c:	6026      	str	r6, [r4, #0]
 800335e:	bf04      	itt	eq
 8003360:	f043 0301 	orreq.w	r3, r3, #1
 8003364:	81a3      	strheq	r3, [r4, #12]
 8003366:	89a2      	ldrh	r2, [r4, #12]
 8003368:	f012 0308 	ands.w	r3, r2, #8
 800336c:	e9c4 6504 	strd	r6, r5, [r4, #16]
 8003370:	d01c      	beq.n	80033ac <setvbuf+0x16c>
 8003372:	07d3      	lsls	r3, r2, #31
 8003374:	bf41      	itttt	mi
 8003376:	2300      	movmi	r3, #0
 8003378:	426d      	negmi	r5, r5
 800337a:	60a3      	strmi	r3, [r4, #8]
 800337c:	61a5      	strmi	r5, [r4, #24]
 800337e:	bf58      	it	pl
 8003380:	60a5      	strpl	r5, [r4, #8]
 8003382:	6e65      	ldr	r5, [r4, #100]	; 0x64
 8003384:	f015 0501 	ands.w	r5, r5, #1
 8003388:	d115      	bne.n	80033b6 <setvbuf+0x176>
 800338a:	f412 7f00 	tst.w	r2, #512	; 0x200
 800338e:	e7c8      	b.n	8003322 <setvbuf+0xe2>
 8003390:	4648      	mov	r0, r9
 8003392:	f002 fc0b 	bl	8005bac <malloc>
 8003396:	4606      	mov	r6, r0
 8003398:	2800      	cmp	r0, #0
 800339a:	d0ae      	beq.n	80032fa <setvbuf+0xba>
 800339c:	464d      	mov	r5, r9
 800339e:	89a3      	ldrh	r3, [r4, #12]
 80033a0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80033a4:	81a3      	strh	r3, [r4, #12]
 80033a6:	e7d0      	b.n	800334a <setvbuf+0x10a>
 80033a8:	2500      	movs	r5, #0
 80033aa:	e7a8      	b.n	80032fe <setvbuf+0xbe>
 80033ac:	60a3      	str	r3, [r4, #8]
 80033ae:	e7e8      	b.n	8003382 <setvbuf+0x142>
 80033b0:	f04f 35ff 	mov.w	r5, #4294967295
 80033b4:	e7b9      	b.n	800332a <setvbuf+0xea>
 80033b6:	2500      	movs	r5, #0
 80033b8:	e7b7      	b.n	800332a <setvbuf+0xea>
 80033ba:	bf00      	nop
 80033bc:	20000b10 	.word	0x20000b10
 80033c0:	08007c8c 	.word	0x08007c8c
 80033c4:	08007cac 	.word	0x08007cac
 80033c8:	08007c6c 	.word	0x08007c6c

080033cc <nanf>:
 80033cc:	4800      	ldr	r0, [pc, #0]	; (80033d0 <nanf+0x4>)
 80033ce:	4770      	bx	lr
 80033d0:	7fc00000 	.word	0x7fc00000

080033d4 <siprintf>:
 80033d4:	b40e      	push	{r1, r2, r3}
 80033d6:	b500      	push	{lr}
 80033d8:	b09c      	sub	sp, #112	; 0x70
 80033da:	ab1d      	add	r3, sp, #116	; 0x74
 80033dc:	9002      	str	r0, [sp, #8]
 80033de:	9006      	str	r0, [sp, #24]
 80033e0:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 80033e4:	4809      	ldr	r0, [pc, #36]	; (800340c <siprintf+0x38>)
 80033e6:	9107      	str	r1, [sp, #28]
 80033e8:	9104      	str	r1, [sp, #16]
 80033ea:	4909      	ldr	r1, [pc, #36]	; (8003410 <siprintf+0x3c>)
 80033ec:	f853 2b04 	ldr.w	r2, [r3], #4
 80033f0:	9105      	str	r1, [sp, #20]
 80033f2:	6800      	ldr	r0, [r0, #0]
 80033f4:	9301      	str	r3, [sp, #4]
 80033f6:	a902      	add	r1, sp, #8
 80033f8:	f003 f96a 	bl	80066d0 <_svfiprintf_r>
 80033fc:	9b02      	ldr	r3, [sp, #8]
 80033fe:	2200      	movs	r2, #0
 8003400:	701a      	strb	r2, [r3, #0]
 8003402:	b01c      	add	sp, #112	; 0x70
 8003404:	f85d eb04 	ldr.w	lr, [sp], #4
 8003408:	b003      	add	sp, #12
 800340a:	4770      	bx	lr
 800340c:	20000b10 	.word	0x20000b10
 8003410:	ffff0208 	.word	0xffff0208

08003414 <siscanf>:
 8003414:	b40e      	push	{r1, r2, r3}
 8003416:	b530      	push	{r4, r5, lr}
 8003418:	b09c      	sub	sp, #112	; 0x70
 800341a:	ac1f      	add	r4, sp, #124	; 0x7c
 800341c:	f44f 7201 	mov.w	r2, #516	; 0x204
 8003420:	f854 5b04 	ldr.w	r5, [r4], #4
 8003424:	f8ad 2014 	strh.w	r2, [sp, #20]
 8003428:	9002      	str	r0, [sp, #8]
 800342a:	9006      	str	r0, [sp, #24]
 800342c:	f7fc ff4a 	bl	80002c4 <strlen>
 8003430:	4b0b      	ldr	r3, [pc, #44]	; (8003460 <siscanf+0x4c>)
 8003432:	9003      	str	r0, [sp, #12]
 8003434:	9007      	str	r0, [sp, #28]
 8003436:	930b      	str	r3, [sp, #44]	; 0x2c
 8003438:	480a      	ldr	r0, [pc, #40]	; (8003464 <siscanf+0x50>)
 800343a:	9401      	str	r4, [sp, #4]
 800343c:	2300      	movs	r3, #0
 800343e:	930f      	str	r3, [sp, #60]	; 0x3c
 8003440:	9314      	str	r3, [sp, #80]	; 0x50
 8003442:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003446:	f8ad 3016 	strh.w	r3, [sp, #22]
 800344a:	462a      	mov	r2, r5
 800344c:	4623      	mov	r3, r4
 800344e:	a902      	add	r1, sp, #8
 8003450:	6800      	ldr	r0, [r0, #0]
 8003452:	f003 fa97 	bl	8006984 <__ssvfiscanf_r>
 8003456:	b01c      	add	sp, #112	; 0x70
 8003458:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800345c:	b003      	add	sp, #12
 800345e:	4770      	bx	lr
 8003460:	0800348b 	.word	0x0800348b
 8003464:	20000b10 	.word	0x20000b10

08003468 <__sread>:
 8003468:	b510      	push	{r4, lr}
 800346a:	460c      	mov	r4, r1
 800346c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003470:	f003 fea4 	bl	80071bc <_read_r>
 8003474:	2800      	cmp	r0, #0
 8003476:	bfab      	itete	ge
 8003478:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800347a:	89a3      	ldrhlt	r3, [r4, #12]
 800347c:	181b      	addge	r3, r3, r0
 800347e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8003482:	bfac      	ite	ge
 8003484:	6563      	strge	r3, [r4, #84]	; 0x54
 8003486:	81a3      	strhlt	r3, [r4, #12]
 8003488:	bd10      	pop	{r4, pc}

0800348a <__seofread>:
 800348a:	2000      	movs	r0, #0
 800348c:	4770      	bx	lr

0800348e <__swrite>:
 800348e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003492:	461f      	mov	r7, r3
 8003494:	898b      	ldrh	r3, [r1, #12]
 8003496:	05db      	lsls	r3, r3, #23
 8003498:	4605      	mov	r5, r0
 800349a:	460c      	mov	r4, r1
 800349c:	4616      	mov	r6, r2
 800349e:	d505      	bpl.n	80034ac <__swrite+0x1e>
 80034a0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80034a4:	2302      	movs	r3, #2
 80034a6:	2200      	movs	r2, #0
 80034a8:	f002 fb0a 	bl	8005ac0 <_lseek_r>
 80034ac:	89a3      	ldrh	r3, [r4, #12]
 80034ae:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80034b2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80034b6:	81a3      	strh	r3, [r4, #12]
 80034b8:	4632      	mov	r2, r6
 80034ba:	463b      	mov	r3, r7
 80034bc:	4628      	mov	r0, r5
 80034be:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80034c2:	f000 bf85 	b.w	80043d0 <_write_r>

080034c6 <__sseek>:
 80034c6:	b510      	push	{r4, lr}
 80034c8:	460c      	mov	r4, r1
 80034ca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80034ce:	f002 faf7 	bl	8005ac0 <_lseek_r>
 80034d2:	1c43      	adds	r3, r0, #1
 80034d4:	89a3      	ldrh	r3, [r4, #12]
 80034d6:	bf15      	itete	ne
 80034d8:	6560      	strne	r0, [r4, #84]	; 0x54
 80034da:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80034de:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80034e2:	81a3      	strheq	r3, [r4, #12]
 80034e4:	bf18      	it	ne
 80034e6:	81a3      	strhne	r3, [r4, #12]
 80034e8:	bd10      	pop	{r4, pc}

080034ea <__sclose>:
 80034ea:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80034ee:	f001 b80d 	b.w	800450c <_close_r>

080034f2 <strcat>:
 80034f2:	b510      	push	{r4, lr}
 80034f4:	4602      	mov	r2, r0
 80034f6:	7814      	ldrb	r4, [r2, #0]
 80034f8:	4613      	mov	r3, r2
 80034fa:	3201      	adds	r2, #1
 80034fc:	2c00      	cmp	r4, #0
 80034fe:	d1fa      	bne.n	80034f6 <strcat+0x4>
 8003500:	3b01      	subs	r3, #1
 8003502:	f811 2b01 	ldrb.w	r2, [r1], #1
 8003506:	f803 2f01 	strb.w	r2, [r3, #1]!
 800350a:	2a00      	cmp	r2, #0
 800350c:	d1f9      	bne.n	8003502 <strcat+0x10>
 800350e:	bd10      	pop	{r4, pc}

08003510 <strnlen>:
 8003510:	b510      	push	{r4, lr}
 8003512:	4602      	mov	r2, r0
 8003514:	4401      	add	r1, r0
 8003516:	428a      	cmp	r2, r1
 8003518:	4613      	mov	r3, r2
 800351a:	d101      	bne.n	8003520 <strnlen+0x10>
 800351c:	1a18      	subs	r0, r3, r0
 800351e:	bd10      	pop	{r4, pc}
 8003520:	781c      	ldrb	r4, [r3, #0]
 8003522:	3201      	adds	r2, #1
 8003524:	2c00      	cmp	r4, #0
 8003526:	d1f6      	bne.n	8003516 <strnlen+0x6>
 8003528:	e7f8      	b.n	800351c <strnlen+0xc>

0800352a <sulp>:
 800352a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800352e:	460f      	mov	r7, r1
 8003530:	4690      	mov	r8, r2
 8003532:	f002 fecd 	bl	80062d0 <__ulp>
 8003536:	4604      	mov	r4, r0
 8003538:	460d      	mov	r5, r1
 800353a:	f1b8 0f00 	cmp.w	r8, #0
 800353e:	d011      	beq.n	8003564 <sulp+0x3a>
 8003540:	f3c7 530a 	ubfx	r3, r7, #20, #11
 8003544:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8003548:	2b00      	cmp	r3, #0
 800354a:	dd0b      	ble.n	8003564 <sulp+0x3a>
 800354c:	051b      	lsls	r3, r3, #20
 800354e:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 8003552:	2400      	movs	r4, #0
 8003554:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 8003558:	4622      	mov	r2, r4
 800355a:	462b      	mov	r3, r5
 800355c:	f7fd f876 	bl	800064c <__aeabi_dmul>
 8003560:	4604      	mov	r4, r0
 8003562:	460d      	mov	r5, r1
 8003564:	4620      	mov	r0, r4
 8003566:	4629      	mov	r1, r5
 8003568:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800356c:	0000      	movs	r0, r0
	...

08003570 <_strtod_l>:
 8003570:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003574:	b0a1      	sub	sp, #132	; 0x84
 8003576:	469b      	mov	fp, r3
 8003578:	2300      	movs	r3, #0
 800357a:	931c      	str	r3, [sp, #112]	; 0x70
 800357c:	4ba1      	ldr	r3, [pc, #644]	; (8003804 <_strtod_l+0x294>)
 800357e:	9217      	str	r2, [sp, #92]	; 0x5c
 8003580:	681f      	ldr	r7, [r3, #0]
 8003582:	4682      	mov	sl, r0
 8003584:	4638      	mov	r0, r7
 8003586:	460e      	mov	r6, r1
 8003588:	f7fc fe9c 	bl	80002c4 <strlen>
 800358c:	f04f 0800 	mov.w	r8, #0
 8003590:	4604      	mov	r4, r0
 8003592:	f04f 0900 	mov.w	r9, #0
 8003596:	961b      	str	r6, [sp, #108]	; 0x6c
 8003598:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800359a:	781a      	ldrb	r2, [r3, #0]
 800359c:	2a2b      	cmp	r2, #43	; 0x2b
 800359e:	d04c      	beq.n	800363a <_strtod_l+0xca>
 80035a0:	d83a      	bhi.n	8003618 <_strtod_l+0xa8>
 80035a2:	2a0d      	cmp	r2, #13
 80035a4:	d833      	bhi.n	800360e <_strtod_l+0x9e>
 80035a6:	2a08      	cmp	r2, #8
 80035a8:	d833      	bhi.n	8003612 <_strtod_l+0xa2>
 80035aa:	2a00      	cmp	r2, #0
 80035ac:	d03d      	beq.n	800362a <_strtod_l+0xba>
 80035ae:	2300      	movs	r3, #0
 80035b0:	930c      	str	r3, [sp, #48]	; 0x30
 80035b2:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 80035b4:	782b      	ldrb	r3, [r5, #0]
 80035b6:	2b30      	cmp	r3, #48	; 0x30
 80035b8:	f040 80af 	bne.w	800371a <_strtod_l+0x1aa>
 80035bc:	786b      	ldrb	r3, [r5, #1]
 80035be:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 80035c2:	2b58      	cmp	r3, #88	; 0x58
 80035c4:	d16c      	bne.n	80036a0 <_strtod_l+0x130>
 80035c6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80035c8:	9301      	str	r3, [sp, #4]
 80035ca:	ab1c      	add	r3, sp, #112	; 0x70
 80035cc:	9300      	str	r3, [sp, #0]
 80035ce:	4a8e      	ldr	r2, [pc, #568]	; (8003808 <_strtod_l+0x298>)
 80035d0:	f8cd b008 	str.w	fp, [sp, #8]
 80035d4:	ab1d      	add	r3, sp, #116	; 0x74
 80035d6:	a91b      	add	r1, sp, #108	; 0x6c
 80035d8:	4650      	mov	r0, sl
 80035da:	f001 ff71 	bl	80054c0 <__gethex>
 80035de:	f010 0607 	ands.w	r6, r0, #7
 80035e2:	4604      	mov	r4, r0
 80035e4:	d005      	beq.n	80035f2 <_strtod_l+0x82>
 80035e6:	2e06      	cmp	r6, #6
 80035e8:	d129      	bne.n	800363e <_strtod_l+0xce>
 80035ea:	3501      	adds	r5, #1
 80035ec:	2300      	movs	r3, #0
 80035ee:	951b      	str	r5, [sp, #108]	; 0x6c
 80035f0:	930c      	str	r3, [sp, #48]	; 0x30
 80035f2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80035f4:	2b00      	cmp	r3, #0
 80035f6:	f040 8596 	bne.w	8004126 <_strtod_l+0xbb6>
 80035fa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80035fc:	b1d3      	cbz	r3, 8003634 <_strtod_l+0xc4>
 80035fe:	4642      	mov	r2, r8
 8003600:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8003604:	4610      	mov	r0, r2
 8003606:	4619      	mov	r1, r3
 8003608:	b021      	add	sp, #132	; 0x84
 800360a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800360e:	2a20      	cmp	r2, #32
 8003610:	d1cd      	bne.n	80035ae <_strtod_l+0x3e>
 8003612:	3301      	adds	r3, #1
 8003614:	931b      	str	r3, [sp, #108]	; 0x6c
 8003616:	e7bf      	b.n	8003598 <_strtod_l+0x28>
 8003618:	2a2d      	cmp	r2, #45	; 0x2d
 800361a:	d1c8      	bne.n	80035ae <_strtod_l+0x3e>
 800361c:	2201      	movs	r2, #1
 800361e:	920c      	str	r2, [sp, #48]	; 0x30
 8003620:	1c5a      	adds	r2, r3, #1
 8003622:	921b      	str	r2, [sp, #108]	; 0x6c
 8003624:	785b      	ldrb	r3, [r3, #1]
 8003626:	2b00      	cmp	r3, #0
 8003628:	d1c3      	bne.n	80035b2 <_strtod_l+0x42>
 800362a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800362c:	961b      	str	r6, [sp, #108]	; 0x6c
 800362e:	2b00      	cmp	r3, #0
 8003630:	f040 8577 	bne.w	8004122 <_strtod_l+0xbb2>
 8003634:	4642      	mov	r2, r8
 8003636:	464b      	mov	r3, r9
 8003638:	e7e4      	b.n	8003604 <_strtod_l+0x94>
 800363a:	2200      	movs	r2, #0
 800363c:	e7ef      	b.n	800361e <_strtod_l+0xae>
 800363e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8003640:	b13a      	cbz	r2, 8003652 <_strtod_l+0xe2>
 8003642:	2135      	movs	r1, #53	; 0x35
 8003644:	a81e      	add	r0, sp, #120	; 0x78
 8003646:	f002 ff47 	bl	80064d8 <__copybits>
 800364a:	991c      	ldr	r1, [sp, #112]	; 0x70
 800364c:	4650      	mov	r0, sl
 800364e:	f002 fb13 	bl	8005c78 <_Bfree>
 8003652:	3e01      	subs	r6, #1
 8003654:	2e05      	cmp	r6, #5
 8003656:	d807      	bhi.n	8003668 <_strtod_l+0xf8>
 8003658:	e8df f006 	tbb	[pc, r6]
 800365c:	1d180b0e 	.word	0x1d180b0e
 8003660:	030e      	.short	0x030e
 8003662:	f04f 0900 	mov.w	r9, #0
 8003666:	46c8      	mov	r8, r9
 8003668:	0721      	lsls	r1, r4, #28
 800366a:	d5c2      	bpl.n	80035f2 <_strtod_l+0x82>
 800366c:	f049 4900 	orr.w	r9, r9, #2147483648	; 0x80000000
 8003670:	e7bf      	b.n	80035f2 <_strtod_l+0x82>
 8003672:	e9dd 891e 	ldrd	r8, r9, [sp, #120]	; 0x78
 8003676:	e7f7      	b.n	8003668 <_strtod_l+0xf8>
 8003678:	e9dd 831e 	ldrd	r8, r3, [sp, #120]	; 0x78
 800367c:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800367e:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8003682:	f202 4233 	addw	r2, r2, #1075	; 0x433
 8003686:	ea43 5902 	orr.w	r9, r3, r2, lsl #20
 800368a:	e7ed      	b.n	8003668 <_strtod_l+0xf8>
 800368c:	f8df 917c 	ldr.w	r9, [pc, #380]	; 800380c <_strtod_l+0x29c>
 8003690:	f04f 0800 	mov.w	r8, #0
 8003694:	e7e8      	b.n	8003668 <_strtod_l+0xf8>
 8003696:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
 800369a:	f04f 38ff 	mov.w	r8, #4294967295
 800369e:	e7e3      	b.n	8003668 <_strtod_l+0xf8>
 80036a0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80036a2:	1c5a      	adds	r2, r3, #1
 80036a4:	921b      	str	r2, [sp, #108]	; 0x6c
 80036a6:	785b      	ldrb	r3, [r3, #1]
 80036a8:	2b30      	cmp	r3, #48	; 0x30
 80036aa:	d0f9      	beq.n	80036a0 <_strtod_l+0x130>
 80036ac:	2b00      	cmp	r3, #0
 80036ae:	d0a0      	beq.n	80035f2 <_strtod_l+0x82>
 80036b0:	2301      	movs	r3, #1
 80036b2:	9307      	str	r3, [sp, #28]
 80036b4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80036b6:	9308      	str	r3, [sp, #32]
 80036b8:	2300      	movs	r3, #0
 80036ba:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80036be:	469b      	mov	fp, r3
 80036c0:	220a      	movs	r2, #10
 80036c2:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80036c4:	7805      	ldrb	r5, [r0, #0]
 80036c6:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
 80036ca:	b2d9      	uxtb	r1, r3
 80036cc:	2909      	cmp	r1, #9
 80036ce:	d926      	bls.n	800371e <_strtod_l+0x1ae>
 80036d0:	4622      	mov	r2, r4
 80036d2:	4639      	mov	r1, r7
 80036d4:	f003 fdc4 	bl	8007260 <strncmp>
 80036d8:	2800      	cmp	r0, #0
 80036da:	d032      	beq.n	8003742 <_strtod_l+0x1d2>
 80036dc:	2000      	movs	r0, #0
 80036de:	462b      	mov	r3, r5
 80036e0:	465c      	mov	r4, fp
 80036e2:	9004      	str	r0, [sp, #16]
 80036e4:	4602      	mov	r2, r0
 80036e6:	2b65      	cmp	r3, #101	; 0x65
 80036e8:	d001      	beq.n	80036ee <_strtod_l+0x17e>
 80036ea:	2b45      	cmp	r3, #69	; 0x45
 80036ec:	d113      	bne.n	8003716 <_strtod_l+0x1a6>
 80036ee:	b91c      	cbnz	r4, 80036f8 <_strtod_l+0x188>
 80036f0:	9b07      	ldr	r3, [sp, #28]
 80036f2:	4303      	orrs	r3, r0
 80036f4:	d099      	beq.n	800362a <_strtod_l+0xba>
 80036f6:	2400      	movs	r4, #0
 80036f8:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
 80036fa:	1c73      	adds	r3, r6, #1
 80036fc:	931b      	str	r3, [sp, #108]	; 0x6c
 80036fe:	7873      	ldrb	r3, [r6, #1]
 8003700:	2b2b      	cmp	r3, #43	; 0x2b
 8003702:	d078      	beq.n	80037f6 <_strtod_l+0x286>
 8003704:	2b2d      	cmp	r3, #45	; 0x2d
 8003706:	d07b      	beq.n	8003800 <_strtod_l+0x290>
 8003708:	2700      	movs	r7, #0
 800370a:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 800370e:	2909      	cmp	r1, #9
 8003710:	f240 8082 	bls.w	8003818 <_strtod_l+0x2a8>
 8003714:	961b      	str	r6, [sp, #108]	; 0x6c
 8003716:	2500      	movs	r5, #0
 8003718:	e09e      	b.n	8003858 <_strtod_l+0x2e8>
 800371a:	2300      	movs	r3, #0
 800371c:	e7c9      	b.n	80036b2 <_strtod_l+0x142>
 800371e:	f1bb 0f08 	cmp.w	fp, #8
 8003722:	bfd5      	itete	le
 8003724:	9906      	ldrle	r1, [sp, #24]
 8003726:	9905      	ldrgt	r1, [sp, #20]
 8003728:	fb02 3301 	mlale	r3, r2, r1, r3
 800372c:	fb02 3301 	mlagt	r3, r2, r1, r3
 8003730:	f100 0001 	add.w	r0, r0, #1
 8003734:	bfd4      	ite	le
 8003736:	9306      	strle	r3, [sp, #24]
 8003738:	9305      	strgt	r3, [sp, #20]
 800373a:	f10b 0b01 	add.w	fp, fp, #1
 800373e:	901b      	str	r0, [sp, #108]	; 0x6c
 8003740:	e7bf      	b.n	80036c2 <_strtod_l+0x152>
 8003742:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8003744:	191a      	adds	r2, r3, r4
 8003746:	921b      	str	r2, [sp, #108]	; 0x6c
 8003748:	5d1b      	ldrb	r3, [r3, r4]
 800374a:	f1bb 0f00 	cmp.w	fp, #0
 800374e:	d036      	beq.n	80037be <_strtod_l+0x24e>
 8003750:	9004      	str	r0, [sp, #16]
 8003752:	465c      	mov	r4, fp
 8003754:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 8003758:	2a09      	cmp	r2, #9
 800375a:	d912      	bls.n	8003782 <_strtod_l+0x212>
 800375c:	2201      	movs	r2, #1
 800375e:	e7c2      	b.n	80036e6 <_strtod_l+0x176>
 8003760:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8003762:	1c5a      	adds	r2, r3, #1
 8003764:	921b      	str	r2, [sp, #108]	; 0x6c
 8003766:	785b      	ldrb	r3, [r3, #1]
 8003768:	3001      	adds	r0, #1
 800376a:	2b30      	cmp	r3, #48	; 0x30
 800376c:	d0f8      	beq.n	8003760 <_strtod_l+0x1f0>
 800376e:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
 8003772:	2a08      	cmp	r2, #8
 8003774:	f200 84dc 	bhi.w	8004130 <_strtod_l+0xbc0>
 8003778:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 800377a:	9004      	str	r0, [sp, #16]
 800377c:	2000      	movs	r0, #0
 800377e:	9208      	str	r2, [sp, #32]
 8003780:	4604      	mov	r4, r0
 8003782:	3b30      	subs	r3, #48	; 0x30
 8003784:	f100 0201 	add.w	r2, r0, #1
 8003788:	d013      	beq.n	80037b2 <_strtod_l+0x242>
 800378a:	9904      	ldr	r1, [sp, #16]
 800378c:	4411      	add	r1, r2
 800378e:	9104      	str	r1, [sp, #16]
 8003790:	4622      	mov	r2, r4
 8003792:	1905      	adds	r5, r0, r4
 8003794:	210a      	movs	r1, #10
 8003796:	42aa      	cmp	r2, r5
 8003798:	d113      	bne.n	80037c2 <_strtod_l+0x252>
 800379a:	1822      	adds	r2, r4, r0
 800379c:	2a08      	cmp	r2, #8
 800379e:	f104 0401 	add.w	r4, r4, #1
 80037a2:	4404      	add	r4, r0
 80037a4:	dc1b      	bgt.n	80037de <_strtod_l+0x26e>
 80037a6:	9906      	ldr	r1, [sp, #24]
 80037a8:	220a      	movs	r2, #10
 80037aa:	fb02 3301 	mla	r3, r2, r1, r3
 80037ae:	9306      	str	r3, [sp, #24]
 80037b0:	2200      	movs	r2, #0
 80037b2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80037b4:	1c59      	adds	r1, r3, #1
 80037b6:	911b      	str	r1, [sp, #108]	; 0x6c
 80037b8:	785b      	ldrb	r3, [r3, #1]
 80037ba:	4610      	mov	r0, r2
 80037bc:	e7ca      	b.n	8003754 <_strtod_l+0x1e4>
 80037be:	4658      	mov	r0, fp
 80037c0:	e7d3      	b.n	800376a <_strtod_l+0x1fa>
 80037c2:	2a08      	cmp	r2, #8
 80037c4:	dc04      	bgt.n	80037d0 <_strtod_l+0x260>
 80037c6:	9f06      	ldr	r7, [sp, #24]
 80037c8:	434f      	muls	r7, r1
 80037ca:	9706      	str	r7, [sp, #24]
 80037cc:	3201      	adds	r2, #1
 80037ce:	e7e2      	b.n	8003796 <_strtod_l+0x226>
 80037d0:	1c57      	adds	r7, r2, #1
 80037d2:	2f10      	cmp	r7, #16
 80037d4:	bfde      	ittt	le
 80037d6:	9f05      	ldrle	r7, [sp, #20]
 80037d8:	434f      	mulle	r7, r1
 80037da:	9705      	strle	r7, [sp, #20]
 80037dc:	e7f6      	b.n	80037cc <_strtod_l+0x25c>
 80037de:	2c10      	cmp	r4, #16
 80037e0:	bfdf      	itttt	le
 80037e2:	9905      	ldrle	r1, [sp, #20]
 80037e4:	220a      	movle	r2, #10
 80037e6:	fb02 3301 	mlale	r3, r2, r1, r3
 80037ea:	9305      	strle	r3, [sp, #20]
 80037ec:	e7e0      	b.n	80037b0 <_strtod_l+0x240>
 80037ee:	2300      	movs	r3, #0
 80037f0:	9304      	str	r3, [sp, #16]
 80037f2:	2201      	movs	r2, #1
 80037f4:	e77c      	b.n	80036f0 <_strtod_l+0x180>
 80037f6:	2700      	movs	r7, #0
 80037f8:	1cb3      	adds	r3, r6, #2
 80037fa:	931b      	str	r3, [sp, #108]	; 0x6c
 80037fc:	78b3      	ldrb	r3, [r6, #2]
 80037fe:	e784      	b.n	800370a <_strtod_l+0x19a>
 8003800:	2701      	movs	r7, #1
 8003802:	e7f9      	b.n	80037f8 <_strtod_l+0x288>
 8003804:	08007ff4 	.word	0x08007ff4
 8003808:	08007d08 	.word	0x08007d08
 800380c:	7ff00000 	.word	0x7ff00000
 8003810:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8003812:	1c59      	adds	r1, r3, #1
 8003814:	911b      	str	r1, [sp, #108]	; 0x6c
 8003816:	785b      	ldrb	r3, [r3, #1]
 8003818:	2b30      	cmp	r3, #48	; 0x30
 800381a:	d0f9      	beq.n	8003810 <_strtod_l+0x2a0>
 800381c:	f1a3 0131 	sub.w	r1, r3, #49	; 0x31
 8003820:	2908      	cmp	r1, #8
 8003822:	f63f af78 	bhi.w	8003716 <_strtod_l+0x1a6>
 8003826:	f1a3 0c30 	sub.w	ip, r3, #48	; 0x30
 800382a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800382c:	9309      	str	r3, [sp, #36]	; 0x24
 800382e:	f04f 0e0a 	mov.w	lr, #10
 8003832:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8003834:	1c59      	adds	r1, r3, #1
 8003836:	911b      	str	r1, [sp, #108]	; 0x6c
 8003838:	785b      	ldrb	r3, [r3, #1]
 800383a:	f1a3 0530 	sub.w	r5, r3, #48	; 0x30
 800383e:	2d09      	cmp	r5, #9
 8003840:	d935      	bls.n	80038ae <_strtod_l+0x33e>
 8003842:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8003844:	1b49      	subs	r1, r1, r5
 8003846:	2908      	cmp	r1, #8
 8003848:	f644 651f 	movw	r5, #19999	; 0x4e1f
 800384c:	dc02      	bgt.n	8003854 <_strtod_l+0x2e4>
 800384e:	4565      	cmp	r5, ip
 8003850:	bfa8      	it	ge
 8003852:	4665      	movge	r5, ip
 8003854:	b107      	cbz	r7, 8003858 <_strtod_l+0x2e8>
 8003856:	426d      	negs	r5, r5
 8003858:	2c00      	cmp	r4, #0
 800385a:	d14c      	bne.n	80038f6 <_strtod_l+0x386>
 800385c:	9907      	ldr	r1, [sp, #28]
 800385e:	4301      	orrs	r1, r0
 8003860:	f47f aec7 	bne.w	80035f2 <_strtod_l+0x82>
 8003864:	2a00      	cmp	r2, #0
 8003866:	f47f aee0 	bne.w	800362a <_strtod_l+0xba>
 800386a:	2b69      	cmp	r3, #105	; 0x69
 800386c:	d026      	beq.n	80038bc <_strtod_l+0x34c>
 800386e:	dc23      	bgt.n	80038b8 <_strtod_l+0x348>
 8003870:	2b49      	cmp	r3, #73	; 0x49
 8003872:	d023      	beq.n	80038bc <_strtod_l+0x34c>
 8003874:	2b4e      	cmp	r3, #78	; 0x4e
 8003876:	f47f aed8 	bne.w	800362a <_strtod_l+0xba>
 800387a:	499c      	ldr	r1, [pc, #624]	; (8003aec <_strtod_l+0x57c>)
 800387c:	a81b      	add	r0, sp, #108	; 0x6c
 800387e:	f002 f86b 	bl	8005958 <__match>
 8003882:	2800      	cmp	r0, #0
 8003884:	f43f aed1 	beq.w	800362a <_strtod_l+0xba>
 8003888:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800388a:	781b      	ldrb	r3, [r3, #0]
 800388c:	2b28      	cmp	r3, #40	; 0x28
 800388e:	d12c      	bne.n	80038ea <_strtod_l+0x37a>
 8003890:	4997      	ldr	r1, [pc, #604]	; (8003af0 <_strtod_l+0x580>)
 8003892:	aa1e      	add	r2, sp, #120	; 0x78
 8003894:	a81b      	add	r0, sp, #108	; 0x6c
 8003896:	f002 f873 	bl	8005980 <__hexnan>
 800389a:	2805      	cmp	r0, #5
 800389c:	d125      	bne.n	80038ea <_strtod_l+0x37a>
 800389e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80038a0:	f8dd 8078 	ldr.w	r8, [sp, #120]	; 0x78
 80038a4:	f043 49ff 	orr.w	r9, r3, #2139095040	; 0x7f800000
 80038a8:	f449 09e0 	orr.w	r9, r9, #7340032	; 0x700000
 80038ac:	e6a1      	b.n	80035f2 <_strtod_l+0x82>
 80038ae:	fb0e 3c0c 	mla	ip, lr, ip, r3
 80038b2:	f1ac 0c30 	sub.w	ip, ip, #48	; 0x30
 80038b6:	e7bc      	b.n	8003832 <_strtod_l+0x2c2>
 80038b8:	2b6e      	cmp	r3, #110	; 0x6e
 80038ba:	e7dc      	b.n	8003876 <_strtod_l+0x306>
 80038bc:	498d      	ldr	r1, [pc, #564]	; (8003af4 <_strtod_l+0x584>)
 80038be:	a81b      	add	r0, sp, #108	; 0x6c
 80038c0:	f002 f84a 	bl	8005958 <__match>
 80038c4:	2800      	cmp	r0, #0
 80038c6:	f43f aeb0 	beq.w	800362a <_strtod_l+0xba>
 80038ca:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80038cc:	498a      	ldr	r1, [pc, #552]	; (8003af8 <_strtod_l+0x588>)
 80038ce:	3b01      	subs	r3, #1
 80038d0:	a81b      	add	r0, sp, #108	; 0x6c
 80038d2:	931b      	str	r3, [sp, #108]	; 0x6c
 80038d4:	f002 f840 	bl	8005958 <__match>
 80038d8:	b910      	cbnz	r0, 80038e0 <_strtod_l+0x370>
 80038da:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80038dc:	3301      	adds	r3, #1
 80038de:	931b      	str	r3, [sp, #108]	; 0x6c
 80038e0:	f8df 9224 	ldr.w	r9, [pc, #548]	; 8003b08 <_strtod_l+0x598>
 80038e4:	f04f 0800 	mov.w	r8, #0
 80038e8:	e683      	b.n	80035f2 <_strtod_l+0x82>
 80038ea:	4884      	ldr	r0, [pc, #528]	; (8003afc <_strtod_l+0x58c>)
 80038ec:	f003 fc78 	bl	80071e0 <nan>
 80038f0:	4680      	mov	r8, r0
 80038f2:	4689      	mov	r9, r1
 80038f4:	e67d      	b.n	80035f2 <_strtod_l+0x82>
 80038f6:	9b04      	ldr	r3, [sp, #16]
 80038f8:	9806      	ldr	r0, [sp, #24]
 80038fa:	1aeb      	subs	r3, r5, r3
 80038fc:	f1bb 0f00 	cmp.w	fp, #0
 8003900:	bf08      	it	eq
 8003902:	46a3      	moveq	fp, r4
 8003904:	2c10      	cmp	r4, #16
 8003906:	9307      	str	r3, [sp, #28]
 8003908:	4626      	mov	r6, r4
 800390a:	bfa8      	it	ge
 800390c:	2610      	movge	r6, #16
 800390e:	f7fc fe23 	bl	8000558 <__aeabi_ui2d>
 8003912:	2c09      	cmp	r4, #9
 8003914:	4680      	mov	r8, r0
 8003916:	4689      	mov	r9, r1
 8003918:	dd13      	ble.n	8003942 <_strtod_l+0x3d2>
 800391a:	4b79      	ldr	r3, [pc, #484]	; (8003b00 <_strtod_l+0x590>)
 800391c:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8003920:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 8003924:	f7fc fe92 	bl	800064c <__aeabi_dmul>
 8003928:	4680      	mov	r8, r0
 800392a:	9805      	ldr	r0, [sp, #20]
 800392c:	4689      	mov	r9, r1
 800392e:	f7fc fe13 	bl	8000558 <__aeabi_ui2d>
 8003932:	4602      	mov	r2, r0
 8003934:	460b      	mov	r3, r1
 8003936:	4640      	mov	r0, r8
 8003938:	4649      	mov	r1, r9
 800393a:	f7fc fcd1 	bl	80002e0 <__adddf3>
 800393e:	4680      	mov	r8, r0
 8003940:	4689      	mov	r9, r1
 8003942:	2c0f      	cmp	r4, #15
 8003944:	dc36      	bgt.n	80039b4 <_strtod_l+0x444>
 8003946:	9b07      	ldr	r3, [sp, #28]
 8003948:	2b00      	cmp	r3, #0
 800394a:	f43f ae52 	beq.w	80035f2 <_strtod_l+0x82>
 800394e:	dd22      	ble.n	8003996 <_strtod_l+0x426>
 8003950:	2b16      	cmp	r3, #22
 8003952:	dc09      	bgt.n	8003968 <_strtod_l+0x3f8>
 8003954:	4c6a      	ldr	r4, [pc, #424]	; (8003b00 <_strtod_l+0x590>)
 8003956:	eb04 04c3 	add.w	r4, r4, r3, lsl #3
 800395a:	e9d4 0100 	ldrd	r0, r1, [r4]
 800395e:	4642      	mov	r2, r8
 8003960:	464b      	mov	r3, r9
 8003962:	f7fc fe73 	bl	800064c <__aeabi_dmul>
 8003966:	e7c3      	b.n	80038f0 <_strtod_l+0x380>
 8003968:	9a07      	ldr	r2, [sp, #28]
 800396a:	f1c4 0325 	rsb	r3, r4, #37	; 0x25
 800396e:	4293      	cmp	r3, r2
 8003970:	db20      	blt.n	80039b4 <_strtod_l+0x444>
 8003972:	4d63      	ldr	r5, [pc, #396]	; (8003b00 <_strtod_l+0x590>)
 8003974:	f1c4 040f 	rsb	r4, r4, #15
 8003978:	eb05 01c4 	add.w	r1, r5, r4, lsl #3
 800397c:	4642      	mov	r2, r8
 800397e:	464b      	mov	r3, r9
 8003980:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003984:	f7fc fe62 	bl	800064c <__aeabi_dmul>
 8003988:	9b07      	ldr	r3, [sp, #28]
 800398a:	1b1c      	subs	r4, r3, r4
 800398c:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
 8003990:	e9d5 2300 	ldrd	r2, r3, [r5]
 8003994:	e7e5      	b.n	8003962 <_strtod_l+0x3f2>
 8003996:	9b07      	ldr	r3, [sp, #28]
 8003998:	3316      	adds	r3, #22
 800399a:	db0b      	blt.n	80039b4 <_strtod_l+0x444>
 800399c:	9b04      	ldr	r3, [sp, #16]
 800399e:	4a58      	ldr	r2, [pc, #352]	; (8003b00 <_strtod_l+0x590>)
 80039a0:	1b5d      	subs	r5, r3, r5
 80039a2:	eb02 05c5 	add.w	r5, r2, r5, lsl #3
 80039a6:	e9d5 2300 	ldrd	r2, r3, [r5]
 80039aa:	4640      	mov	r0, r8
 80039ac:	4649      	mov	r1, r9
 80039ae:	f7fc ff77 	bl	80008a0 <__aeabi_ddiv>
 80039b2:	e79d      	b.n	80038f0 <_strtod_l+0x380>
 80039b4:	9b07      	ldr	r3, [sp, #28]
 80039b6:	1ba6      	subs	r6, r4, r6
 80039b8:	441e      	add	r6, r3
 80039ba:	2e00      	cmp	r6, #0
 80039bc:	dd71      	ble.n	8003aa2 <_strtod_l+0x532>
 80039be:	f016 030f 	ands.w	r3, r6, #15
 80039c2:	d00a      	beq.n	80039da <_strtod_l+0x46a>
 80039c4:	494e      	ldr	r1, [pc, #312]	; (8003b00 <_strtod_l+0x590>)
 80039c6:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 80039ca:	4642      	mov	r2, r8
 80039cc:	464b      	mov	r3, r9
 80039ce:	e9d1 0100 	ldrd	r0, r1, [r1]
 80039d2:	f7fc fe3b 	bl	800064c <__aeabi_dmul>
 80039d6:	4680      	mov	r8, r0
 80039d8:	4689      	mov	r9, r1
 80039da:	f036 060f 	bics.w	r6, r6, #15
 80039de:	d050      	beq.n	8003a82 <_strtod_l+0x512>
 80039e0:	f5b6 7f9a 	cmp.w	r6, #308	; 0x134
 80039e4:	dd27      	ble.n	8003a36 <_strtod_l+0x4c6>
 80039e6:	f04f 0b00 	mov.w	fp, #0
 80039ea:	f8cd b010 	str.w	fp, [sp, #16]
 80039ee:	f8cd b020 	str.w	fp, [sp, #32]
 80039f2:	f8cd b018 	str.w	fp, [sp, #24]
 80039f6:	2322      	movs	r3, #34	; 0x22
 80039f8:	f8df 910c 	ldr.w	r9, [pc, #268]	; 8003b08 <_strtod_l+0x598>
 80039fc:	f8ca 3000 	str.w	r3, [sl]
 8003a00:	f04f 0800 	mov.w	r8, #0
 8003a04:	9b08      	ldr	r3, [sp, #32]
 8003a06:	2b00      	cmp	r3, #0
 8003a08:	f43f adf3 	beq.w	80035f2 <_strtod_l+0x82>
 8003a0c:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003a0e:	4650      	mov	r0, sl
 8003a10:	f002 f932 	bl	8005c78 <_Bfree>
 8003a14:	9906      	ldr	r1, [sp, #24]
 8003a16:	4650      	mov	r0, sl
 8003a18:	f002 f92e 	bl	8005c78 <_Bfree>
 8003a1c:	9904      	ldr	r1, [sp, #16]
 8003a1e:	4650      	mov	r0, sl
 8003a20:	f002 f92a 	bl	8005c78 <_Bfree>
 8003a24:	9908      	ldr	r1, [sp, #32]
 8003a26:	4650      	mov	r0, sl
 8003a28:	f002 f926 	bl	8005c78 <_Bfree>
 8003a2c:	4659      	mov	r1, fp
 8003a2e:	4650      	mov	r0, sl
 8003a30:	f002 f922 	bl	8005c78 <_Bfree>
 8003a34:	e5dd      	b.n	80035f2 <_strtod_l+0x82>
 8003a36:	2300      	movs	r3, #0
 8003a38:	1136      	asrs	r6, r6, #4
 8003a3a:	4640      	mov	r0, r8
 8003a3c:	4649      	mov	r1, r9
 8003a3e:	461f      	mov	r7, r3
 8003a40:	2e01      	cmp	r6, #1
 8003a42:	dc21      	bgt.n	8003a88 <_strtod_l+0x518>
 8003a44:	b10b      	cbz	r3, 8003a4a <_strtod_l+0x4da>
 8003a46:	4680      	mov	r8, r0
 8003a48:	4689      	mov	r9, r1
 8003a4a:	4b2e      	ldr	r3, [pc, #184]	; (8003b04 <_strtod_l+0x594>)
 8003a4c:	f1a9 7954 	sub.w	r9, r9, #55574528	; 0x3500000
 8003a50:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 8003a54:	4642      	mov	r2, r8
 8003a56:	464b      	mov	r3, r9
 8003a58:	e9d7 0100 	ldrd	r0, r1, [r7]
 8003a5c:	f7fc fdf6 	bl	800064c <__aeabi_dmul>
 8003a60:	4b29      	ldr	r3, [pc, #164]	; (8003b08 <_strtod_l+0x598>)
 8003a62:	460a      	mov	r2, r1
 8003a64:	400b      	ands	r3, r1
 8003a66:	4929      	ldr	r1, [pc, #164]	; (8003b0c <_strtod_l+0x59c>)
 8003a68:	428b      	cmp	r3, r1
 8003a6a:	4680      	mov	r8, r0
 8003a6c:	d8bb      	bhi.n	80039e6 <_strtod_l+0x476>
 8003a6e:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 8003a72:	428b      	cmp	r3, r1
 8003a74:	bf86      	itte	hi
 8003a76:	f8df 9098 	ldrhi.w	r9, [pc, #152]	; 8003b10 <_strtod_l+0x5a0>
 8003a7a:	f04f 38ff 	movhi.w	r8, #4294967295
 8003a7e:	f102 7954 	addls.w	r9, r2, #55574528	; 0x3500000
 8003a82:	2300      	movs	r3, #0
 8003a84:	9305      	str	r3, [sp, #20]
 8003a86:	e07e      	b.n	8003b86 <_strtod_l+0x616>
 8003a88:	07f2      	lsls	r2, r6, #31
 8003a8a:	d507      	bpl.n	8003a9c <_strtod_l+0x52c>
 8003a8c:	4b1d      	ldr	r3, [pc, #116]	; (8003b04 <_strtod_l+0x594>)
 8003a8e:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8003a92:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003a96:	f7fc fdd9 	bl	800064c <__aeabi_dmul>
 8003a9a:	2301      	movs	r3, #1
 8003a9c:	3701      	adds	r7, #1
 8003a9e:	1076      	asrs	r6, r6, #1
 8003aa0:	e7ce      	b.n	8003a40 <_strtod_l+0x4d0>
 8003aa2:	d0ee      	beq.n	8003a82 <_strtod_l+0x512>
 8003aa4:	4276      	negs	r6, r6
 8003aa6:	f016 020f 	ands.w	r2, r6, #15
 8003aaa:	d00a      	beq.n	8003ac2 <_strtod_l+0x552>
 8003aac:	4b14      	ldr	r3, [pc, #80]	; (8003b00 <_strtod_l+0x590>)
 8003aae:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003ab2:	4640      	mov	r0, r8
 8003ab4:	4649      	mov	r1, r9
 8003ab6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003aba:	f7fc fef1 	bl	80008a0 <__aeabi_ddiv>
 8003abe:	4680      	mov	r8, r0
 8003ac0:	4689      	mov	r9, r1
 8003ac2:	1136      	asrs	r6, r6, #4
 8003ac4:	d0dd      	beq.n	8003a82 <_strtod_l+0x512>
 8003ac6:	2e1f      	cmp	r6, #31
 8003ac8:	dd24      	ble.n	8003b14 <_strtod_l+0x5a4>
 8003aca:	f04f 0b00 	mov.w	fp, #0
 8003ace:	f8cd b010 	str.w	fp, [sp, #16]
 8003ad2:	f8cd b020 	str.w	fp, [sp, #32]
 8003ad6:	f8cd b018 	str.w	fp, [sp, #24]
 8003ada:	2322      	movs	r3, #34	; 0x22
 8003adc:	f04f 0800 	mov.w	r8, #0
 8003ae0:	f04f 0900 	mov.w	r9, #0
 8003ae4:	f8ca 3000 	str.w	r3, [sl]
 8003ae8:	e78c      	b.n	8003a04 <_strtod_l+0x494>
 8003aea:	bf00      	nop
 8003aec:	08007cdd 	.word	0x08007cdd
 8003af0:	08007d1c 	.word	0x08007d1c
 8003af4:	08007cd5 	.word	0x08007cd5
 8003af8:	08007f10 	.word	0x08007f10
 8003afc:	08007e0b 	.word	0x08007e0b
 8003b00:	08008090 	.word	0x08008090
 8003b04:	08008068 	.word	0x08008068
 8003b08:	7ff00000 	.word	0x7ff00000
 8003b0c:	7ca00000 	.word	0x7ca00000
 8003b10:	7fefffff 	.word	0x7fefffff
 8003b14:	f016 0310 	ands.w	r3, r6, #16
 8003b18:	bf18      	it	ne
 8003b1a:	236a      	movne	r3, #106	; 0x6a
 8003b1c:	4fb3      	ldr	r7, [pc, #716]	; (8003dec <_strtod_l+0x87c>)
 8003b1e:	9305      	str	r3, [sp, #20]
 8003b20:	4640      	mov	r0, r8
 8003b22:	4649      	mov	r1, r9
 8003b24:	2300      	movs	r3, #0
 8003b26:	07f2      	lsls	r2, r6, #31
 8003b28:	d504      	bpl.n	8003b34 <_strtod_l+0x5c4>
 8003b2a:	e9d7 2300 	ldrd	r2, r3, [r7]
 8003b2e:	f7fc fd8d 	bl	800064c <__aeabi_dmul>
 8003b32:	2301      	movs	r3, #1
 8003b34:	1076      	asrs	r6, r6, #1
 8003b36:	f107 0708 	add.w	r7, r7, #8
 8003b3a:	d1f4      	bne.n	8003b26 <_strtod_l+0x5b6>
 8003b3c:	b10b      	cbz	r3, 8003b42 <_strtod_l+0x5d2>
 8003b3e:	4680      	mov	r8, r0
 8003b40:	4689      	mov	r9, r1
 8003b42:	9b05      	ldr	r3, [sp, #20]
 8003b44:	b1bb      	cbz	r3, 8003b76 <_strtod_l+0x606>
 8003b46:	f3c9 530a 	ubfx	r3, r9, #20, #11
 8003b4a:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8003b4e:	2b00      	cmp	r3, #0
 8003b50:	4649      	mov	r1, r9
 8003b52:	dd10      	ble.n	8003b76 <_strtod_l+0x606>
 8003b54:	2b1f      	cmp	r3, #31
 8003b56:	f340 8128 	ble.w	8003daa <_strtod_l+0x83a>
 8003b5a:	2b34      	cmp	r3, #52	; 0x34
 8003b5c:	bfde      	ittt	le
 8003b5e:	3b20      	suble	r3, #32
 8003b60:	f04f 32ff 	movle.w	r2, #4294967295
 8003b64:	fa02 f303 	lslle.w	r3, r2, r3
 8003b68:	f04f 0800 	mov.w	r8, #0
 8003b6c:	bfcc      	ite	gt
 8003b6e:	f04f 795c 	movgt.w	r9, #57671680	; 0x3700000
 8003b72:	ea03 0901 	andle.w	r9, r3, r1
 8003b76:	2200      	movs	r2, #0
 8003b78:	2300      	movs	r3, #0
 8003b7a:	4640      	mov	r0, r8
 8003b7c:	4649      	mov	r1, r9
 8003b7e:	f7fc ffcd 	bl	8000b1c <__aeabi_dcmpeq>
 8003b82:	2800      	cmp	r0, #0
 8003b84:	d1a1      	bne.n	8003aca <_strtod_l+0x55a>
 8003b86:	9b06      	ldr	r3, [sp, #24]
 8003b88:	9300      	str	r3, [sp, #0]
 8003b8a:	9908      	ldr	r1, [sp, #32]
 8003b8c:	4623      	mov	r3, r4
 8003b8e:	465a      	mov	r2, fp
 8003b90:	4650      	mov	r0, sl
 8003b92:	f002 f8dd 	bl	8005d50 <__s2b>
 8003b96:	9008      	str	r0, [sp, #32]
 8003b98:	2800      	cmp	r0, #0
 8003b9a:	f43f af24 	beq.w	80039e6 <_strtod_l+0x476>
 8003b9e:	9b04      	ldr	r3, [sp, #16]
 8003ba0:	1b5d      	subs	r5, r3, r5
 8003ba2:	9b07      	ldr	r3, [sp, #28]
 8003ba4:	2b00      	cmp	r3, #0
 8003ba6:	bfb4      	ite	lt
 8003ba8:	462b      	movlt	r3, r5
 8003baa:	2300      	movge	r3, #0
 8003bac:	930e      	str	r3, [sp, #56]	; 0x38
 8003bae:	9b07      	ldr	r3, [sp, #28]
 8003bb0:	f04f 0b00 	mov.w	fp, #0
 8003bb4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8003bb8:	9316      	str	r3, [sp, #88]	; 0x58
 8003bba:	f8cd b010 	str.w	fp, [sp, #16]
 8003bbe:	9b08      	ldr	r3, [sp, #32]
 8003bc0:	4650      	mov	r0, sl
 8003bc2:	6859      	ldr	r1, [r3, #4]
 8003bc4:	f002 f818 	bl	8005bf8 <_Balloc>
 8003bc8:	9006      	str	r0, [sp, #24]
 8003bca:	2800      	cmp	r0, #0
 8003bcc:	f43f af13 	beq.w	80039f6 <_strtod_l+0x486>
 8003bd0:	9b08      	ldr	r3, [sp, #32]
 8003bd2:	691a      	ldr	r2, [r3, #16]
 8003bd4:	3202      	adds	r2, #2
 8003bd6:	f103 010c 	add.w	r1, r3, #12
 8003bda:	0092      	lsls	r2, r2, #2
 8003bdc:	300c      	adds	r0, #12
 8003bde:	f7fe fb20 	bl	8002222 <memcpy>
 8003be2:	ab1e      	add	r3, sp, #120	; 0x78
 8003be4:	9301      	str	r3, [sp, #4]
 8003be6:	ab1d      	add	r3, sp, #116	; 0x74
 8003be8:	9300      	str	r3, [sp, #0]
 8003bea:	4642      	mov	r2, r8
 8003bec:	464b      	mov	r3, r9
 8003bee:	4650      	mov	r0, sl
 8003bf0:	e9cd 890a 	strd	r8, r9, [sp, #40]	; 0x28
 8003bf4:	f002 fbe6 	bl	80063c4 <__d2b>
 8003bf8:	901c      	str	r0, [sp, #112]	; 0x70
 8003bfa:	2800      	cmp	r0, #0
 8003bfc:	f43f aefb 	beq.w	80039f6 <_strtod_l+0x486>
 8003c00:	2101      	movs	r1, #1
 8003c02:	4650      	mov	r0, sl
 8003c04:	f002 f93c 	bl	8005e80 <__i2b>
 8003c08:	9004      	str	r0, [sp, #16]
 8003c0a:	4603      	mov	r3, r0
 8003c0c:	2800      	cmp	r0, #0
 8003c0e:	f43f aef2 	beq.w	80039f6 <_strtod_l+0x486>
 8003c12:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8003c14:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8003c16:	2d00      	cmp	r5, #0
 8003c18:	bfab      	itete	ge
 8003c1a:	9b0e      	ldrge	r3, [sp, #56]	; 0x38
 8003c1c:	9b16      	ldrlt	r3, [sp, #88]	; 0x58
 8003c1e:	9c16      	ldrge	r4, [sp, #88]	; 0x58
 8003c20:	9e0e      	ldrlt	r6, [sp, #56]	; 0x38
 8003c22:	bfac      	ite	ge
 8003c24:	18ee      	addge	r6, r5, r3
 8003c26:	1b5c      	sublt	r4, r3, r5
 8003c28:	9b05      	ldr	r3, [sp, #20]
 8003c2a:	1aed      	subs	r5, r5, r3
 8003c2c:	4415      	add	r5, r2
 8003c2e:	4b70      	ldr	r3, [pc, #448]	; (8003df0 <_strtod_l+0x880>)
 8003c30:	3d01      	subs	r5, #1
 8003c32:	429d      	cmp	r5, r3
 8003c34:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 8003c38:	f280 80c9 	bge.w	8003dce <_strtod_l+0x85e>
 8003c3c:	1b5b      	subs	r3, r3, r5
 8003c3e:	2b1f      	cmp	r3, #31
 8003c40:	eba2 0203 	sub.w	r2, r2, r3
 8003c44:	f04f 0701 	mov.w	r7, #1
 8003c48:	f300 80b6 	bgt.w	8003db8 <_strtod_l+0x848>
 8003c4c:	fa07 f303 	lsl.w	r3, r7, r3
 8003c50:	930f      	str	r3, [sp, #60]	; 0x3c
 8003c52:	2500      	movs	r5, #0
 8003c54:	18b7      	adds	r7, r6, r2
 8003c56:	9b05      	ldr	r3, [sp, #20]
 8003c58:	42be      	cmp	r6, r7
 8003c5a:	4414      	add	r4, r2
 8003c5c:	441c      	add	r4, r3
 8003c5e:	4633      	mov	r3, r6
 8003c60:	bfa8      	it	ge
 8003c62:	463b      	movge	r3, r7
 8003c64:	42a3      	cmp	r3, r4
 8003c66:	bfa8      	it	ge
 8003c68:	4623      	movge	r3, r4
 8003c6a:	2b00      	cmp	r3, #0
 8003c6c:	bfc2      	ittt	gt
 8003c6e:	1aff      	subgt	r7, r7, r3
 8003c70:	1ae4      	subgt	r4, r4, r3
 8003c72:	1af6      	subgt	r6, r6, r3
 8003c74:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003c76:	2b00      	cmp	r3, #0
 8003c78:	dd17      	ble.n	8003caa <_strtod_l+0x73a>
 8003c7a:	9904      	ldr	r1, [sp, #16]
 8003c7c:	461a      	mov	r2, r3
 8003c7e:	4650      	mov	r0, sl
 8003c80:	f002 f9ba 	bl	8005ff8 <__pow5mult>
 8003c84:	9004      	str	r0, [sp, #16]
 8003c86:	2800      	cmp	r0, #0
 8003c88:	f43f aeb5 	beq.w	80039f6 <_strtod_l+0x486>
 8003c8c:	4601      	mov	r1, r0
 8003c8e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8003c90:	4650      	mov	r0, sl
 8003c92:	f002 f90b 	bl	8005eac <__multiply>
 8003c96:	9009      	str	r0, [sp, #36]	; 0x24
 8003c98:	2800      	cmp	r0, #0
 8003c9a:	f43f aeac 	beq.w	80039f6 <_strtod_l+0x486>
 8003c9e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003ca0:	4650      	mov	r0, sl
 8003ca2:	f001 ffe9 	bl	8005c78 <_Bfree>
 8003ca6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003ca8:	931c      	str	r3, [sp, #112]	; 0x70
 8003caa:	2f00      	cmp	r7, #0
 8003cac:	f300 8093 	bgt.w	8003dd6 <_strtod_l+0x866>
 8003cb0:	9b07      	ldr	r3, [sp, #28]
 8003cb2:	2b00      	cmp	r3, #0
 8003cb4:	dd08      	ble.n	8003cc8 <_strtod_l+0x758>
 8003cb6:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8003cb8:	9906      	ldr	r1, [sp, #24]
 8003cba:	4650      	mov	r0, sl
 8003cbc:	f002 f99c 	bl	8005ff8 <__pow5mult>
 8003cc0:	9006      	str	r0, [sp, #24]
 8003cc2:	2800      	cmp	r0, #0
 8003cc4:	f43f ae97 	beq.w	80039f6 <_strtod_l+0x486>
 8003cc8:	2c00      	cmp	r4, #0
 8003cca:	dd08      	ble.n	8003cde <_strtod_l+0x76e>
 8003ccc:	9906      	ldr	r1, [sp, #24]
 8003cce:	4622      	mov	r2, r4
 8003cd0:	4650      	mov	r0, sl
 8003cd2:	f002 f9eb 	bl	80060ac <__lshift>
 8003cd6:	9006      	str	r0, [sp, #24]
 8003cd8:	2800      	cmp	r0, #0
 8003cda:	f43f ae8c 	beq.w	80039f6 <_strtod_l+0x486>
 8003cde:	2e00      	cmp	r6, #0
 8003ce0:	dd08      	ble.n	8003cf4 <_strtod_l+0x784>
 8003ce2:	9904      	ldr	r1, [sp, #16]
 8003ce4:	4632      	mov	r2, r6
 8003ce6:	4650      	mov	r0, sl
 8003ce8:	f002 f9e0 	bl	80060ac <__lshift>
 8003cec:	9004      	str	r0, [sp, #16]
 8003cee:	2800      	cmp	r0, #0
 8003cf0:	f43f ae81 	beq.w	80039f6 <_strtod_l+0x486>
 8003cf4:	9a06      	ldr	r2, [sp, #24]
 8003cf6:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003cf8:	4650      	mov	r0, sl
 8003cfa:	f002 fa5f 	bl	80061bc <__mdiff>
 8003cfe:	4683      	mov	fp, r0
 8003d00:	2800      	cmp	r0, #0
 8003d02:	f43f ae78 	beq.w	80039f6 <_strtod_l+0x486>
 8003d06:	2400      	movs	r4, #0
 8003d08:	68c3      	ldr	r3, [r0, #12]
 8003d0a:	9904      	ldr	r1, [sp, #16]
 8003d0c:	60c4      	str	r4, [r0, #12]
 8003d0e:	930d      	str	r3, [sp, #52]	; 0x34
 8003d10:	f002 fa38 	bl	8006184 <__mcmp>
 8003d14:	42a0      	cmp	r0, r4
 8003d16:	da71      	bge.n	8003dfc <_strtod_l+0x88c>
 8003d18:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003d1a:	ea53 0308 	orrs.w	r3, r3, r8
 8003d1e:	f040 8097 	bne.w	8003e50 <_strtod_l+0x8e0>
 8003d22:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003d26:	2b00      	cmp	r3, #0
 8003d28:	f040 8092 	bne.w	8003e50 <_strtod_l+0x8e0>
 8003d2c:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8003d30:	0d1b      	lsrs	r3, r3, #20
 8003d32:	051b      	lsls	r3, r3, #20
 8003d34:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 8003d38:	f240 808a 	bls.w	8003e50 <_strtod_l+0x8e0>
 8003d3c:	f8db 3014 	ldr.w	r3, [fp, #20]
 8003d40:	b923      	cbnz	r3, 8003d4c <_strtod_l+0x7dc>
 8003d42:	f8db 3010 	ldr.w	r3, [fp, #16]
 8003d46:	2b01      	cmp	r3, #1
 8003d48:	f340 8082 	ble.w	8003e50 <_strtod_l+0x8e0>
 8003d4c:	4659      	mov	r1, fp
 8003d4e:	2201      	movs	r2, #1
 8003d50:	4650      	mov	r0, sl
 8003d52:	f002 f9ab 	bl	80060ac <__lshift>
 8003d56:	9904      	ldr	r1, [sp, #16]
 8003d58:	4683      	mov	fp, r0
 8003d5a:	f002 fa13 	bl	8006184 <__mcmp>
 8003d5e:	2800      	cmp	r0, #0
 8003d60:	dd76      	ble.n	8003e50 <_strtod_l+0x8e0>
 8003d62:	9905      	ldr	r1, [sp, #20]
 8003d64:	4a23      	ldr	r2, [pc, #140]	; (8003df4 <_strtod_l+0x884>)
 8003d66:	464b      	mov	r3, r9
 8003d68:	2900      	cmp	r1, #0
 8003d6a:	f000 8092 	beq.w	8003e92 <_strtod_l+0x922>
 8003d6e:	ea02 0109 	and.w	r1, r2, r9
 8003d72:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 8003d76:	f300 808c 	bgt.w	8003e92 <_strtod_l+0x922>
 8003d7a:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 8003d7e:	f77f aeac 	ble.w	8003ada <_strtod_l+0x56a>
 8003d82:	4a1d      	ldr	r2, [pc, #116]	; (8003df8 <_strtod_l+0x888>)
 8003d84:	2300      	movs	r3, #0
 8003d86:	e9cd 3214 	strd	r3, r2, [sp, #80]	; 0x50
 8003d8a:	4640      	mov	r0, r8
 8003d8c:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 8003d90:	4649      	mov	r1, r9
 8003d92:	f7fc fc5b 	bl	800064c <__aeabi_dmul>
 8003d96:	460b      	mov	r3, r1
 8003d98:	4303      	orrs	r3, r0
 8003d9a:	bf08      	it	eq
 8003d9c:	2322      	moveq	r3, #34	; 0x22
 8003d9e:	4680      	mov	r8, r0
 8003da0:	4689      	mov	r9, r1
 8003da2:	bf08      	it	eq
 8003da4:	f8ca 3000 	streq.w	r3, [sl]
 8003da8:	e630      	b.n	8003a0c <_strtod_l+0x49c>
 8003daa:	f04f 32ff 	mov.w	r2, #4294967295
 8003dae:	fa02 f303 	lsl.w	r3, r2, r3
 8003db2:	ea03 0808 	and.w	r8, r3, r8
 8003db6:	e6de      	b.n	8003b76 <_strtod_l+0x606>
 8003db8:	f1c5 457f 	rsb	r5, r5, #4278190080	; 0xff000000
 8003dbc:	f505 057f 	add.w	r5, r5, #16711680	; 0xff0000
 8003dc0:	f505 457b 	add.w	r5, r5, #64256	; 0xfb00
 8003dc4:	35e2      	adds	r5, #226	; 0xe2
 8003dc6:	fa07 f505 	lsl.w	r5, r7, r5
 8003dca:	970f      	str	r7, [sp, #60]	; 0x3c
 8003dcc:	e742      	b.n	8003c54 <_strtod_l+0x6e4>
 8003dce:	2301      	movs	r3, #1
 8003dd0:	2500      	movs	r5, #0
 8003dd2:	930f      	str	r3, [sp, #60]	; 0x3c
 8003dd4:	e73e      	b.n	8003c54 <_strtod_l+0x6e4>
 8003dd6:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003dd8:	463a      	mov	r2, r7
 8003dda:	4650      	mov	r0, sl
 8003ddc:	f002 f966 	bl	80060ac <__lshift>
 8003de0:	901c      	str	r0, [sp, #112]	; 0x70
 8003de2:	2800      	cmp	r0, #0
 8003de4:	f47f af64 	bne.w	8003cb0 <_strtod_l+0x740>
 8003de8:	e605      	b.n	80039f6 <_strtod_l+0x486>
 8003dea:	bf00      	nop
 8003dec:	08007d30 	.word	0x08007d30
 8003df0:	fffffc02 	.word	0xfffffc02
 8003df4:	7ff00000 	.word	0x7ff00000
 8003df8:	39500000 	.word	0x39500000
 8003dfc:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 8003e00:	d166      	bne.n	8003ed0 <_strtod_l+0x960>
 8003e02:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8003e04:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003e08:	b35a      	cbz	r2, 8003e62 <_strtod_l+0x8f2>
 8003e0a:	4a9d      	ldr	r2, [pc, #628]	; (8004080 <_strtod_l+0xb10>)
 8003e0c:	4293      	cmp	r3, r2
 8003e0e:	d12c      	bne.n	8003e6a <_strtod_l+0x8fa>
 8003e10:	9b05      	ldr	r3, [sp, #20]
 8003e12:	4640      	mov	r0, r8
 8003e14:	b303      	cbz	r3, 8003e58 <_strtod_l+0x8e8>
 8003e16:	4a9b      	ldr	r2, [pc, #620]	; (8004084 <_strtod_l+0xb14>)
 8003e18:	464b      	mov	r3, r9
 8003e1a:	401a      	ands	r2, r3
 8003e1c:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
 8003e20:	f04f 31ff 	mov.w	r1, #4294967295
 8003e24:	d81b      	bhi.n	8003e5e <_strtod_l+0x8ee>
 8003e26:	0d12      	lsrs	r2, r2, #20
 8003e28:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 8003e2c:	fa01 f303 	lsl.w	r3, r1, r3
 8003e30:	4298      	cmp	r0, r3
 8003e32:	d11a      	bne.n	8003e6a <_strtod_l+0x8fa>
 8003e34:	4b94      	ldr	r3, [pc, #592]	; (8004088 <_strtod_l+0xb18>)
 8003e36:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003e38:	429a      	cmp	r2, r3
 8003e3a:	d102      	bne.n	8003e42 <_strtod_l+0x8d2>
 8003e3c:	3001      	adds	r0, #1
 8003e3e:	f43f adda 	beq.w	80039f6 <_strtod_l+0x486>
 8003e42:	4b90      	ldr	r3, [pc, #576]	; (8004084 <_strtod_l+0xb14>)
 8003e44:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003e46:	401a      	ands	r2, r3
 8003e48:	f502 1980 	add.w	r9, r2, #1048576	; 0x100000
 8003e4c:	f04f 0800 	mov.w	r8, #0
 8003e50:	9b05      	ldr	r3, [sp, #20]
 8003e52:	2b00      	cmp	r3, #0
 8003e54:	d195      	bne.n	8003d82 <_strtod_l+0x812>
 8003e56:	e5d9      	b.n	8003a0c <_strtod_l+0x49c>
 8003e58:	f04f 33ff 	mov.w	r3, #4294967295
 8003e5c:	e7e8      	b.n	8003e30 <_strtod_l+0x8c0>
 8003e5e:	460b      	mov	r3, r1
 8003e60:	e7e6      	b.n	8003e30 <_strtod_l+0x8c0>
 8003e62:	ea53 0308 	orrs.w	r3, r3, r8
 8003e66:	f43f af7c 	beq.w	8003d62 <_strtod_l+0x7f2>
 8003e6a:	b1e5      	cbz	r5, 8003ea6 <_strtod_l+0x936>
 8003e6c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003e6e:	421d      	tst	r5, r3
 8003e70:	d0ee      	beq.n	8003e50 <_strtod_l+0x8e0>
 8003e72:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003e74:	9a05      	ldr	r2, [sp, #20]
 8003e76:	4640      	mov	r0, r8
 8003e78:	4649      	mov	r1, r9
 8003e7a:	b1c3      	cbz	r3, 8003eae <_strtod_l+0x93e>
 8003e7c:	f7ff fb55 	bl	800352a <sulp>
 8003e80:	4602      	mov	r2, r0
 8003e82:	460b      	mov	r3, r1
 8003e84:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8003e88:	f7fc fa2a 	bl	80002e0 <__adddf3>
 8003e8c:	4680      	mov	r8, r0
 8003e8e:	4689      	mov	r9, r1
 8003e90:	e7de      	b.n	8003e50 <_strtod_l+0x8e0>
 8003e92:	4013      	ands	r3, r2
 8003e94:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 8003e98:	ea6f 5913 	mvn.w	r9, r3, lsr #20
 8003e9c:	ea6f 5909 	mvn.w	r9, r9, lsl #20
 8003ea0:	f04f 38ff 	mov.w	r8, #4294967295
 8003ea4:	e7d4      	b.n	8003e50 <_strtod_l+0x8e0>
 8003ea6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8003ea8:	ea13 0f08 	tst.w	r3, r8
 8003eac:	e7e0      	b.n	8003e70 <_strtod_l+0x900>
 8003eae:	f7ff fb3c 	bl	800352a <sulp>
 8003eb2:	4602      	mov	r2, r0
 8003eb4:	460b      	mov	r3, r1
 8003eb6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8003eba:	f7fc fa0f 	bl	80002dc <__aeabi_dsub>
 8003ebe:	2200      	movs	r2, #0
 8003ec0:	2300      	movs	r3, #0
 8003ec2:	4680      	mov	r8, r0
 8003ec4:	4689      	mov	r9, r1
 8003ec6:	f7fc fe29 	bl	8000b1c <__aeabi_dcmpeq>
 8003eca:	2800      	cmp	r0, #0
 8003ecc:	d0c0      	beq.n	8003e50 <_strtod_l+0x8e0>
 8003ece:	e604      	b.n	8003ada <_strtod_l+0x56a>
 8003ed0:	9904      	ldr	r1, [sp, #16]
 8003ed2:	4658      	mov	r0, fp
 8003ed4:	f002 fad2 	bl	800647c <__ratio>
 8003ed8:	2200      	movs	r2, #0
 8003eda:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003ede:	4606      	mov	r6, r0
 8003ee0:	460f      	mov	r7, r1
 8003ee2:	f7fc fe2f 	bl	8000b44 <__aeabi_dcmple>
 8003ee6:	2800      	cmp	r0, #0
 8003ee8:	d075      	beq.n	8003fd6 <_strtod_l+0xa66>
 8003eea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003eec:	2b00      	cmp	r3, #0
 8003eee:	d047      	beq.n	8003f80 <_strtod_l+0xa10>
 8003ef0:	4f66      	ldr	r7, [pc, #408]	; (800408c <_strtod_l+0xb1c>)
 8003ef2:	2600      	movs	r6, #0
 8003ef4:	4d65      	ldr	r5, [pc, #404]	; (800408c <_strtod_l+0xb1c>)
 8003ef6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003ef8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8003efc:	0d1b      	lsrs	r3, r3, #20
 8003efe:	051b      	lsls	r3, r3, #20
 8003f00:	930f      	str	r3, [sp, #60]	; 0x3c
 8003f02:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8003f04:	4b62      	ldr	r3, [pc, #392]	; (8004090 <_strtod_l+0xb20>)
 8003f06:	429a      	cmp	r2, r3
 8003f08:	f040 80ca 	bne.w	80040a0 <_strtod_l+0xb30>
 8003f0c:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8003f10:	e9cd 2314 	strd	r2, r3, [sp, #80]	; 0x50
 8003f14:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003f16:	f1a3 7954 	sub.w	r9, r3, #55574528	; 0x3500000
 8003f1a:	4640      	mov	r0, r8
 8003f1c:	4649      	mov	r1, r9
 8003f1e:	f002 f9d7 	bl	80062d0 <__ulp>
 8003f22:	4602      	mov	r2, r0
 8003f24:	460b      	mov	r3, r1
 8003f26:	4630      	mov	r0, r6
 8003f28:	4639      	mov	r1, r7
 8003f2a:	f7fc fb8f 	bl	800064c <__aeabi_dmul>
 8003f2e:	4642      	mov	r2, r8
 8003f30:	464b      	mov	r3, r9
 8003f32:	f7fc f9d5 	bl	80002e0 <__adddf3>
 8003f36:	460b      	mov	r3, r1
 8003f38:	4952      	ldr	r1, [pc, #328]	; (8004084 <_strtod_l+0xb14>)
 8003f3a:	4a56      	ldr	r2, [pc, #344]	; (8004094 <_strtod_l+0xb24>)
 8003f3c:	4019      	ands	r1, r3
 8003f3e:	4291      	cmp	r1, r2
 8003f40:	4680      	mov	r8, r0
 8003f42:	d95e      	bls.n	8004002 <_strtod_l+0xa92>
 8003f44:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003f46:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 8003f4a:	4293      	cmp	r3, r2
 8003f4c:	d103      	bne.n	8003f56 <_strtod_l+0x9e6>
 8003f4e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003f50:	3301      	adds	r3, #1
 8003f52:	f43f ad50 	beq.w	80039f6 <_strtod_l+0x486>
 8003f56:	f8df 9130 	ldr.w	r9, [pc, #304]	; 8004088 <_strtod_l+0xb18>
 8003f5a:	f04f 38ff 	mov.w	r8, #4294967295
 8003f5e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003f60:	4650      	mov	r0, sl
 8003f62:	f001 fe89 	bl	8005c78 <_Bfree>
 8003f66:	9906      	ldr	r1, [sp, #24]
 8003f68:	4650      	mov	r0, sl
 8003f6a:	f001 fe85 	bl	8005c78 <_Bfree>
 8003f6e:	9904      	ldr	r1, [sp, #16]
 8003f70:	4650      	mov	r0, sl
 8003f72:	f001 fe81 	bl	8005c78 <_Bfree>
 8003f76:	4659      	mov	r1, fp
 8003f78:	4650      	mov	r0, sl
 8003f7a:	f001 fe7d 	bl	8005c78 <_Bfree>
 8003f7e:	e61e      	b.n	8003bbe <_strtod_l+0x64e>
 8003f80:	f1b8 0f00 	cmp.w	r8, #0
 8003f84:	d119      	bne.n	8003fba <_strtod_l+0xa4a>
 8003f86:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003f88:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003f8c:	b9e3      	cbnz	r3, 8003fc8 <_strtod_l+0xa58>
 8003f8e:	4b3f      	ldr	r3, [pc, #252]	; (800408c <_strtod_l+0xb1c>)
 8003f90:	2200      	movs	r2, #0
 8003f92:	4630      	mov	r0, r6
 8003f94:	4639      	mov	r1, r7
 8003f96:	f7fc fdcb 	bl	8000b30 <__aeabi_dcmplt>
 8003f9a:	b9c8      	cbnz	r0, 8003fd0 <_strtod_l+0xa60>
 8003f9c:	4b3e      	ldr	r3, [pc, #248]	; (8004098 <_strtod_l+0xb28>)
 8003f9e:	2200      	movs	r2, #0
 8003fa0:	4630      	mov	r0, r6
 8003fa2:	4639      	mov	r1, r7
 8003fa4:	f7fc fb52 	bl	800064c <__aeabi_dmul>
 8003fa8:	4604      	mov	r4, r0
 8003faa:	460d      	mov	r5, r1
 8003fac:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 8003fb0:	9418      	str	r4, [sp, #96]	; 0x60
 8003fb2:	9319      	str	r3, [sp, #100]	; 0x64
 8003fb4:	e9dd 6718 	ldrd	r6, r7, [sp, #96]	; 0x60
 8003fb8:	e79d      	b.n	8003ef6 <_strtod_l+0x986>
 8003fba:	f1b8 0f01 	cmp.w	r8, #1
 8003fbe:	d103      	bne.n	8003fc8 <_strtod_l+0xa58>
 8003fc0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003fc2:	2b00      	cmp	r3, #0
 8003fc4:	f43f ad89 	beq.w	8003ada <_strtod_l+0x56a>
 8003fc8:	4f34      	ldr	r7, [pc, #208]	; (800409c <_strtod_l+0xb2c>)
 8003fca:	2600      	movs	r6, #0
 8003fcc:	2400      	movs	r4, #0
 8003fce:	e791      	b.n	8003ef4 <_strtod_l+0x984>
 8003fd0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8003fd2:	4d31      	ldr	r5, [pc, #196]	; (8004098 <_strtod_l+0xb28>)
 8003fd4:	e7ea      	b.n	8003fac <_strtod_l+0xa3c>
 8003fd6:	4b30      	ldr	r3, [pc, #192]	; (8004098 <_strtod_l+0xb28>)
 8003fd8:	2200      	movs	r2, #0
 8003fda:	4630      	mov	r0, r6
 8003fdc:	4639      	mov	r1, r7
 8003fde:	f7fc fb35 	bl	800064c <__aeabi_dmul>
 8003fe2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003fe4:	4604      	mov	r4, r0
 8003fe6:	460d      	mov	r5, r1
 8003fe8:	b933      	cbnz	r3, 8003ff8 <_strtod_l+0xa88>
 8003fea:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8003fee:	9010      	str	r0, [sp, #64]	; 0x40
 8003ff0:	9311      	str	r3, [sp, #68]	; 0x44
 8003ff2:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 8003ff6:	e77e      	b.n	8003ef6 <_strtod_l+0x986>
 8003ff8:	4602      	mov	r2, r0
 8003ffa:	460b      	mov	r3, r1
 8003ffc:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 8004000:	e7f7      	b.n	8003ff2 <_strtod_l+0xa82>
 8004002:	f103 7954 	add.w	r9, r3, #55574528	; 0x3500000
 8004006:	9b05      	ldr	r3, [sp, #20]
 8004008:	2b00      	cmp	r3, #0
 800400a:	d1a8      	bne.n	8003f5e <_strtod_l+0x9ee>
 800400c:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8004010:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8004012:	0d1b      	lsrs	r3, r3, #20
 8004014:	051b      	lsls	r3, r3, #20
 8004016:	429a      	cmp	r2, r3
 8004018:	d1a1      	bne.n	8003f5e <_strtod_l+0x9ee>
 800401a:	4620      	mov	r0, r4
 800401c:	4629      	mov	r1, r5
 800401e:	f7fc fe5d 	bl	8000cdc <__aeabi_d2lz>
 8004022:	f7fc fae5 	bl	80005f0 <__aeabi_l2d>
 8004026:	4602      	mov	r2, r0
 8004028:	460b      	mov	r3, r1
 800402a:	4620      	mov	r0, r4
 800402c:	4629      	mov	r1, r5
 800402e:	f7fc f955 	bl	80002dc <__aeabi_dsub>
 8004032:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004034:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8004038:	ea43 0308 	orr.w	r3, r3, r8
 800403c:	4313      	orrs	r3, r2
 800403e:	4604      	mov	r4, r0
 8004040:	460d      	mov	r5, r1
 8004042:	d068      	beq.n	8004116 <_strtod_l+0xba6>
 8004044:	a30a      	add	r3, pc, #40	; (adr r3, 8004070 <_strtod_l+0xb00>)
 8004046:	e9d3 2300 	ldrd	r2, r3, [r3]
 800404a:	f7fc fd71 	bl	8000b30 <__aeabi_dcmplt>
 800404e:	2800      	cmp	r0, #0
 8004050:	f47f acdc 	bne.w	8003a0c <_strtod_l+0x49c>
 8004054:	a308      	add	r3, pc, #32	; (adr r3, 8004078 <_strtod_l+0xb08>)
 8004056:	e9d3 2300 	ldrd	r2, r3, [r3]
 800405a:	4620      	mov	r0, r4
 800405c:	4629      	mov	r1, r5
 800405e:	f7fc fd85 	bl	8000b6c <__aeabi_dcmpgt>
 8004062:	2800      	cmp	r0, #0
 8004064:	f43f af7b 	beq.w	8003f5e <_strtod_l+0x9ee>
 8004068:	e4d0      	b.n	8003a0c <_strtod_l+0x49c>
 800406a:	bf00      	nop
 800406c:	f3af 8000 	nop.w
 8004070:	94a03595 	.word	0x94a03595
 8004074:	3fdfffff 	.word	0x3fdfffff
 8004078:	35afe535 	.word	0x35afe535
 800407c:	3fe00000 	.word	0x3fe00000
 8004080:	000fffff 	.word	0x000fffff
 8004084:	7ff00000 	.word	0x7ff00000
 8004088:	7fefffff 	.word	0x7fefffff
 800408c:	3ff00000 	.word	0x3ff00000
 8004090:	7fe00000 	.word	0x7fe00000
 8004094:	7c9fffff 	.word	0x7c9fffff
 8004098:	3fe00000 	.word	0x3fe00000
 800409c:	bff00000 	.word	0xbff00000
 80040a0:	9b05      	ldr	r3, [sp, #20]
 80040a2:	b313      	cbz	r3, 80040ea <_strtod_l+0xb7a>
 80040a4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80040a6:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 80040aa:	d81e      	bhi.n	80040ea <_strtod_l+0xb7a>
 80040ac:	a326      	add	r3, pc, #152	; (adr r3, 8004148 <_strtod_l+0xbd8>)
 80040ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80040b2:	4620      	mov	r0, r4
 80040b4:	4629      	mov	r1, r5
 80040b6:	f7fc fd45 	bl	8000b44 <__aeabi_dcmple>
 80040ba:	b190      	cbz	r0, 80040e2 <_strtod_l+0xb72>
 80040bc:	4629      	mov	r1, r5
 80040be:	4620      	mov	r0, r4
 80040c0:	f7fc fd9c 	bl	8000bfc <__aeabi_d2uiz>
 80040c4:	2801      	cmp	r0, #1
 80040c6:	bf38      	it	cc
 80040c8:	2001      	movcc	r0, #1
 80040ca:	f7fc fa45 	bl	8000558 <__aeabi_ui2d>
 80040ce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80040d0:	4604      	mov	r4, r0
 80040d2:	460d      	mov	r5, r1
 80040d4:	b9d3      	cbnz	r3, 800410c <_strtod_l+0xb9c>
 80040d6:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80040da:	9012      	str	r0, [sp, #72]	; 0x48
 80040dc:	9313      	str	r3, [sp, #76]	; 0x4c
 80040de:	e9dd 6712 	ldrd	r6, r7, [sp, #72]	; 0x48
 80040e2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80040e4:	f107 63d6 	add.w	r3, r7, #112197632	; 0x6b00000
 80040e8:	1a9f      	subs	r7, r3, r2
 80040ea:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 80040ee:	f002 f8ef 	bl	80062d0 <__ulp>
 80040f2:	4602      	mov	r2, r0
 80040f4:	460b      	mov	r3, r1
 80040f6:	4630      	mov	r0, r6
 80040f8:	4639      	mov	r1, r7
 80040fa:	f7fc faa7 	bl	800064c <__aeabi_dmul>
 80040fe:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8004102:	f7fc f8ed 	bl	80002e0 <__adddf3>
 8004106:	4680      	mov	r8, r0
 8004108:	4689      	mov	r9, r1
 800410a:	e77c      	b.n	8004006 <_strtod_l+0xa96>
 800410c:	4602      	mov	r2, r0
 800410e:	460b      	mov	r3, r1
 8004110:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
 8004114:	e7e3      	b.n	80040de <_strtod_l+0xb6e>
 8004116:	a30e      	add	r3, pc, #56	; (adr r3, 8004150 <_strtod_l+0xbe0>)
 8004118:	e9d3 2300 	ldrd	r2, r3, [r3]
 800411c:	f7fc fd08 	bl	8000b30 <__aeabi_dcmplt>
 8004120:	e79f      	b.n	8004062 <_strtod_l+0xaf2>
 8004122:	2300      	movs	r3, #0
 8004124:	930c      	str	r3, [sp, #48]	; 0x30
 8004126:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8004128:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800412a:	6013      	str	r3, [r2, #0]
 800412c:	f7ff ba65 	b.w	80035fa <_strtod_l+0x8a>
 8004130:	2b65      	cmp	r3, #101	; 0x65
 8004132:	f43f ab5c 	beq.w	80037ee <_strtod_l+0x27e>
 8004136:	2b45      	cmp	r3, #69	; 0x45
 8004138:	f43f ab59 	beq.w	80037ee <_strtod_l+0x27e>
 800413c:	2201      	movs	r2, #1
 800413e:	f7ff bb8d 	b.w	800385c <_strtod_l+0x2ec>
 8004142:	bf00      	nop
 8004144:	f3af 8000 	nop.w
 8004148:	ffc00000 	.word	0xffc00000
 800414c:	41dfffff 	.word	0x41dfffff
 8004150:	94a03595 	.word	0x94a03595
 8004154:	3fcfffff 	.word	0x3fcfffff

08004158 <_strtod_r>:
 8004158:	4b01      	ldr	r3, [pc, #4]	; (8004160 <_strtod_r+0x8>)
 800415a:	f7ff ba09 	b.w	8003570 <_strtod_l>
 800415e:	bf00      	nop
 8004160:	20000b78 	.word	0x20000b78

08004164 <strtok>:
 8004164:	4b16      	ldr	r3, [pc, #88]	; (80041c0 <strtok+0x5c>)
 8004166:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800416a:	681f      	ldr	r7, [r3, #0]
 800416c:	6dbc      	ldr	r4, [r7, #88]	; 0x58
 800416e:	4605      	mov	r5, r0
 8004170:	460e      	mov	r6, r1
 8004172:	b9ec      	cbnz	r4, 80041b0 <strtok+0x4c>
 8004174:	2050      	movs	r0, #80	; 0x50
 8004176:	f001 fd19 	bl	8005bac <malloc>
 800417a:	4602      	mov	r2, r0
 800417c:	65b8      	str	r0, [r7, #88]	; 0x58
 800417e:	b920      	cbnz	r0, 800418a <strtok+0x26>
 8004180:	4b10      	ldr	r3, [pc, #64]	; (80041c4 <strtok+0x60>)
 8004182:	4811      	ldr	r0, [pc, #68]	; (80041c8 <strtok+0x64>)
 8004184:	2157      	movs	r1, #87	; 0x57
 8004186:	f000 f9a3 	bl	80044d0 <__assert_func>
 800418a:	e9c0 4400 	strd	r4, r4, [r0]
 800418e:	e9c0 4402 	strd	r4, r4, [r0, #8]
 8004192:	e9c0 4404 	strd	r4, r4, [r0, #16]
 8004196:	e9c0 440a 	strd	r4, r4, [r0, #40]	; 0x28
 800419a:	e9c0 440c 	strd	r4, r4, [r0, #48]	; 0x30
 800419e:	e9c0 440e 	strd	r4, r4, [r0, #56]	; 0x38
 80041a2:	e9c0 4410 	strd	r4, r4, [r0, #64]	; 0x40
 80041a6:	e9c0 4412 	strd	r4, r4, [r0, #72]	; 0x48
 80041aa:	6184      	str	r4, [r0, #24]
 80041ac:	7704      	strb	r4, [r0, #28]
 80041ae:	6244      	str	r4, [r0, #36]	; 0x24
 80041b0:	6dba      	ldr	r2, [r7, #88]	; 0x58
 80041b2:	4631      	mov	r1, r6
 80041b4:	4628      	mov	r0, r5
 80041b6:	2301      	movs	r3, #1
 80041b8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80041bc:	f000 b806 	b.w	80041cc <__strtok_r>
 80041c0:	20000b10 	.word	0x20000b10
 80041c4:	08007d58 	.word	0x08007d58
 80041c8:	08007d6f 	.word	0x08007d6f

080041cc <__strtok_r>:
 80041cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80041ce:	b908      	cbnz	r0, 80041d4 <__strtok_r+0x8>
 80041d0:	6810      	ldr	r0, [r2, #0]
 80041d2:	b188      	cbz	r0, 80041f8 <__strtok_r+0x2c>
 80041d4:	4604      	mov	r4, r0
 80041d6:	4620      	mov	r0, r4
 80041d8:	f814 5b01 	ldrb.w	r5, [r4], #1
 80041dc:	460f      	mov	r7, r1
 80041de:	f817 6b01 	ldrb.w	r6, [r7], #1
 80041e2:	b91e      	cbnz	r6, 80041ec <__strtok_r+0x20>
 80041e4:	b965      	cbnz	r5, 8004200 <__strtok_r+0x34>
 80041e6:	6015      	str	r5, [r2, #0]
 80041e8:	4628      	mov	r0, r5
 80041ea:	e005      	b.n	80041f8 <__strtok_r+0x2c>
 80041ec:	42b5      	cmp	r5, r6
 80041ee:	d1f6      	bne.n	80041de <__strtok_r+0x12>
 80041f0:	2b00      	cmp	r3, #0
 80041f2:	d1f0      	bne.n	80041d6 <__strtok_r+0xa>
 80041f4:	6014      	str	r4, [r2, #0]
 80041f6:	7003      	strb	r3, [r0, #0]
 80041f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80041fa:	461c      	mov	r4, r3
 80041fc:	e00c      	b.n	8004218 <__strtok_r+0x4c>
 80041fe:	b915      	cbnz	r5, 8004206 <__strtok_r+0x3a>
 8004200:	f814 3b01 	ldrb.w	r3, [r4], #1
 8004204:	460e      	mov	r6, r1
 8004206:	f816 5b01 	ldrb.w	r5, [r6], #1
 800420a:	42ab      	cmp	r3, r5
 800420c:	d1f7      	bne.n	80041fe <__strtok_r+0x32>
 800420e:	2b00      	cmp	r3, #0
 8004210:	d0f3      	beq.n	80041fa <__strtok_r+0x2e>
 8004212:	2300      	movs	r3, #0
 8004214:	f804 3c01 	strb.w	r3, [r4, #-1]
 8004218:	6014      	str	r4, [r2, #0]
 800421a:	e7ed      	b.n	80041f8 <__strtok_r+0x2c>

0800421c <_strtol_l.isra.0>:
 800421c:	2b01      	cmp	r3, #1
 800421e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004222:	4686      	mov	lr, r0
 8004224:	d001      	beq.n	800422a <_strtol_l.isra.0+0xe>
 8004226:	2b24      	cmp	r3, #36	; 0x24
 8004228:	d906      	bls.n	8004238 <_strtol_l.isra.0+0x1c>
 800422a:	f7fd fe37 	bl	8001e9c <__errno>
 800422e:	2316      	movs	r3, #22
 8004230:	6003      	str	r3, [r0, #0]
 8004232:	2000      	movs	r0, #0
 8004234:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004238:	4e3a      	ldr	r6, [pc, #232]	; (8004324 <_strtol_l.isra.0+0x108>)
 800423a:	468c      	mov	ip, r1
 800423c:	4660      	mov	r0, ip
 800423e:	f81c 4b01 	ldrb.w	r4, [ip], #1
 8004242:	5da5      	ldrb	r5, [r4, r6]
 8004244:	f015 0508 	ands.w	r5, r5, #8
 8004248:	d1f8      	bne.n	800423c <_strtol_l.isra.0+0x20>
 800424a:	2c2d      	cmp	r4, #45	; 0x2d
 800424c:	d133      	bne.n	80042b6 <_strtol_l.isra.0+0x9a>
 800424e:	f89c 4000 	ldrb.w	r4, [ip]
 8004252:	f04f 0801 	mov.w	r8, #1
 8004256:	f100 0c02 	add.w	ip, r0, #2
 800425a:	2b00      	cmp	r3, #0
 800425c:	d05d      	beq.n	800431a <_strtol_l.isra.0+0xfe>
 800425e:	2b10      	cmp	r3, #16
 8004260:	d10c      	bne.n	800427c <_strtol_l.isra.0+0x60>
 8004262:	2c30      	cmp	r4, #48	; 0x30
 8004264:	d10a      	bne.n	800427c <_strtol_l.isra.0+0x60>
 8004266:	f89c 0000 	ldrb.w	r0, [ip]
 800426a:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 800426e:	2858      	cmp	r0, #88	; 0x58
 8004270:	d14e      	bne.n	8004310 <_strtol_l.isra.0+0xf4>
 8004272:	f89c 4001 	ldrb.w	r4, [ip, #1]
 8004276:	2310      	movs	r3, #16
 8004278:	f10c 0c02 	add.w	ip, ip, #2
 800427c:	f108 4700 	add.w	r7, r8, #2147483648	; 0x80000000
 8004280:	3f01      	subs	r7, #1
 8004282:	2500      	movs	r5, #0
 8004284:	fbb7 f9f3 	udiv	r9, r7, r3
 8004288:	4628      	mov	r0, r5
 800428a:	fb03 7a19 	mls	sl, r3, r9, r7
 800428e:	f1a4 0630 	sub.w	r6, r4, #48	; 0x30
 8004292:	2e09      	cmp	r6, #9
 8004294:	d818      	bhi.n	80042c8 <_strtol_l.isra.0+0xac>
 8004296:	4634      	mov	r4, r6
 8004298:	42a3      	cmp	r3, r4
 800429a:	dd24      	ble.n	80042e6 <_strtol_l.isra.0+0xca>
 800429c:	2d00      	cmp	r5, #0
 800429e:	db1f      	blt.n	80042e0 <_strtol_l.isra.0+0xc4>
 80042a0:	4581      	cmp	r9, r0
 80042a2:	d31d      	bcc.n	80042e0 <_strtol_l.isra.0+0xc4>
 80042a4:	d101      	bne.n	80042aa <_strtol_l.isra.0+0x8e>
 80042a6:	45a2      	cmp	sl, r4
 80042a8:	db1a      	blt.n	80042e0 <_strtol_l.isra.0+0xc4>
 80042aa:	fb00 4003 	mla	r0, r0, r3, r4
 80042ae:	2501      	movs	r5, #1
 80042b0:	f81c 4b01 	ldrb.w	r4, [ip], #1
 80042b4:	e7eb      	b.n	800428e <_strtol_l.isra.0+0x72>
 80042b6:	2c2b      	cmp	r4, #43	; 0x2b
 80042b8:	bf08      	it	eq
 80042ba:	f89c 4000 	ldrbeq.w	r4, [ip]
 80042be:	46a8      	mov	r8, r5
 80042c0:	bf08      	it	eq
 80042c2:	f100 0c02 	addeq.w	ip, r0, #2
 80042c6:	e7c8      	b.n	800425a <_strtol_l.isra.0+0x3e>
 80042c8:	f1a4 0641 	sub.w	r6, r4, #65	; 0x41
 80042cc:	2e19      	cmp	r6, #25
 80042ce:	d801      	bhi.n	80042d4 <_strtol_l.isra.0+0xb8>
 80042d0:	3c37      	subs	r4, #55	; 0x37
 80042d2:	e7e1      	b.n	8004298 <_strtol_l.isra.0+0x7c>
 80042d4:	f1a4 0661 	sub.w	r6, r4, #97	; 0x61
 80042d8:	2e19      	cmp	r6, #25
 80042da:	d804      	bhi.n	80042e6 <_strtol_l.isra.0+0xca>
 80042dc:	3c57      	subs	r4, #87	; 0x57
 80042de:	e7db      	b.n	8004298 <_strtol_l.isra.0+0x7c>
 80042e0:	f04f 35ff 	mov.w	r5, #4294967295
 80042e4:	e7e4      	b.n	80042b0 <_strtol_l.isra.0+0x94>
 80042e6:	2d00      	cmp	r5, #0
 80042e8:	da08      	bge.n	80042fc <_strtol_l.isra.0+0xe0>
 80042ea:	2322      	movs	r3, #34	; 0x22
 80042ec:	f8ce 3000 	str.w	r3, [lr]
 80042f0:	4638      	mov	r0, r7
 80042f2:	2a00      	cmp	r2, #0
 80042f4:	d09e      	beq.n	8004234 <_strtol_l.isra.0+0x18>
 80042f6:	f10c 31ff 	add.w	r1, ip, #4294967295
 80042fa:	e007      	b.n	800430c <_strtol_l.isra.0+0xf0>
 80042fc:	f1b8 0f00 	cmp.w	r8, #0
 8004300:	d000      	beq.n	8004304 <_strtol_l.isra.0+0xe8>
 8004302:	4240      	negs	r0, r0
 8004304:	2a00      	cmp	r2, #0
 8004306:	d095      	beq.n	8004234 <_strtol_l.isra.0+0x18>
 8004308:	2d00      	cmp	r5, #0
 800430a:	d1f4      	bne.n	80042f6 <_strtol_l.isra.0+0xda>
 800430c:	6011      	str	r1, [r2, #0]
 800430e:	e791      	b.n	8004234 <_strtol_l.isra.0+0x18>
 8004310:	2430      	movs	r4, #48	; 0x30
 8004312:	2b00      	cmp	r3, #0
 8004314:	d1b2      	bne.n	800427c <_strtol_l.isra.0+0x60>
 8004316:	2308      	movs	r3, #8
 8004318:	e7b0      	b.n	800427c <_strtol_l.isra.0+0x60>
 800431a:	2c30      	cmp	r4, #48	; 0x30
 800431c:	d0a3      	beq.n	8004266 <_strtol_l.isra.0+0x4a>
 800431e:	230a      	movs	r3, #10
 8004320:	e7ac      	b.n	800427c <_strtol_l.isra.0+0x60>
 8004322:	bf00      	nop
 8004324:	08007e0d 	.word	0x08007e0d

08004328 <_strtol_r>:
 8004328:	f7ff bf78 	b.w	800421c <_strtol_l.isra.0>

0800432c <__swbuf_r>:
 800432c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800432e:	460e      	mov	r6, r1
 8004330:	4614      	mov	r4, r2
 8004332:	4605      	mov	r5, r0
 8004334:	b118      	cbz	r0, 800433e <__swbuf_r+0x12>
 8004336:	6983      	ldr	r3, [r0, #24]
 8004338:	b90b      	cbnz	r3, 800433e <__swbuf_r+0x12>
 800433a:	f7fd fe91 	bl	8002060 <__sinit>
 800433e:	4b21      	ldr	r3, [pc, #132]	; (80043c4 <__swbuf_r+0x98>)
 8004340:	429c      	cmp	r4, r3
 8004342:	d12b      	bne.n	800439c <__swbuf_r+0x70>
 8004344:	686c      	ldr	r4, [r5, #4]
 8004346:	69a3      	ldr	r3, [r4, #24]
 8004348:	60a3      	str	r3, [r4, #8]
 800434a:	89a3      	ldrh	r3, [r4, #12]
 800434c:	071a      	lsls	r2, r3, #28
 800434e:	d52f      	bpl.n	80043b0 <__swbuf_r+0x84>
 8004350:	6923      	ldr	r3, [r4, #16]
 8004352:	b36b      	cbz	r3, 80043b0 <__swbuf_r+0x84>
 8004354:	6923      	ldr	r3, [r4, #16]
 8004356:	6820      	ldr	r0, [r4, #0]
 8004358:	1ac0      	subs	r0, r0, r3
 800435a:	6963      	ldr	r3, [r4, #20]
 800435c:	b2f6      	uxtb	r6, r6
 800435e:	4283      	cmp	r3, r0
 8004360:	4637      	mov	r7, r6
 8004362:	dc04      	bgt.n	800436e <__swbuf_r+0x42>
 8004364:	4621      	mov	r1, r4
 8004366:	4628      	mov	r0, r5
 8004368:	f000 ffe2 	bl	8005330 <_fflush_r>
 800436c:	bb30      	cbnz	r0, 80043bc <__swbuf_r+0x90>
 800436e:	68a3      	ldr	r3, [r4, #8]
 8004370:	3b01      	subs	r3, #1
 8004372:	60a3      	str	r3, [r4, #8]
 8004374:	6823      	ldr	r3, [r4, #0]
 8004376:	1c5a      	adds	r2, r3, #1
 8004378:	6022      	str	r2, [r4, #0]
 800437a:	701e      	strb	r6, [r3, #0]
 800437c:	6963      	ldr	r3, [r4, #20]
 800437e:	3001      	adds	r0, #1
 8004380:	4283      	cmp	r3, r0
 8004382:	d004      	beq.n	800438e <__swbuf_r+0x62>
 8004384:	89a3      	ldrh	r3, [r4, #12]
 8004386:	07db      	lsls	r3, r3, #31
 8004388:	d506      	bpl.n	8004398 <__swbuf_r+0x6c>
 800438a:	2e0a      	cmp	r6, #10
 800438c:	d104      	bne.n	8004398 <__swbuf_r+0x6c>
 800438e:	4621      	mov	r1, r4
 8004390:	4628      	mov	r0, r5
 8004392:	f000 ffcd 	bl	8005330 <_fflush_r>
 8004396:	b988      	cbnz	r0, 80043bc <__swbuf_r+0x90>
 8004398:	4638      	mov	r0, r7
 800439a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800439c:	4b0a      	ldr	r3, [pc, #40]	; (80043c8 <__swbuf_r+0x9c>)
 800439e:	429c      	cmp	r4, r3
 80043a0:	d101      	bne.n	80043a6 <__swbuf_r+0x7a>
 80043a2:	68ac      	ldr	r4, [r5, #8]
 80043a4:	e7cf      	b.n	8004346 <__swbuf_r+0x1a>
 80043a6:	4b09      	ldr	r3, [pc, #36]	; (80043cc <__swbuf_r+0xa0>)
 80043a8:	429c      	cmp	r4, r3
 80043aa:	bf08      	it	eq
 80043ac:	68ec      	ldreq	r4, [r5, #12]
 80043ae:	e7ca      	b.n	8004346 <__swbuf_r+0x1a>
 80043b0:	4621      	mov	r1, r4
 80043b2:	4628      	mov	r0, r5
 80043b4:	f000 f81e 	bl	80043f4 <__swsetup_r>
 80043b8:	2800      	cmp	r0, #0
 80043ba:	d0cb      	beq.n	8004354 <__swbuf_r+0x28>
 80043bc:	f04f 37ff 	mov.w	r7, #4294967295
 80043c0:	e7ea      	b.n	8004398 <__swbuf_r+0x6c>
 80043c2:	bf00      	nop
 80043c4:	08007c8c 	.word	0x08007c8c
 80043c8:	08007cac 	.word	0x08007cac
 80043cc:	08007c6c 	.word	0x08007c6c

080043d0 <_write_r>:
 80043d0:	b538      	push	{r3, r4, r5, lr}
 80043d2:	4d07      	ldr	r5, [pc, #28]	; (80043f0 <_write_r+0x20>)
 80043d4:	4604      	mov	r4, r0
 80043d6:	4608      	mov	r0, r1
 80043d8:	4611      	mov	r1, r2
 80043da:	2200      	movs	r2, #0
 80043dc:	602a      	str	r2, [r5, #0]
 80043de:	461a      	mov	r2, r3
 80043e0:	f7fd fc83 	bl	8001cea <_write>
 80043e4:	1c43      	adds	r3, r0, #1
 80043e6:	d102      	bne.n	80043ee <_write_r+0x1e>
 80043e8:	682b      	ldr	r3, [r5, #0]
 80043ea:	b103      	cbz	r3, 80043ee <_write_r+0x1e>
 80043ec:	6023      	str	r3, [r4, #0]
 80043ee:	bd38      	pop	{r3, r4, r5, pc}
 80043f0:	20000d3c 	.word	0x20000d3c

080043f4 <__swsetup_r>:
 80043f4:	4b32      	ldr	r3, [pc, #200]	; (80044c0 <__swsetup_r+0xcc>)
 80043f6:	b570      	push	{r4, r5, r6, lr}
 80043f8:	681d      	ldr	r5, [r3, #0]
 80043fa:	4606      	mov	r6, r0
 80043fc:	460c      	mov	r4, r1
 80043fe:	b125      	cbz	r5, 800440a <__swsetup_r+0x16>
 8004400:	69ab      	ldr	r3, [r5, #24]
 8004402:	b913      	cbnz	r3, 800440a <__swsetup_r+0x16>
 8004404:	4628      	mov	r0, r5
 8004406:	f7fd fe2b 	bl	8002060 <__sinit>
 800440a:	4b2e      	ldr	r3, [pc, #184]	; (80044c4 <__swsetup_r+0xd0>)
 800440c:	429c      	cmp	r4, r3
 800440e:	d10f      	bne.n	8004430 <__swsetup_r+0x3c>
 8004410:	686c      	ldr	r4, [r5, #4]
 8004412:	89a3      	ldrh	r3, [r4, #12]
 8004414:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004418:	0719      	lsls	r1, r3, #28
 800441a:	d42c      	bmi.n	8004476 <__swsetup_r+0x82>
 800441c:	06dd      	lsls	r5, r3, #27
 800441e:	d411      	bmi.n	8004444 <__swsetup_r+0x50>
 8004420:	2309      	movs	r3, #9
 8004422:	6033      	str	r3, [r6, #0]
 8004424:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8004428:	81a3      	strh	r3, [r4, #12]
 800442a:	f04f 30ff 	mov.w	r0, #4294967295
 800442e:	e03e      	b.n	80044ae <__swsetup_r+0xba>
 8004430:	4b25      	ldr	r3, [pc, #148]	; (80044c8 <__swsetup_r+0xd4>)
 8004432:	429c      	cmp	r4, r3
 8004434:	d101      	bne.n	800443a <__swsetup_r+0x46>
 8004436:	68ac      	ldr	r4, [r5, #8]
 8004438:	e7eb      	b.n	8004412 <__swsetup_r+0x1e>
 800443a:	4b24      	ldr	r3, [pc, #144]	; (80044cc <__swsetup_r+0xd8>)
 800443c:	429c      	cmp	r4, r3
 800443e:	bf08      	it	eq
 8004440:	68ec      	ldreq	r4, [r5, #12]
 8004442:	e7e6      	b.n	8004412 <__swsetup_r+0x1e>
 8004444:	0758      	lsls	r0, r3, #29
 8004446:	d512      	bpl.n	800446e <__swsetup_r+0x7a>
 8004448:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800444a:	b141      	cbz	r1, 800445e <__swsetup_r+0x6a>
 800444c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8004450:	4299      	cmp	r1, r3
 8004452:	d002      	beq.n	800445a <__swsetup_r+0x66>
 8004454:	4630      	mov	r0, r6
 8004456:	f002 f891 	bl	800657c <_free_r>
 800445a:	2300      	movs	r3, #0
 800445c:	6363      	str	r3, [r4, #52]	; 0x34
 800445e:	89a3      	ldrh	r3, [r4, #12]
 8004460:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8004464:	81a3      	strh	r3, [r4, #12]
 8004466:	2300      	movs	r3, #0
 8004468:	6063      	str	r3, [r4, #4]
 800446a:	6923      	ldr	r3, [r4, #16]
 800446c:	6023      	str	r3, [r4, #0]
 800446e:	89a3      	ldrh	r3, [r4, #12]
 8004470:	f043 0308 	orr.w	r3, r3, #8
 8004474:	81a3      	strh	r3, [r4, #12]
 8004476:	6923      	ldr	r3, [r4, #16]
 8004478:	b94b      	cbnz	r3, 800448e <__swsetup_r+0x9a>
 800447a:	89a3      	ldrh	r3, [r4, #12]
 800447c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8004480:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8004484:	d003      	beq.n	800448e <__swsetup_r+0x9a>
 8004486:	4621      	mov	r1, r4
 8004488:	4630      	mov	r0, r6
 800448a:	f001 fb4f 	bl	8005b2c <__smakebuf_r>
 800448e:	89a0      	ldrh	r0, [r4, #12]
 8004490:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004494:	f010 0301 	ands.w	r3, r0, #1
 8004498:	d00a      	beq.n	80044b0 <__swsetup_r+0xbc>
 800449a:	2300      	movs	r3, #0
 800449c:	60a3      	str	r3, [r4, #8]
 800449e:	6963      	ldr	r3, [r4, #20]
 80044a0:	425b      	negs	r3, r3
 80044a2:	61a3      	str	r3, [r4, #24]
 80044a4:	6923      	ldr	r3, [r4, #16]
 80044a6:	b943      	cbnz	r3, 80044ba <__swsetup_r+0xc6>
 80044a8:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80044ac:	d1ba      	bne.n	8004424 <__swsetup_r+0x30>
 80044ae:	bd70      	pop	{r4, r5, r6, pc}
 80044b0:	0781      	lsls	r1, r0, #30
 80044b2:	bf58      	it	pl
 80044b4:	6963      	ldrpl	r3, [r4, #20]
 80044b6:	60a3      	str	r3, [r4, #8]
 80044b8:	e7f4      	b.n	80044a4 <__swsetup_r+0xb0>
 80044ba:	2000      	movs	r0, #0
 80044bc:	e7f7      	b.n	80044ae <__swsetup_r+0xba>
 80044be:	bf00      	nop
 80044c0:	20000b10 	.word	0x20000b10
 80044c4:	08007c8c 	.word	0x08007c8c
 80044c8:	08007cac 	.word	0x08007cac
 80044cc:	08007c6c 	.word	0x08007c6c

080044d0 <__assert_func>:
 80044d0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80044d2:	4614      	mov	r4, r2
 80044d4:	461a      	mov	r2, r3
 80044d6:	4b09      	ldr	r3, [pc, #36]	; (80044fc <__assert_func+0x2c>)
 80044d8:	681b      	ldr	r3, [r3, #0]
 80044da:	4605      	mov	r5, r0
 80044dc:	68d8      	ldr	r0, [r3, #12]
 80044de:	b14c      	cbz	r4, 80044f4 <__assert_func+0x24>
 80044e0:	4b07      	ldr	r3, [pc, #28]	; (8004500 <__assert_func+0x30>)
 80044e2:	9100      	str	r1, [sp, #0]
 80044e4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80044e8:	4906      	ldr	r1, [pc, #24]	; (8004504 <__assert_func+0x34>)
 80044ea:	462b      	mov	r3, r5
 80044ec:	f000 ff6e 	bl	80053cc <fiprintf>
 80044f0:	f002 ff8d 	bl	800740e <abort>
 80044f4:	4b04      	ldr	r3, [pc, #16]	; (8004508 <__assert_func+0x38>)
 80044f6:	461c      	mov	r4, r3
 80044f8:	e7f3      	b.n	80044e2 <__assert_func+0x12>
 80044fa:	bf00      	nop
 80044fc:	20000b10 	.word	0x20000b10
 8004500:	08007dd0 	.word	0x08007dd0
 8004504:	08007ddd 	.word	0x08007ddd
 8004508:	08007e0b 	.word	0x08007e0b

0800450c <_close_r>:
 800450c:	b538      	push	{r3, r4, r5, lr}
 800450e:	4d06      	ldr	r5, [pc, #24]	; (8004528 <_close_r+0x1c>)
 8004510:	2300      	movs	r3, #0
 8004512:	4604      	mov	r4, r0
 8004514:	4608      	mov	r0, r1
 8004516:	602b      	str	r3, [r5, #0]
 8004518:	f7fd fb57 	bl	8001bca <_close>
 800451c:	1c43      	adds	r3, r0, #1
 800451e:	d102      	bne.n	8004526 <_close_r+0x1a>
 8004520:	682b      	ldr	r3, [r5, #0]
 8004522:	b103      	cbz	r3, 8004526 <_close_r+0x1a>
 8004524:	6023      	str	r3, [r4, #0]
 8004526:	bd38      	pop	{r3, r4, r5, pc}
 8004528:	20000d3c 	.word	0x20000d3c

0800452c <quorem>:
 800452c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004530:	6903      	ldr	r3, [r0, #16]
 8004532:	690c      	ldr	r4, [r1, #16]
 8004534:	42a3      	cmp	r3, r4
 8004536:	4607      	mov	r7, r0
 8004538:	f2c0 8081 	blt.w	800463e <quorem+0x112>
 800453c:	3c01      	subs	r4, #1
 800453e:	f101 0814 	add.w	r8, r1, #20
 8004542:	f100 0514 	add.w	r5, r0, #20
 8004546:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800454a:	9301      	str	r3, [sp, #4]
 800454c:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8004550:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8004554:	3301      	adds	r3, #1
 8004556:	429a      	cmp	r2, r3
 8004558:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800455c:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8004560:	fbb2 f6f3 	udiv	r6, r2, r3
 8004564:	d331      	bcc.n	80045ca <quorem+0x9e>
 8004566:	f04f 0e00 	mov.w	lr, #0
 800456a:	4640      	mov	r0, r8
 800456c:	46ac      	mov	ip, r5
 800456e:	46f2      	mov	sl, lr
 8004570:	f850 2b04 	ldr.w	r2, [r0], #4
 8004574:	b293      	uxth	r3, r2
 8004576:	fb06 e303 	mla	r3, r6, r3, lr
 800457a:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 800457e:	b29b      	uxth	r3, r3
 8004580:	ebaa 0303 	sub.w	r3, sl, r3
 8004584:	0c12      	lsrs	r2, r2, #16
 8004586:	f8dc a000 	ldr.w	sl, [ip]
 800458a:	fb06 e202 	mla	r2, r6, r2, lr
 800458e:	fa13 f38a 	uxtah	r3, r3, sl
 8004592:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8004596:	fa1f fa82 	uxth.w	sl, r2
 800459a:	f8dc 2000 	ldr.w	r2, [ip]
 800459e:	ebca 4212 	rsb	r2, sl, r2, lsr #16
 80045a2:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80045a6:	b29b      	uxth	r3, r3
 80045a8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80045ac:	4581      	cmp	r9, r0
 80045ae:	f84c 3b04 	str.w	r3, [ip], #4
 80045b2:	ea4f 4a22 	mov.w	sl, r2, asr #16
 80045b6:	d2db      	bcs.n	8004570 <quorem+0x44>
 80045b8:	f855 300b 	ldr.w	r3, [r5, fp]
 80045bc:	b92b      	cbnz	r3, 80045ca <quorem+0x9e>
 80045be:	9b01      	ldr	r3, [sp, #4]
 80045c0:	3b04      	subs	r3, #4
 80045c2:	429d      	cmp	r5, r3
 80045c4:	461a      	mov	r2, r3
 80045c6:	d32e      	bcc.n	8004626 <quorem+0xfa>
 80045c8:	613c      	str	r4, [r7, #16]
 80045ca:	4638      	mov	r0, r7
 80045cc:	f001 fdda 	bl	8006184 <__mcmp>
 80045d0:	2800      	cmp	r0, #0
 80045d2:	db24      	blt.n	800461e <quorem+0xf2>
 80045d4:	3601      	adds	r6, #1
 80045d6:	4628      	mov	r0, r5
 80045d8:	f04f 0c00 	mov.w	ip, #0
 80045dc:	f858 2b04 	ldr.w	r2, [r8], #4
 80045e0:	f8d0 e000 	ldr.w	lr, [r0]
 80045e4:	b293      	uxth	r3, r2
 80045e6:	ebac 0303 	sub.w	r3, ip, r3
 80045ea:	0c12      	lsrs	r2, r2, #16
 80045ec:	fa13 f38e 	uxtah	r3, r3, lr
 80045f0:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 80045f4:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80045f8:	b29b      	uxth	r3, r3
 80045fa:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80045fe:	45c1      	cmp	r9, r8
 8004600:	f840 3b04 	str.w	r3, [r0], #4
 8004604:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8004608:	d2e8      	bcs.n	80045dc <quorem+0xb0>
 800460a:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800460e:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8004612:	b922      	cbnz	r2, 800461e <quorem+0xf2>
 8004614:	3b04      	subs	r3, #4
 8004616:	429d      	cmp	r5, r3
 8004618:	461a      	mov	r2, r3
 800461a:	d30a      	bcc.n	8004632 <quorem+0x106>
 800461c:	613c      	str	r4, [r7, #16]
 800461e:	4630      	mov	r0, r6
 8004620:	b003      	add	sp, #12
 8004622:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004626:	6812      	ldr	r2, [r2, #0]
 8004628:	3b04      	subs	r3, #4
 800462a:	2a00      	cmp	r2, #0
 800462c:	d1cc      	bne.n	80045c8 <quorem+0x9c>
 800462e:	3c01      	subs	r4, #1
 8004630:	e7c7      	b.n	80045c2 <quorem+0x96>
 8004632:	6812      	ldr	r2, [r2, #0]
 8004634:	3b04      	subs	r3, #4
 8004636:	2a00      	cmp	r2, #0
 8004638:	d1f0      	bne.n	800461c <quorem+0xf0>
 800463a:	3c01      	subs	r4, #1
 800463c:	e7eb      	b.n	8004616 <quorem+0xea>
 800463e:	2000      	movs	r0, #0
 8004640:	e7ee      	b.n	8004620 <quorem+0xf4>
 8004642:	0000      	movs	r0, r0
 8004644:	0000      	movs	r0, r0
	...

08004648 <_dtoa_r>:
 8004648:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800464c:	6a44      	ldr	r4, [r0, #36]	; 0x24
 800464e:	b099      	sub	sp, #100	; 0x64
 8004650:	4616      	mov	r6, r2
 8004652:	461f      	mov	r7, r3
 8004654:	e9cd 6704 	strd	r6, r7, [sp, #16]
 8004658:	f8dd 8094 	ldr.w	r8, [sp, #148]	; 0x94
 800465c:	4605      	mov	r5, r0
 800465e:	b974      	cbnz	r4, 800467e <_dtoa_r+0x36>
 8004660:	2010      	movs	r0, #16
 8004662:	f001 faa3 	bl	8005bac <malloc>
 8004666:	4602      	mov	r2, r0
 8004668:	6268      	str	r0, [r5, #36]	; 0x24
 800466a:	b920      	cbnz	r0, 8004676 <_dtoa_r+0x2e>
 800466c:	4ba8      	ldr	r3, [pc, #672]	; (8004910 <_dtoa_r+0x2c8>)
 800466e:	21ea      	movs	r1, #234	; 0xea
 8004670:	48a8      	ldr	r0, [pc, #672]	; (8004914 <_dtoa_r+0x2cc>)
 8004672:	f7ff ff2d 	bl	80044d0 <__assert_func>
 8004676:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800467a:	6004      	str	r4, [r0, #0]
 800467c:	60c4      	str	r4, [r0, #12]
 800467e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8004680:	6819      	ldr	r1, [r3, #0]
 8004682:	b151      	cbz	r1, 800469a <_dtoa_r+0x52>
 8004684:	685a      	ldr	r2, [r3, #4]
 8004686:	604a      	str	r2, [r1, #4]
 8004688:	2301      	movs	r3, #1
 800468a:	4093      	lsls	r3, r2
 800468c:	608b      	str	r3, [r1, #8]
 800468e:	4628      	mov	r0, r5
 8004690:	f001 faf2 	bl	8005c78 <_Bfree>
 8004694:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8004696:	2200      	movs	r2, #0
 8004698:	601a      	str	r2, [r3, #0]
 800469a:	1e3b      	subs	r3, r7, #0
 800469c:	bfb9      	ittee	lt
 800469e:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 80046a2:	9305      	strlt	r3, [sp, #20]
 80046a4:	2300      	movge	r3, #0
 80046a6:	f8c8 3000 	strge.w	r3, [r8]
 80046aa:	f8dd 9014 	ldr.w	r9, [sp, #20]
 80046ae:	4b9a      	ldr	r3, [pc, #616]	; (8004918 <_dtoa_r+0x2d0>)
 80046b0:	bfbc      	itt	lt
 80046b2:	2201      	movlt	r2, #1
 80046b4:	f8c8 2000 	strlt.w	r2, [r8]
 80046b8:	ea33 0309 	bics.w	r3, r3, r9
 80046bc:	d119      	bne.n	80046f2 <_dtoa_r+0xaa>
 80046be:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80046c0:	f242 730f 	movw	r3, #9999	; 0x270f
 80046c4:	6013      	str	r3, [r2, #0]
 80046c6:	f3c9 0313 	ubfx	r3, r9, #0, #20
 80046ca:	4333      	orrs	r3, r6
 80046cc:	f000 8581 	beq.w	80051d2 <_dtoa_r+0xb8a>
 80046d0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80046d2:	b953      	cbnz	r3, 80046ea <_dtoa_r+0xa2>
 80046d4:	4b91      	ldr	r3, [pc, #580]	; (800491c <_dtoa_r+0x2d4>)
 80046d6:	e022      	b.n	800471e <_dtoa_r+0xd6>
 80046d8:	4b91      	ldr	r3, [pc, #580]	; (8004920 <_dtoa_r+0x2d8>)
 80046da:	9308      	str	r3, [sp, #32]
 80046dc:	3308      	adds	r3, #8
 80046de:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80046e0:	6013      	str	r3, [r2, #0]
 80046e2:	9808      	ldr	r0, [sp, #32]
 80046e4:	b019      	add	sp, #100	; 0x64
 80046e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80046ea:	4b8c      	ldr	r3, [pc, #560]	; (800491c <_dtoa_r+0x2d4>)
 80046ec:	9308      	str	r3, [sp, #32]
 80046ee:	3303      	adds	r3, #3
 80046f0:	e7f5      	b.n	80046de <_dtoa_r+0x96>
 80046f2:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 80046f6:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 80046fa:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80046fe:	2200      	movs	r2, #0
 8004700:	2300      	movs	r3, #0
 8004702:	f7fc fa0b 	bl	8000b1c <__aeabi_dcmpeq>
 8004706:	4680      	mov	r8, r0
 8004708:	b158      	cbz	r0, 8004722 <_dtoa_r+0xda>
 800470a:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800470c:	2301      	movs	r3, #1
 800470e:	6013      	str	r3, [r2, #0]
 8004710:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8004712:	2b00      	cmp	r3, #0
 8004714:	f000 855a 	beq.w	80051cc <_dtoa_r+0xb84>
 8004718:	4882      	ldr	r0, [pc, #520]	; (8004924 <_dtoa_r+0x2dc>)
 800471a:	6018      	str	r0, [r3, #0]
 800471c:	1e43      	subs	r3, r0, #1
 800471e:	9308      	str	r3, [sp, #32]
 8004720:	e7df      	b.n	80046e2 <_dtoa_r+0x9a>
 8004722:	ab16      	add	r3, sp, #88	; 0x58
 8004724:	9301      	str	r3, [sp, #4]
 8004726:	ab17      	add	r3, sp, #92	; 0x5c
 8004728:	9300      	str	r3, [sp, #0]
 800472a:	4628      	mov	r0, r5
 800472c:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8004730:	f001 fe48 	bl	80063c4 <__d2b>
 8004734:	f3c9 540a 	ubfx	r4, r9, #20, #11
 8004738:	4682      	mov	sl, r0
 800473a:	2c00      	cmp	r4, #0
 800473c:	d07e      	beq.n	800483c <_dtoa_r+0x1f4>
 800473e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004740:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
 8004744:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8004748:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800474c:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
 8004750:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 8004754:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
 8004758:	4b73      	ldr	r3, [pc, #460]	; (8004928 <_dtoa_r+0x2e0>)
 800475a:	2200      	movs	r2, #0
 800475c:	f7fb fdbe 	bl	80002dc <__aeabi_dsub>
 8004760:	a365      	add	r3, pc, #404	; (adr r3, 80048f8 <_dtoa_r+0x2b0>)
 8004762:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004766:	f7fb ff71 	bl	800064c <__aeabi_dmul>
 800476a:	a365      	add	r3, pc, #404	; (adr r3, 8004900 <_dtoa_r+0x2b8>)
 800476c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004770:	f7fb fdb6 	bl	80002e0 <__adddf3>
 8004774:	4606      	mov	r6, r0
 8004776:	4620      	mov	r0, r4
 8004778:	460f      	mov	r7, r1
 800477a:	f7fb fefd 	bl	8000578 <__aeabi_i2d>
 800477e:	a362      	add	r3, pc, #392	; (adr r3, 8004908 <_dtoa_r+0x2c0>)
 8004780:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004784:	f7fb ff62 	bl	800064c <__aeabi_dmul>
 8004788:	4602      	mov	r2, r0
 800478a:	460b      	mov	r3, r1
 800478c:	4630      	mov	r0, r6
 800478e:	4639      	mov	r1, r7
 8004790:	f7fb fda6 	bl	80002e0 <__adddf3>
 8004794:	4606      	mov	r6, r0
 8004796:	460f      	mov	r7, r1
 8004798:	f7fc fa08 	bl	8000bac <__aeabi_d2iz>
 800479c:	2200      	movs	r2, #0
 800479e:	4681      	mov	r9, r0
 80047a0:	2300      	movs	r3, #0
 80047a2:	4630      	mov	r0, r6
 80047a4:	4639      	mov	r1, r7
 80047a6:	f7fc f9c3 	bl	8000b30 <__aeabi_dcmplt>
 80047aa:	b148      	cbz	r0, 80047c0 <_dtoa_r+0x178>
 80047ac:	4648      	mov	r0, r9
 80047ae:	f7fb fee3 	bl	8000578 <__aeabi_i2d>
 80047b2:	4632      	mov	r2, r6
 80047b4:	463b      	mov	r3, r7
 80047b6:	f7fc f9b1 	bl	8000b1c <__aeabi_dcmpeq>
 80047ba:	b908      	cbnz	r0, 80047c0 <_dtoa_r+0x178>
 80047bc:	f109 39ff 	add.w	r9, r9, #4294967295
 80047c0:	f1b9 0f16 	cmp.w	r9, #22
 80047c4:	d857      	bhi.n	8004876 <_dtoa_r+0x22e>
 80047c6:	4b59      	ldr	r3, [pc, #356]	; (800492c <_dtoa_r+0x2e4>)
 80047c8:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
 80047cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80047d0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80047d4:	f7fc f9ac 	bl	8000b30 <__aeabi_dcmplt>
 80047d8:	2800      	cmp	r0, #0
 80047da:	d04e      	beq.n	800487a <_dtoa_r+0x232>
 80047dc:	f109 39ff 	add.w	r9, r9, #4294967295
 80047e0:	2300      	movs	r3, #0
 80047e2:	930f      	str	r3, [sp, #60]	; 0x3c
 80047e4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80047e6:	1b1c      	subs	r4, r3, r4
 80047e8:	1e63      	subs	r3, r4, #1
 80047ea:	9309      	str	r3, [sp, #36]	; 0x24
 80047ec:	bf45      	ittet	mi
 80047ee:	f1c4 0301 	rsbmi	r3, r4, #1
 80047f2:	9306      	strmi	r3, [sp, #24]
 80047f4:	2300      	movpl	r3, #0
 80047f6:	2300      	movmi	r3, #0
 80047f8:	bf4c      	ite	mi
 80047fa:	9309      	strmi	r3, [sp, #36]	; 0x24
 80047fc:	9306      	strpl	r3, [sp, #24]
 80047fe:	f1b9 0f00 	cmp.w	r9, #0
 8004802:	db3c      	blt.n	800487e <_dtoa_r+0x236>
 8004804:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004806:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800480a:	444b      	add	r3, r9
 800480c:	9309      	str	r3, [sp, #36]	; 0x24
 800480e:	2300      	movs	r3, #0
 8004810:	930a      	str	r3, [sp, #40]	; 0x28
 8004812:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004814:	2b09      	cmp	r3, #9
 8004816:	f200 808d 	bhi.w	8004934 <_dtoa_r+0x2ec>
 800481a:	2b05      	cmp	r3, #5
 800481c:	bfc4      	itt	gt
 800481e:	3b04      	subgt	r3, #4
 8004820:	9322      	strgt	r3, [sp, #136]	; 0x88
 8004822:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004824:	f1a3 0302 	sub.w	r3, r3, #2
 8004828:	bfcc      	ite	gt
 800482a:	2400      	movgt	r4, #0
 800482c:	2401      	movle	r4, #1
 800482e:	2b03      	cmp	r3, #3
 8004830:	f200 808c 	bhi.w	800494c <_dtoa_r+0x304>
 8004834:	e8df f003 	tbb	[pc, r3]
 8004838:	5b4d4f2d 	.word	0x5b4d4f2d
 800483c:	e9dd 4316 	ldrd	r4, r3, [sp, #88]	; 0x58
 8004840:	441c      	add	r4, r3
 8004842:	f204 4332 	addw	r3, r4, #1074	; 0x432
 8004846:	2b20      	cmp	r3, #32
 8004848:	bfc3      	ittte	gt
 800484a:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800484e:	f204 4012 	addwgt	r0, r4, #1042	; 0x412
 8004852:	fa09 f303 	lslgt.w	r3, r9, r3
 8004856:	f1c3 0320 	rsble	r3, r3, #32
 800485a:	bfc6      	itte	gt
 800485c:	fa26 f000 	lsrgt.w	r0, r6, r0
 8004860:	4318      	orrgt	r0, r3
 8004862:	fa06 f003 	lslle.w	r0, r6, r3
 8004866:	f7fb fe77 	bl	8000558 <__aeabi_ui2d>
 800486a:	2301      	movs	r3, #1
 800486c:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 8004870:	3c01      	subs	r4, #1
 8004872:	9313      	str	r3, [sp, #76]	; 0x4c
 8004874:	e770      	b.n	8004758 <_dtoa_r+0x110>
 8004876:	2301      	movs	r3, #1
 8004878:	e7b3      	b.n	80047e2 <_dtoa_r+0x19a>
 800487a:	900f      	str	r0, [sp, #60]	; 0x3c
 800487c:	e7b2      	b.n	80047e4 <_dtoa_r+0x19c>
 800487e:	9b06      	ldr	r3, [sp, #24]
 8004880:	eba3 0309 	sub.w	r3, r3, r9
 8004884:	9306      	str	r3, [sp, #24]
 8004886:	f1c9 0300 	rsb	r3, r9, #0
 800488a:	930a      	str	r3, [sp, #40]	; 0x28
 800488c:	2300      	movs	r3, #0
 800488e:	930e      	str	r3, [sp, #56]	; 0x38
 8004890:	e7bf      	b.n	8004812 <_dtoa_r+0x1ca>
 8004892:	2300      	movs	r3, #0
 8004894:	930b      	str	r3, [sp, #44]	; 0x2c
 8004896:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8004898:	2b00      	cmp	r3, #0
 800489a:	dc5a      	bgt.n	8004952 <_dtoa_r+0x30a>
 800489c:	f04f 0b01 	mov.w	fp, #1
 80048a0:	f8cd b008 	str.w	fp, [sp, #8]
 80048a4:	465b      	mov	r3, fp
 80048a6:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 80048aa:	6a68      	ldr	r0, [r5, #36]	; 0x24
 80048ac:	2200      	movs	r2, #0
 80048ae:	6042      	str	r2, [r0, #4]
 80048b0:	2204      	movs	r2, #4
 80048b2:	f102 0614 	add.w	r6, r2, #20
 80048b6:	429e      	cmp	r6, r3
 80048b8:	6841      	ldr	r1, [r0, #4]
 80048ba:	d950      	bls.n	800495e <_dtoa_r+0x316>
 80048bc:	4628      	mov	r0, r5
 80048be:	f001 f99b 	bl	8005bf8 <_Balloc>
 80048c2:	9008      	str	r0, [sp, #32]
 80048c4:	2800      	cmp	r0, #0
 80048c6:	d14e      	bne.n	8004966 <_dtoa_r+0x31e>
 80048c8:	4b19      	ldr	r3, [pc, #100]	; (8004930 <_dtoa_r+0x2e8>)
 80048ca:	4602      	mov	r2, r0
 80048cc:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 80048d0:	e6ce      	b.n	8004670 <_dtoa_r+0x28>
 80048d2:	2301      	movs	r3, #1
 80048d4:	e7de      	b.n	8004894 <_dtoa_r+0x24c>
 80048d6:	2300      	movs	r3, #0
 80048d8:	930b      	str	r3, [sp, #44]	; 0x2c
 80048da:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80048dc:	eb09 0b03 	add.w	fp, r9, r3
 80048e0:	f10b 0301 	add.w	r3, fp, #1
 80048e4:	2b01      	cmp	r3, #1
 80048e6:	9302      	str	r3, [sp, #8]
 80048e8:	bfb8      	it	lt
 80048ea:	2301      	movlt	r3, #1
 80048ec:	e7dd      	b.n	80048aa <_dtoa_r+0x262>
 80048ee:	2301      	movs	r3, #1
 80048f0:	e7f2      	b.n	80048d8 <_dtoa_r+0x290>
 80048f2:	bf00      	nop
 80048f4:	f3af 8000 	nop.w
 80048f8:	636f4361 	.word	0x636f4361
 80048fc:	3fd287a7 	.word	0x3fd287a7
 8004900:	8b60c8b3 	.word	0x8b60c8b3
 8004904:	3fc68a28 	.word	0x3fc68a28
 8004908:	509f79fb 	.word	0x509f79fb
 800490c:	3fd34413 	.word	0x3fd34413
 8004910:	08007d58 	.word	0x08007d58
 8004914:	08007f1a 	.word	0x08007f1a
 8004918:	7ff00000 	.word	0x7ff00000
 800491c:	08007f16 	.word	0x08007f16
 8004920:	08007f0d 	.word	0x08007f0d
 8004924:	0800817a 	.word	0x0800817a
 8004928:	3ff80000 	.word	0x3ff80000
 800492c:	08008090 	.word	0x08008090
 8004930:	08007f79 	.word	0x08007f79
 8004934:	2401      	movs	r4, #1
 8004936:	2300      	movs	r3, #0
 8004938:	9322      	str	r3, [sp, #136]	; 0x88
 800493a:	940b      	str	r4, [sp, #44]	; 0x2c
 800493c:	f04f 3bff 	mov.w	fp, #4294967295
 8004940:	2200      	movs	r2, #0
 8004942:	f8cd b008 	str.w	fp, [sp, #8]
 8004946:	2312      	movs	r3, #18
 8004948:	9223      	str	r2, [sp, #140]	; 0x8c
 800494a:	e7ae      	b.n	80048aa <_dtoa_r+0x262>
 800494c:	2301      	movs	r3, #1
 800494e:	930b      	str	r3, [sp, #44]	; 0x2c
 8004950:	e7f4      	b.n	800493c <_dtoa_r+0x2f4>
 8004952:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 8004956:	f8cd b008 	str.w	fp, [sp, #8]
 800495a:	465b      	mov	r3, fp
 800495c:	e7a5      	b.n	80048aa <_dtoa_r+0x262>
 800495e:	3101      	adds	r1, #1
 8004960:	6041      	str	r1, [r0, #4]
 8004962:	0052      	lsls	r2, r2, #1
 8004964:	e7a5      	b.n	80048b2 <_dtoa_r+0x26a>
 8004966:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8004968:	9a08      	ldr	r2, [sp, #32]
 800496a:	601a      	str	r2, [r3, #0]
 800496c:	9b02      	ldr	r3, [sp, #8]
 800496e:	2b0e      	cmp	r3, #14
 8004970:	f200 80a8 	bhi.w	8004ac4 <_dtoa_r+0x47c>
 8004974:	2c00      	cmp	r4, #0
 8004976:	f000 80a5 	beq.w	8004ac4 <_dtoa_r+0x47c>
 800497a:	f1b9 0f00 	cmp.w	r9, #0
 800497e:	dd34      	ble.n	80049ea <_dtoa_r+0x3a2>
 8004980:	4a9a      	ldr	r2, [pc, #616]	; (8004bec <_dtoa_r+0x5a4>)
 8004982:	f009 030f 	and.w	r3, r9, #15
 8004986:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800498a:	e9d3 3400 	ldrd	r3, r4, [r3]
 800498e:	f419 7f80 	tst.w	r9, #256	; 0x100
 8004992:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 8004996:	ea4f 1429 	mov.w	r4, r9, asr #4
 800499a:	d016      	beq.n	80049ca <_dtoa_r+0x382>
 800499c:	4b94      	ldr	r3, [pc, #592]	; (8004bf0 <_dtoa_r+0x5a8>)
 800499e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80049a2:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80049a6:	f7fb ff7b 	bl	80008a0 <__aeabi_ddiv>
 80049aa:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80049ae:	f004 040f 	and.w	r4, r4, #15
 80049b2:	2703      	movs	r7, #3
 80049b4:	4e8e      	ldr	r6, [pc, #568]	; (8004bf0 <_dtoa_r+0x5a8>)
 80049b6:	b954      	cbnz	r4, 80049ce <_dtoa_r+0x386>
 80049b8:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 80049bc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80049c0:	f7fb ff6e 	bl	80008a0 <__aeabi_ddiv>
 80049c4:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80049c8:	e029      	b.n	8004a1e <_dtoa_r+0x3d6>
 80049ca:	2702      	movs	r7, #2
 80049cc:	e7f2      	b.n	80049b4 <_dtoa_r+0x36c>
 80049ce:	07e1      	lsls	r1, r4, #31
 80049d0:	d508      	bpl.n	80049e4 <_dtoa_r+0x39c>
 80049d2:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80049d6:	e9d6 2300 	ldrd	r2, r3, [r6]
 80049da:	f7fb fe37 	bl	800064c <__aeabi_dmul>
 80049de:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 80049e2:	3701      	adds	r7, #1
 80049e4:	1064      	asrs	r4, r4, #1
 80049e6:	3608      	adds	r6, #8
 80049e8:	e7e5      	b.n	80049b6 <_dtoa_r+0x36e>
 80049ea:	f000 80a5 	beq.w	8004b38 <_dtoa_r+0x4f0>
 80049ee:	f1c9 0400 	rsb	r4, r9, #0
 80049f2:	4b7e      	ldr	r3, [pc, #504]	; (8004bec <_dtoa_r+0x5a4>)
 80049f4:	4e7e      	ldr	r6, [pc, #504]	; (8004bf0 <_dtoa_r+0x5a8>)
 80049f6:	f004 020f 	and.w	r2, r4, #15
 80049fa:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80049fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004a02:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8004a06:	f7fb fe21 	bl	800064c <__aeabi_dmul>
 8004a0a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8004a0e:	1124      	asrs	r4, r4, #4
 8004a10:	2300      	movs	r3, #0
 8004a12:	2702      	movs	r7, #2
 8004a14:	2c00      	cmp	r4, #0
 8004a16:	f040 8084 	bne.w	8004b22 <_dtoa_r+0x4da>
 8004a1a:	2b00      	cmp	r3, #0
 8004a1c:	d1d2      	bne.n	80049c4 <_dtoa_r+0x37c>
 8004a1e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8004a20:	2b00      	cmp	r3, #0
 8004a22:	f000 808b 	beq.w	8004b3c <_dtoa_r+0x4f4>
 8004a26:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 8004a2a:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 8004a2e:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8004a32:	4b70      	ldr	r3, [pc, #448]	; (8004bf4 <_dtoa_r+0x5ac>)
 8004a34:	2200      	movs	r2, #0
 8004a36:	f7fc f87b 	bl	8000b30 <__aeabi_dcmplt>
 8004a3a:	2800      	cmp	r0, #0
 8004a3c:	d07e      	beq.n	8004b3c <_dtoa_r+0x4f4>
 8004a3e:	9b02      	ldr	r3, [sp, #8]
 8004a40:	2b00      	cmp	r3, #0
 8004a42:	d07b      	beq.n	8004b3c <_dtoa_r+0x4f4>
 8004a44:	f1bb 0f00 	cmp.w	fp, #0
 8004a48:	dd38      	ble.n	8004abc <_dtoa_r+0x474>
 8004a4a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8004a4e:	4b6a      	ldr	r3, [pc, #424]	; (8004bf8 <_dtoa_r+0x5b0>)
 8004a50:	2200      	movs	r2, #0
 8004a52:	f7fb fdfb 	bl	800064c <__aeabi_dmul>
 8004a56:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8004a5a:	f109 38ff 	add.w	r8, r9, #4294967295
 8004a5e:	3701      	adds	r7, #1
 8004a60:	465c      	mov	r4, fp
 8004a62:	4638      	mov	r0, r7
 8004a64:	f7fb fd88 	bl	8000578 <__aeabi_i2d>
 8004a68:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8004a6c:	f7fb fdee 	bl	800064c <__aeabi_dmul>
 8004a70:	4b62      	ldr	r3, [pc, #392]	; (8004bfc <_dtoa_r+0x5b4>)
 8004a72:	2200      	movs	r2, #0
 8004a74:	f7fb fc34 	bl	80002e0 <__adddf3>
 8004a78:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 8004a7c:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8004a80:	9611      	str	r6, [sp, #68]	; 0x44
 8004a82:	2c00      	cmp	r4, #0
 8004a84:	d15d      	bne.n	8004b42 <_dtoa_r+0x4fa>
 8004a86:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004a8a:	4b5d      	ldr	r3, [pc, #372]	; (8004c00 <_dtoa_r+0x5b8>)
 8004a8c:	2200      	movs	r2, #0
 8004a8e:	f7fb fc25 	bl	80002dc <__aeabi_dsub>
 8004a92:	4602      	mov	r2, r0
 8004a94:	460b      	mov	r3, r1
 8004a96:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8004a9a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8004a9c:	4633      	mov	r3, r6
 8004a9e:	f7fc f865 	bl	8000b6c <__aeabi_dcmpgt>
 8004aa2:	2800      	cmp	r0, #0
 8004aa4:	f040 829e 	bne.w	8004fe4 <_dtoa_r+0x99c>
 8004aa8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004aac:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8004aae:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 8004ab2:	f7fc f83d 	bl	8000b30 <__aeabi_dcmplt>
 8004ab6:	2800      	cmp	r0, #0
 8004ab8:	f040 8292 	bne.w	8004fe0 <_dtoa_r+0x998>
 8004abc:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	; 0x30
 8004ac0:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8004ac4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004ac6:	2b00      	cmp	r3, #0
 8004ac8:	f2c0 8153 	blt.w	8004d72 <_dtoa_r+0x72a>
 8004acc:	f1b9 0f0e 	cmp.w	r9, #14
 8004ad0:	f300 814f 	bgt.w	8004d72 <_dtoa_r+0x72a>
 8004ad4:	4b45      	ldr	r3, [pc, #276]	; (8004bec <_dtoa_r+0x5a4>)
 8004ad6:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
 8004ada:	e9d3 3400 	ldrd	r3, r4, [r3]
 8004ade:	e9cd 3406 	strd	r3, r4, [sp, #24]
 8004ae2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8004ae4:	2b00      	cmp	r3, #0
 8004ae6:	f280 80db 	bge.w	8004ca0 <_dtoa_r+0x658>
 8004aea:	9b02      	ldr	r3, [sp, #8]
 8004aec:	2b00      	cmp	r3, #0
 8004aee:	f300 80d7 	bgt.w	8004ca0 <_dtoa_r+0x658>
 8004af2:	f040 8274 	bne.w	8004fde <_dtoa_r+0x996>
 8004af6:	4b42      	ldr	r3, [pc, #264]	; (8004c00 <_dtoa_r+0x5b8>)
 8004af8:	2200      	movs	r2, #0
 8004afa:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8004afe:	f7fb fda5 	bl	800064c <__aeabi_dmul>
 8004b02:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8004b06:	f7fc f827 	bl	8000b58 <__aeabi_dcmpge>
 8004b0a:	9c02      	ldr	r4, [sp, #8]
 8004b0c:	4626      	mov	r6, r4
 8004b0e:	2800      	cmp	r0, #0
 8004b10:	f040 824a 	bne.w	8004fa8 <_dtoa_r+0x960>
 8004b14:	9f08      	ldr	r7, [sp, #32]
 8004b16:	2331      	movs	r3, #49	; 0x31
 8004b18:	f807 3b01 	strb.w	r3, [r7], #1
 8004b1c:	f109 0901 	add.w	r9, r9, #1
 8004b20:	e246      	b.n	8004fb0 <_dtoa_r+0x968>
 8004b22:	07e2      	lsls	r2, r4, #31
 8004b24:	d505      	bpl.n	8004b32 <_dtoa_r+0x4ea>
 8004b26:	e9d6 2300 	ldrd	r2, r3, [r6]
 8004b2a:	f7fb fd8f 	bl	800064c <__aeabi_dmul>
 8004b2e:	3701      	adds	r7, #1
 8004b30:	2301      	movs	r3, #1
 8004b32:	1064      	asrs	r4, r4, #1
 8004b34:	3608      	adds	r6, #8
 8004b36:	e76d      	b.n	8004a14 <_dtoa_r+0x3cc>
 8004b38:	2702      	movs	r7, #2
 8004b3a:	e770      	b.n	8004a1e <_dtoa_r+0x3d6>
 8004b3c:	9c02      	ldr	r4, [sp, #8]
 8004b3e:	46c8      	mov	r8, r9
 8004b40:	e78f      	b.n	8004a62 <_dtoa_r+0x41a>
 8004b42:	9908      	ldr	r1, [sp, #32]
 8004b44:	4b29      	ldr	r3, [pc, #164]	; (8004bec <_dtoa_r+0x5a4>)
 8004b46:	4421      	add	r1, r4
 8004b48:	9112      	str	r1, [sp, #72]	; 0x48
 8004b4a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004b4c:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8004b50:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 8004b54:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8004b58:	2900      	cmp	r1, #0
 8004b5a:	d055      	beq.n	8004c08 <_dtoa_r+0x5c0>
 8004b5c:	4929      	ldr	r1, [pc, #164]	; (8004c04 <_dtoa_r+0x5bc>)
 8004b5e:	2000      	movs	r0, #0
 8004b60:	f7fb fe9e 	bl	80008a0 <__aeabi_ddiv>
 8004b64:	463b      	mov	r3, r7
 8004b66:	4632      	mov	r2, r6
 8004b68:	f7fb fbb8 	bl	80002dc <__aeabi_dsub>
 8004b6c:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8004b70:	9f08      	ldr	r7, [sp, #32]
 8004b72:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004b76:	f7fc f819 	bl	8000bac <__aeabi_d2iz>
 8004b7a:	4604      	mov	r4, r0
 8004b7c:	f7fb fcfc 	bl	8000578 <__aeabi_i2d>
 8004b80:	4602      	mov	r2, r0
 8004b82:	460b      	mov	r3, r1
 8004b84:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004b88:	f7fb fba8 	bl	80002dc <__aeabi_dsub>
 8004b8c:	3430      	adds	r4, #48	; 0x30
 8004b8e:	4602      	mov	r2, r0
 8004b90:	460b      	mov	r3, r1
 8004b92:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8004b96:	f807 4b01 	strb.w	r4, [r7], #1
 8004b9a:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8004b9e:	f7fb ffc7 	bl	8000b30 <__aeabi_dcmplt>
 8004ba2:	2800      	cmp	r0, #0
 8004ba4:	d174      	bne.n	8004c90 <_dtoa_r+0x648>
 8004ba6:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8004baa:	4912      	ldr	r1, [pc, #72]	; (8004bf4 <_dtoa_r+0x5ac>)
 8004bac:	2000      	movs	r0, #0
 8004bae:	f7fb fb95 	bl	80002dc <__aeabi_dsub>
 8004bb2:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8004bb6:	f7fb ffbb 	bl	8000b30 <__aeabi_dcmplt>
 8004bba:	2800      	cmp	r0, #0
 8004bbc:	f040 80b6 	bne.w	8004d2c <_dtoa_r+0x6e4>
 8004bc0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004bc2:	429f      	cmp	r7, r3
 8004bc4:	f43f af7a 	beq.w	8004abc <_dtoa_r+0x474>
 8004bc8:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8004bcc:	4b0a      	ldr	r3, [pc, #40]	; (8004bf8 <_dtoa_r+0x5b0>)
 8004bce:	2200      	movs	r2, #0
 8004bd0:	f7fb fd3c 	bl	800064c <__aeabi_dmul>
 8004bd4:	4b08      	ldr	r3, [pc, #32]	; (8004bf8 <_dtoa_r+0x5b0>)
 8004bd6:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8004bda:	2200      	movs	r2, #0
 8004bdc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004be0:	f7fb fd34 	bl	800064c <__aeabi_dmul>
 8004be4:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8004be8:	e7c3      	b.n	8004b72 <_dtoa_r+0x52a>
 8004bea:	bf00      	nop
 8004bec:	08008090 	.word	0x08008090
 8004bf0:	08008068 	.word	0x08008068
 8004bf4:	3ff00000 	.word	0x3ff00000
 8004bf8:	40240000 	.word	0x40240000
 8004bfc:	401c0000 	.word	0x401c0000
 8004c00:	40140000 	.word	0x40140000
 8004c04:	3fe00000 	.word	0x3fe00000
 8004c08:	4630      	mov	r0, r6
 8004c0a:	4639      	mov	r1, r7
 8004c0c:	f7fb fd1e 	bl	800064c <__aeabi_dmul>
 8004c10:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8004c14:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004c16:	9c08      	ldr	r4, [sp, #32]
 8004c18:	9314      	str	r3, [sp, #80]	; 0x50
 8004c1a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004c1e:	f7fb ffc5 	bl	8000bac <__aeabi_d2iz>
 8004c22:	9015      	str	r0, [sp, #84]	; 0x54
 8004c24:	f7fb fca8 	bl	8000578 <__aeabi_i2d>
 8004c28:	4602      	mov	r2, r0
 8004c2a:	460b      	mov	r3, r1
 8004c2c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004c30:	f7fb fb54 	bl	80002dc <__aeabi_dsub>
 8004c34:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004c36:	3330      	adds	r3, #48	; 0x30
 8004c38:	f804 3b01 	strb.w	r3, [r4], #1
 8004c3c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004c3e:	429c      	cmp	r4, r3
 8004c40:	4606      	mov	r6, r0
 8004c42:	460f      	mov	r7, r1
 8004c44:	f04f 0200 	mov.w	r2, #0
 8004c48:	d124      	bne.n	8004c94 <_dtoa_r+0x64c>
 8004c4a:	4bb2      	ldr	r3, [pc, #712]	; (8004f14 <_dtoa_r+0x8cc>)
 8004c4c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8004c50:	f7fb fb46 	bl	80002e0 <__adddf3>
 8004c54:	4602      	mov	r2, r0
 8004c56:	460b      	mov	r3, r1
 8004c58:	4630      	mov	r0, r6
 8004c5a:	4639      	mov	r1, r7
 8004c5c:	f7fb ff86 	bl	8000b6c <__aeabi_dcmpgt>
 8004c60:	2800      	cmp	r0, #0
 8004c62:	d162      	bne.n	8004d2a <_dtoa_r+0x6e2>
 8004c64:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8004c68:	49aa      	ldr	r1, [pc, #680]	; (8004f14 <_dtoa_r+0x8cc>)
 8004c6a:	2000      	movs	r0, #0
 8004c6c:	f7fb fb36 	bl	80002dc <__aeabi_dsub>
 8004c70:	4602      	mov	r2, r0
 8004c72:	460b      	mov	r3, r1
 8004c74:	4630      	mov	r0, r6
 8004c76:	4639      	mov	r1, r7
 8004c78:	f7fb ff5a 	bl	8000b30 <__aeabi_dcmplt>
 8004c7c:	2800      	cmp	r0, #0
 8004c7e:	f43f af1d 	beq.w	8004abc <_dtoa_r+0x474>
 8004c82:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8004c84:	1e7b      	subs	r3, r7, #1
 8004c86:	9314      	str	r3, [sp, #80]	; 0x50
 8004c88:	f817 3c01 	ldrb.w	r3, [r7, #-1]
 8004c8c:	2b30      	cmp	r3, #48	; 0x30
 8004c8e:	d0f8      	beq.n	8004c82 <_dtoa_r+0x63a>
 8004c90:	46c1      	mov	r9, r8
 8004c92:	e03a      	b.n	8004d0a <_dtoa_r+0x6c2>
 8004c94:	4ba0      	ldr	r3, [pc, #640]	; (8004f18 <_dtoa_r+0x8d0>)
 8004c96:	f7fb fcd9 	bl	800064c <__aeabi_dmul>
 8004c9a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8004c9e:	e7bc      	b.n	8004c1a <_dtoa_r+0x5d2>
 8004ca0:	9f08      	ldr	r7, [sp, #32]
 8004ca2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8004ca6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004caa:	f7fb fdf9 	bl	80008a0 <__aeabi_ddiv>
 8004cae:	f7fb ff7d 	bl	8000bac <__aeabi_d2iz>
 8004cb2:	4604      	mov	r4, r0
 8004cb4:	f7fb fc60 	bl	8000578 <__aeabi_i2d>
 8004cb8:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8004cbc:	f7fb fcc6 	bl	800064c <__aeabi_dmul>
 8004cc0:	f104 0630 	add.w	r6, r4, #48	; 0x30
 8004cc4:	460b      	mov	r3, r1
 8004cc6:	4602      	mov	r2, r0
 8004cc8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004ccc:	f7fb fb06 	bl	80002dc <__aeabi_dsub>
 8004cd0:	f807 6b01 	strb.w	r6, [r7], #1
 8004cd4:	9e08      	ldr	r6, [sp, #32]
 8004cd6:	9b02      	ldr	r3, [sp, #8]
 8004cd8:	1bbe      	subs	r6, r7, r6
 8004cda:	42b3      	cmp	r3, r6
 8004cdc:	d13a      	bne.n	8004d54 <_dtoa_r+0x70c>
 8004cde:	4602      	mov	r2, r0
 8004ce0:	460b      	mov	r3, r1
 8004ce2:	f7fb fafd 	bl	80002e0 <__adddf3>
 8004ce6:	4602      	mov	r2, r0
 8004ce8:	460b      	mov	r3, r1
 8004cea:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8004cee:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8004cf2:	f7fb ff3b 	bl	8000b6c <__aeabi_dcmpgt>
 8004cf6:	bb58      	cbnz	r0, 8004d50 <_dtoa_r+0x708>
 8004cf8:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8004cfc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8004d00:	f7fb ff0c 	bl	8000b1c <__aeabi_dcmpeq>
 8004d04:	b108      	cbz	r0, 8004d0a <_dtoa_r+0x6c2>
 8004d06:	07e1      	lsls	r1, r4, #31
 8004d08:	d422      	bmi.n	8004d50 <_dtoa_r+0x708>
 8004d0a:	4628      	mov	r0, r5
 8004d0c:	4651      	mov	r1, sl
 8004d0e:	f000 ffb3 	bl	8005c78 <_Bfree>
 8004d12:	2300      	movs	r3, #0
 8004d14:	703b      	strb	r3, [r7, #0]
 8004d16:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8004d18:	f109 0001 	add.w	r0, r9, #1
 8004d1c:	6018      	str	r0, [r3, #0]
 8004d1e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8004d20:	2b00      	cmp	r3, #0
 8004d22:	f43f acde 	beq.w	80046e2 <_dtoa_r+0x9a>
 8004d26:	601f      	str	r7, [r3, #0]
 8004d28:	e4db      	b.n	80046e2 <_dtoa_r+0x9a>
 8004d2a:	4627      	mov	r7, r4
 8004d2c:	463b      	mov	r3, r7
 8004d2e:	461f      	mov	r7, r3
 8004d30:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8004d34:	2a39      	cmp	r2, #57	; 0x39
 8004d36:	d107      	bne.n	8004d48 <_dtoa_r+0x700>
 8004d38:	9a08      	ldr	r2, [sp, #32]
 8004d3a:	429a      	cmp	r2, r3
 8004d3c:	d1f7      	bne.n	8004d2e <_dtoa_r+0x6e6>
 8004d3e:	9908      	ldr	r1, [sp, #32]
 8004d40:	2230      	movs	r2, #48	; 0x30
 8004d42:	f108 0801 	add.w	r8, r8, #1
 8004d46:	700a      	strb	r2, [r1, #0]
 8004d48:	781a      	ldrb	r2, [r3, #0]
 8004d4a:	3201      	adds	r2, #1
 8004d4c:	701a      	strb	r2, [r3, #0]
 8004d4e:	e79f      	b.n	8004c90 <_dtoa_r+0x648>
 8004d50:	46c8      	mov	r8, r9
 8004d52:	e7eb      	b.n	8004d2c <_dtoa_r+0x6e4>
 8004d54:	4b70      	ldr	r3, [pc, #448]	; (8004f18 <_dtoa_r+0x8d0>)
 8004d56:	2200      	movs	r2, #0
 8004d58:	f7fb fc78 	bl	800064c <__aeabi_dmul>
 8004d5c:	4602      	mov	r2, r0
 8004d5e:	460b      	mov	r3, r1
 8004d60:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8004d64:	2200      	movs	r2, #0
 8004d66:	2300      	movs	r3, #0
 8004d68:	f7fb fed8 	bl	8000b1c <__aeabi_dcmpeq>
 8004d6c:	2800      	cmp	r0, #0
 8004d6e:	d098      	beq.n	8004ca2 <_dtoa_r+0x65a>
 8004d70:	e7cb      	b.n	8004d0a <_dtoa_r+0x6c2>
 8004d72:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8004d74:	2a00      	cmp	r2, #0
 8004d76:	f000 80d1 	beq.w	8004f1c <_dtoa_r+0x8d4>
 8004d7a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8004d7c:	2a01      	cmp	r2, #1
 8004d7e:	f300 80af 	bgt.w	8004ee0 <_dtoa_r+0x898>
 8004d82:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8004d84:	2a00      	cmp	r2, #0
 8004d86:	f000 80a7 	beq.w	8004ed8 <_dtoa_r+0x890>
 8004d8a:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8004d8e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004d90:	9f06      	ldr	r7, [sp, #24]
 8004d92:	9a06      	ldr	r2, [sp, #24]
 8004d94:	441a      	add	r2, r3
 8004d96:	9206      	str	r2, [sp, #24]
 8004d98:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004d9a:	2101      	movs	r1, #1
 8004d9c:	441a      	add	r2, r3
 8004d9e:	4628      	mov	r0, r5
 8004da0:	9209      	str	r2, [sp, #36]	; 0x24
 8004da2:	f001 f86d 	bl	8005e80 <__i2b>
 8004da6:	4606      	mov	r6, r0
 8004da8:	2f00      	cmp	r7, #0
 8004daa:	dd0c      	ble.n	8004dc6 <_dtoa_r+0x77e>
 8004dac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004dae:	2b00      	cmp	r3, #0
 8004db0:	dd09      	ble.n	8004dc6 <_dtoa_r+0x77e>
 8004db2:	42bb      	cmp	r3, r7
 8004db4:	9a06      	ldr	r2, [sp, #24]
 8004db6:	bfa8      	it	ge
 8004db8:	463b      	movge	r3, r7
 8004dba:	1ad2      	subs	r2, r2, r3
 8004dbc:	9206      	str	r2, [sp, #24]
 8004dbe:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004dc0:	1aff      	subs	r7, r7, r3
 8004dc2:	1ad3      	subs	r3, r2, r3
 8004dc4:	9309      	str	r3, [sp, #36]	; 0x24
 8004dc6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004dc8:	b1f3      	cbz	r3, 8004e08 <_dtoa_r+0x7c0>
 8004dca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004dcc:	2b00      	cmp	r3, #0
 8004dce:	f000 80a9 	beq.w	8004f24 <_dtoa_r+0x8dc>
 8004dd2:	2c00      	cmp	r4, #0
 8004dd4:	dd10      	ble.n	8004df8 <_dtoa_r+0x7b0>
 8004dd6:	4631      	mov	r1, r6
 8004dd8:	4622      	mov	r2, r4
 8004dda:	4628      	mov	r0, r5
 8004ddc:	f001 f90c 	bl	8005ff8 <__pow5mult>
 8004de0:	4652      	mov	r2, sl
 8004de2:	4601      	mov	r1, r0
 8004de4:	4606      	mov	r6, r0
 8004de6:	4628      	mov	r0, r5
 8004de8:	f001 f860 	bl	8005eac <__multiply>
 8004dec:	4651      	mov	r1, sl
 8004dee:	4680      	mov	r8, r0
 8004df0:	4628      	mov	r0, r5
 8004df2:	f000 ff41 	bl	8005c78 <_Bfree>
 8004df6:	46c2      	mov	sl, r8
 8004df8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004dfa:	1b1a      	subs	r2, r3, r4
 8004dfc:	d004      	beq.n	8004e08 <_dtoa_r+0x7c0>
 8004dfe:	4651      	mov	r1, sl
 8004e00:	4628      	mov	r0, r5
 8004e02:	f001 f8f9 	bl	8005ff8 <__pow5mult>
 8004e06:	4682      	mov	sl, r0
 8004e08:	2101      	movs	r1, #1
 8004e0a:	4628      	mov	r0, r5
 8004e0c:	f001 f838 	bl	8005e80 <__i2b>
 8004e10:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004e12:	2b00      	cmp	r3, #0
 8004e14:	4604      	mov	r4, r0
 8004e16:	f340 8087 	ble.w	8004f28 <_dtoa_r+0x8e0>
 8004e1a:	461a      	mov	r2, r3
 8004e1c:	4601      	mov	r1, r0
 8004e1e:	4628      	mov	r0, r5
 8004e20:	f001 f8ea 	bl	8005ff8 <__pow5mult>
 8004e24:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004e26:	2b01      	cmp	r3, #1
 8004e28:	4604      	mov	r4, r0
 8004e2a:	f340 8080 	ble.w	8004f2e <_dtoa_r+0x8e6>
 8004e2e:	f04f 0800 	mov.w	r8, #0
 8004e32:	6923      	ldr	r3, [r4, #16]
 8004e34:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8004e38:	6918      	ldr	r0, [r3, #16]
 8004e3a:	f000 ffd3 	bl	8005de4 <__hi0bits>
 8004e3e:	f1c0 0020 	rsb	r0, r0, #32
 8004e42:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004e44:	4418      	add	r0, r3
 8004e46:	f010 001f 	ands.w	r0, r0, #31
 8004e4a:	f000 8092 	beq.w	8004f72 <_dtoa_r+0x92a>
 8004e4e:	f1c0 0320 	rsb	r3, r0, #32
 8004e52:	2b04      	cmp	r3, #4
 8004e54:	f340 808a 	ble.w	8004f6c <_dtoa_r+0x924>
 8004e58:	f1c0 001c 	rsb	r0, r0, #28
 8004e5c:	9b06      	ldr	r3, [sp, #24]
 8004e5e:	4403      	add	r3, r0
 8004e60:	9306      	str	r3, [sp, #24]
 8004e62:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004e64:	4403      	add	r3, r0
 8004e66:	4407      	add	r7, r0
 8004e68:	9309      	str	r3, [sp, #36]	; 0x24
 8004e6a:	9b06      	ldr	r3, [sp, #24]
 8004e6c:	2b00      	cmp	r3, #0
 8004e6e:	dd05      	ble.n	8004e7c <_dtoa_r+0x834>
 8004e70:	4651      	mov	r1, sl
 8004e72:	461a      	mov	r2, r3
 8004e74:	4628      	mov	r0, r5
 8004e76:	f001 f919 	bl	80060ac <__lshift>
 8004e7a:	4682      	mov	sl, r0
 8004e7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004e7e:	2b00      	cmp	r3, #0
 8004e80:	dd05      	ble.n	8004e8e <_dtoa_r+0x846>
 8004e82:	4621      	mov	r1, r4
 8004e84:	461a      	mov	r2, r3
 8004e86:	4628      	mov	r0, r5
 8004e88:	f001 f910 	bl	80060ac <__lshift>
 8004e8c:	4604      	mov	r4, r0
 8004e8e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8004e90:	2b00      	cmp	r3, #0
 8004e92:	d070      	beq.n	8004f76 <_dtoa_r+0x92e>
 8004e94:	4621      	mov	r1, r4
 8004e96:	4650      	mov	r0, sl
 8004e98:	f001 f974 	bl	8006184 <__mcmp>
 8004e9c:	2800      	cmp	r0, #0
 8004e9e:	da6a      	bge.n	8004f76 <_dtoa_r+0x92e>
 8004ea0:	2300      	movs	r3, #0
 8004ea2:	4651      	mov	r1, sl
 8004ea4:	220a      	movs	r2, #10
 8004ea6:	4628      	mov	r0, r5
 8004ea8:	f000 ff08 	bl	8005cbc <__multadd>
 8004eac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004eae:	f109 39ff 	add.w	r9, r9, #4294967295
 8004eb2:	4682      	mov	sl, r0
 8004eb4:	2b00      	cmp	r3, #0
 8004eb6:	f000 8193 	beq.w	80051e0 <_dtoa_r+0xb98>
 8004eba:	4631      	mov	r1, r6
 8004ebc:	2300      	movs	r3, #0
 8004ebe:	220a      	movs	r2, #10
 8004ec0:	4628      	mov	r0, r5
 8004ec2:	f000 fefb 	bl	8005cbc <__multadd>
 8004ec6:	f1bb 0f00 	cmp.w	fp, #0
 8004eca:	4606      	mov	r6, r0
 8004ecc:	f300 8093 	bgt.w	8004ff6 <_dtoa_r+0x9ae>
 8004ed0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004ed2:	2b02      	cmp	r3, #2
 8004ed4:	dc57      	bgt.n	8004f86 <_dtoa_r+0x93e>
 8004ed6:	e08e      	b.n	8004ff6 <_dtoa_r+0x9ae>
 8004ed8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8004eda:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8004ede:	e756      	b.n	8004d8e <_dtoa_r+0x746>
 8004ee0:	9b02      	ldr	r3, [sp, #8]
 8004ee2:	1e5c      	subs	r4, r3, #1
 8004ee4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004ee6:	42a3      	cmp	r3, r4
 8004ee8:	bfbf      	itttt	lt
 8004eea:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 8004eec:	940a      	strlt	r4, [sp, #40]	; 0x28
 8004eee:	1ae2      	sublt	r2, r4, r3
 8004ef0:	9b0e      	ldrlt	r3, [sp, #56]	; 0x38
 8004ef2:	bfb6      	itet	lt
 8004ef4:	189b      	addlt	r3, r3, r2
 8004ef6:	1b1c      	subge	r4, r3, r4
 8004ef8:	930e      	strlt	r3, [sp, #56]	; 0x38
 8004efa:	9b02      	ldr	r3, [sp, #8]
 8004efc:	bfb8      	it	lt
 8004efe:	2400      	movlt	r4, #0
 8004f00:	2b00      	cmp	r3, #0
 8004f02:	bfb9      	ittee	lt
 8004f04:	9b06      	ldrlt	r3, [sp, #24]
 8004f06:	9a02      	ldrlt	r2, [sp, #8]
 8004f08:	9f06      	ldrge	r7, [sp, #24]
 8004f0a:	9b02      	ldrge	r3, [sp, #8]
 8004f0c:	bfbc      	itt	lt
 8004f0e:	1a9f      	sublt	r7, r3, r2
 8004f10:	2300      	movlt	r3, #0
 8004f12:	e73e      	b.n	8004d92 <_dtoa_r+0x74a>
 8004f14:	3fe00000 	.word	0x3fe00000
 8004f18:	40240000 	.word	0x40240000
 8004f1c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004f1e:	9f06      	ldr	r7, [sp, #24]
 8004f20:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8004f22:	e741      	b.n	8004da8 <_dtoa_r+0x760>
 8004f24:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004f26:	e76a      	b.n	8004dfe <_dtoa_r+0x7b6>
 8004f28:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004f2a:	2b01      	cmp	r3, #1
 8004f2c:	dc19      	bgt.n	8004f62 <_dtoa_r+0x91a>
 8004f2e:	9b04      	ldr	r3, [sp, #16]
 8004f30:	b9bb      	cbnz	r3, 8004f62 <_dtoa_r+0x91a>
 8004f32:	9b05      	ldr	r3, [sp, #20]
 8004f34:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8004f38:	b99b      	cbnz	r3, 8004f62 <_dtoa_r+0x91a>
 8004f3a:	9b05      	ldr	r3, [sp, #20]
 8004f3c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8004f40:	0d1b      	lsrs	r3, r3, #20
 8004f42:	051b      	lsls	r3, r3, #20
 8004f44:	b183      	cbz	r3, 8004f68 <_dtoa_r+0x920>
 8004f46:	9b06      	ldr	r3, [sp, #24]
 8004f48:	3301      	adds	r3, #1
 8004f4a:	9306      	str	r3, [sp, #24]
 8004f4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004f4e:	3301      	adds	r3, #1
 8004f50:	9309      	str	r3, [sp, #36]	; 0x24
 8004f52:	f04f 0801 	mov.w	r8, #1
 8004f56:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004f58:	2b00      	cmp	r3, #0
 8004f5a:	f47f af6a 	bne.w	8004e32 <_dtoa_r+0x7ea>
 8004f5e:	2001      	movs	r0, #1
 8004f60:	e76f      	b.n	8004e42 <_dtoa_r+0x7fa>
 8004f62:	f04f 0800 	mov.w	r8, #0
 8004f66:	e7f6      	b.n	8004f56 <_dtoa_r+0x90e>
 8004f68:	4698      	mov	r8, r3
 8004f6a:	e7f4      	b.n	8004f56 <_dtoa_r+0x90e>
 8004f6c:	f43f af7d 	beq.w	8004e6a <_dtoa_r+0x822>
 8004f70:	4618      	mov	r0, r3
 8004f72:	301c      	adds	r0, #28
 8004f74:	e772      	b.n	8004e5c <_dtoa_r+0x814>
 8004f76:	9b02      	ldr	r3, [sp, #8]
 8004f78:	2b00      	cmp	r3, #0
 8004f7a:	dc36      	bgt.n	8004fea <_dtoa_r+0x9a2>
 8004f7c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004f7e:	2b02      	cmp	r3, #2
 8004f80:	dd33      	ble.n	8004fea <_dtoa_r+0x9a2>
 8004f82:	f8dd b008 	ldr.w	fp, [sp, #8]
 8004f86:	f1bb 0f00 	cmp.w	fp, #0
 8004f8a:	d10d      	bne.n	8004fa8 <_dtoa_r+0x960>
 8004f8c:	4621      	mov	r1, r4
 8004f8e:	465b      	mov	r3, fp
 8004f90:	2205      	movs	r2, #5
 8004f92:	4628      	mov	r0, r5
 8004f94:	f000 fe92 	bl	8005cbc <__multadd>
 8004f98:	4601      	mov	r1, r0
 8004f9a:	4604      	mov	r4, r0
 8004f9c:	4650      	mov	r0, sl
 8004f9e:	f001 f8f1 	bl	8006184 <__mcmp>
 8004fa2:	2800      	cmp	r0, #0
 8004fa4:	f73f adb6 	bgt.w	8004b14 <_dtoa_r+0x4cc>
 8004fa8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8004faa:	9f08      	ldr	r7, [sp, #32]
 8004fac:	ea6f 0903 	mvn.w	r9, r3
 8004fb0:	f04f 0800 	mov.w	r8, #0
 8004fb4:	4621      	mov	r1, r4
 8004fb6:	4628      	mov	r0, r5
 8004fb8:	f000 fe5e 	bl	8005c78 <_Bfree>
 8004fbc:	2e00      	cmp	r6, #0
 8004fbe:	f43f aea4 	beq.w	8004d0a <_dtoa_r+0x6c2>
 8004fc2:	f1b8 0f00 	cmp.w	r8, #0
 8004fc6:	d005      	beq.n	8004fd4 <_dtoa_r+0x98c>
 8004fc8:	45b0      	cmp	r8, r6
 8004fca:	d003      	beq.n	8004fd4 <_dtoa_r+0x98c>
 8004fcc:	4641      	mov	r1, r8
 8004fce:	4628      	mov	r0, r5
 8004fd0:	f000 fe52 	bl	8005c78 <_Bfree>
 8004fd4:	4631      	mov	r1, r6
 8004fd6:	4628      	mov	r0, r5
 8004fd8:	f000 fe4e 	bl	8005c78 <_Bfree>
 8004fdc:	e695      	b.n	8004d0a <_dtoa_r+0x6c2>
 8004fde:	2400      	movs	r4, #0
 8004fe0:	4626      	mov	r6, r4
 8004fe2:	e7e1      	b.n	8004fa8 <_dtoa_r+0x960>
 8004fe4:	46c1      	mov	r9, r8
 8004fe6:	4626      	mov	r6, r4
 8004fe8:	e594      	b.n	8004b14 <_dtoa_r+0x4cc>
 8004fea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004fec:	f8dd b008 	ldr.w	fp, [sp, #8]
 8004ff0:	2b00      	cmp	r3, #0
 8004ff2:	f000 80fc 	beq.w	80051ee <_dtoa_r+0xba6>
 8004ff6:	2f00      	cmp	r7, #0
 8004ff8:	dd05      	ble.n	8005006 <_dtoa_r+0x9be>
 8004ffa:	4631      	mov	r1, r6
 8004ffc:	463a      	mov	r2, r7
 8004ffe:	4628      	mov	r0, r5
 8005000:	f001 f854 	bl	80060ac <__lshift>
 8005004:	4606      	mov	r6, r0
 8005006:	f1b8 0f00 	cmp.w	r8, #0
 800500a:	d05c      	beq.n	80050c6 <_dtoa_r+0xa7e>
 800500c:	6871      	ldr	r1, [r6, #4]
 800500e:	4628      	mov	r0, r5
 8005010:	f000 fdf2 	bl	8005bf8 <_Balloc>
 8005014:	4607      	mov	r7, r0
 8005016:	b928      	cbnz	r0, 8005024 <_dtoa_r+0x9dc>
 8005018:	4b7f      	ldr	r3, [pc, #508]	; (8005218 <_dtoa_r+0xbd0>)
 800501a:	4602      	mov	r2, r0
 800501c:	f240 21ea 	movw	r1, #746	; 0x2ea
 8005020:	f7ff bb26 	b.w	8004670 <_dtoa_r+0x28>
 8005024:	6932      	ldr	r2, [r6, #16]
 8005026:	3202      	adds	r2, #2
 8005028:	0092      	lsls	r2, r2, #2
 800502a:	f106 010c 	add.w	r1, r6, #12
 800502e:	300c      	adds	r0, #12
 8005030:	f7fd f8f7 	bl	8002222 <memcpy>
 8005034:	2201      	movs	r2, #1
 8005036:	4639      	mov	r1, r7
 8005038:	4628      	mov	r0, r5
 800503a:	f001 f837 	bl	80060ac <__lshift>
 800503e:	9b08      	ldr	r3, [sp, #32]
 8005040:	3301      	adds	r3, #1
 8005042:	9302      	str	r3, [sp, #8]
 8005044:	9b08      	ldr	r3, [sp, #32]
 8005046:	445b      	add	r3, fp
 8005048:	930a      	str	r3, [sp, #40]	; 0x28
 800504a:	9b04      	ldr	r3, [sp, #16]
 800504c:	f003 0301 	and.w	r3, r3, #1
 8005050:	46b0      	mov	r8, r6
 8005052:	9309      	str	r3, [sp, #36]	; 0x24
 8005054:	4606      	mov	r6, r0
 8005056:	9b02      	ldr	r3, [sp, #8]
 8005058:	4621      	mov	r1, r4
 800505a:	4650      	mov	r0, sl
 800505c:	f103 3bff 	add.w	fp, r3, #4294967295
 8005060:	f7ff fa64 	bl	800452c <quorem>
 8005064:	4603      	mov	r3, r0
 8005066:	3330      	adds	r3, #48	; 0x30
 8005068:	9004      	str	r0, [sp, #16]
 800506a:	4641      	mov	r1, r8
 800506c:	4650      	mov	r0, sl
 800506e:	930b      	str	r3, [sp, #44]	; 0x2c
 8005070:	f001 f888 	bl	8006184 <__mcmp>
 8005074:	4632      	mov	r2, r6
 8005076:	9006      	str	r0, [sp, #24]
 8005078:	4621      	mov	r1, r4
 800507a:	4628      	mov	r0, r5
 800507c:	f001 f89e 	bl	80061bc <__mdiff>
 8005080:	68c2      	ldr	r2, [r0, #12]
 8005082:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005084:	4607      	mov	r7, r0
 8005086:	bb02      	cbnz	r2, 80050ca <_dtoa_r+0xa82>
 8005088:	4601      	mov	r1, r0
 800508a:	4650      	mov	r0, sl
 800508c:	f001 f87a 	bl	8006184 <__mcmp>
 8005090:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005092:	4602      	mov	r2, r0
 8005094:	4639      	mov	r1, r7
 8005096:	4628      	mov	r0, r5
 8005098:	e9cd 320b 	strd	r3, r2, [sp, #44]	; 0x2c
 800509c:	f000 fdec 	bl	8005c78 <_Bfree>
 80050a0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80050a2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80050a4:	9f02      	ldr	r7, [sp, #8]
 80050a6:	ea43 0102 	orr.w	r1, r3, r2
 80050aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80050ac:	430b      	orrs	r3, r1
 80050ae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80050b0:	d10d      	bne.n	80050ce <_dtoa_r+0xa86>
 80050b2:	2b39      	cmp	r3, #57	; 0x39
 80050b4:	d027      	beq.n	8005106 <_dtoa_r+0xabe>
 80050b6:	9a06      	ldr	r2, [sp, #24]
 80050b8:	2a00      	cmp	r2, #0
 80050ba:	dd01      	ble.n	80050c0 <_dtoa_r+0xa78>
 80050bc:	9b04      	ldr	r3, [sp, #16]
 80050be:	3331      	adds	r3, #49	; 0x31
 80050c0:	f88b 3000 	strb.w	r3, [fp]
 80050c4:	e776      	b.n	8004fb4 <_dtoa_r+0x96c>
 80050c6:	4630      	mov	r0, r6
 80050c8:	e7b9      	b.n	800503e <_dtoa_r+0x9f6>
 80050ca:	2201      	movs	r2, #1
 80050cc:	e7e2      	b.n	8005094 <_dtoa_r+0xa4c>
 80050ce:	9906      	ldr	r1, [sp, #24]
 80050d0:	2900      	cmp	r1, #0
 80050d2:	db04      	blt.n	80050de <_dtoa_r+0xa96>
 80050d4:	9822      	ldr	r0, [sp, #136]	; 0x88
 80050d6:	4301      	orrs	r1, r0
 80050d8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80050da:	4301      	orrs	r1, r0
 80050dc:	d120      	bne.n	8005120 <_dtoa_r+0xad8>
 80050de:	2a00      	cmp	r2, #0
 80050e0:	ddee      	ble.n	80050c0 <_dtoa_r+0xa78>
 80050e2:	4651      	mov	r1, sl
 80050e4:	2201      	movs	r2, #1
 80050e6:	4628      	mov	r0, r5
 80050e8:	9302      	str	r3, [sp, #8]
 80050ea:	f000 ffdf 	bl	80060ac <__lshift>
 80050ee:	4621      	mov	r1, r4
 80050f0:	4682      	mov	sl, r0
 80050f2:	f001 f847 	bl	8006184 <__mcmp>
 80050f6:	2800      	cmp	r0, #0
 80050f8:	9b02      	ldr	r3, [sp, #8]
 80050fa:	dc02      	bgt.n	8005102 <_dtoa_r+0xaba>
 80050fc:	d1e0      	bne.n	80050c0 <_dtoa_r+0xa78>
 80050fe:	07da      	lsls	r2, r3, #31
 8005100:	d5de      	bpl.n	80050c0 <_dtoa_r+0xa78>
 8005102:	2b39      	cmp	r3, #57	; 0x39
 8005104:	d1da      	bne.n	80050bc <_dtoa_r+0xa74>
 8005106:	2339      	movs	r3, #57	; 0x39
 8005108:	f88b 3000 	strb.w	r3, [fp]
 800510c:	463b      	mov	r3, r7
 800510e:	461f      	mov	r7, r3
 8005110:	3b01      	subs	r3, #1
 8005112:	f817 2c01 	ldrb.w	r2, [r7, #-1]
 8005116:	2a39      	cmp	r2, #57	; 0x39
 8005118:	d050      	beq.n	80051bc <_dtoa_r+0xb74>
 800511a:	3201      	adds	r2, #1
 800511c:	701a      	strb	r2, [r3, #0]
 800511e:	e749      	b.n	8004fb4 <_dtoa_r+0x96c>
 8005120:	2a00      	cmp	r2, #0
 8005122:	dd03      	ble.n	800512c <_dtoa_r+0xae4>
 8005124:	2b39      	cmp	r3, #57	; 0x39
 8005126:	d0ee      	beq.n	8005106 <_dtoa_r+0xabe>
 8005128:	3301      	adds	r3, #1
 800512a:	e7c9      	b.n	80050c0 <_dtoa_r+0xa78>
 800512c:	9a02      	ldr	r2, [sp, #8]
 800512e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005130:	f802 3c01 	strb.w	r3, [r2, #-1]
 8005134:	428a      	cmp	r2, r1
 8005136:	d02a      	beq.n	800518e <_dtoa_r+0xb46>
 8005138:	4651      	mov	r1, sl
 800513a:	2300      	movs	r3, #0
 800513c:	220a      	movs	r2, #10
 800513e:	4628      	mov	r0, r5
 8005140:	f000 fdbc 	bl	8005cbc <__multadd>
 8005144:	45b0      	cmp	r8, r6
 8005146:	4682      	mov	sl, r0
 8005148:	f04f 0300 	mov.w	r3, #0
 800514c:	f04f 020a 	mov.w	r2, #10
 8005150:	4641      	mov	r1, r8
 8005152:	4628      	mov	r0, r5
 8005154:	d107      	bne.n	8005166 <_dtoa_r+0xb1e>
 8005156:	f000 fdb1 	bl	8005cbc <__multadd>
 800515a:	4680      	mov	r8, r0
 800515c:	4606      	mov	r6, r0
 800515e:	9b02      	ldr	r3, [sp, #8]
 8005160:	3301      	adds	r3, #1
 8005162:	9302      	str	r3, [sp, #8]
 8005164:	e777      	b.n	8005056 <_dtoa_r+0xa0e>
 8005166:	f000 fda9 	bl	8005cbc <__multadd>
 800516a:	4631      	mov	r1, r6
 800516c:	4680      	mov	r8, r0
 800516e:	2300      	movs	r3, #0
 8005170:	220a      	movs	r2, #10
 8005172:	4628      	mov	r0, r5
 8005174:	f000 fda2 	bl	8005cbc <__multadd>
 8005178:	4606      	mov	r6, r0
 800517a:	e7f0      	b.n	800515e <_dtoa_r+0xb16>
 800517c:	f1bb 0f00 	cmp.w	fp, #0
 8005180:	9a08      	ldr	r2, [sp, #32]
 8005182:	bfcc      	ite	gt
 8005184:	465f      	movgt	r7, fp
 8005186:	2701      	movle	r7, #1
 8005188:	4417      	add	r7, r2
 800518a:	f04f 0800 	mov.w	r8, #0
 800518e:	4651      	mov	r1, sl
 8005190:	2201      	movs	r2, #1
 8005192:	4628      	mov	r0, r5
 8005194:	9302      	str	r3, [sp, #8]
 8005196:	f000 ff89 	bl	80060ac <__lshift>
 800519a:	4621      	mov	r1, r4
 800519c:	4682      	mov	sl, r0
 800519e:	f000 fff1 	bl	8006184 <__mcmp>
 80051a2:	2800      	cmp	r0, #0
 80051a4:	dcb2      	bgt.n	800510c <_dtoa_r+0xac4>
 80051a6:	d102      	bne.n	80051ae <_dtoa_r+0xb66>
 80051a8:	9b02      	ldr	r3, [sp, #8]
 80051aa:	07db      	lsls	r3, r3, #31
 80051ac:	d4ae      	bmi.n	800510c <_dtoa_r+0xac4>
 80051ae:	463b      	mov	r3, r7
 80051b0:	461f      	mov	r7, r3
 80051b2:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80051b6:	2a30      	cmp	r2, #48	; 0x30
 80051b8:	d0fa      	beq.n	80051b0 <_dtoa_r+0xb68>
 80051ba:	e6fb      	b.n	8004fb4 <_dtoa_r+0x96c>
 80051bc:	9a08      	ldr	r2, [sp, #32]
 80051be:	429a      	cmp	r2, r3
 80051c0:	d1a5      	bne.n	800510e <_dtoa_r+0xac6>
 80051c2:	2331      	movs	r3, #49	; 0x31
 80051c4:	f109 0901 	add.w	r9, r9, #1
 80051c8:	7013      	strb	r3, [r2, #0]
 80051ca:	e6f3      	b.n	8004fb4 <_dtoa_r+0x96c>
 80051cc:	4b13      	ldr	r3, [pc, #76]	; (800521c <_dtoa_r+0xbd4>)
 80051ce:	f7ff baa6 	b.w	800471e <_dtoa_r+0xd6>
 80051d2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80051d4:	2b00      	cmp	r3, #0
 80051d6:	f47f aa7f 	bne.w	80046d8 <_dtoa_r+0x90>
 80051da:	4b11      	ldr	r3, [pc, #68]	; (8005220 <_dtoa_r+0xbd8>)
 80051dc:	f7ff ba9f 	b.w	800471e <_dtoa_r+0xd6>
 80051e0:	f1bb 0f00 	cmp.w	fp, #0
 80051e4:	dc03      	bgt.n	80051ee <_dtoa_r+0xba6>
 80051e6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80051e8:	2b02      	cmp	r3, #2
 80051ea:	f73f aecc 	bgt.w	8004f86 <_dtoa_r+0x93e>
 80051ee:	9f08      	ldr	r7, [sp, #32]
 80051f0:	4621      	mov	r1, r4
 80051f2:	4650      	mov	r0, sl
 80051f4:	f7ff f99a 	bl	800452c <quorem>
 80051f8:	f100 0330 	add.w	r3, r0, #48	; 0x30
 80051fc:	f807 3b01 	strb.w	r3, [r7], #1
 8005200:	9a08      	ldr	r2, [sp, #32]
 8005202:	1aba      	subs	r2, r7, r2
 8005204:	4593      	cmp	fp, r2
 8005206:	ddb9      	ble.n	800517c <_dtoa_r+0xb34>
 8005208:	4651      	mov	r1, sl
 800520a:	2300      	movs	r3, #0
 800520c:	220a      	movs	r2, #10
 800520e:	4628      	mov	r0, r5
 8005210:	f000 fd54 	bl	8005cbc <__multadd>
 8005214:	4682      	mov	sl, r0
 8005216:	e7eb      	b.n	80051f0 <_dtoa_r+0xba8>
 8005218:	08007f79 	.word	0x08007f79
 800521c:	08008179 	.word	0x08008179
 8005220:	08007f0d 	.word	0x08007f0d

08005224 <__sflush_r>:
 8005224:	898a      	ldrh	r2, [r1, #12]
 8005226:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800522a:	4605      	mov	r5, r0
 800522c:	0710      	lsls	r0, r2, #28
 800522e:	460c      	mov	r4, r1
 8005230:	d458      	bmi.n	80052e4 <__sflush_r+0xc0>
 8005232:	684b      	ldr	r3, [r1, #4]
 8005234:	2b00      	cmp	r3, #0
 8005236:	dc05      	bgt.n	8005244 <__sflush_r+0x20>
 8005238:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800523a:	2b00      	cmp	r3, #0
 800523c:	dc02      	bgt.n	8005244 <__sflush_r+0x20>
 800523e:	2000      	movs	r0, #0
 8005240:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005244:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8005246:	2e00      	cmp	r6, #0
 8005248:	d0f9      	beq.n	800523e <__sflush_r+0x1a>
 800524a:	2300      	movs	r3, #0
 800524c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8005250:	682f      	ldr	r7, [r5, #0]
 8005252:	602b      	str	r3, [r5, #0]
 8005254:	d032      	beq.n	80052bc <__sflush_r+0x98>
 8005256:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8005258:	89a3      	ldrh	r3, [r4, #12]
 800525a:	075a      	lsls	r2, r3, #29
 800525c:	d505      	bpl.n	800526a <__sflush_r+0x46>
 800525e:	6863      	ldr	r3, [r4, #4]
 8005260:	1ac0      	subs	r0, r0, r3
 8005262:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8005264:	b10b      	cbz	r3, 800526a <__sflush_r+0x46>
 8005266:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005268:	1ac0      	subs	r0, r0, r3
 800526a:	2300      	movs	r3, #0
 800526c:	4602      	mov	r2, r0
 800526e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8005270:	6a21      	ldr	r1, [r4, #32]
 8005272:	4628      	mov	r0, r5
 8005274:	47b0      	blx	r6
 8005276:	1c43      	adds	r3, r0, #1
 8005278:	89a3      	ldrh	r3, [r4, #12]
 800527a:	d106      	bne.n	800528a <__sflush_r+0x66>
 800527c:	6829      	ldr	r1, [r5, #0]
 800527e:	291d      	cmp	r1, #29
 8005280:	d82c      	bhi.n	80052dc <__sflush_r+0xb8>
 8005282:	4a2a      	ldr	r2, [pc, #168]	; (800532c <__sflush_r+0x108>)
 8005284:	40ca      	lsrs	r2, r1
 8005286:	07d6      	lsls	r6, r2, #31
 8005288:	d528      	bpl.n	80052dc <__sflush_r+0xb8>
 800528a:	2200      	movs	r2, #0
 800528c:	6062      	str	r2, [r4, #4]
 800528e:	04d9      	lsls	r1, r3, #19
 8005290:	6922      	ldr	r2, [r4, #16]
 8005292:	6022      	str	r2, [r4, #0]
 8005294:	d504      	bpl.n	80052a0 <__sflush_r+0x7c>
 8005296:	1c42      	adds	r2, r0, #1
 8005298:	d101      	bne.n	800529e <__sflush_r+0x7a>
 800529a:	682b      	ldr	r3, [r5, #0]
 800529c:	b903      	cbnz	r3, 80052a0 <__sflush_r+0x7c>
 800529e:	6560      	str	r0, [r4, #84]	; 0x54
 80052a0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80052a2:	602f      	str	r7, [r5, #0]
 80052a4:	2900      	cmp	r1, #0
 80052a6:	d0ca      	beq.n	800523e <__sflush_r+0x1a>
 80052a8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80052ac:	4299      	cmp	r1, r3
 80052ae:	d002      	beq.n	80052b6 <__sflush_r+0x92>
 80052b0:	4628      	mov	r0, r5
 80052b2:	f001 f963 	bl	800657c <_free_r>
 80052b6:	2000      	movs	r0, #0
 80052b8:	6360      	str	r0, [r4, #52]	; 0x34
 80052ba:	e7c1      	b.n	8005240 <__sflush_r+0x1c>
 80052bc:	6a21      	ldr	r1, [r4, #32]
 80052be:	2301      	movs	r3, #1
 80052c0:	4628      	mov	r0, r5
 80052c2:	47b0      	blx	r6
 80052c4:	1c41      	adds	r1, r0, #1
 80052c6:	d1c7      	bne.n	8005258 <__sflush_r+0x34>
 80052c8:	682b      	ldr	r3, [r5, #0]
 80052ca:	2b00      	cmp	r3, #0
 80052cc:	d0c4      	beq.n	8005258 <__sflush_r+0x34>
 80052ce:	2b1d      	cmp	r3, #29
 80052d0:	d001      	beq.n	80052d6 <__sflush_r+0xb2>
 80052d2:	2b16      	cmp	r3, #22
 80052d4:	d101      	bne.n	80052da <__sflush_r+0xb6>
 80052d6:	602f      	str	r7, [r5, #0]
 80052d8:	e7b1      	b.n	800523e <__sflush_r+0x1a>
 80052da:	89a3      	ldrh	r3, [r4, #12]
 80052dc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80052e0:	81a3      	strh	r3, [r4, #12]
 80052e2:	e7ad      	b.n	8005240 <__sflush_r+0x1c>
 80052e4:	690f      	ldr	r7, [r1, #16]
 80052e6:	2f00      	cmp	r7, #0
 80052e8:	d0a9      	beq.n	800523e <__sflush_r+0x1a>
 80052ea:	0793      	lsls	r3, r2, #30
 80052ec:	680e      	ldr	r6, [r1, #0]
 80052ee:	bf08      	it	eq
 80052f0:	694b      	ldreq	r3, [r1, #20]
 80052f2:	600f      	str	r7, [r1, #0]
 80052f4:	bf18      	it	ne
 80052f6:	2300      	movne	r3, #0
 80052f8:	eba6 0807 	sub.w	r8, r6, r7
 80052fc:	608b      	str	r3, [r1, #8]
 80052fe:	f1b8 0f00 	cmp.w	r8, #0
 8005302:	dd9c      	ble.n	800523e <__sflush_r+0x1a>
 8005304:	6a21      	ldr	r1, [r4, #32]
 8005306:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8005308:	4643      	mov	r3, r8
 800530a:	463a      	mov	r2, r7
 800530c:	4628      	mov	r0, r5
 800530e:	47b0      	blx	r6
 8005310:	2800      	cmp	r0, #0
 8005312:	dc06      	bgt.n	8005322 <__sflush_r+0xfe>
 8005314:	89a3      	ldrh	r3, [r4, #12]
 8005316:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800531a:	81a3      	strh	r3, [r4, #12]
 800531c:	f04f 30ff 	mov.w	r0, #4294967295
 8005320:	e78e      	b.n	8005240 <__sflush_r+0x1c>
 8005322:	4407      	add	r7, r0
 8005324:	eba8 0800 	sub.w	r8, r8, r0
 8005328:	e7e9      	b.n	80052fe <__sflush_r+0xda>
 800532a:	bf00      	nop
 800532c:	20400001 	.word	0x20400001

08005330 <_fflush_r>:
 8005330:	b538      	push	{r3, r4, r5, lr}
 8005332:	690b      	ldr	r3, [r1, #16]
 8005334:	4605      	mov	r5, r0
 8005336:	460c      	mov	r4, r1
 8005338:	b913      	cbnz	r3, 8005340 <_fflush_r+0x10>
 800533a:	2500      	movs	r5, #0
 800533c:	4628      	mov	r0, r5
 800533e:	bd38      	pop	{r3, r4, r5, pc}
 8005340:	b118      	cbz	r0, 800534a <_fflush_r+0x1a>
 8005342:	6983      	ldr	r3, [r0, #24]
 8005344:	b90b      	cbnz	r3, 800534a <_fflush_r+0x1a>
 8005346:	f7fc fe8b 	bl	8002060 <__sinit>
 800534a:	4b14      	ldr	r3, [pc, #80]	; (800539c <_fflush_r+0x6c>)
 800534c:	429c      	cmp	r4, r3
 800534e:	d11b      	bne.n	8005388 <_fflush_r+0x58>
 8005350:	686c      	ldr	r4, [r5, #4]
 8005352:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005356:	2b00      	cmp	r3, #0
 8005358:	d0ef      	beq.n	800533a <_fflush_r+0xa>
 800535a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800535c:	07d0      	lsls	r0, r2, #31
 800535e:	d404      	bmi.n	800536a <_fflush_r+0x3a>
 8005360:	0599      	lsls	r1, r3, #22
 8005362:	d402      	bmi.n	800536a <_fflush_r+0x3a>
 8005364:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8005366:	f7fc ff5a 	bl	800221e <__retarget_lock_acquire_recursive>
 800536a:	4628      	mov	r0, r5
 800536c:	4621      	mov	r1, r4
 800536e:	f7ff ff59 	bl	8005224 <__sflush_r>
 8005372:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8005374:	07da      	lsls	r2, r3, #31
 8005376:	4605      	mov	r5, r0
 8005378:	d4e0      	bmi.n	800533c <_fflush_r+0xc>
 800537a:	89a3      	ldrh	r3, [r4, #12]
 800537c:	059b      	lsls	r3, r3, #22
 800537e:	d4dd      	bmi.n	800533c <_fflush_r+0xc>
 8005380:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8005382:	f7fc ff4d 	bl	8002220 <__retarget_lock_release_recursive>
 8005386:	e7d9      	b.n	800533c <_fflush_r+0xc>
 8005388:	4b05      	ldr	r3, [pc, #20]	; (80053a0 <_fflush_r+0x70>)
 800538a:	429c      	cmp	r4, r3
 800538c:	d101      	bne.n	8005392 <_fflush_r+0x62>
 800538e:	68ac      	ldr	r4, [r5, #8]
 8005390:	e7df      	b.n	8005352 <_fflush_r+0x22>
 8005392:	4b04      	ldr	r3, [pc, #16]	; (80053a4 <_fflush_r+0x74>)
 8005394:	429c      	cmp	r4, r3
 8005396:	bf08      	it	eq
 8005398:	68ec      	ldreq	r4, [r5, #12]
 800539a:	e7da      	b.n	8005352 <_fflush_r+0x22>
 800539c:	08007c8c 	.word	0x08007c8c
 80053a0:	08007cac 	.word	0x08007cac
 80053a4:	08007c6c 	.word	0x08007c6c

080053a8 <fflush>:
 80053a8:	4601      	mov	r1, r0
 80053aa:	b920      	cbnz	r0, 80053b6 <fflush+0xe>
 80053ac:	4b04      	ldr	r3, [pc, #16]	; (80053c0 <fflush+0x18>)
 80053ae:	4905      	ldr	r1, [pc, #20]	; (80053c4 <fflush+0x1c>)
 80053b0:	6818      	ldr	r0, [r3, #0]
 80053b2:	f7fc bef0 	b.w	8002196 <_fwalk_reent>
 80053b6:	4b04      	ldr	r3, [pc, #16]	; (80053c8 <fflush+0x20>)
 80053b8:	6818      	ldr	r0, [r3, #0]
 80053ba:	f7ff bfb9 	b.w	8005330 <_fflush_r>
 80053be:	bf00      	nop
 80053c0:	08007ccc 	.word	0x08007ccc
 80053c4:	08005331 	.word	0x08005331
 80053c8:	20000b10 	.word	0x20000b10

080053cc <fiprintf>:
 80053cc:	b40e      	push	{r1, r2, r3}
 80053ce:	b503      	push	{r0, r1, lr}
 80053d0:	4601      	mov	r1, r0
 80053d2:	ab03      	add	r3, sp, #12
 80053d4:	4805      	ldr	r0, [pc, #20]	; (80053ec <fiprintf+0x20>)
 80053d6:	f853 2b04 	ldr.w	r2, [r3], #4
 80053da:	6800      	ldr	r0, [r0, #0]
 80053dc:	9301      	str	r3, [sp, #4]
 80053de:	f001 fc71 	bl	8006cc4 <_vfiprintf_r>
 80053e2:	b002      	add	sp, #8
 80053e4:	f85d eb04 	ldr.w	lr, [sp], #4
 80053e8:	b003      	add	sp, #12
 80053ea:	4770      	bx	lr
 80053ec:	20000b10 	.word	0x20000b10

080053f0 <rshift>:
 80053f0:	6903      	ldr	r3, [r0, #16]
 80053f2:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 80053f6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80053fa:	ea4f 1261 	mov.w	r2, r1, asr #5
 80053fe:	f100 0414 	add.w	r4, r0, #20
 8005402:	dd45      	ble.n	8005490 <rshift+0xa0>
 8005404:	f011 011f 	ands.w	r1, r1, #31
 8005408:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 800540c:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8005410:	d10c      	bne.n	800542c <rshift+0x3c>
 8005412:	f100 0710 	add.w	r7, r0, #16
 8005416:	4629      	mov	r1, r5
 8005418:	42b1      	cmp	r1, r6
 800541a:	d334      	bcc.n	8005486 <rshift+0x96>
 800541c:	1a9b      	subs	r3, r3, r2
 800541e:	009b      	lsls	r3, r3, #2
 8005420:	1eea      	subs	r2, r5, #3
 8005422:	4296      	cmp	r6, r2
 8005424:	bf38      	it	cc
 8005426:	2300      	movcc	r3, #0
 8005428:	4423      	add	r3, r4
 800542a:	e015      	b.n	8005458 <rshift+0x68>
 800542c:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 8005430:	f1c1 0820 	rsb	r8, r1, #32
 8005434:	40cf      	lsrs	r7, r1
 8005436:	f105 0e04 	add.w	lr, r5, #4
 800543a:	46a1      	mov	r9, r4
 800543c:	4576      	cmp	r6, lr
 800543e:	46f4      	mov	ip, lr
 8005440:	d815      	bhi.n	800546e <rshift+0x7e>
 8005442:	1a9b      	subs	r3, r3, r2
 8005444:	009a      	lsls	r2, r3, #2
 8005446:	3a04      	subs	r2, #4
 8005448:	3501      	adds	r5, #1
 800544a:	42ae      	cmp	r6, r5
 800544c:	bf38      	it	cc
 800544e:	2200      	movcc	r2, #0
 8005450:	18a3      	adds	r3, r4, r2
 8005452:	50a7      	str	r7, [r4, r2]
 8005454:	b107      	cbz	r7, 8005458 <rshift+0x68>
 8005456:	3304      	adds	r3, #4
 8005458:	1b1a      	subs	r2, r3, r4
 800545a:	42a3      	cmp	r3, r4
 800545c:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8005460:	bf08      	it	eq
 8005462:	2300      	moveq	r3, #0
 8005464:	6102      	str	r2, [r0, #16]
 8005466:	bf08      	it	eq
 8005468:	6143      	streq	r3, [r0, #20]
 800546a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800546e:	f8dc c000 	ldr.w	ip, [ip]
 8005472:	fa0c fc08 	lsl.w	ip, ip, r8
 8005476:	ea4c 0707 	orr.w	r7, ip, r7
 800547a:	f849 7b04 	str.w	r7, [r9], #4
 800547e:	f85e 7b04 	ldr.w	r7, [lr], #4
 8005482:	40cf      	lsrs	r7, r1
 8005484:	e7da      	b.n	800543c <rshift+0x4c>
 8005486:	f851 cb04 	ldr.w	ip, [r1], #4
 800548a:	f847 cf04 	str.w	ip, [r7, #4]!
 800548e:	e7c3      	b.n	8005418 <rshift+0x28>
 8005490:	4623      	mov	r3, r4
 8005492:	e7e1      	b.n	8005458 <rshift+0x68>

08005494 <__hexdig_fun>:
 8005494:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 8005498:	2b09      	cmp	r3, #9
 800549a:	d802      	bhi.n	80054a2 <__hexdig_fun+0xe>
 800549c:	3820      	subs	r0, #32
 800549e:	b2c0      	uxtb	r0, r0
 80054a0:	4770      	bx	lr
 80054a2:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 80054a6:	2b05      	cmp	r3, #5
 80054a8:	d801      	bhi.n	80054ae <__hexdig_fun+0x1a>
 80054aa:	3847      	subs	r0, #71	; 0x47
 80054ac:	e7f7      	b.n	800549e <__hexdig_fun+0xa>
 80054ae:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 80054b2:	2b05      	cmp	r3, #5
 80054b4:	d801      	bhi.n	80054ba <__hexdig_fun+0x26>
 80054b6:	3827      	subs	r0, #39	; 0x27
 80054b8:	e7f1      	b.n	800549e <__hexdig_fun+0xa>
 80054ba:	2000      	movs	r0, #0
 80054bc:	4770      	bx	lr
	...

080054c0 <__gethex>:
 80054c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80054c4:	b08b      	sub	sp, #44	; 0x2c
 80054c6:	468b      	mov	fp, r1
 80054c8:	9306      	str	r3, [sp, #24]
 80054ca:	4bb9      	ldr	r3, [pc, #740]	; (80057b0 <__gethex+0x2f0>)
 80054cc:	9002      	str	r0, [sp, #8]
 80054ce:	681b      	ldr	r3, [r3, #0]
 80054d0:	9303      	str	r3, [sp, #12]
 80054d2:	4618      	mov	r0, r3
 80054d4:	4690      	mov	r8, r2
 80054d6:	f7fa fef5 	bl	80002c4 <strlen>
 80054da:	9b03      	ldr	r3, [sp, #12]
 80054dc:	f8db 2000 	ldr.w	r2, [fp]
 80054e0:	4403      	add	r3, r0
 80054e2:	4682      	mov	sl, r0
 80054e4:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 80054e8:	9307      	str	r3, [sp, #28]
 80054ea:	1c93      	adds	r3, r2, #2
 80054ec:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 80054f0:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 80054f4:	32fe      	adds	r2, #254	; 0xfe
 80054f6:	18d1      	adds	r1, r2, r3
 80054f8:	461f      	mov	r7, r3
 80054fa:	f813 0b01 	ldrb.w	r0, [r3], #1
 80054fe:	9101      	str	r1, [sp, #4]
 8005500:	2830      	cmp	r0, #48	; 0x30
 8005502:	d0f8      	beq.n	80054f6 <__gethex+0x36>
 8005504:	f7ff ffc6 	bl	8005494 <__hexdig_fun>
 8005508:	4604      	mov	r4, r0
 800550a:	2800      	cmp	r0, #0
 800550c:	d13a      	bne.n	8005584 <__gethex+0xc4>
 800550e:	9903      	ldr	r1, [sp, #12]
 8005510:	4652      	mov	r2, sl
 8005512:	4638      	mov	r0, r7
 8005514:	f001 fea4 	bl	8007260 <strncmp>
 8005518:	4605      	mov	r5, r0
 800551a:	2800      	cmp	r0, #0
 800551c:	d166      	bne.n	80055ec <__gethex+0x12c>
 800551e:	f817 000a 	ldrb.w	r0, [r7, sl]
 8005522:	eb07 060a 	add.w	r6, r7, sl
 8005526:	f7ff ffb5 	bl	8005494 <__hexdig_fun>
 800552a:	2800      	cmp	r0, #0
 800552c:	d060      	beq.n	80055f0 <__gethex+0x130>
 800552e:	4633      	mov	r3, r6
 8005530:	7818      	ldrb	r0, [r3, #0]
 8005532:	2830      	cmp	r0, #48	; 0x30
 8005534:	461f      	mov	r7, r3
 8005536:	f103 0301 	add.w	r3, r3, #1
 800553a:	d0f9      	beq.n	8005530 <__gethex+0x70>
 800553c:	f7ff ffaa 	bl	8005494 <__hexdig_fun>
 8005540:	2301      	movs	r3, #1
 8005542:	fab0 f480 	clz	r4, r0
 8005546:	0964      	lsrs	r4, r4, #5
 8005548:	4635      	mov	r5, r6
 800554a:	9301      	str	r3, [sp, #4]
 800554c:	463a      	mov	r2, r7
 800554e:	4616      	mov	r6, r2
 8005550:	3201      	adds	r2, #1
 8005552:	7830      	ldrb	r0, [r6, #0]
 8005554:	f7ff ff9e 	bl	8005494 <__hexdig_fun>
 8005558:	2800      	cmp	r0, #0
 800555a:	d1f8      	bne.n	800554e <__gethex+0x8e>
 800555c:	9903      	ldr	r1, [sp, #12]
 800555e:	4652      	mov	r2, sl
 8005560:	4630      	mov	r0, r6
 8005562:	f001 fe7d 	bl	8007260 <strncmp>
 8005566:	b980      	cbnz	r0, 800558a <__gethex+0xca>
 8005568:	b94d      	cbnz	r5, 800557e <__gethex+0xbe>
 800556a:	eb06 050a 	add.w	r5, r6, sl
 800556e:	462a      	mov	r2, r5
 8005570:	4616      	mov	r6, r2
 8005572:	3201      	adds	r2, #1
 8005574:	7830      	ldrb	r0, [r6, #0]
 8005576:	f7ff ff8d 	bl	8005494 <__hexdig_fun>
 800557a:	2800      	cmp	r0, #0
 800557c:	d1f8      	bne.n	8005570 <__gethex+0xb0>
 800557e:	1bad      	subs	r5, r5, r6
 8005580:	00ad      	lsls	r5, r5, #2
 8005582:	e004      	b.n	800558e <__gethex+0xce>
 8005584:	2400      	movs	r4, #0
 8005586:	4625      	mov	r5, r4
 8005588:	e7e0      	b.n	800554c <__gethex+0x8c>
 800558a:	2d00      	cmp	r5, #0
 800558c:	d1f7      	bne.n	800557e <__gethex+0xbe>
 800558e:	7833      	ldrb	r3, [r6, #0]
 8005590:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8005594:	2b50      	cmp	r3, #80	; 0x50
 8005596:	d139      	bne.n	800560c <__gethex+0x14c>
 8005598:	7873      	ldrb	r3, [r6, #1]
 800559a:	2b2b      	cmp	r3, #43	; 0x2b
 800559c:	d02a      	beq.n	80055f4 <__gethex+0x134>
 800559e:	2b2d      	cmp	r3, #45	; 0x2d
 80055a0:	d02c      	beq.n	80055fc <__gethex+0x13c>
 80055a2:	1c71      	adds	r1, r6, #1
 80055a4:	f04f 0900 	mov.w	r9, #0
 80055a8:	7808      	ldrb	r0, [r1, #0]
 80055aa:	f7ff ff73 	bl	8005494 <__hexdig_fun>
 80055ae:	1e43      	subs	r3, r0, #1
 80055b0:	b2db      	uxtb	r3, r3
 80055b2:	2b18      	cmp	r3, #24
 80055b4:	d82a      	bhi.n	800560c <__gethex+0x14c>
 80055b6:	f1a0 0210 	sub.w	r2, r0, #16
 80055ba:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 80055be:	f7ff ff69 	bl	8005494 <__hexdig_fun>
 80055c2:	1e43      	subs	r3, r0, #1
 80055c4:	b2db      	uxtb	r3, r3
 80055c6:	2b18      	cmp	r3, #24
 80055c8:	d91b      	bls.n	8005602 <__gethex+0x142>
 80055ca:	f1b9 0f00 	cmp.w	r9, #0
 80055ce:	d000      	beq.n	80055d2 <__gethex+0x112>
 80055d0:	4252      	negs	r2, r2
 80055d2:	4415      	add	r5, r2
 80055d4:	f8cb 1000 	str.w	r1, [fp]
 80055d8:	b1d4      	cbz	r4, 8005610 <__gethex+0x150>
 80055da:	9b01      	ldr	r3, [sp, #4]
 80055dc:	2b00      	cmp	r3, #0
 80055de:	bf14      	ite	ne
 80055e0:	2700      	movne	r7, #0
 80055e2:	2706      	moveq	r7, #6
 80055e4:	4638      	mov	r0, r7
 80055e6:	b00b      	add	sp, #44	; 0x2c
 80055e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80055ec:	463e      	mov	r6, r7
 80055ee:	4625      	mov	r5, r4
 80055f0:	2401      	movs	r4, #1
 80055f2:	e7cc      	b.n	800558e <__gethex+0xce>
 80055f4:	f04f 0900 	mov.w	r9, #0
 80055f8:	1cb1      	adds	r1, r6, #2
 80055fa:	e7d5      	b.n	80055a8 <__gethex+0xe8>
 80055fc:	f04f 0901 	mov.w	r9, #1
 8005600:	e7fa      	b.n	80055f8 <__gethex+0x138>
 8005602:	230a      	movs	r3, #10
 8005604:	fb03 0202 	mla	r2, r3, r2, r0
 8005608:	3a10      	subs	r2, #16
 800560a:	e7d6      	b.n	80055ba <__gethex+0xfa>
 800560c:	4631      	mov	r1, r6
 800560e:	e7e1      	b.n	80055d4 <__gethex+0x114>
 8005610:	1bf3      	subs	r3, r6, r7
 8005612:	3b01      	subs	r3, #1
 8005614:	4621      	mov	r1, r4
 8005616:	2b07      	cmp	r3, #7
 8005618:	dc0a      	bgt.n	8005630 <__gethex+0x170>
 800561a:	9802      	ldr	r0, [sp, #8]
 800561c:	f000 faec 	bl	8005bf8 <_Balloc>
 8005620:	4604      	mov	r4, r0
 8005622:	b940      	cbnz	r0, 8005636 <__gethex+0x176>
 8005624:	4b63      	ldr	r3, [pc, #396]	; (80057b4 <__gethex+0x2f4>)
 8005626:	4602      	mov	r2, r0
 8005628:	21de      	movs	r1, #222	; 0xde
 800562a:	4863      	ldr	r0, [pc, #396]	; (80057b8 <__gethex+0x2f8>)
 800562c:	f7fe ff50 	bl	80044d0 <__assert_func>
 8005630:	3101      	adds	r1, #1
 8005632:	105b      	asrs	r3, r3, #1
 8005634:	e7ef      	b.n	8005616 <__gethex+0x156>
 8005636:	f100 0914 	add.w	r9, r0, #20
 800563a:	f04f 0b00 	mov.w	fp, #0
 800563e:	f1ca 0301 	rsb	r3, sl, #1
 8005642:	f8cd 9010 	str.w	r9, [sp, #16]
 8005646:	f8cd b004 	str.w	fp, [sp, #4]
 800564a:	9308      	str	r3, [sp, #32]
 800564c:	42b7      	cmp	r7, r6
 800564e:	d33f      	bcc.n	80056d0 <__gethex+0x210>
 8005650:	9f04      	ldr	r7, [sp, #16]
 8005652:	9b01      	ldr	r3, [sp, #4]
 8005654:	f847 3b04 	str.w	r3, [r7], #4
 8005658:	eba7 0709 	sub.w	r7, r7, r9
 800565c:	10bf      	asrs	r7, r7, #2
 800565e:	6127      	str	r7, [r4, #16]
 8005660:	4618      	mov	r0, r3
 8005662:	f000 fbbf 	bl	8005de4 <__hi0bits>
 8005666:	017f      	lsls	r7, r7, #5
 8005668:	f8d8 6000 	ldr.w	r6, [r8]
 800566c:	1a3f      	subs	r7, r7, r0
 800566e:	42b7      	cmp	r7, r6
 8005670:	dd62      	ble.n	8005738 <__gethex+0x278>
 8005672:	1bbf      	subs	r7, r7, r6
 8005674:	4639      	mov	r1, r7
 8005676:	4620      	mov	r0, r4
 8005678:	f000 ff51 	bl	800651e <__any_on>
 800567c:	4682      	mov	sl, r0
 800567e:	b1a8      	cbz	r0, 80056ac <__gethex+0x1ec>
 8005680:	1e7b      	subs	r3, r7, #1
 8005682:	1159      	asrs	r1, r3, #5
 8005684:	f003 021f 	and.w	r2, r3, #31
 8005688:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 800568c:	f04f 0a01 	mov.w	sl, #1
 8005690:	fa0a f202 	lsl.w	r2, sl, r2
 8005694:	420a      	tst	r2, r1
 8005696:	d009      	beq.n	80056ac <__gethex+0x1ec>
 8005698:	4553      	cmp	r3, sl
 800569a:	dd05      	ble.n	80056a8 <__gethex+0x1e8>
 800569c:	1eb9      	subs	r1, r7, #2
 800569e:	4620      	mov	r0, r4
 80056a0:	f000 ff3d 	bl	800651e <__any_on>
 80056a4:	2800      	cmp	r0, #0
 80056a6:	d144      	bne.n	8005732 <__gethex+0x272>
 80056a8:	f04f 0a02 	mov.w	sl, #2
 80056ac:	4639      	mov	r1, r7
 80056ae:	4620      	mov	r0, r4
 80056b0:	f7ff fe9e 	bl	80053f0 <rshift>
 80056b4:	443d      	add	r5, r7
 80056b6:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80056ba:	42ab      	cmp	r3, r5
 80056bc:	da4a      	bge.n	8005754 <__gethex+0x294>
 80056be:	9802      	ldr	r0, [sp, #8]
 80056c0:	4621      	mov	r1, r4
 80056c2:	f000 fad9 	bl	8005c78 <_Bfree>
 80056c6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80056c8:	2300      	movs	r3, #0
 80056ca:	6013      	str	r3, [r2, #0]
 80056cc:	27a3      	movs	r7, #163	; 0xa3
 80056ce:	e789      	b.n	80055e4 <__gethex+0x124>
 80056d0:	1e73      	subs	r3, r6, #1
 80056d2:	9a07      	ldr	r2, [sp, #28]
 80056d4:	9305      	str	r3, [sp, #20]
 80056d6:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 80056da:	4293      	cmp	r3, r2
 80056dc:	d019      	beq.n	8005712 <__gethex+0x252>
 80056de:	f1bb 0f20 	cmp.w	fp, #32
 80056e2:	d107      	bne.n	80056f4 <__gethex+0x234>
 80056e4:	9b04      	ldr	r3, [sp, #16]
 80056e6:	9a01      	ldr	r2, [sp, #4]
 80056e8:	f843 2b04 	str.w	r2, [r3], #4
 80056ec:	9304      	str	r3, [sp, #16]
 80056ee:	2300      	movs	r3, #0
 80056f0:	9301      	str	r3, [sp, #4]
 80056f2:	469b      	mov	fp, r3
 80056f4:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 80056f8:	f7ff fecc 	bl	8005494 <__hexdig_fun>
 80056fc:	9b01      	ldr	r3, [sp, #4]
 80056fe:	f000 000f 	and.w	r0, r0, #15
 8005702:	fa00 f00b 	lsl.w	r0, r0, fp
 8005706:	4303      	orrs	r3, r0
 8005708:	9301      	str	r3, [sp, #4]
 800570a:	f10b 0b04 	add.w	fp, fp, #4
 800570e:	9b05      	ldr	r3, [sp, #20]
 8005710:	e00d      	b.n	800572e <__gethex+0x26e>
 8005712:	9b05      	ldr	r3, [sp, #20]
 8005714:	9a08      	ldr	r2, [sp, #32]
 8005716:	4413      	add	r3, r2
 8005718:	42bb      	cmp	r3, r7
 800571a:	d3e0      	bcc.n	80056de <__gethex+0x21e>
 800571c:	4618      	mov	r0, r3
 800571e:	9903      	ldr	r1, [sp, #12]
 8005720:	9309      	str	r3, [sp, #36]	; 0x24
 8005722:	4652      	mov	r2, sl
 8005724:	f001 fd9c 	bl	8007260 <strncmp>
 8005728:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800572a:	2800      	cmp	r0, #0
 800572c:	d1d7      	bne.n	80056de <__gethex+0x21e>
 800572e:	461e      	mov	r6, r3
 8005730:	e78c      	b.n	800564c <__gethex+0x18c>
 8005732:	f04f 0a03 	mov.w	sl, #3
 8005736:	e7b9      	b.n	80056ac <__gethex+0x1ec>
 8005738:	da09      	bge.n	800574e <__gethex+0x28e>
 800573a:	1bf7      	subs	r7, r6, r7
 800573c:	4621      	mov	r1, r4
 800573e:	9802      	ldr	r0, [sp, #8]
 8005740:	463a      	mov	r2, r7
 8005742:	f000 fcb3 	bl	80060ac <__lshift>
 8005746:	1bed      	subs	r5, r5, r7
 8005748:	4604      	mov	r4, r0
 800574a:	f100 0914 	add.w	r9, r0, #20
 800574e:	f04f 0a00 	mov.w	sl, #0
 8005752:	e7b0      	b.n	80056b6 <__gethex+0x1f6>
 8005754:	f8d8 0004 	ldr.w	r0, [r8, #4]
 8005758:	42a8      	cmp	r0, r5
 800575a:	dd70      	ble.n	800583e <__gethex+0x37e>
 800575c:	1b45      	subs	r5, r0, r5
 800575e:	42ae      	cmp	r6, r5
 8005760:	dc34      	bgt.n	80057cc <__gethex+0x30c>
 8005762:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8005766:	2b02      	cmp	r3, #2
 8005768:	d028      	beq.n	80057bc <__gethex+0x2fc>
 800576a:	2b03      	cmp	r3, #3
 800576c:	d02a      	beq.n	80057c4 <__gethex+0x304>
 800576e:	2b01      	cmp	r3, #1
 8005770:	d115      	bne.n	800579e <__gethex+0x2de>
 8005772:	42ae      	cmp	r6, r5
 8005774:	d113      	bne.n	800579e <__gethex+0x2de>
 8005776:	2e01      	cmp	r6, #1
 8005778:	d10b      	bne.n	8005792 <__gethex+0x2d2>
 800577a:	9a06      	ldr	r2, [sp, #24]
 800577c:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8005780:	6013      	str	r3, [r2, #0]
 8005782:	2301      	movs	r3, #1
 8005784:	6123      	str	r3, [r4, #16]
 8005786:	f8c9 3000 	str.w	r3, [r9]
 800578a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800578c:	2762      	movs	r7, #98	; 0x62
 800578e:	601c      	str	r4, [r3, #0]
 8005790:	e728      	b.n	80055e4 <__gethex+0x124>
 8005792:	1e71      	subs	r1, r6, #1
 8005794:	4620      	mov	r0, r4
 8005796:	f000 fec2 	bl	800651e <__any_on>
 800579a:	2800      	cmp	r0, #0
 800579c:	d1ed      	bne.n	800577a <__gethex+0x2ba>
 800579e:	9802      	ldr	r0, [sp, #8]
 80057a0:	4621      	mov	r1, r4
 80057a2:	f000 fa69 	bl	8005c78 <_Bfree>
 80057a6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80057a8:	2300      	movs	r3, #0
 80057aa:	6013      	str	r3, [r2, #0]
 80057ac:	2750      	movs	r7, #80	; 0x50
 80057ae:	e719      	b.n	80055e4 <__gethex+0x124>
 80057b0:	08007ff4 	.word	0x08007ff4
 80057b4:	08007f79 	.word	0x08007f79
 80057b8:	08007f8a 	.word	0x08007f8a
 80057bc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80057be:	2b00      	cmp	r3, #0
 80057c0:	d1ed      	bne.n	800579e <__gethex+0x2de>
 80057c2:	e7da      	b.n	800577a <__gethex+0x2ba>
 80057c4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80057c6:	2b00      	cmp	r3, #0
 80057c8:	d1d7      	bne.n	800577a <__gethex+0x2ba>
 80057ca:	e7e8      	b.n	800579e <__gethex+0x2de>
 80057cc:	1e6f      	subs	r7, r5, #1
 80057ce:	f1ba 0f00 	cmp.w	sl, #0
 80057d2:	d131      	bne.n	8005838 <__gethex+0x378>
 80057d4:	b127      	cbz	r7, 80057e0 <__gethex+0x320>
 80057d6:	4639      	mov	r1, r7
 80057d8:	4620      	mov	r0, r4
 80057da:	f000 fea0 	bl	800651e <__any_on>
 80057de:	4682      	mov	sl, r0
 80057e0:	117b      	asrs	r3, r7, #5
 80057e2:	2101      	movs	r1, #1
 80057e4:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 80057e8:	f007 071f 	and.w	r7, r7, #31
 80057ec:	fa01 f707 	lsl.w	r7, r1, r7
 80057f0:	421f      	tst	r7, r3
 80057f2:	4629      	mov	r1, r5
 80057f4:	4620      	mov	r0, r4
 80057f6:	bf18      	it	ne
 80057f8:	f04a 0a02 	orrne.w	sl, sl, #2
 80057fc:	1b76      	subs	r6, r6, r5
 80057fe:	f7ff fdf7 	bl	80053f0 <rshift>
 8005802:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8005806:	2702      	movs	r7, #2
 8005808:	f1ba 0f00 	cmp.w	sl, #0
 800580c:	d048      	beq.n	80058a0 <__gethex+0x3e0>
 800580e:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8005812:	2b02      	cmp	r3, #2
 8005814:	d015      	beq.n	8005842 <__gethex+0x382>
 8005816:	2b03      	cmp	r3, #3
 8005818:	d017      	beq.n	800584a <__gethex+0x38a>
 800581a:	2b01      	cmp	r3, #1
 800581c:	d109      	bne.n	8005832 <__gethex+0x372>
 800581e:	f01a 0f02 	tst.w	sl, #2
 8005822:	d006      	beq.n	8005832 <__gethex+0x372>
 8005824:	f8d9 0000 	ldr.w	r0, [r9]
 8005828:	ea4a 0a00 	orr.w	sl, sl, r0
 800582c:	f01a 0f01 	tst.w	sl, #1
 8005830:	d10e      	bne.n	8005850 <__gethex+0x390>
 8005832:	f047 0710 	orr.w	r7, r7, #16
 8005836:	e033      	b.n	80058a0 <__gethex+0x3e0>
 8005838:	f04f 0a01 	mov.w	sl, #1
 800583c:	e7d0      	b.n	80057e0 <__gethex+0x320>
 800583e:	2701      	movs	r7, #1
 8005840:	e7e2      	b.n	8005808 <__gethex+0x348>
 8005842:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005844:	f1c3 0301 	rsb	r3, r3, #1
 8005848:	9315      	str	r3, [sp, #84]	; 0x54
 800584a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800584c:	2b00      	cmp	r3, #0
 800584e:	d0f0      	beq.n	8005832 <__gethex+0x372>
 8005850:	f8d4 b010 	ldr.w	fp, [r4, #16]
 8005854:	f104 0314 	add.w	r3, r4, #20
 8005858:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 800585c:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 8005860:	f04f 0c00 	mov.w	ip, #0
 8005864:	4618      	mov	r0, r3
 8005866:	f853 2b04 	ldr.w	r2, [r3], #4
 800586a:	f1b2 3fff 	cmp.w	r2, #4294967295
 800586e:	d01c      	beq.n	80058aa <__gethex+0x3ea>
 8005870:	3201      	adds	r2, #1
 8005872:	6002      	str	r2, [r0, #0]
 8005874:	2f02      	cmp	r7, #2
 8005876:	f104 0314 	add.w	r3, r4, #20
 800587a:	d13d      	bne.n	80058f8 <__gethex+0x438>
 800587c:	f8d8 2000 	ldr.w	r2, [r8]
 8005880:	3a01      	subs	r2, #1
 8005882:	42b2      	cmp	r2, r6
 8005884:	d10a      	bne.n	800589c <__gethex+0x3dc>
 8005886:	1171      	asrs	r1, r6, #5
 8005888:	2201      	movs	r2, #1
 800588a:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800588e:	f006 061f 	and.w	r6, r6, #31
 8005892:	fa02 f606 	lsl.w	r6, r2, r6
 8005896:	421e      	tst	r6, r3
 8005898:	bf18      	it	ne
 800589a:	4617      	movne	r7, r2
 800589c:	f047 0720 	orr.w	r7, r7, #32
 80058a0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80058a2:	601c      	str	r4, [r3, #0]
 80058a4:	9b06      	ldr	r3, [sp, #24]
 80058a6:	601d      	str	r5, [r3, #0]
 80058a8:	e69c      	b.n	80055e4 <__gethex+0x124>
 80058aa:	4299      	cmp	r1, r3
 80058ac:	f843 cc04 	str.w	ip, [r3, #-4]
 80058b0:	d8d8      	bhi.n	8005864 <__gethex+0x3a4>
 80058b2:	68a3      	ldr	r3, [r4, #8]
 80058b4:	459b      	cmp	fp, r3
 80058b6:	db17      	blt.n	80058e8 <__gethex+0x428>
 80058b8:	6861      	ldr	r1, [r4, #4]
 80058ba:	9802      	ldr	r0, [sp, #8]
 80058bc:	3101      	adds	r1, #1
 80058be:	f000 f99b 	bl	8005bf8 <_Balloc>
 80058c2:	4681      	mov	r9, r0
 80058c4:	b918      	cbnz	r0, 80058ce <__gethex+0x40e>
 80058c6:	4b1a      	ldr	r3, [pc, #104]	; (8005930 <__gethex+0x470>)
 80058c8:	4602      	mov	r2, r0
 80058ca:	2184      	movs	r1, #132	; 0x84
 80058cc:	e6ad      	b.n	800562a <__gethex+0x16a>
 80058ce:	6922      	ldr	r2, [r4, #16]
 80058d0:	3202      	adds	r2, #2
 80058d2:	f104 010c 	add.w	r1, r4, #12
 80058d6:	0092      	lsls	r2, r2, #2
 80058d8:	300c      	adds	r0, #12
 80058da:	f7fc fca2 	bl	8002222 <memcpy>
 80058de:	4621      	mov	r1, r4
 80058e0:	9802      	ldr	r0, [sp, #8]
 80058e2:	f000 f9c9 	bl	8005c78 <_Bfree>
 80058e6:	464c      	mov	r4, r9
 80058e8:	6923      	ldr	r3, [r4, #16]
 80058ea:	1c5a      	adds	r2, r3, #1
 80058ec:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80058f0:	6122      	str	r2, [r4, #16]
 80058f2:	2201      	movs	r2, #1
 80058f4:	615a      	str	r2, [r3, #20]
 80058f6:	e7bd      	b.n	8005874 <__gethex+0x3b4>
 80058f8:	6922      	ldr	r2, [r4, #16]
 80058fa:	455a      	cmp	r2, fp
 80058fc:	dd0b      	ble.n	8005916 <__gethex+0x456>
 80058fe:	2101      	movs	r1, #1
 8005900:	4620      	mov	r0, r4
 8005902:	f7ff fd75 	bl	80053f0 <rshift>
 8005906:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800590a:	3501      	adds	r5, #1
 800590c:	42ab      	cmp	r3, r5
 800590e:	f6ff aed6 	blt.w	80056be <__gethex+0x1fe>
 8005912:	2701      	movs	r7, #1
 8005914:	e7c2      	b.n	800589c <__gethex+0x3dc>
 8005916:	f016 061f 	ands.w	r6, r6, #31
 800591a:	d0fa      	beq.n	8005912 <__gethex+0x452>
 800591c:	449a      	add	sl, r3
 800591e:	f1c6 0620 	rsb	r6, r6, #32
 8005922:	f85a 0c04 	ldr.w	r0, [sl, #-4]
 8005926:	f000 fa5d 	bl	8005de4 <__hi0bits>
 800592a:	42b0      	cmp	r0, r6
 800592c:	dbe7      	blt.n	80058fe <__gethex+0x43e>
 800592e:	e7f0      	b.n	8005912 <__gethex+0x452>
 8005930:	08007f79 	.word	0x08007f79

08005934 <L_shift>:
 8005934:	f1c2 0208 	rsb	r2, r2, #8
 8005938:	0092      	lsls	r2, r2, #2
 800593a:	b570      	push	{r4, r5, r6, lr}
 800593c:	f1c2 0620 	rsb	r6, r2, #32
 8005940:	6843      	ldr	r3, [r0, #4]
 8005942:	6804      	ldr	r4, [r0, #0]
 8005944:	fa03 f506 	lsl.w	r5, r3, r6
 8005948:	432c      	orrs	r4, r5
 800594a:	40d3      	lsrs	r3, r2
 800594c:	6004      	str	r4, [r0, #0]
 800594e:	f840 3f04 	str.w	r3, [r0, #4]!
 8005952:	4288      	cmp	r0, r1
 8005954:	d3f4      	bcc.n	8005940 <L_shift+0xc>
 8005956:	bd70      	pop	{r4, r5, r6, pc}

08005958 <__match>:
 8005958:	b530      	push	{r4, r5, lr}
 800595a:	6803      	ldr	r3, [r0, #0]
 800595c:	3301      	adds	r3, #1
 800595e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005962:	b914      	cbnz	r4, 800596a <__match+0x12>
 8005964:	6003      	str	r3, [r0, #0]
 8005966:	2001      	movs	r0, #1
 8005968:	bd30      	pop	{r4, r5, pc}
 800596a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800596e:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 8005972:	2d19      	cmp	r5, #25
 8005974:	bf98      	it	ls
 8005976:	3220      	addls	r2, #32
 8005978:	42a2      	cmp	r2, r4
 800597a:	d0f0      	beq.n	800595e <__match+0x6>
 800597c:	2000      	movs	r0, #0
 800597e:	e7f3      	b.n	8005968 <__match+0x10>

08005980 <__hexnan>:
 8005980:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005984:	680b      	ldr	r3, [r1, #0]
 8005986:	6801      	ldr	r1, [r0, #0]
 8005988:	115e      	asrs	r6, r3, #5
 800598a:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 800598e:	f013 031f 	ands.w	r3, r3, #31
 8005992:	b087      	sub	sp, #28
 8005994:	bf18      	it	ne
 8005996:	3604      	addne	r6, #4
 8005998:	2500      	movs	r5, #0
 800599a:	1f37      	subs	r7, r6, #4
 800599c:	4682      	mov	sl, r0
 800599e:	4690      	mov	r8, r2
 80059a0:	9301      	str	r3, [sp, #4]
 80059a2:	f846 5c04 	str.w	r5, [r6, #-4]
 80059a6:	46b9      	mov	r9, r7
 80059a8:	463c      	mov	r4, r7
 80059aa:	9502      	str	r5, [sp, #8]
 80059ac:	46ab      	mov	fp, r5
 80059ae:	784a      	ldrb	r2, [r1, #1]
 80059b0:	1c4b      	adds	r3, r1, #1
 80059b2:	9303      	str	r3, [sp, #12]
 80059b4:	b342      	cbz	r2, 8005a08 <__hexnan+0x88>
 80059b6:	4610      	mov	r0, r2
 80059b8:	9105      	str	r1, [sp, #20]
 80059ba:	9204      	str	r2, [sp, #16]
 80059bc:	f7ff fd6a 	bl	8005494 <__hexdig_fun>
 80059c0:	2800      	cmp	r0, #0
 80059c2:	d14f      	bne.n	8005a64 <__hexnan+0xe4>
 80059c4:	9a04      	ldr	r2, [sp, #16]
 80059c6:	9905      	ldr	r1, [sp, #20]
 80059c8:	2a20      	cmp	r2, #32
 80059ca:	d818      	bhi.n	80059fe <__hexnan+0x7e>
 80059cc:	9b02      	ldr	r3, [sp, #8]
 80059ce:	459b      	cmp	fp, r3
 80059d0:	dd13      	ble.n	80059fa <__hexnan+0x7a>
 80059d2:	454c      	cmp	r4, r9
 80059d4:	d206      	bcs.n	80059e4 <__hexnan+0x64>
 80059d6:	2d07      	cmp	r5, #7
 80059d8:	dc04      	bgt.n	80059e4 <__hexnan+0x64>
 80059da:	462a      	mov	r2, r5
 80059dc:	4649      	mov	r1, r9
 80059de:	4620      	mov	r0, r4
 80059e0:	f7ff ffa8 	bl	8005934 <L_shift>
 80059e4:	4544      	cmp	r4, r8
 80059e6:	d950      	bls.n	8005a8a <__hexnan+0x10a>
 80059e8:	2300      	movs	r3, #0
 80059ea:	f1a4 0904 	sub.w	r9, r4, #4
 80059ee:	f844 3c04 	str.w	r3, [r4, #-4]
 80059f2:	f8cd b008 	str.w	fp, [sp, #8]
 80059f6:	464c      	mov	r4, r9
 80059f8:	461d      	mov	r5, r3
 80059fa:	9903      	ldr	r1, [sp, #12]
 80059fc:	e7d7      	b.n	80059ae <__hexnan+0x2e>
 80059fe:	2a29      	cmp	r2, #41	; 0x29
 8005a00:	d156      	bne.n	8005ab0 <__hexnan+0x130>
 8005a02:	3102      	adds	r1, #2
 8005a04:	f8ca 1000 	str.w	r1, [sl]
 8005a08:	f1bb 0f00 	cmp.w	fp, #0
 8005a0c:	d050      	beq.n	8005ab0 <__hexnan+0x130>
 8005a0e:	454c      	cmp	r4, r9
 8005a10:	d206      	bcs.n	8005a20 <__hexnan+0xa0>
 8005a12:	2d07      	cmp	r5, #7
 8005a14:	dc04      	bgt.n	8005a20 <__hexnan+0xa0>
 8005a16:	462a      	mov	r2, r5
 8005a18:	4649      	mov	r1, r9
 8005a1a:	4620      	mov	r0, r4
 8005a1c:	f7ff ff8a 	bl	8005934 <L_shift>
 8005a20:	4544      	cmp	r4, r8
 8005a22:	d934      	bls.n	8005a8e <__hexnan+0x10e>
 8005a24:	f1a8 0204 	sub.w	r2, r8, #4
 8005a28:	4623      	mov	r3, r4
 8005a2a:	f853 1b04 	ldr.w	r1, [r3], #4
 8005a2e:	f842 1f04 	str.w	r1, [r2, #4]!
 8005a32:	429f      	cmp	r7, r3
 8005a34:	d2f9      	bcs.n	8005a2a <__hexnan+0xaa>
 8005a36:	1b3b      	subs	r3, r7, r4
 8005a38:	f023 0303 	bic.w	r3, r3, #3
 8005a3c:	3304      	adds	r3, #4
 8005a3e:	3401      	adds	r4, #1
 8005a40:	3e03      	subs	r6, #3
 8005a42:	42b4      	cmp	r4, r6
 8005a44:	bf88      	it	hi
 8005a46:	2304      	movhi	r3, #4
 8005a48:	4443      	add	r3, r8
 8005a4a:	2200      	movs	r2, #0
 8005a4c:	f843 2b04 	str.w	r2, [r3], #4
 8005a50:	429f      	cmp	r7, r3
 8005a52:	d2fb      	bcs.n	8005a4c <__hexnan+0xcc>
 8005a54:	683b      	ldr	r3, [r7, #0]
 8005a56:	b91b      	cbnz	r3, 8005a60 <__hexnan+0xe0>
 8005a58:	4547      	cmp	r7, r8
 8005a5a:	d127      	bne.n	8005aac <__hexnan+0x12c>
 8005a5c:	2301      	movs	r3, #1
 8005a5e:	603b      	str	r3, [r7, #0]
 8005a60:	2005      	movs	r0, #5
 8005a62:	e026      	b.n	8005ab2 <__hexnan+0x132>
 8005a64:	3501      	adds	r5, #1
 8005a66:	2d08      	cmp	r5, #8
 8005a68:	f10b 0b01 	add.w	fp, fp, #1
 8005a6c:	dd06      	ble.n	8005a7c <__hexnan+0xfc>
 8005a6e:	4544      	cmp	r4, r8
 8005a70:	d9c3      	bls.n	80059fa <__hexnan+0x7a>
 8005a72:	2300      	movs	r3, #0
 8005a74:	f844 3c04 	str.w	r3, [r4, #-4]
 8005a78:	2501      	movs	r5, #1
 8005a7a:	3c04      	subs	r4, #4
 8005a7c:	6822      	ldr	r2, [r4, #0]
 8005a7e:	f000 000f 	and.w	r0, r0, #15
 8005a82:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 8005a86:	6022      	str	r2, [r4, #0]
 8005a88:	e7b7      	b.n	80059fa <__hexnan+0x7a>
 8005a8a:	2508      	movs	r5, #8
 8005a8c:	e7b5      	b.n	80059fa <__hexnan+0x7a>
 8005a8e:	9b01      	ldr	r3, [sp, #4]
 8005a90:	2b00      	cmp	r3, #0
 8005a92:	d0df      	beq.n	8005a54 <__hexnan+0xd4>
 8005a94:	f04f 32ff 	mov.w	r2, #4294967295
 8005a98:	f1c3 0320 	rsb	r3, r3, #32
 8005a9c:	fa22 f303 	lsr.w	r3, r2, r3
 8005aa0:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8005aa4:	401a      	ands	r2, r3
 8005aa6:	f846 2c04 	str.w	r2, [r6, #-4]
 8005aaa:	e7d3      	b.n	8005a54 <__hexnan+0xd4>
 8005aac:	3f04      	subs	r7, #4
 8005aae:	e7d1      	b.n	8005a54 <__hexnan+0xd4>
 8005ab0:	2004      	movs	r0, #4
 8005ab2:	b007      	add	sp, #28
 8005ab4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08005ab8 <_localeconv_r>:
 8005ab8:	4800      	ldr	r0, [pc, #0]	; (8005abc <_localeconv_r+0x4>)
 8005aba:	4770      	bx	lr
 8005abc:	20000c68 	.word	0x20000c68

08005ac0 <_lseek_r>:
 8005ac0:	b538      	push	{r3, r4, r5, lr}
 8005ac2:	4d07      	ldr	r5, [pc, #28]	; (8005ae0 <_lseek_r+0x20>)
 8005ac4:	4604      	mov	r4, r0
 8005ac6:	4608      	mov	r0, r1
 8005ac8:	4611      	mov	r1, r2
 8005aca:	2200      	movs	r2, #0
 8005acc:	602a      	str	r2, [r5, #0]
 8005ace:	461a      	mov	r2, r3
 8005ad0:	f7fc f89f 	bl	8001c12 <_lseek>
 8005ad4:	1c43      	adds	r3, r0, #1
 8005ad6:	d102      	bne.n	8005ade <_lseek_r+0x1e>
 8005ad8:	682b      	ldr	r3, [r5, #0]
 8005ada:	b103      	cbz	r3, 8005ade <_lseek_r+0x1e>
 8005adc:	6023      	str	r3, [r4, #0]
 8005ade:	bd38      	pop	{r3, r4, r5, pc}
 8005ae0:	20000d3c 	.word	0x20000d3c

08005ae4 <__swhatbuf_r>:
 8005ae4:	b570      	push	{r4, r5, r6, lr}
 8005ae6:	460e      	mov	r6, r1
 8005ae8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005aec:	2900      	cmp	r1, #0
 8005aee:	b096      	sub	sp, #88	; 0x58
 8005af0:	4614      	mov	r4, r2
 8005af2:	461d      	mov	r5, r3
 8005af4:	da07      	bge.n	8005b06 <__swhatbuf_r+0x22>
 8005af6:	2300      	movs	r3, #0
 8005af8:	602b      	str	r3, [r5, #0]
 8005afa:	89b3      	ldrh	r3, [r6, #12]
 8005afc:	061a      	lsls	r2, r3, #24
 8005afe:	d410      	bmi.n	8005b22 <__swhatbuf_r+0x3e>
 8005b00:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8005b04:	e00e      	b.n	8005b24 <__swhatbuf_r+0x40>
 8005b06:	466a      	mov	r2, sp
 8005b08:	f001 fc88 	bl	800741c <_fstat_r>
 8005b0c:	2800      	cmp	r0, #0
 8005b0e:	dbf2      	blt.n	8005af6 <__swhatbuf_r+0x12>
 8005b10:	9a01      	ldr	r2, [sp, #4]
 8005b12:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8005b16:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8005b1a:	425a      	negs	r2, r3
 8005b1c:	415a      	adcs	r2, r3
 8005b1e:	602a      	str	r2, [r5, #0]
 8005b20:	e7ee      	b.n	8005b00 <__swhatbuf_r+0x1c>
 8005b22:	2340      	movs	r3, #64	; 0x40
 8005b24:	2000      	movs	r0, #0
 8005b26:	6023      	str	r3, [r4, #0]
 8005b28:	b016      	add	sp, #88	; 0x58
 8005b2a:	bd70      	pop	{r4, r5, r6, pc}

08005b2c <__smakebuf_r>:
 8005b2c:	898b      	ldrh	r3, [r1, #12]
 8005b2e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8005b30:	079d      	lsls	r5, r3, #30
 8005b32:	4606      	mov	r6, r0
 8005b34:	460c      	mov	r4, r1
 8005b36:	d507      	bpl.n	8005b48 <__smakebuf_r+0x1c>
 8005b38:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8005b3c:	6023      	str	r3, [r4, #0]
 8005b3e:	6123      	str	r3, [r4, #16]
 8005b40:	2301      	movs	r3, #1
 8005b42:	6163      	str	r3, [r4, #20]
 8005b44:	b002      	add	sp, #8
 8005b46:	bd70      	pop	{r4, r5, r6, pc}
 8005b48:	ab01      	add	r3, sp, #4
 8005b4a:	466a      	mov	r2, sp
 8005b4c:	f7ff ffca 	bl	8005ae4 <__swhatbuf_r>
 8005b50:	9900      	ldr	r1, [sp, #0]
 8005b52:	4605      	mov	r5, r0
 8005b54:	4630      	mov	r0, r6
 8005b56:	f7fc fb7b 	bl	8002250 <_malloc_r>
 8005b5a:	b948      	cbnz	r0, 8005b70 <__smakebuf_r+0x44>
 8005b5c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005b60:	059a      	lsls	r2, r3, #22
 8005b62:	d4ef      	bmi.n	8005b44 <__smakebuf_r+0x18>
 8005b64:	f023 0303 	bic.w	r3, r3, #3
 8005b68:	f043 0302 	orr.w	r3, r3, #2
 8005b6c:	81a3      	strh	r3, [r4, #12]
 8005b6e:	e7e3      	b.n	8005b38 <__smakebuf_r+0xc>
 8005b70:	4b0d      	ldr	r3, [pc, #52]	; (8005ba8 <__smakebuf_r+0x7c>)
 8005b72:	62b3      	str	r3, [r6, #40]	; 0x28
 8005b74:	89a3      	ldrh	r3, [r4, #12]
 8005b76:	6020      	str	r0, [r4, #0]
 8005b78:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005b7c:	81a3      	strh	r3, [r4, #12]
 8005b7e:	9b00      	ldr	r3, [sp, #0]
 8005b80:	6163      	str	r3, [r4, #20]
 8005b82:	9b01      	ldr	r3, [sp, #4]
 8005b84:	6120      	str	r0, [r4, #16]
 8005b86:	b15b      	cbz	r3, 8005ba0 <__smakebuf_r+0x74>
 8005b88:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8005b8c:	4630      	mov	r0, r6
 8005b8e:	f001 fc57 	bl	8007440 <_isatty_r>
 8005b92:	b128      	cbz	r0, 8005ba0 <__smakebuf_r+0x74>
 8005b94:	89a3      	ldrh	r3, [r4, #12]
 8005b96:	f023 0303 	bic.w	r3, r3, #3
 8005b9a:	f043 0301 	orr.w	r3, r3, #1
 8005b9e:	81a3      	strh	r3, [r4, #12]
 8005ba0:	89a0      	ldrh	r0, [r4, #12]
 8005ba2:	4305      	orrs	r5, r0
 8005ba4:	81a5      	strh	r5, [r4, #12]
 8005ba6:	e7cd      	b.n	8005b44 <__smakebuf_r+0x18>
 8005ba8:	08001ff9 	.word	0x08001ff9

08005bac <malloc>:
 8005bac:	4b02      	ldr	r3, [pc, #8]	; (8005bb8 <malloc+0xc>)
 8005bae:	4601      	mov	r1, r0
 8005bb0:	6818      	ldr	r0, [r3, #0]
 8005bb2:	f7fc bb4d 	b.w	8002250 <_malloc_r>
 8005bb6:	bf00      	nop
 8005bb8:	20000b10 	.word	0x20000b10

08005bbc <__ascii_mbtowc>:
 8005bbc:	b082      	sub	sp, #8
 8005bbe:	b901      	cbnz	r1, 8005bc2 <__ascii_mbtowc+0x6>
 8005bc0:	a901      	add	r1, sp, #4
 8005bc2:	b142      	cbz	r2, 8005bd6 <__ascii_mbtowc+0x1a>
 8005bc4:	b14b      	cbz	r3, 8005bda <__ascii_mbtowc+0x1e>
 8005bc6:	7813      	ldrb	r3, [r2, #0]
 8005bc8:	600b      	str	r3, [r1, #0]
 8005bca:	7812      	ldrb	r2, [r2, #0]
 8005bcc:	1e10      	subs	r0, r2, #0
 8005bce:	bf18      	it	ne
 8005bd0:	2001      	movne	r0, #1
 8005bd2:	b002      	add	sp, #8
 8005bd4:	4770      	bx	lr
 8005bd6:	4610      	mov	r0, r2
 8005bd8:	e7fb      	b.n	8005bd2 <__ascii_mbtowc+0x16>
 8005bda:	f06f 0001 	mvn.w	r0, #1
 8005bde:	e7f8      	b.n	8005bd2 <__ascii_mbtowc+0x16>

08005be0 <__malloc_lock>:
 8005be0:	4801      	ldr	r0, [pc, #4]	; (8005be8 <__malloc_lock+0x8>)
 8005be2:	f7fc bb1c 	b.w	800221e <__retarget_lock_acquire_recursive>
 8005be6:	bf00      	nop
 8005be8:	20000d34 	.word	0x20000d34

08005bec <__malloc_unlock>:
 8005bec:	4801      	ldr	r0, [pc, #4]	; (8005bf4 <__malloc_unlock+0x8>)
 8005bee:	f7fc bb17 	b.w	8002220 <__retarget_lock_release_recursive>
 8005bf2:	bf00      	nop
 8005bf4:	20000d34 	.word	0x20000d34

08005bf8 <_Balloc>:
 8005bf8:	b570      	push	{r4, r5, r6, lr}
 8005bfa:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8005bfc:	4604      	mov	r4, r0
 8005bfe:	460d      	mov	r5, r1
 8005c00:	b976      	cbnz	r6, 8005c20 <_Balloc+0x28>
 8005c02:	2010      	movs	r0, #16
 8005c04:	f7ff ffd2 	bl	8005bac <malloc>
 8005c08:	4602      	mov	r2, r0
 8005c0a:	6260      	str	r0, [r4, #36]	; 0x24
 8005c0c:	b920      	cbnz	r0, 8005c18 <_Balloc+0x20>
 8005c0e:	4b18      	ldr	r3, [pc, #96]	; (8005c70 <_Balloc+0x78>)
 8005c10:	4818      	ldr	r0, [pc, #96]	; (8005c74 <_Balloc+0x7c>)
 8005c12:	2166      	movs	r1, #102	; 0x66
 8005c14:	f7fe fc5c 	bl	80044d0 <__assert_func>
 8005c18:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8005c1c:	6006      	str	r6, [r0, #0]
 8005c1e:	60c6      	str	r6, [r0, #12]
 8005c20:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8005c22:	68f3      	ldr	r3, [r6, #12]
 8005c24:	b183      	cbz	r3, 8005c48 <_Balloc+0x50>
 8005c26:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005c28:	68db      	ldr	r3, [r3, #12]
 8005c2a:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8005c2e:	b9b8      	cbnz	r0, 8005c60 <_Balloc+0x68>
 8005c30:	2101      	movs	r1, #1
 8005c32:	fa01 f605 	lsl.w	r6, r1, r5
 8005c36:	1d72      	adds	r2, r6, #5
 8005c38:	0092      	lsls	r2, r2, #2
 8005c3a:	4620      	mov	r0, r4
 8005c3c:	f000 fc90 	bl	8006560 <_calloc_r>
 8005c40:	b160      	cbz	r0, 8005c5c <_Balloc+0x64>
 8005c42:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8005c46:	e00e      	b.n	8005c66 <_Balloc+0x6e>
 8005c48:	2221      	movs	r2, #33	; 0x21
 8005c4a:	2104      	movs	r1, #4
 8005c4c:	4620      	mov	r0, r4
 8005c4e:	f000 fc87 	bl	8006560 <_calloc_r>
 8005c52:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005c54:	60f0      	str	r0, [r6, #12]
 8005c56:	68db      	ldr	r3, [r3, #12]
 8005c58:	2b00      	cmp	r3, #0
 8005c5a:	d1e4      	bne.n	8005c26 <_Balloc+0x2e>
 8005c5c:	2000      	movs	r0, #0
 8005c5e:	bd70      	pop	{r4, r5, r6, pc}
 8005c60:	6802      	ldr	r2, [r0, #0]
 8005c62:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8005c66:	2300      	movs	r3, #0
 8005c68:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8005c6c:	e7f7      	b.n	8005c5e <_Balloc+0x66>
 8005c6e:	bf00      	nop
 8005c70:	08007d58 	.word	0x08007d58
 8005c74:	08008008 	.word	0x08008008

08005c78 <_Bfree>:
 8005c78:	b570      	push	{r4, r5, r6, lr}
 8005c7a:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8005c7c:	4605      	mov	r5, r0
 8005c7e:	460c      	mov	r4, r1
 8005c80:	b976      	cbnz	r6, 8005ca0 <_Bfree+0x28>
 8005c82:	2010      	movs	r0, #16
 8005c84:	f7ff ff92 	bl	8005bac <malloc>
 8005c88:	4602      	mov	r2, r0
 8005c8a:	6268      	str	r0, [r5, #36]	; 0x24
 8005c8c:	b920      	cbnz	r0, 8005c98 <_Bfree+0x20>
 8005c8e:	4b09      	ldr	r3, [pc, #36]	; (8005cb4 <_Bfree+0x3c>)
 8005c90:	4809      	ldr	r0, [pc, #36]	; (8005cb8 <_Bfree+0x40>)
 8005c92:	218a      	movs	r1, #138	; 0x8a
 8005c94:	f7fe fc1c 	bl	80044d0 <__assert_func>
 8005c98:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8005c9c:	6006      	str	r6, [r0, #0]
 8005c9e:	60c6      	str	r6, [r0, #12]
 8005ca0:	b13c      	cbz	r4, 8005cb2 <_Bfree+0x3a>
 8005ca2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8005ca4:	6862      	ldr	r2, [r4, #4]
 8005ca6:	68db      	ldr	r3, [r3, #12]
 8005ca8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8005cac:	6021      	str	r1, [r4, #0]
 8005cae:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8005cb2:	bd70      	pop	{r4, r5, r6, pc}
 8005cb4:	08007d58 	.word	0x08007d58
 8005cb8:	08008008 	.word	0x08008008

08005cbc <__multadd>:
 8005cbc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005cc0:	690e      	ldr	r6, [r1, #16]
 8005cc2:	4607      	mov	r7, r0
 8005cc4:	4698      	mov	r8, r3
 8005cc6:	460c      	mov	r4, r1
 8005cc8:	f101 0014 	add.w	r0, r1, #20
 8005ccc:	2300      	movs	r3, #0
 8005cce:	6805      	ldr	r5, [r0, #0]
 8005cd0:	b2a9      	uxth	r1, r5
 8005cd2:	fb02 8101 	mla	r1, r2, r1, r8
 8005cd6:	ea4f 4c11 	mov.w	ip, r1, lsr #16
 8005cda:	0c2d      	lsrs	r5, r5, #16
 8005cdc:	fb02 c505 	mla	r5, r2, r5, ip
 8005ce0:	b289      	uxth	r1, r1
 8005ce2:	3301      	adds	r3, #1
 8005ce4:	eb01 4105 	add.w	r1, r1, r5, lsl #16
 8005ce8:	429e      	cmp	r6, r3
 8005cea:	f840 1b04 	str.w	r1, [r0], #4
 8005cee:	ea4f 4815 	mov.w	r8, r5, lsr #16
 8005cf2:	dcec      	bgt.n	8005cce <__multadd+0x12>
 8005cf4:	f1b8 0f00 	cmp.w	r8, #0
 8005cf8:	d022      	beq.n	8005d40 <__multadd+0x84>
 8005cfa:	68a3      	ldr	r3, [r4, #8]
 8005cfc:	42b3      	cmp	r3, r6
 8005cfe:	dc19      	bgt.n	8005d34 <__multadd+0x78>
 8005d00:	6861      	ldr	r1, [r4, #4]
 8005d02:	4638      	mov	r0, r7
 8005d04:	3101      	adds	r1, #1
 8005d06:	f7ff ff77 	bl	8005bf8 <_Balloc>
 8005d0a:	4605      	mov	r5, r0
 8005d0c:	b928      	cbnz	r0, 8005d1a <__multadd+0x5e>
 8005d0e:	4602      	mov	r2, r0
 8005d10:	4b0d      	ldr	r3, [pc, #52]	; (8005d48 <__multadd+0x8c>)
 8005d12:	480e      	ldr	r0, [pc, #56]	; (8005d4c <__multadd+0x90>)
 8005d14:	21b5      	movs	r1, #181	; 0xb5
 8005d16:	f7fe fbdb 	bl	80044d0 <__assert_func>
 8005d1a:	6922      	ldr	r2, [r4, #16]
 8005d1c:	3202      	adds	r2, #2
 8005d1e:	f104 010c 	add.w	r1, r4, #12
 8005d22:	0092      	lsls	r2, r2, #2
 8005d24:	300c      	adds	r0, #12
 8005d26:	f7fc fa7c 	bl	8002222 <memcpy>
 8005d2a:	4621      	mov	r1, r4
 8005d2c:	4638      	mov	r0, r7
 8005d2e:	f7ff ffa3 	bl	8005c78 <_Bfree>
 8005d32:	462c      	mov	r4, r5
 8005d34:	eb04 0386 	add.w	r3, r4, r6, lsl #2
 8005d38:	3601      	adds	r6, #1
 8005d3a:	f8c3 8014 	str.w	r8, [r3, #20]
 8005d3e:	6126      	str	r6, [r4, #16]
 8005d40:	4620      	mov	r0, r4
 8005d42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005d46:	bf00      	nop
 8005d48:	08007f79 	.word	0x08007f79
 8005d4c:	08008008 	.word	0x08008008

08005d50 <__s2b>:
 8005d50:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005d54:	460c      	mov	r4, r1
 8005d56:	4615      	mov	r5, r2
 8005d58:	461f      	mov	r7, r3
 8005d5a:	2209      	movs	r2, #9
 8005d5c:	3308      	adds	r3, #8
 8005d5e:	4606      	mov	r6, r0
 8005d60:	fb93 f3f2 	sdiv	r3, r3, r2
 8005d64:	2100      	movs	r1, #0
 8005d66:	2201      	movs	r2, #1
 8005d68:	429a      	cmp	r2, r3
 8005d6a:	db09      	blt.n	8005d80 <__s2b+0x30>
 8005d6c:	4630      	mov	r0, r6
 8005d6e:	f7ff ff43 	bl	8005bf8 <_Balloc>
 8005d72:	b940      	cbnz	r0, 8005d86 <__s2b+0x36>
 8005d74:	4602      	mov	r2, r0
 8005d76:	4b19      	ldr	r3, [pc, #100]	; (8005ddc <__s2b+0x8c>)
 8005d78:	4819      	ldr	r0, [pc, #100]	; (8005de0 <__s2b+0x90>)
 8005d7a:	21ce      	movs	r1, #206	; 0xce
 8005d7c:	f7fe fba8 	bl	80044d0 <__assert_func>
 8005d80:	0052      	lsls	r2, r2, #1
 8005d82:	3101      	adds	r1, #1
 8005d84:	e7f0      	b.n	8005d68 <__s2b+0x18>
 8005d86:	9b08      	ldr	r3, [sp, #32]
 8005d88:	6143      	str	r3, [r0, #20]
 8005d8a:	2d09      	cmp	r5, #9
 8005d8c:	f04f 0301 	mov.w	r3, #1
 8005d90:	6103      	str	r3, [r0, #16]
 8005d92:	dd16      	ble.n	8005dc2 <__s2b+0x72>
 8005d94:	f104 0909 	add.w	r9, r4, #9
 8005d98:	46c8      	mov	r8, r9
 8005d9a:	442c      	add	r4, r5
 8005d9c:	f818 3b01 	ldrb.w	r3, [r8], #1
 8005da0:	4601      	mov	r1, r0
 8005da2:	3b30      	subs	r3, #48	; 0x30
 8005da4:	220a      	movs	r2, #10
 8005da6:	4630      	mov	r0, r6
 8005da8:	f7ff ff88 	bl	8005cbc <__multadd>
 8005dac:	45a0      	cmp	r8, r4
 8005dae:	d1f5      	bne.n	8005d9c <__s2b+0x4c>
 8005db0:	f1a5 0408 	sub.w	r4, r5, #8
 8005db4:	444c      	add	r4, r9
 8005db6:	1b2d      	subs	r5, r5, r4
 8005db8:	1963      	adds	r3, r4, r5
 8005dba:	42bb      	cmp	r3, r7
 8005dbc:	db04      	blt.n	8005dc8 <__s2b+0x78>
 8005dbe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005dc2:	340a      	adds	r4, #10
 8005dc4:	2509      	movs	r5, #9
 8005dc6:	e7f6      	b.n	8005db6 <__s2b+0x66>
 8005dc8:	f814 3b01 	ldrb.w	r3, [r4], #1
 8005dcc:	4601      	mov	r1, r0
 8005dce:	3b30      	subs	r3, #48	; 0x30
 8005dd0:	220a      	movs	r2, #10
 8005dd2:	4630      	mov	r0, r6
 8005dd4:	f7ff ff72 	bl	8005cbc <__multadd>
 8005dd8:	e7ee      	b.n	8005db8 <__s2b+0x68>
 8005dda:	bf00      	nop
 8005ddc:	08007f79 	.word	0x08007f79
 8005de0:	08008008 	.word	0x08008008

08005de4 <__hi0bits>:
 8005de4:	0c02      	lsrs	r2, r0, #16
 8005de6:	0412      	lsls	r2, r2, #16
 8005de8:	4603      	mov	r3, r0
 8005dea:	b9ca      	cbnz	r2, 8005e20 <__hi0bits+0x3c>
 8005dec:	0403      	lsls	r3, r0, #16
 8005dee:	2010      	movs	r0, #16
 8005df0:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8005df4:	bf04      	itt	eq
 8005df6:	021b      	lsleq	r3, r3, #8
 8005df8:	3008      	addeq	r0, #8
 8005dfa:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8005dfe:	bf04      	itt	eq
 8005e00:	011b      	lsleq	r3, r3, #4
 8005e02:	3004      	addeq	r0, #4
 8005e04:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8005e08:	bf04      	itt	eq
 8005e0a:	009b      	lsleq	r3, r3, #2
 8005e0c:	3002      	addeq	r0, #2
 8005e0e:	2b00      	cmp	r3, #0
 8005e10:	db05      	blt.n	8005e1e <__hi0bits+0x3a>
 8005e12:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
 8005e16:	f100 0001 	add.w	r0, r0, #1
 8005e1a:	bf08      	it	eq
 8005e1c:	2020      	moveq	r0, #32
 8005e1e:	4770      	bx	lr
 8005e20:	2000      	movs	r0, #0
 8005e22:	e7e5      	b.n	8005df0 <__hi0bits+0xc>

08005e24 <__lo0bits>:
 8005e24:	6803      	ldr	r3, [r0, #0]
 8005e26:	4602      	mov	r2, r0
 8005e28:	f013 0007 	ands.w	r0, r3, #7
 8005e2c:	d00b      	beq.n	8005e46 <__lo0bits+0x22>
 8005e2e:	07d9      	lsls	r1, r3, #31
 8005e30:	d422      	bmi.n	8005e78 <__lo0bits+0x54>
 8005e32:	0798      	lsls	r0, r3, #30
 8005e34:	bf49      	itett	mi
 8005e36:	085b      	lsrmi	r3, r3, #1
 8005e38:	089b      	lsrpl	r3, r3, #2
 8005e3a:	2001      	movmi	r0, #1
 8005e3c:	6013      	strmi	r3, [r2, #0]
 8005e3e:	bf5c      	itt	pl
 8005e40:	6013      	strpl	r3, [r2, #0]
 8005e42:	2002      	movpl	r0, #2
 8005e44:	4770      	bx	lr
 8005e46:	b299      	uxth	r1, r3
 8005e48:	b909      	cbnz	r1, 8005e4e <__lo0bits+0x2a>
 8005e4a:	0c1b      	lsrs	r3, r3, #16
 8005e4c:	2010      	movs	r0, #16
 8005e4e:	f013 0fff 	tst.w	r3, #255	; 0xff
 8005e52:	bf04      	itt	eq
 8005e54:	0a1b      	lsreq	r3, r3, #8
 8005e56:	3008      	addeq	r0, #8
 8005e58:	0719      	lsls	r1, r3, #28
 8005e5a:	bf04      	itt	eq
 8005e5c:	091b      	lsreq	r3, r3, #4
 8005e5e:	3004      	addeq	r0, #4
 8005e60:	0799      	lsls	r1, r3, #30
 8005e62:	bf04      	itt	eq
 8005e64:	089b      	lsreq	r3, r3, #2
 8005e66:	3002      	addeq	r0, #2
 8005e68:	07d9      	lsls	r1, r3, #31
 8005e6a:	d403      	bmi.n	8005e74 <__lo0bits+0x50>
 8005e6c:	085b      	lsrs	r3, r3, #1
 8005e6e:	f100 0001 	add.w	r0, r0, #1
 8005e72:	d003      	beq.n	8005e7c <__lo0bits+0x58>
 8005e74:	6013      	str	r3, [r2, #0]
 8005e76:	4770      	bx	lr
 8005e78:	2000      	movs	r0, #0
 8005e7a:	4770      	bx	lr
 8005e7c:	2020      	movs	r0, #32
 8005e7e:	4770      	bx	lr

08005e80 <__i2b>:
 8005e80:	b510      	push	{r4, lr}
 8005e82:	460c      	mov	r4, r1
 8005e84:	2101      	movs	r1, #1
 8005e86:	f7ff feb7 	bl	8005bf8 <_Balloc>
 8005e8a:	4602      	mov	r2, r0
 8005e8c:	b928      	cbnz	r0, 8005e9a <__i2b+0x1a>
 8005e8e:	4b05      	ldr	r3, [pc, #20]	; (8005ea4 <__i2b+0x24>)
 8005e90:	4805      	ldr	r0, [pc, #20]	; (8005ea8 <__i2b+0x28>)
 8005e92:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8005e96:	f7fe fb1b 	bl	80044d0 <__assert_func>
 8005e9a:	2301      	movs	r3, #1
 8005e9c:	6144      	str	r4, [r0, #20]
 8005e9e:	6103      	str	r3, [r0, #16]
 8005ea0:	bd10      	pop	{r4, pc}
 8005ea2:	bf00      	nop
 8005ea4:	08007f79 	.word	0x08007f79
 8005ea8:	08008008 	.word	0x08008008

08005eac <__multiply>:
 8005eac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005eb0:	4614      	mov	r4, r2
 8005eb2:	690a      	ldr	r2, [r1, #16]
 8005eb4:	6923      	ldr	r3, [r4, #16]
 8005eb6:	429a      	cmp	r2, r3
 8005eb8:	bfb8      	it	lt
 8005eba:	460b      	movlt	r3, r1
 8005ebc:	460d      	mov	r5, r1
 8005ebe:	bfbc      	itt	lt
 8005ec0:	4625      	movlt	r5, r4
 8005ec2:	461c      	movlt	r4, r3
 8005ec4:	f8d5 a010 	ldr.w	sl, [r5, #16]
 8005ec8:	f8d4 9010 	ldr.w	r9, [r4, #16]
 8005ecc:	68ab      	ldr	r3, [r5, #8]
 8005ece:	6869      	ldr	r1, [r5, #4]
 8005ed0:	eb0a 0709 	add.w	r7, sl, r9
 8005ed4:	42bb      	cmp	r3, r7
 8005ed6:	b085      	sub	sp, #20
 8005ed8:	bfb8      	it	lt
 8005eda:	3101      	addlt	r1, #1
 8005edc:	f7ff fe8c 	bl	8005bf8 <_Balloc>
 8005ee0:	b930      	cbnz	r0, 8005ef0 <__multiply+0x44>
 8005ee2:	4602      	mov	r2, r0
 8005ee4:	4b42      	ldr	r3, [pc, #264]	; (8005ff0 <__multiply+0x144>)
 8005ee6:	4843      	ldr	r0, [pc, #268]	; (8005ff4 <__multiply+0x148>)
 8005ee8:	f240 115d 	movw	r1, #349	; 0x15d
 8005eec:	f7fe faf0 	bl	80044d0 <__assert_func>
 8005ef0:	f100 0614 	add.w	r6, r0, #20
 8005ef4:	eb06 0887 	add.w	r8, r6, r7, lsl #2
 8005ef8:	4633      	mov	r3, r6
 8005efa:	2200      	movs	r2, #0
 8005efc:	4543      	cmp	r3, r8
 8005efe:	d31e      	bcc.n	8005f3e <__multiply+0x92>
 8005f00:	f105 0c14 	add.w	ip, r5, #20
 8005f04:	f104 0314 	add.w	r3, r4, #20
 8005f08:	eb0c 0c8a 	add.w	ip, ip, sl, lsl #2
 8005f0c:	eb03 0289 	add.w	r2, r3, r9, lsl #2
 8005f10:	9202      	str	r2, [sp, #8]
 8005f12:	ebac 0205 	sub.w	r2, ip, r5
 8005f16:	3a15      	subs	r2, #21
 8005f18:	f022 0203 	bic.w	r2, r2, #3
 8005f1c:	3204      	adds	r2, #4
 8005f1e:	f105 0115 	add.w	r1, r5, #21
 8005f22:	458c      	cmp	ip, r1
 8005f24:	bf38      	it	cc
 8005f26:	2204      	movcc	r2, #4
 8005f28:	9201      	str	r2, [sp, #4]
 8005f2a:	9a02      	ldr	r2, [sp, #8]
 8005f2c:	9303      	str	r3, [sp, #12]
 8005f2e:	429a      	cmp	r2, r3
 8005f30:	d808      	bhi.n	8005f44 <__multiply+0x98>
 8005f32:	2f00      	cmp	r7, #0
 8005f34:	dc55      	bgt.n	8005fe2 <__multiply+0x136>
 8005f36:	6107      	str	r7, [r0, #16]
 8005f38:	b005      	add	sp, #20
 8005f3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005f3e:	f843 2b04 	str.w	r2, [r3], #4
 8005f42:	e7db      	b.n	8005efc <__multiply+0x50>
 8005f44:	f8b3 a000 	ldrh.w	sl, [r3]
 8005f48:	f1ba 0f00 	cmp.w	sl, #0
 8005f4c:	d020      	beq.n	8005f90 <__multiply+0xe4>
 8005f4e:	f105 0e14 	add.w	lr, r5, #20
 8005f52:	46b1      	mov	r9, r6
 8005f54:	2200      	movs	r2, #0
 8005f56:	f85e 4b04 	ldr.w	r4, [lr], #4
 8005f5a:	f8d9 b000 	ldr.w	fp, [r9]
 8005f5e:	b2a1      	uxth	r1, r4
 8005f60:	fa1f fb8b 	uxth.w	fp, fp
 8005f64:	fb0a b101 	mla	r1, sl, r1, fp
 8005f68:	4411      	add	r1, r2
 8005f6a:	f8d9 2000 	ldr.w	r2, [r9]
 8005f6e:	0c24      	lsrs	r4, r4, #16
 8005f70:	0c12      	lsrs	r2, r2, #16
 8005f72:	fb0a 2404 	mla	r4, sl, r4, r2
 8005f76:	eb04 4411 	add.w	r4, r4, r1, lsr #16
 8005f7a:	b289      	uxth	r1, r1
 8005f7c:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 8005f80:	45f4      	cmp	ip, lr
 8005f82:	f849 1b04 	str.w	r1, [r9], #4
 8005f86:	ea4f 4214 	mov.w	r2, r4, lsr #16
 8005f8a:	d8e4      	bhi.n	8005f56 <__multiply+0xaa>
 8005f8c:	9901      	ldr	r1, [sp, #4]
 8005f8e:	5072      	str	r2, [r6, r1]
 8005f90:	9a03      	ldr	r2, [sp, #12]
 8005f92:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8005f96:	3304      	adds	r3, #4
 8005f98:	f1b9 0f00 	cmp.w	r9, #0
 8005f9c:	d01f      	beq.n	8005fde <__multiply+0x132>
 8005f9e:	6834      	ldr	r4, [r6, #0]
 8005fa0:	f105 0114 	add.w	r1, r5, #20
 8005fa4:	46b6      	mov	lr, r6
 8005fa6:	f04f 0a00 	mov.w	sl, #0
 8005faa:	880a      	ldrh	r2, [r1, #0]
 8005fac:	f8be b002 	ldrh.w	fp, [lr, #2]
 8005fb0:	fb09 b202 	mla	r2, r9, r2, fp
 8005fb4:	4492      	add	sl, r2
 8005fb6:	b2a4      	uxth	r4, r4
 8005fb8:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 8005fbc:	f84e 4b04 	str.w	r4, [lr], #4
 8005fc0:	f851 4b04 	ldr.w	r4, [r1], #4
 8005fc4:	f8be 2000 	ldrh.w	r2, [lr]
 8005fc8:	0c24      	lsrs	r4, r4, #16
 8005fca:	fb09 2404 	mla	r4, r9, r4, r2
 8005fce:	eb04 441a 	add.w	r4, r4, sl, lsr #16
 8005fd2:	458c      	cmp	ip, r1
 8005fd4:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 8005fd8:	d8e7      	bhi.n	8005faa <__multiply+0xfe>
 8005fda:	9a01      	ldr	r2, [sp, #4]
 8005fdc:	50b4      	str	r4, [r6, r2]
 8005fde:	3604      	adds	r6, #4
 8005fe0:	e7a3      	b.n	8005f2a <__multiply+0x7e>
 8005fe2:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8005fe6:	2b00      	cmp	r3, #0
 8005fe8:	d1a5      	bne.n	8005f36 <__multiply+0x8a>
 8005fea:	3f01      	subs	r7, #1
 8005fec:	e7a1      	b.n	8005f32 <__multiply+0x86>
 8005fee:	bf00      	nop
 8005ff0:	08007f79 	.word	0x08007f79
 8005ff4:	08008008 	.word	0x08008008

08005ff8 <__pow5mult>:
 8005ff8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005ffc:	4615      	mov	r5, r2
 8005ffe:	f012 0203 	ands.w	r2, r2, #3
 8006002:	4606      	mov	r6, r0
 8006004:	460f      	mov	r7, r1
 8006006:	d007      	beq.n	8006018 <__pow5mult+0x20>
 8006008:	4c25      	ldr	r4, [pc, #148]	; (80060a0 <__pow5mult+0xa8>)
 800600a:	3a01      	subs	r2, #1
 800600c:	2300      	movs	r3, #0
 800600e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8006012:	f7ff fe53 	bl	8005cbc <__multadd>
 8006016:	4607      	mov	r7, r0
 8006018:	10ad      	asrs	r5, r5, #2
 800601a:	d03d      	beq.n	8006098 <__pow5mult+0xa0>
 800601c:	6a74      	ldr	r4, [r6, #36]	; 0x24
 800601e:	b97c      	cbnz	r4, 8006040 <__pow5mult+0x48>
 8006020:	2010      	movs	r0, #16
 8006022:	f7ff fdc3 	bl	8005bac <malloc>
 8006026:	4602      	mov	r2, r0
 8006028:	6270      	str	r0, [r6, #36]	; 0x24
 800602a:	b928      	cbnz	r0, 8006038 <__pow5mult+0x40>
 800602c:	4b1d      	ldr	r3, [pc, #116]	; (80060a4 <__pow5mult+0xac>)
 800602e:	481e      	ldr	r0, [pc, #120]	; (80060a8 <__pow5mult+0xb0>)
 8006030:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 8006034:	f7fe fa4c 	bl	80044d0 <__assert_func>
 8006038:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800603c:	6004      	str	r4, [r0, #0]
 800603e:	60c4      	str	r4, [r0, #12]
 8006040:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8006044:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8006048:	b94c      	cbnz	r4, 800605e <__pow5mult+0x66>
 800604a:	f240 2171 	movw	r1, #625	; 0x271
 800604e:	4630      	mov	r0, r6
 8006050:	f7ff ff16 	bl	8005e80 <__i2b>
 8006054:	2300      	movs	r3, #0
 8006056:	f8c8 0008 	str.w	r0, [r8, #8]
 800605a:	4604      	mov	r4, r0
 800605c:	6003      	str	r3, [r0, #0]
 800605e:	f04f 0900 	mov.w	r9, #0
 8006062:	07eb      	lsls	r3, r5, #31
 8006064:	d50a      	bpl.n	800607c <__pow5mult+0x84>
 8006066:	4639      	mov	r1, r7
 8006068:	4622      	mov	r2, r4
 800606a:	4630      	mov	r0, r6
 800606c:	f7ff ff1e 	bl	8005eac <__multiply>
 8006070:	4639      	mov	r1, r7
 8006072:	4680      	mov	r8, r0
 8006074:	4630      	mov	r0, r6
 8006076:	f7ff fdff 	bl	8005c78 <_Bfree>
 800607a:	4647      	mov	r7, r8
 800607c:	106d      	asrs	r5, r5, #1
 800607e:	d00b      	beq.n	8006098 <__pow5mult+0xa0>
 8006080:	6820      	ldr	r0, [r4, #0]
 8006082:	b938      	cbnz	r0, 8006094 <__pow5mult+0x9c>
 8006084:	4622      	mov	r2, r4
 8006086:	4621      	mov	r1, r4
 8006088:	4630      	mov	r0, r6
 800608a:	f7ff ff0f 	bl	8005eac <__multiply>
 800608e:	6020      	str	r0, [r4, #0]
 8006090:	f8c0 9000 	str.w	r9, [r0]
 8006094:	4604      	mov	r4, r0
 8006096:	e7e4      	b.n	8006062 <__pow5mult+0x6a>
 8006098:	4638      	mov	r0, r7
 800609a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800609e:	bf00      	nop
 80060a0:	08008158 	.word	0x08008158
 80060a4:	08007d58 	.word	0x08007d58
 80060a8:	08008008 	.word	0x08008008

080060ac <__lshift>:
 80060ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80060b0:	460c      	mov	r4, r1
 80060b2:	6849      	ldr	r1, [r1, #4]
 80060b4:	6923      	ldr	r3, [r4, #16]
 80060b6:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80060ba:	68a3      	ldr	r3, [r4, #8]
 80060bc:	4607      	mov	r7, r0
 80060be:	4691      	mov	r9, r2
 80060c0:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80060c4:	f108 0601 	add.w	r6, r8, #1
 80060c8:	42b3      	cmp	r3, r6
 80060ca:	db0b      	blt.n	80060e4 <__lshift+0x38>
 80060cc:	4638      	mov	r0, r7
 80060ce:	f7ff fd93 	bl	8005bf8 <_Balloc>
 80060d2:	4605      	mov	r5, r0
 80060d4:	b948      	cbnz	r0, 80060ea <__lshift+0x3e>
 80060d6:	4602      	mov	r2, r0
 80060d8:	4b28      	ldr	r3, [pc, #160]	; (800617c <__lshift+0xd0>)
 80060da:	4829      	ldr	r0, [pc, #164]	; (8006180 <__lshift+0xd4>)
 80060dc:	f240 11d9 	movw	r1, #473	; 0x1d9
 80060e0:	f7fe f9f6 	bl	80044d0 <__assert_func>
 80060e4:	3101      	adds	r1, #1
 80060e6:	005b      	lsls	r3, r3, #1
 80060e8:	e7ee      	b.n	80060c8 <__lshift+0x1c>
 80060ea:	2300      	movs	r3, #0
 80060ec:	f100 0114 	add.w	r1, r0, #20
 80060f0:	f100 0210 	add.w	r2, r0, #16
 80060f4:	4618      	mov	r0, r3
 80060f6:	4553      	cmp	r3, sl
 80060f8:	db33      	blt.n	8006162 <__lshift+0xb6>
 80060fa:	6920      	ldr	r0, [r4, #16]
 80060fc:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8006100:	f104 0314 	add.w	r3, r4, #20
 8006104:	f019 091f 	ands.w	r9, r9, #31
 8006108:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800610c:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8006110:	d02b      	beq.n	800616a <__lshift+0xbe>
 8006112:	f1c9 0e20 	rsb	lr, r9, #32
 8006116:	468a      	mov	sl, r1
 8006118:	2200      	movs	r2, #0
 800611a:	6818      	ldr	r0, [r3, #0]
 800611c:	fa00 f009 	lsl.w	r0, r0, r9
 8006120:	4302      	orrs	r2, r0
 8006122:	f84a 2b04 	str.w	r2, [sl], #4
 8006126:	f853 2b04 	ldr.w	r2, [r3], #4
 800612a:	459c      	cmp	ip, r3
 800612c:	fa22 f20e 	lsr.w	r2, r2, lr
 8006130:	d8f3      	bhi.n	800611a <__lshift+0x6e>
 8006132:	ebac 0304 	sub.w	r3, ip, r4
 8006136:	3b15      	subs	r3, #21
 8006138:	f023 0303 	bic.w	r3, r3, #3
 800613c:	3304      	adds	r3, #4
 800613e:	f104 0015 	add.w	r0, r4, #21
 8006142:	4584      	cmp	ip, r0
 8006144:	bf38      	it	cc
 8006146:	2304      	movcc	r3, #4
 8006148:	50ca      	str	r2, [r1, r3]
 800614a:	b10a      	cbz	r2, 8006150 <__lshift+0xa4>
 800614c:	f108 0602 	add.w	r6, r8, #2
 8006150:	3e01      	subs	r6, #1
 8006152:	4638      	mov	r0, r7
 8006154:	612e      	str	r6, [r5, #16]
 8006156:	4621      	mov	r1, r4
 8006158:	f7ff fd8e 	bl	8005c78 <_Bfree>
 800615c:	4628      	mov	r0, r5
 800615e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006162:	f842 0f04 	str.w	r0, [r2, #4]!
 8006166:	3301      	adds	r3, #1
 8006168:	e7c5      	b.n	80060f6 <__lshift+0x4a>
 800616a:	3904      	subs	r1, #4
 800616c:	f853 2b04 	ldr.w	r2, [r3], #4
 8006170:	f841 2f04 	str.w	r2, [r1, #4]!
 8006174:	459c      	cmp	ip, r3
 8006176:	d8f9      	bhi.n	800616c <__lshift+0xc0>
 8006178:	e7ea      	b.n	8006150 <__lshift+0xa4>
 800617a:	bf00      	nop
 800617c:	08007f79 	.word	0x08007f79
 8006180:	08008008 	.word	0x08008008

08006184 <__mcmp>:
 8006184:	690a      	ldr	r2, [r1, #16]
 8006186:	4603      	mov	r3, r0
 8006188:	6900      	ldr	r0, [r0, #16]
 800618a:	1a80      	subs	r0, r0, r2
 800618c:	b530      	push	{r4, r5, lr}
 800618e:	d10d      	bne.n	80061ac <__mcmp+0x28>
 8006190:	3314      	adds	r3, #20
 8006192:	3114      	adds	r1, #20
 8006194:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8006198:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 800619c:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 80061a0:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 80061a4:	4295      	cmp	r5, r2
 80061a6:	d002      	beq.n	80061ae <__mcmp+0x2a>
 80061a8:	d304      	bcc.n	80061b4 <__mcmp+0x30>
 80061aa:	2001      	movs	r0, #1
 80061ac:	bd30      	pop	{r4, r5, pc}
 80061ae:	42a3      	cmp	r3, r4
 80061b0:	d3f4      	bcc.n	800619c <__mcmp+0x18>
 80061b2:	e7fb      	b.n	80061ac <__mcmp+0x28>
 80061b4:	f04f 30ff 	mov.w	r0, #4294967295
 80061b8:	e7f8      	b.n	80061ac <__mcmp+0x28>
	...

080061bc <__mdiff>:
 80061bc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80061c0:	460c      	mov	r4, r1
 80061c2:	4606      	mov	r6, r0
 80061c4:	4611      	mov	r1, r2
 80061c6:	4620      	mov	r0, r4
 80061c8:	4617      	mov	r7, r2
 80061ca:	f7ff ffdb 	bl	8006184 <__mcmp>
 80061ce:	1e05      	subs	r5, r0, #0
 80061d0:	d111      	bne.n	80061f6 <__mdiff+0x3a>
 80061d2:	4629      	mov	r1, r5
 80061d4:	4630      	mov	r0, r6
 80061d6:	f7ff fd0f 	bl	8005bf8 <_Balloc>
 80061da:	4602      	mov	r2, r0
 80061dc:	b928      	cbnz	r0, 80061ea <__mdiff+0x2e>
 80061de:	4b3a      	ldr	r3, [pc, #232]	; (80062c8 <__mdiff+0x10c>)
 80061e0:	f240 2132 	movw	r1, #562	; 0x232
 80061e4:	4839      	ldr	r0, [pc, #228]	; (80062cc <__mdiff+0x110>)
 80061e6:	f7fe f973 	bl	80044d0 <__assert_func>
 80061ea:	2301      	movs	r3, #1
 80061ec:	e9c0 3504 	strd	r3, r5, [r0, #16]
 80061f0:	4610      	mov	r0, r2
 80061f2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80061f6:	bfa4      	itt	ge
 80061f8:	463b      	movge	r3, r7
 80061fa:	4627      	movge	r7, r4
 80061fc:	4630      	mov	r0, r6
 80061fe:	6879      	ldr	r1, [r7, #4]
 8006200:	bfa6      	itte	ge
 8006202:	461c      	movge	r4, r3
 8006204:	2500      	movge	r5, #0
 8006206:	2501      	movlt	r5, #1
 8006208:	f7ff fcf6 	bl	8005bf8 <_Balloc>
 800620c:	4602      	mov	r2, r0
 800620e:	b918      	cbnz	r0, 8006218 <__mdiff+0x5c>
 8006210:	4b2d      	ldr	r3, [pc, #180]	; (80062c8 <__mdiff+0x10c>)
 8006212:	f44f 7110 	mov.w	r1, #576	; 0x240
 8006216:	e7e5      	b.n	80061e4 <__mdiff+0x28>
 8006218:	693e      	ldr	r6, [r7, #16]
 800621a:	60c5      	str	r5, [r0, #12]
 800621c:	6925      	ldr	r5, [r4, #16]
 800621e:	f107 0114 	add.w	r1, r7, #20
 8006222:	f100 0e14 	add.w	lr, r0, #20
 8006226:	f104 0914 	add.w	r9, r4, #20
 800622a:	f107 0010 	add.w	r0, r7, #16
 800622e:	eb01 0c86 	add.w	ip, r1, r6, lsl #2
 8006232:	eb09 0585 	add.w	r5, r9, r5, lsl #2
 8006236:	46f2      	mov	sl, lr
 8006238:	2700      	movs	r7, #0
 800623a:	f859 3b04 	ldr.w	r3, [r9], #4
 800623e:	f850 bf04 	ldr.w	fp, [r0, #4]!
 8006242:	fa1f f883 	uxth.w	r8, r3
 8006246:	fa17 f78b 	uxtah	r7, r7, fp
 800624a:	0c1b      	lsrs	r3, r3, #16
 800624c:	eba7 0808 	sub.w	r8, r7, r8
 8006250:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8006254:	eb03 4328 	add.w	r3, r3, r8, asr #16
 8006258:	fa1f f888 	uxth.w	r8, r8
 800625c:	141f      	asrs	r7, r3, #16
 800625e:	454d      	cmp	r5, r9
 8006260:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 8006264:	f84a 3b04 	str.w	r3, [sl], #4
 8006268:	d8e7      	bhi.n	800623a <__mdiff+0x7e>
 800626a:	1b2b      	subs	r3, r5, r4
 800626c:	3b15      	subs	r3, #21
 800626e:	f023 0303 	bic.w	r3, r3, #3
 8006272:	3304      	adds	r3, #4
 8006274:	3415      	adds	r4, #21
 8006276:	42a5      	cmp	r5, r4
 8006278:	bf38      	it	cc
 800627a:	2304      	movcc	r3, #4
 800627c:	4419      	add	r1, r3
 800627e:	4473      	add	r3, lr
 8006280:	469e      	mov	lr, r3
 8006282:	460d      	mov	r5, r1
 8006284:	4565      	cmp	r5, ip
 8006286:	d30e      	bcc.n	80062a6 <__mdiff+0xea>
 8006288:	f10c 0003 	add.w	r0, ip, #3
 800628c:	1a40      	subs	r0, r0, r1
 800628e:	f020 0003 	bic.w	r0, r0, #3
 8006292:	3903      	subs	r1, #3
 8006294:	458c      	cmp	ip, r1
 8006296:	bf38      	it	cc
 8006298:	2000      	movcc	r0, #0
 800629a:	4418      	add	r0, r3
 800629c:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 80062a0:	b17b      	cbz	r3, 80062c2 <__mdiff+0x106>
 80062a2:	6116      	str	r6, [r2, #16]
 80062a4:	e7a4      	b.n	80061f0 <__mdiff+0x34>
 80062a6:	f855 8b04 	ldr.w	r8, [r5], #4
 80062aa:	fa17 f488 	uxtah	r4, r7, r8
 80062ae:	1420      	asrs	r0, r4, #16
 80062b0:	eb00 4018 	add.w	r0, r0, r8, lsr #16
 80062b4:	b2a4      	uxth	r4, r4
 80062b6:	ea44 4400 	orr.w	r4, r4, r0, lsl #16
 80062ba:	f84e 4b04 	str.w	r4, [lr], #4
 80062be:	1407      	asrs	r7, r0, #16
 80062c0:	e7e0      	b.n	8006284 <__mdiff+0xc8>
 80062c2:	3e01      	subs	r6, #1
 80062c4:	e7ea      	b.n	800629c <__mdiff+0xe0>
 80062c6:	bf00      	nop
 80062c8:	08007f79 	.word	0x08007f79
 80062cc:	08008008 	.word	0x08008008

080062d0 <__ulp>:
 80062d0:	4b11      	ldr	r3, [pc, #68]	; (8006318 <__ulp+0x48>)
 80062d2:	400b      	ands	r3, r1
 80062d4:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
 80062d8:	2b00      	cmp	r3, #0
 80062da:	dd02      	ble.n	80062e2 <__ulp+0x12>
 80062dc:	2000      	movs	r0, #0
 80062de:	4619      	mov	r1, r3
 80062e0:	4770      	bx	lr
 80062e2:	425b      	negs	r3, r3
 80062e4:	f1b3 7fa0 	cmp.w	r3, #20971520	; 0x1400000
 80062e8:	ea4f 5223 	mov.w	r2, r3, asr #20
 80062ec:	f04f 0000 	mov.w	r0, #0
 80062f0:	f04f 0100 	mov.w	r1, #0
 80062f4:	da04      	bge.n	8006300 <__ulp+0x30>
 80062f6:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 80062fa:	fa43 f102 	asr.w	r1, r3, r2
 80062fe:	4770      	bx	lr
 8006300:	f1a2 0314 	sub.w	r3, r2, #20
 8006304:	2b1e      	cmp	r3, #30
 8006306:	bfda      	itte	le
 8006308:	f04f 4200 	movle.w	r2, #2147483648	; 0x80000000
 800630c:	fa22 f303 	lsrle.w	r3, r2, r3
 8006310:	2301      	movgt	r3, #1
 8006312:	4618      	mov	r0, r3
 8006314:	4770      	bx	lr
 8006316:	bf00      	nop
 8006318:	7ff00000 	.word	0x7ff00000

0800631c <__b2d>:
 800631c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006320:	6907      	ldr	r7, [r0, #16]
 8006322:	f100 0914 	add.w	r9, r0, #20
 8006326:	eb09 0787 	add.w	r7, r9, r7, lsl #2
 800632a:	f1a7 0804 	sub.w	r8, r7, #4
 800632e:	f857 6c04 	ldr.w	r6, [r7, #-4]
 8006332:	4630      	mov	r0, r6
 8006334:	f7ff fd56 	bl	8005de4 <__hi0bits>
 8006338:	f1c0 0320 	rsb	r3, r0, #32
 800633c:	280a      	cmp	r0, #10
 800633e:	600b      	str	r3, [r1, #0]
 8006340:	491f      	ldr	r1, [pc, #124]	; (80063c0 <__b2d+0xa4>)
 8006342:	dc17      	bgt.n	8006374 <__b2d+0x58>
 8006344:	f1c0 0c0b 	rsb	ip, r0, #11
 8006348:	45c1      	cmp	r9, r8
 800634a:	fa26 f30c 	lsr.w	r3, r6, ip
 800634e:	bf38      	it	cc
 8006350:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 8006354:	ea43 0501 	orr.w	r5, r3, r1
 8006358:	bf28      	it	cs
 800635a:	2200      	movcs	r2, #0
 800635c:	f100 0315 	add.w	r3, r0, #21
 8006360:	fa06 f303 	lsl.w	r3, r6, r3
 8006364:	fa22 f20c 	lsr.w	r2, r2, ip
 8006368:	ea43 0402 	orr.w	r4, r3, r2
 800636c:	4620      	mov	r0, r4
 800636e:	4629      	mov	r1, r5
 8006370:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006374:	45c1      	cmp	r9, r8
 8006376:	bf3a      	itte	cc
 8006378:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 800637c:	f1a7 0808 	subcc.w	r8, r7, #8
 8006380:	2200      	movcs	r2, #0
 8006382:	f1b0 030b 	subs.w	r3, r0, #11
 8006386:	d016      	beq.n	80063b6 <__b2d+0x9a>
 8006388:	f1c3 0720 	rsb	r7, r3, #32
 800638c:	fa22 f107 	lsr.w	r1, r2, r7
 8006390:	45c8      	cmp	r8, r9
 8006392:	fa06 f603 	lsl.w	r6, r6, r3
 8006396:	ea46 0601 	orr.w	r6, r6, r1
 800639a:	bf8c      	ite	hi
 800639c:	f858 1c04 	ldrhi.w	r1, [r8, #-4]
 80063a0:	2100      	movls	r1, #0
 80063a2:	f046 557f 	orr.w	r5, r6, #1069547520	; 0x3fc00000
 80063a6:	fa02 f003 	lsl.w	r0, r2, r3
 80063aa:	40f9      	lsrs	r1, r7
 80063ac:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 80063b0:	ea40 0401 	orr.w	r4, r0, r1
 80063b4:	e7da      	b.n	800636c <__b2d+0x50>
 80063b6:	ea46 0501 	orr.w	r5, r6, r1
 80063ba:	4614      	mov	r4, r2
 80063bc:	e7d6      	b.n	800636c <__b2d+0x50>
 80063be:	bf00      	nop
 80063c0:	3ff00000 	.word	0x3ff00000

080063c4 <__d2b>:
 80063c4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80063c8:	2101      	movs	r1, #1
 80063ca:	e9dd 7608 	ldrd	r7, r6, [sp, #32]
 80063ce:	4690      	mov	r8, r2
 80063d0:	461d      	mov	r5, r3
 80063d2:	f7ff fc11 	bl	8005bf8 <_Balloc>
 80063d6:	4604      	mov	r4, r0
 80063d8:	b930      	cbnz	r0, 80063e8 <__d2b+0x24>
 80063da:	4602      	mov	r2, r0
 80063dc:	4b25      	ldr	r3, [pc, #148]	; (8006474 <__d2b+0xb0>)
 80063de:	4826      	ldr	r0, [pc, #152]	; (8006478 <__d2b+0xb4>)
 80063e0:	f240 310a 	movw	r1, #778	; 0x30a
 80063e4:	f7fe f874 	bl	80044d0 <__assert_func>
 80063e8:	f3c5 0313 	ubfx	r3, r5, #0, #20
 80063ec:	f3c5 550a 	ubfx	r5, r5, #20, #11
 80063f0:	bb2d      	cbnz	r5, 800643e <__d2b+0x7a>
 80063f2:	9301      	str	r3, [sp, #4]
 80063f4:	f1b8 0300 	subs.w	r3, r8, #0
 80063f8:	d026      	beq.n	8006448 <__d2b+0x84>
 80063fa:	4668      	mov	r0, sp
 80063fc:	9300      	str	r3, [sp, #0]
 80063fe:	f7ff fd11 	bl	8005e24 <__lo0bits>
 8006402:	9900      	ldr	r1, [sp, #0]
 8006404:	b1f0      	cbz	r0, 8006444 <__d2b+0x80>
 8006406:	9a01      	ldr	r2, [sp, #4]
 8006408:	f1c0 0320 	rsb	r3, r0, #32
 800640c:	fa02 f303 	lsl.w	r3, r2, r3
 8006410:	430b      	orrs	r3, r1
 8006412:	40c2      	lsrs	r2, r0
 8006414:	6163      	str	r3, [r4, #20]
 8006416:	9201      	str	r2, [sp, #4]
 8006418:	9b01      	ldr	r3, [sp, #4]
 800641a:	61a3      	str	r3, [r4, #24]
 800641c:	2b00      	cmp	r3, #0
 800641e:	bf14      	ite	ne
 8006420:	2102      	movne	r1, #2
 8006422:	2101      	moveq	r1, #1
 8006424:	6121      	str	r1, [r4, #16]
 8006426:	b1c5      	cbz	r5, 800645a <__d2b+0x96>
 8006428:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 800642c:	4405      	add	r5, r0
 800642e:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8006432:	603d      	str	r5, [r7, #0]
 8006434:	6030      	str	r0, [r6, #0]
 8006436:	4620      	mov	r0, r4
 8006438:	b002      	add	sp, #8
 800643a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800643e:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8006442:	e7d6      	b.n	80063f2 <__d2b+0x2e>
 8006444:	6161      	str	r1, [r4, #20]
 8006446:	e7e7      	b.n	8006418 <__d2b+0x54>
 8006448:	a801      	add	r0, sp, #4
 800644a:	f7ff fceb 	bl	8005e24 <__lo0bits>
 800644e:	9b01      	ldr	r3, [sp, #4]
 8006450:	6163      	str	r3, [r4, #20]
 8006452:	2101      	movs	r1, #1
 8006454:	6121      	str	r1, [r4, #16]
 8006456:	3020      	adds	r0, #32
 8006458:	e7e5      	b.n	8006426 <__d2b+0x62>
 800645a:	eb04 0381 	add.w	r3, r4, r1, lsl #2
 800645e:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8006462:	6038      	str	r0, [r7, #0]
 8006464:	6918      	ldr	r0, [r3, #16]
 8006466:	f7ff fcbd 	bl	8005de4 <__hi0bits>
 800646a:	ebc0 1141 	rsb	r1, r0, r1, lsl #5
 800646e:	6031      	str	r1, [r6, #0]
 8006470:	e7e1      	b.n	8006436 <__d2b+0x72>
 8006472:	bf00      	nop
 8006474:	08007f79 	.word	0x08007f79
 8006478:	08008008 	.word	0x08008008

0800647c <__ratio>:
 800647c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006480:	4688      	mov	r8, r1
 8006482:	4669      	mov	r1, sp
 8006484:	4681      	mov	r9, r0
 8006486:	f7ff ff49 	bl	800631c <__b2d>
 800648a:	460f      	mov	r7, r1
 800648c:	4604      	mov	r4, r0
 800648e:	460d      	mov	r5, r1
 8006490:	4640      	mov	r0, r8
 8006492:	a901      	add	r1, sp, #4
 8006494:	f7ff ff42 	bl	800631c <__b2d>
 8006498:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800649c:	f8d8 2010 	ldr.w	r2, [r8, #16]
 80064a0:	eba3 0c02 	sub.w	ip, r3, r2
 80064a4:	e9dd 3200 	ldrd	r3, r2, [sp]
 80064a8:	1a9b      	subs	r3, r3, r2
 80064aa:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 80064ae:	2b00      	cmp	r3, #0
 80064b0:	bfd5      	itete	le
 80064b2:	460a      	movle	r2, r1
 80064b4:	462a      	movgt	r2, r5
 80064b6:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 80064ba:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 80064be:	468b      	mov	fp, r1
 80064c0:	bfd8      	it	le
 80064c2:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 80064c6:	465b      	mov	r3, fp
 80064c8:	4602      	mov	r2, r0
 80064ca:	4639      	mov	r1, r7
 80064cc:	4620      	mov	r0, r4
 80064ce:	f7fa f9e7 	bl	80008a0 <__aeabi_ddiv>
 80064d2:	b003      	add	sp, #12
 80064d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080064d8 <__copybits>:
 80064d8:	3901      	subs	r1, #1
 80064da:	b570      	push	{r4, r5, r6, lr}
 80064dc:	1149      	asrs	r1, r1, #5
 80064de:	6914      	ldr	r4, [r2, #16]
 80064e0:	3101      	adds	r1, #1
 80064e2:	f102 0314 	add.w	r3, r2, #20
 80064e6:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 80064ea:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 80064ee:	1f05      	subs	r5, r0, #4
 80064f0:	42a3      	cmp	r3, r4
 80064f2:	d30c      	bcc.n	800650e <__copybits+0x36>
 80064f4:	1aa3      	subs	r3, r4, r2
 80064f6:	3b11      	subs	r3, #17
 80064f8:	f023 0303 	bic.w	r3, r3, #3
 80064fc:	3211      	adds	r2, #17
 80064fe:	42a2      	cmp	r2, r4
 8006500:	bf88      	it	hi
 8006502:	2300      	movhi	r3, #0
 8006504:	4418      	add	r0, r3
 8006506:	2300      	movs	r3, #0
 8006508:	4288      	cmp	r0, r1
 800650a:	d305      	bcc.n	8006518 <__copybits+0x40>
 800650c:	bd70      	pop	{r4, r5, r6, pc}
 800650e:	f853 6b04 	ldr.w	r6, [r3], #4
 8006512:	f845 6f04 	str.w	r6, [r5, #4]!
 8006516:	e7eb      	b.n	80064f0 <__copybits+0x18>
 8006518:	f840 3b04 	str.w	r3, [r0], #4
 800651c:	e7f4      	b.n	8006508 <__copybits+0x30>

0800651e <__any_on>:
 800651e:	f100 0214 	add.w	r2, r0, #20
 8006522:	6900      	ldr	r0, [r0, #16]
 8006524:	114b      	asrs	r3, r1, #5
 8006526:	4298      	cmp	r0, r3
 8006528:	b510      	push	{r4, lr}
 800652a:	db11      	blt.n	8006550 <__any_on+0x32>
 800652c:	dd0a      	ble.n	8006544 <__any_on+0x26>
 800652e:	f011 011f 	ands.w	r1, r1, #31
 8006532:	d007      	beq.n	8006544 <__any_on+0x26>
 8006534:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8006538:	fa24 f001 	lsr.w	r0, r4, r1
 800653c:	fa00 f101 	lsl.w	r1, r0, r1
 8006540:	428c      	cmp	r4, r1
 8006542:	d10b      	bne.n	800655c <__any_on+0x3e>
 8006544:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8006548:	4293      	cmp	r3, r2
 800654a:	d803      	bhi.n	8006554 <__any_on+0x36>
 800654c:	2000      	movs	r0, #0
 800654e:	bd10      	pop	{r4, pc}
 8006550:	4603      	mov	r3, r0
 8006552:	e7f7      	b.n	8006544 <__any_on+0x26>
 8006554:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8006558:	2900      	cmp	r1, #0
 800655a:	d0f5      	beq.n	8006548 <__any_on+0x2a>
 800655c:	2001      	movs	r0, #1
 800655e:	e7f6      	b.n	800654e <__any_on+0x30>

08006560 <_calloc_r>:
 8006560:	b538      	push	{r3, r4, r5, lr}
 8006562:	fb02 f501 	mul.w	r5, r2, r1
 8006566:	4629      	mov	r1, r5
 8006568:	f7fb fe72 	bl	8002250 <_malloc_r>
 800656c:	4604      	mov	r4, r0
 800656e:	b118      	cbz	r0, 8006578 <_calloc_r+0x18>
 8006570:	462a      	mov	r2, r5
 8006572:	2100      	movs	r1, #0
 8006574:	f7fb fe63 	bl	800223e <memset>
 8006578:	4620      	mov	r0, r4
 800657a:	bd38      	pop	{r3, r4, r5, pc}

0800657c <_free_r>:
 800657c:	b538      	push	{r3, r4, r5, lr}
 800657e:	4605      	mov	r5, r0
 8006580:	2900      	cmp	r1, #0
 8006582:	d045      	beq.n	8006610 <_free_r+0x94>
 8006584:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006588:	1f0c      	subs	r4, r1, #4
 800658a:	2b00      	cmp	r3, #0
 800658c:	bfb8      	it	lt
 800658e:	18e4      	addlt	r4, r4, r3
 8006590:	f7ff fb26 	bl	8005be0 <__malloc_lock>
 8006594:	4a1f      	ldr	r2, [pc, #124]	; (8006614 <_free_r+0x98>)
 8006596:	6813      	ldr	r3, [r2, #0]
 8006598:	4610      	mov	r0, r2
 800659a:	b933      	cbnz	r3, 80065aa <_free_r+0x2e>
 800659c:	6063      	str	r3, [r4, #4]
 800659e:	6014      	str	r4, [r2, #0]
 80065a0:	4628      	mov	r0, r5
 80065a2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80065a6:	f7ff bb21 	b.w	8005bec <__malloc_unlock>
 80065aa:	42a3      	cmp	r3, r4
 80065ac:	d90b      	bls.n	80065c6 <_free_r+0x4a>
 80065ae:	6821      	ldr	r1, [r4, #0]
 80065b0:	1862      	adds	r2, r4, r1
 80065b2:	4293      	cmp	r3, r2
 80065b4:	bf04      	itt	eq
 80065b6:	681a      	ldreq	r2, [r3, #0]
 80065b8:	685b      	ldreq	r3, [r3, #4]
 80065ba:	6063      	str	r3, [r4, #4]
 80065bc:	bf04      	itt	eq
 80065be:	1852      	addeq	r2, r2, r1
 80065c0:	6022      	streq	r2, [r4, #0]
 80065c2:	6004      	str	r4, [r0, #0]
 80065c4:	e7ec      	b.n	80065a0 <_free_r+0x24>
 80065c6:	461a      	mov	r2, r3
 80065c8:	685b      	ldr	r3, [r3, #4]
 80065ca:	b10b      	cbz	r3, 80065d0 <_free_r+0x54>
 80065cc:	42a3      	cmp	r3, r4
 80065ce:	d9fa      	bls.n	80065c6 <_free_r+0x4a>
 80065d0:	6811      	ldr	r1, [r2, #0]
 80065d2:	1850      	adds	r0, r2, r1
 80065d4:	42a0      	cmp	r0, r4
 80065d6:	d10b      	bne.n	80065f0 <_free_r+0x74>
 80065d8:	6820      	ldr	r0, [r4, #0]
 80065da:	4401      	add	r1, r0
 80065dc:	1850      	adds	r0, r2, r1
 80065de:	4283      	cmp	r3, r0
 80065e0:	6011      	str	r1, [r2, #0]
 80065e2:	d1dd      	bne.n	80065a0 <_free_r+0x24>
 80065e4:	6818      	ldr	r0, [r3, #0]
 80065e6:	685b      	ldr	r3, [r3, #4]
 80065e8:	6053      	str	r3, [r2, #4]
 80065ea:	4401      	add	r1, r0
 80065ec:	6011      	str	r1, [r2, #0]
 80065ee:	e7d7      	b.n	80065a0 <_free_r+0x24>
 80065f0:	d902      	bls.n	80065f8 <_free_r+0x7c>
 80065f2:	230c      	movs	r3, #12
 80065f4:	602b      	str	r3, [r5, #0]
 80065f6:	e7d3      	b.n	80065a0 <_free_r+0x24>
 80065f8:	6820      	ldr	r0, [r4, #0]
 80065fa:	1821      	adds	r1, r4, r0
 80065fc:	428b      	cmp	r3, r1
 80065fe:	bf04      	itt	eq
 8006600:	6819      	ldreq	r1, [r3, #0]
 8006602:	685b      	ldreq	r3, [r3, #4]
 8006604:	6063      	str	r3, [r4, #4]
 8006606:	bf04      	itt	eq
 8006608:	1809      	addeq	r1, r1, r0
 800660a:	6021      	streq	r1, [r4, #0]
 800660c:	6054      	str	r4, [r2, #4]
 800660e:	e7c7      	b.n	80065a0 <_free_r+0x24>
 8006610:	bd38      	pop	{r3, r4, r5, pc}
 8006612:	bf00      	nop
 8006614:	20000d28 	.word	0x20000d28

08006618 <__ssputs_r>:
 8006618:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800661c:	688e      	ldr	r6, [r1, #8]
 800661e:	429e      	cmp	r6, r3
 8006620:	4682      	mov	sl, r0
 8006622:	460c      	mov	r4, r1
 8006624:	4690      	mov	r8, r2
 8006626:	461f      	mov	r7, r3
 8006628:	d838      	bhi.n	800669c <__ssputs_r+0x84>
 800662a:	898a      	ldrh	r2, [r1, #12]
 800662c:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8006630:	d032      	beq.n	8006698 <__ssputs_r+0x80>
 8006632:	6825      	ldr	r5, [r4, #0]
 8006634:	6909      	ldr	r1, [r1, #16]
 8006636:	eba5 0901 	sub.w	r9, r5, r1
 800663a:	6965      	ldr	r5, [r4, #20]
 800663c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8006640:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8006644:	3301      	adds	r3, #1
 8006646:	444b      	add	r3, r9
 8006648:	106d      	asrs	r5, r5, #1
 800664a:	429d      	cmp	r5, r3
 800664c:	bf38      	it	cc
 800664e:	461d      	movcc	r5, r3
 8006650:	0553      	lsls	r3, r2, #21
 8006652:	d531      	bpl.n	80066b8 <__ssputs_r+0xa0>
 8006654:	4629      	mov	r1, r5
 8006656:	f7fb fdfb 	bl	8002250 <_malloc_r>
 800665a:	4606      	mov	r6, r0
 800665c:	b950      	cbnz	r0, 8006674 <__ssputs_r+0x5c>
 800665e:	230c      	movs	r3, #12
 8006660:	f8ca 3000 	str.w	r3, [sl]
 8006664:	89a3      	ldrh	r3, [r4, #12]
 8006666:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800666a:	81a3      	strh	r3, [r4, #12]
 800666c:	f04f 30ff 	mov.w	r0, #4294967295
 8006670:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006674:	6921      	ldr	r1, [r4, #16]
 8006676:	464a      	mov	r2, r9
 8006678:	f7fb fdd3 	bl	8002222 <memcpy>
 800667c:	89a3      	ldrh	r3, [r4, #12]
 800667e:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8006682:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006686:	81a3      	strh	r3, [r4, #12]
 8006688:	6126      	str	r6, [r4, #16]
 800668a:	6165      	str	r5, [r4, #20]
 800668c:	444e      	add	r6, r9
 800668e:	eba5 0509 	sub.w	r5, r5, r9
 8006692:	6026      	str	r6, [r4, #0]
 8006694:	60a5      	str	r5, [r4, #8]
 8006696:	463e      	mov	r6, r7
 8006698:	42be      	cmp	r6, r7
 800669a:	d900      	bls.n	800669e <__ssputs_r+0x86>
 800669c:	463e      	mov	r6, r7
 800669e:	4632      	mov	r2, r6
 80066a0:	6820      	ldr	r0, [r4, #0]
 80066a2:	4641      	mov	r1, r8
 80066a4:	f000 fedc 	bl	8007460 <memmove>
 80066a8:	68a3      	ldr	r3, [r4, #8]
 80066aa:	6822      	ldr	r2, [r4, #0]
 80066ac:	1b9b      	subs	r3, r3, r6
 80066ae:	4432      	add	r2, r6
 80066b0:	60a3      	str	r3, [r4, #8]
 80066b2:	6022      	str	r2, [r4, #0]
 80066b4:	2000      	movs	r0, #0
 80066b6:	e7db      	b.n	8006670 <__ssputs_r+0x58>
 80066b8:	462a      	mov	r2, r5
 80066ba:	f000 feeb 	bl	8007494 <_realloc_r>
 80066be:	4606      	mov	r6, r0
 80066c0:	2800      	cmp	r0, #0
 80066c2:	d1e1      	bne.n	8006688 <__ssputs_r+0x70>
 80066c4:	6921      	ldr	r1, [r4, #16]
 80066c6:	4650      	mov	r0, sl
 80066c8:	f7ff ff58 	bl	800657c <_free_r>
 80066cc:	e7c7      	b.n	800665e <__ssputs_r+0x46>
	...

080066d0 <_svfiprintf_r>:
 80066d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80066d4:	4698      	mov	r8, r3
 80066d6:	898b      	ldrh	r3, [r1, #12]
 80066d8:	061b      	lsls	r3, r3, #24
 80066da:	b09d      	sub	sp, #116	; 0x74
 80066dc:	4607      	mov	r7, r0
 80066de:	460d      	mov	r5, r1
 80066e0:	4614      	mov	r4, r2
 80066e2:	d50e      	bpl.n	8006702 <_svfiprintf_r+0x32>
 80066e4:	690b      	ldr	r3, [r1, #16]
 80066e6:	b963      	cbnz	r3, 8006702 <_svfiprintf_r+0x32>
 80066e8:	2140      	movs	r1, #64	; 0x40
 80066ea:	f7fb fdb1 	bl	8002250 <_malloc_r>
 80066ee:	6028      	str	r0, [r5, #0]
 80066f0:	6128      	str	r0, [r5, #16]
 80066f2:	b920      	cbnz	r0, 80066fe <_svfiprintf_r+0x2e>
 80066f4:	230c      	movs	r3, #12
 80066f6:	603b      	str	r3, [r7, #0]
 80066f8:	f04f 30ff 	mov.w	r0, #4294967295
 80066fc:	e0d1      	b.n	80068a2 <_svfiprintf_r+0x1d2>
 80066fe:	2340      	movs	r3, #64	; 0x40
 8006700:	616b      	str	r3, [r5, #20]
 8006702:	2300      	movs	r3, #0
 8006704:	9309      	str	r3, [sp, #36]	; 0x24
 8006706:	2320      	movs	r3, #32
 8006708:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800670c:	f8cd 800c 	str.w	r8, [sp, #12]
 8006710:	2330      	movs	r3, #48	; 0x30
 8006712:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 80068bc <_svfiprintf_r+0x1ec>
 8006716:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800671a:	f04f 0901 	mov.w	r9, #1
 800671e:	4623      	mov	r3, r4
 8006720:	469a      	mov	sl, r3
 8006722:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006726:	b10a      	cbz	r2, 800672c <_svfiprintf_r+0x5c>
 8006728:	2a25      	cmp	r2, #37	; 0x25
 800672a:	d1f9      	bne.n	8006720 <_svfiprintf_r+0x50>
 800672c:	ebba 0b04 	subs.w	fp, sl, r4
 8006730:	d00b      	beq.n	800674a <_svfiprintf_r+0x7a>
 8006732:	465b      	mov	r3, fp
 8006734:	4622      	mov	r2, r4
 8006736:	4629      	mov	r1, r5
 8006738:	4638      	mov	r0, r7
 800673a:	f7ff ff6d 	bl	8006618 <__ssputs_r>
 800673e:	3001      	adds	r0, #1
 8006740:	f000 80aa 	beq.w	8006898 <_svfiprintf_r+0x1c8>
 8006744:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8006746:	445a      	add	r2, fp
 8006748:	9209      	str	r2, [sp, #36]	; 0x24
 800674a:	f89a 3000 	ldrb.w	r3, [sl]
 800674e:	2b00      	cmp	r3, #0
 8006750:	f000 80a2 	beq.w	8006898 <_svfiprintf_r+0x1c8>
 8006754:	2300      	movs	r3, #0
 8006756:	f04f 32ff 	mov.w	r2, #4294967295
 800675a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800675e:	f10a 0a01 	add.w	sl, sl, #1
 8006762:	9304      	str	r3, [sp, #16]
 8006764:	9307      	str	r3, [sp, #28]
 8006766:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800676a:	931a      	str	r3, [sp, #104]	; 0x68
 800676c:	4654      	mov	r4, sl
 800676e:	2205      	movs	r2, #5
 8006770:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006774:	4851      	ldr	r0, [pc, #324]	; (80068bc <_svfiprintf_r+0x1ec>)
 8006776:	f7f9 fd4b 	bl	8000210 <memchr>
 800677a:	9a04      	ldr	r2, [sp, #16]
 800677c:	b9d8      	cbnz	r0, 80067b6 <_svfiprintf_r+0xe6>
 800677e:	06d0      	lsls	r0, r2, #27
 8006780:	bf44      	itt	mi
 8006782:	2320      	movmi	r3, #32
 8006784:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8006788:	0711      	lsls	r1, r2, #28
 800678a:	bf44      	itt	mi
 800678c:	232b      	movmi	r3, #43	; 0x2b
 800678e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8006792:	f89a 3000 	ldrb.w	r3, [sl]
 8006796:	2b2a      	cmp	r3, #42	; 0x2a
 8006798:	d015      	beq.n	80067c6 <_svfiprintf_r+0xf6>
 800679a:	9a07      	ldr	r2, [sp, #28]
 800679c:	4654      	mov	r4, sl
 800679e:	2000      	movs	r0, #0
 80067a0:	f04f 0c0a 	mov.w	ip, #10
 80067a4:	4621      	mov	r1, r4
 80067a6:	f811 3b01 	ldrb.w	r3, [r1], #1
 80067aa:	3b30      	subs	r3, #48	; 0x30
 80067ac:	2b09      	cmp	r3, #9
 80067ae:	d94e      	bls.n	800684e <_svfiprintf_r+0x17e>
 80067b0:	b1b0      	cbz	r0, 80067e0 <_svfiprintf_r+0x110>
 80067b2:	9207      	str	r2, [sp, #28]
 80067b4:	e014      	b.n	80067e0 <_svfiprintf_r+0x110>
 80067b6:	eba0 0308 	sub.w	r3, r0, r8
 80067ba:	fa09 f303 	lsl.w	r3, r9, r3
 80067be:	4313      	orrs	r3, r2
 80067c0:	9304      	str	r3, [sp, #16]
 80067c2:	46a2      	mov	sl, r4
 80067c4:	e7d2      	b.n	800676c <_svfiprintf_r+0x9c>
 80067c6:	9b03      	ldr	r3, [sp, #12]
 80067c8:	1d19      	adds	r1, r3, #4
 80067ca:	681b      	ldr	r3, [r3, #0]
 80067cc:	9103      	str	r1, [sp, #12]
 80067ce:	2b00      	cmp	r3, #0
 80067d0:	bfbb      	ittet	lt
 80067d2:	425b      	neglt	r3, r3
 80067d4:	f042 0202 	orrlt.w	r2, r2, #2
 80067d8:	9307      	strge	r3, [sp, #28]
 80067da:	9307      	strlt	r3, [sp, #28]
 80067dc:	bfb8      	it	lt
 80067de:	9204      	strlt	r2, [sp, #16]
 80067e0:	7823      	ldrb	r3, [r4, #0]
 80067e2:	2b2e      	cmp	r3, #46	; 0x2e
 80067e4:	d10c      	bne.n	8006800 <_svfiprintf_r+0x130>
 80067e6:	7863      	ldrb	r3, [r4, #1]
 80067e8:	2b2a      	cmp	r3, #42	; 0x2a
 80067ea:	d135      	bne.n	8006858 <_svfiprintf_r+0x188>
 80067ec:	9b03      	ldr	r3, [sp, #12]
 80067ee:	1d1a      	adds	r2, r3, #4
 80067f0:	681b      	ldr	r3, [r3, #0]
 80067f2:	9203      	str	r2, [sp, #12]
 80067f4:	2b00      	cmp	r3, #0
 80067f6:	bfb8      	it	lt
 80067f8:	f04f 33ff 	movlt.w	r3, #4294967295
 80067fc:	3402      	adds	r4, #2
 80067fe:	9305      	str	r3, [sp, #20]
 8006800:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 80068cc <_svfiprintf_r+0x1fc>
 8006804:	7821      	ldrb	r1, [r4, #0]
 8006806:	2203      	movs	r2, #3
 8006808:	4650      	mov	r0, sl
 800680a:	f7f9 fd01 	bl	8000210 <memchr>
 800680e:	b140      	cbz	r0, 8006822 <_svfiprintf_r+0x152>
 8006810:	2340      	movs	r3, #64	; 0x40
 8006812:	eba0 000a 	sub.w	r0, r0, sl
 8006816:	fa03 f000 	lsl.w	r0, r3, r0
 800681a:	9b04      	ldr	r3, [sp, #16]
 800681c:	4303      	orrs	r3, r0
 800681e:	3401      	adds	r4, #1
 8006820:	9304      	str	r3, [sp, #16]
 8006822:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006826:	4826      	ldr	r0, [pc, #152]	; (80068c0 <_svfiprintf_r+0x1f0>)
 8006828:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800682c:	2206      	movs	r2, #6
 800682e:	f7f9 fcef 	bl	8000210 <memchr>
 8006832:	2800      	cmp	r0, #0
 8006834:	d038      	beq.n	80068a8 <_svfiprintf_r+0x1d8>
 8006836:	4b23      	ldr	r3, [pc, #140]	; (80068c4 <_svfiprintf_r+0x1f4>)
 8006838:	bb1b      	cbnz	r3, 8006882 <_svfiprintf_r+0x1b2>
 800683a:	9b03      	ldr	r3, [sp, #12]
 800683c:	3307      	adds	r3, #7
 800683e:	f023 0307 	bic.w	r3, r3, #7
 8006842:	3308      	adds	r3, #8
 8006844:	9303      	str	r3, [sp, #12]
 8006846:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006848:	4433      	add	r3, r6
 800684a:	9309      	str	r3, [sp, #36]	; 0x24
 800684c:	e767      	b.n	800671e <_svfiprintf_r+0x4e>
 800684e:	fb0c 3202 	mla	r2, ip, r2, r3
 8006852:	460c      	mov	r4, r1
 8006854:	2001      	movs	r0, #1
 8006856:	e7a5      	b.n	80067a4 <_svfiprintf_r+0xd4>
 8006858:	2300      	movs	r3, #0
 800685a:	3401      	adds	r4, #1
 800685c:	9305      	str	r3, [sp, #20]
 800685e:	4619      	mov	r1, r3
 8006860:	f04f 0c0a 	mov.w	ip, #10
 8006864:	4620      	mov	r0, r4
 8006866:	f810 2b01 	ldrb.w	r2, [r0], #1
 800686a:	3a30      	subs	r2, #48	; 0x30
 800686c:	2a09      	cmp	r2, #9
 800686e:	d903      	bls.n	8006878 <_svfiprintf_r+0x1a8>
 8006870:	2b00      	cmp	r3, #0
 8006872:	d0c5      	beq.n	8006800 <_svfiprintf_r+0x130>
 8006874:	9105      	str	r1, [sp, #20]
 8006876:	e7c3      	b.n	8006800 <_svfiprintf_r+0x130>
 8006878:	fb0c 2101 	mla	r1, ip, r1, r2
 800687c:	4604      	mov	r4, r0
 800687e:	2301      	movs	r3, #1
 8006880:	e7f0      	b.n	8006864 <_svfiprintf_r+0x194>
 8006882:	ab03      	add	r3, sp, #12
 8006884:	9300      	str	r3, [sp, #0]
 8006886:	462a      	mov	r2, r5
 8006888:	4b0f      	ldr	r3, [pc, #60]	; (80068c8 <_svfiprintf_r+0x1f8>)
 800688a:	a904      	add	r1, sp, #16
 800688c:	4638      	mov	r0, r7
 800688e:	f7fb fdd7 	bl	8002440 <_printf_float>
 8006892:	1c42      	adds	r2, r0, #1
 8006894:	4606      	mov	r6, r0
 8006896:	d1d6      	bne.n	8006846 <_svfiprintf_r+0x176>
 8006898:	89ab      	ldrh	r3, [r5, #12]
 800689a:	065b      	lsls	r3, r3, #25
 800689c:	f53f af2c 	bmi.w	80066f8 <_svfiprintf_r+0x28>
 80068a0:	9809      	ldr	r0, [sp, #36]	; 0x24
 80068a2:	b01d      	add	sp, #116	; 0x74
 80068a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80068a8:	ab03      	add	r3, sp, #12
 80068aa:	9300      	str	r3, [sp, #0]
 80068ac:	462a      	mov	r2, r5
 80068ae:	4b06      	ldr	r3, [pc, #24]	; (80068c8 <_svfiprintf_r+0x1f8>)
 80068b0:	a904      	add	r1, sp, #16
 80068b2:	4638      	mov	r0, r7
 80068b4:	f7fc f85c 	bl	8002970 <_printf_i>
 80068b8:	e7eb      	b.n	8006892 <_svfiprintf_r+0x1c2>
 80068ba:	bf00      	nop
 80068bc:	08008164 	.word	0x08008164
 80068c0:	0800816e 	.word	0x0800816e
 80068c4:	08002441 	.word	0x08002441
 80068c8:	08006619 	.word	0x08006619
 80068cc:	0800816a 	.word	0x0800816a

080068d0 <_sungetc_r>:
 80068d0:	b538      	push	{r3, r4, r5, lr}
 80068d2:	1c4b      	adds	r3, r1, #1
 80068d4:	4614      	mov	r4, r2
 80068d6:	d103      	bne.n	80068e0 <_sungetc_r+0x10>
 80068d8:	f04f 35ff 	mov.w	r5, #4294967295
 80068dc:	4628      	mov	r0, r5
 80068de:	bd38      	pop	{r3, r4, r5, pc}
 80068e0:	8993      	ldrh	r3, [r2, #12]
 80068e2:	f023 0320 	bic.w	r3, r3, #32
 80068e6:	8193      	strh	r3, [r2, #12]
 80068e8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80068ea:	6852      	ldr	r2, [r2, #4]
 80068ec:	b2cd      	uxtb	r5, r1
 80068ee:	b18b      	cbz	r3, 8006914 <_sungetc_r+0x44>
 80068f0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80068f2:	4293      	cmp	r3, r2
 80068f4:	dd08      	ble.n	8006908 <_sungetc_r+0x38>
 80068f6:	6823      	ldr	r3, [r4, #0]
 80068f8:	1e5a      	subs	r2, r3, #1
 80068fa:	6022      	str	r2, [r4, #0]
 80068fc:	f803 5c01 	strb.w	r5, [r3, #-1]
 8006900:	6863      	ldr	r3, [r4, #4]
 8006902:	3301      	adds	r3, #1
 8006904:	6063      	str	r3, [r4, #4]
 8006906:	e7e9      	b.n	80068dc <_sungetc_r+0xc>
 8006908:	4621      	mov	r1, r4
 800690a:	f000 fd39 	bl	8007380 <__submore>
 800690e:	2800      	cmp	r0, #0
 8006910:	d0f1      	beq.n	80068f6 <_sungetc_r+0x26>
 8006912:	e7e1      	b.n	80068d8 <_sungetc_r+0x8>
 8006914:	6921      	ldr	r1, [r4, #16]
 8006916:	6823      	ldr	r3, [r4, #0]
 8006918:	b151      	cbz	r1, 8006930 <_sungetc_r+0x60>
 800691a:	4299      	cmp	r1, r3
 800691c:	d208      	bcs.n	8006930 <_sungetc_r+0x60>
 800691e:	f813 1c01 	ldrb.w	r1, [r3, #-1]
 8006922:	42a9      	cmp	r1, r5
 8006924:	d104      	bne.n	8006930 <_sungetc_r+0x60>
 8006926:	3b01      	subs	r3, #1
 8006928:	3201      	adds	r2, #1
 800692a:	6023      	str	r3, [r4, #0]
 800692c:	6062      	str	r2, [r4, #4]
 800692e:	e7d5      	b.n	80068dc <_sungetc_r+0xc>
 8006930:	e9c4 320f 	strd	r3, r2, [r4, #60]	; 0x3c
 8006934:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8006938:	6363      	str	r3, [r4, #52]	; 0x34
 800693a:	2303      	movs	r3, #3
 800693c:	63a3      	str	r3, [r4, #56]	; 0x38
 800693e:	4623      	mov	r3, r4
 8006940:	f803 5f46 	strb.w	r5, [r3, #70]!
 8006944:	6023      	str	r3, [r4, #0]
 8006946:	2301      	movs	r3, #1
 8006948:	e7dc      	b.n	8006904 <_sungetc_r+0x34>

0800694a <__ssrefill_r>:
 800694a:	b510      	push	{r4, lr}
 800694c:	460c      	mov	r4, r1
 800694e:	6b49      	ldr	r1, [r1, #52]	; 0x34
 8006950:	b169      	cbz	r1, 800696e <__ssrefill_r+0x24>
 8006952:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8006956:	4299      	cmp	r1, r3
 8006958:	d001      	beq.n	800695e <__ssrefill_r+0x14>
 800695a:	f7ff fe0f 	bl	800657c <_free_r>
 800695e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006960:	6063      	str	r3, [r4, #4]
 8006962:	2000      	movs	r0, #0
 8006964:	6360      	str	r0, [r4, #52]	; 0x34
 8006966:	b113      	cbz	r3, 800696e <__ssrefill_r+0x24>
 8006968:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800696a:	6023      	str	r3, [r4, #0]
 800696c:	bd10      	pop	{r4, pc}
 800696e:	6923      	ldr	r3, [r4, #16]
 8006970:	6023      	str	r3, [r4, #0]
 8006972:	2300      	movs	r3, #0
 8006974:	6063      	str	r3, [r4, #4]
 8006976:	89a3      	ldrh	r3, [r4, #12]
 8006978:	f043 0320 	orr.w	r3, r3, #32
 800697c:	81a3      	strh	r3, [r4, #12]
 800697e:	f04f 30ff 	mov.w	r0, #4294967295
 8006982:	e7f3      	b.n	800696c <__ssrefill_r+0x22>

08006984 <__ssvfiscanf_r>:
 8006984:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006988:	460c      	mov	r4, r1
 800698a:	f5ad 7d23 	sub.w	sp, sp, #652	; 0x28c
 800698e:	2100      	movs	r1, #0
 8006990:	e9cd 1144 	strd	r1, r1, [sp, #272]	; 0x110
 8006994:	49b2      	ldr	r1, [pc, #712]	; (8006c60 <__ssvfiscanf_r+0x2dc>)
 8006996:	91a0      	str	r1, [sp, #640]	; 0x280
 8006998:	f10d 0804 	add.w	r8, sp, #4
 800699c:	49b1      	ldr	r1, [pc, #708]	; (8006c64 <__ssvfiscanf_r+0x2e0>)
 800699e:	4fb2      	ldr	r7, [pc, #712]	; (8006c68 <__ssvfiscanf_r+0x2e4>)
 80069a0:	f8df 92c8 	ldr.w	r9, [pc, #712]	; 8006c6c <__ssvfiscanf_r+0x2e8>
 80069a4:	f8cd 8118 	str.w	r8, [sp, #280]	; 0x118
 80069a8:	4606      	mov	r6, r0
 80069aa:	91a1      	str	r1, [sp, #644]	; 0x284
 80069ac:	9300      	str	r3, [sp, #0]
 80069ae:	f892 a000 	ldrb.w	sl, [r2]
 80069b2:	f1ba 0f00 	cmp.w	sl, #0
 80069b6:	f000 8151 	beq.w	8006c5c <__ssvfiscanf_r+0x2d8>
 80069ba:	f81a 3007 	ldrb.w	r3, [sl, r7]
 80069be:	f013 0308 	ands.w	r3, r3, #8
 80069c2:	f102 0501 	add.w	r5, r2, #1
 80069c6:	d019      	beq.n	80069fc <__ssvfiscanf_r+0x78>
 80069c8:	6863      	ldr	r3, [r4, #4]
 80069ca:	2b00      	cmp	r3, #0
 80069cc:	dd0f      	ble.n	80069ee <__ssvfiscanf_r+0x6a>
 80069ce:	6823      	ldr	r3, [r4, #0]
 80069d0:	781a      	ldrb	r2, [r3, #0]
 80069d2:	5cba      	ldrb	r2, [r7, r2]
 80069d4:	0712      	lsls	r2, r2, #28
 80069d6:	d401      	bmi.n	80069dc <__ssvfiscanf_r+0x58>
 80069d8:	462a      	mov	r2, r5
 80069da:	e7e8      	b.n	80069ae <__ssvfiscanf_r+0x2a>
 80069dc:	9a45      	ldr	r2, [sp, #276]	; 0x114
 80069de:	3201      	adds	r2, #1
 80069e0:	9245      	str	r2, [sp, #276]	; 0x114
 80069e2:	6862      	ldr	r2, [r4, #4]
 80069e4:	3301      	adds	r3, #1
 80069e6:	3a01      	subs	r2, #1
 80069e8:	6062      	str	r2, [r4, #4]
 80069ea:	6023      	str	r3, [r4, #0]
 80069ec:	e7ec      	b.n	80069c8 <__ssvfiscanf_r+0x44>
 80069ee:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 80069f0:	4621      	mov	r1, r4
 80069f2:	4630      	mov	r0, r6
 80069f4:	4798      	blx	r3
 80069f6:	2800      	cmp	r0, #0
 80069f8:	d0e9      	beq.n	80069ce <__ssvfiscanf_r+0x4a>
 80069fa:	e7ed      	b.n	80069d8 <__ssvfiscanf_r+0x54>
 80069fc:	f1ba 0f25 	cmp.w	sl, #37	; 0x25
 8006a00:	f040 8083 	bne.w	8006b0a <__ssvfiscanf_r+0x186>
 8006a04:	9341      	str	r3, [sp, #260]	; 0x104
 8006a06:	9343      	str	r3, [sp, #268]	; 0x10c
 8006a08:	7853      	ldrb	r3, [r2, #1]
 8006a0a:	2b2a      	cmp	r3, #42	; 0x2a
 8006a0c:	bf02      	ittt	eq
 8006a0e:	2310      	moveq	r3, #16
 8006a10:	1c95      	addeq	r5, r2, #2
 8006a12:	9341      	streq	r3, [sp, #260]	; 0x104
 8006a14:	220a      	movs	r2, #10
 8006a16:	46ab      	mov	fp, r5
 8006a18:	f81b 1b01 	ldrb.w	r1, [fp], #1
 8006a1c:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 8006a20:	2b09      	cmp	r3, #9
 8006a22:	d91d      	bls.n	8006a60 <__ssvfiscanf_r+0xdc>
 8006a24:	4891      	ldr	r0, [pc, #580]	; (8006c6c <__ssvfiscanf_r+0x2e8>)
 8006a26:	2203      	movs	r2, #3
 8006a28:	f7f9 fbf2 	bl	8000210 <memchr>
 8006a2c:	b140      	cbz	r0, 8006a40 <__ssvfiscanf_r+0xbc>
 8006a2e:	2301      	movs	r3, #1
 8006a30:	eba0 0009 	sub.w	r0, r0, r9
 8006a34:	fa03 f000 	lsl.w	r0, r3, r0
 8006a38:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8006a3a:	4318      	orrs	r0, r3
 8006a3c:	9041      	str	r0, [sp, #260]	; 0x104
 8006a3e:	465d      	mov	r5, fp
 8006a40:	f815 3b01 	ldrb.w	r3, [r5], #1
 8006a44:	2b78      	cmp	r3, #120	; 0x78
 8006a46:	d806      	bhi.n	8006a56 <__ssvfiscanf_r+0xd2>
 8006a48:	2b57      	cmp	r3, #87	; 0x57
 8006a4a:	d810      	bhi.n	8006a6e <__ssvfiscanf_r+0xea>
 8006a4c:	2b25      	cmp	r3, #37	; 0x25
 8006a4e:	d05c      	beq.n	8006b0a <__ssvfiscanf_r+0x186>
 8006a50:	d856      	bhi.n	8006b00 <__ssvfiscanf_r+0x17c>
 8006a52:	2b00      	cmp	r3, #0
 8006a54:	d074      	beq.n	8006b40 <__ssvfiscanf_r+0x1bc>
 8006a56:	2303      	movs	r3, #3
 8006a58:	9347      	str	r3, [sp, #284]	; 0x11c
 8006a5a:	230a      	movs	r3, #10
 8006a5c:	9342      	str	r3, [sp, #264]	; 0x108
 8006a5e:	e081      	b.n	8006b64 <__ssvfiscanf_r+0x1e0>
 8006a60:	9b43      	ldr	r3, [sp, #268]	; 0x10c
 8006a62:	fb02 1303 	mla	r3, r2, r3, r1
 8006a66:	3b30      	subs	r3, #48	; 0x30
 8006a68:	9343      	str	r3, [sp, #268]	; 0x10c
 8006a6a:	465d      	mov	r5, fp
 8006a6c:	e7d3      	b.n	8006a16 <__ssvfiscanf_r+0x92>
 8006a6e:	f1a3 0258 	sub.w	r2, r3, #88	; 0x58
 8006a72:	2a20      	cmp	r2, #32
 8006a74:	d8ef      	bhi.n	8006a56 <__ssvfiscanf_r+0xd2>
 8006a76:	a101      	add	r1, pc, #4	; (adr r1, 8006a7c <__ssvfiscanf_r+0xf8>)
 8006a78:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8006a7c:	08006b4f 	.word	0x08006b4f
 8006a80:	08006a57 	.word	0x08006a57
 8006a84:	08006a57 	.word	0x08006a57
 8006a88:	08006bad 	.word	0x08006bad
 8006a8c:	08006a57 	.word	0x08006a57
 8006a90:	08006a57 	.word	0x08006a57
 8006a94:	08006a57 	.word	0x08006a57
 8006a98:	08006a57 	.word	0x08006a57
 8006a9c:	08006a57 	.word	0x08006a57
 8006aa0:	08006a57 	.word	0x08006a57
 8006aa4:	08006a57 	.word	0x08006a57
 8006aa8:	08006bc3 	.word	0x08006bc3
 8006aac:	08006b99 	.word	0x08006b99
 8006ab0:	08006b07 	.word	0x08006b07
 8006ab4:	08006b07 	.word	0x08006b07
 8006ab8:	08006b07 	.word	0x08006b07
 8006abc:	08006a57 	.word	0x08006a57
 8006ac0:	08006b9d 	.word	0x08006b9d
 8006ac4:	08006a57 	.word	0x08006a57
 8006ac8:	08006a57 	.word	0x08006a57
 8006acc:	08006a57 	.word	0x08006a57
 8006ad0:	08006a57 	.word	0x08006a57
 8006ad4:	08006bd3 	.word	0x08006bd3
 8006ad8:	08006ba5 	.word	0x08006ba5
 8006adc:	08006b47 	.word	0x08006b47
 8006ae0:	08006a57 	.word	0x08006a57
 8006ae4:	08006a57 	.word	0x08006a57
 8006ae8:	08006bcf 	.word	0x08006bcf
 8006aec:	08006a57 	.word	0x08006a57
 8006af0:	08006b99 	.word	0x08006b99
 8006af4:	08006a57 	.word	0x08006a57
 8006af8:	08006a57 	.word	0x08006a57
 8006afc:	08006b4f 	.word	0x08006b4f
 8006b00:	3b45      	subs	r3, #69	; 0x45
 8006b02:	2b02      	cmp	r3, #2
 8006b04:	d8a7      	bhi.n	8006a56 <__ssvfiscanf_r+0xd2>
 8006b06:	2305      	movs	r3, #5
 8006b08:	e02b      	b.n	8006b62 <__ssvfiscanf_r+0x1de>
 8006b0a:	6863      	ldr	r3, [r4, #4]
 8006b0c:	2b00      	cmp	r3, #0
 8006b0e:	dd0d      	ble.n	8006b2c <__ssvfiscanf_r+0x1a8>
 8006b10:	6823      	ldr	r3, [r4, #0]
 8006b12:	781a      	ldrb	r2, [r3, #0]
 8006b14:	4552      	cmp	r2, sl
 8006b16:	f040 80a1 	bne.w	8006c5c <__ssvfiscanf_r+0x2d8>
 8006b1a:	3301      	adds	r3, #1
 8006b1c:	6862      	ldr	r2, [r4, #4]
 8006b1e:	6023      	str	r3, [r4, #0]
 8006b20:	9b45      	ldr	r3, [sp, #276]	; 0x114
 8006b22:	3a01      	subs	r2, #1
 8006b24:	3301      	adds	r3, #1
 8006b26:	6062      	str	r2, [r4, #4]
 8006b28:	9345      	str	r3, [sp, #276]	; 0x114
 8006b2a:	e755      	b.n	80069d8 <__ssvfiscanf_r+0x54>
 8006b2c:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 8006b2e:	4621      	mov	r1, r4
 8006b30:	4630      	mov	r0, r6
 8006b32:	4798      	blx	r3
 8006b34:	2800      	cmp	r0, #0
 8006b36:	d0eb      	beq.n	8006b10 <__ssvfiscanf_r+0x18c>
 8006b38:	9844      	ldr	r0, [sp, #272]	; 0x110
 8006b3a:	2800      	cmp	r0, #0
 8006b3c:	f040 8084 	bne.w	8006c48 <__ssvfiscanf_r+0x2c4>
 8006b40:	f04f 30ff 	mov.w	r0, #4294967295
 8006b44:	e086      	b.n	8006c54 <__ssvfiscanf_r+0x2d0>
 8006b46:	9a41      	ldr	r2, [sp, #260]	; 0x104
 8006b48:	f042 0220 	orr.w	r2, r2, #32
 8006b4c:	9241      	str	r2, [sp, #260]	; 0x104
 8006b4e:	9a41      	ldr	r2, [sp, #260]	; 0x104
 8006b50:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006b54:	9241      	str	r2, [sp, #260]	; 0x104
 8006b56:	2210      	movs	r2, #16
 8006b58:	2b6f      	cmp	r3, #111	; 0x6f
 8006b5a:	9242      	str	r2, [sp, #264]	; 0x108
 8006b5c:	bf34      	ite	cc
 8006b5e:	2303      	movcc	r3, #3
 8006b60:	2304      	movcs	r3, #4
 8006b62:	9347      	str	r3, [sp, #284]	; 0x11c
 8006b64:	6863      	ldr	r3, [r4, #4]
 8006b66:	2b00      	cmp	r3, #0
 8006b68:	dd41      	ble.n	8006bee <__ssvfiscanf_r+0x26a>
 8006b6a:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8006b6c:	0659      	lsls	r1, r3, #25
 8006b6e:	d404      	bmi.n	8006b7a <__ssvfiscanf_r+0x1f6>
 8006b70:	6823      	ldr	r3, [r4, #0]
 8006b72:	781a      	ldrb	r2, [r3, #0]
 8006b74:	5cba      	ldrb	r2, [r7, r2]
 8006b76:	0712      	lsls	r2, r2, #28
 8006b78:	d440      	bmi.n	8006bfc <__ssvfiscanf_r+0x278>
 8006b7a:	9b47      	ldr	r3, [sp, #284]	; 0x11c
 8006b7c:	2b02      	cmp	r3, #2
 8006b7e:	dc4f      	bgt.n	8006c20 <__ssvfiscanf_r+0x29c>
 8006b80:	466b      	mov	r3, sp
 8006b82:	4622      	mov	r2, r4
 8006b84:	a941      	add	r1, sp, #260	; 0x104
 8006b86:	4630      	mov	r0, r6
 8006b88:	f000 f9cc 	bl	8006f24 <_scanf_chars>
 8006b8c:	2801      	cmp	r0, #1
 8006b8e:	d065      	beq.n	8006c5c <__ssvfiscanf_r+0x2d8>
 8006b90:	2802      	cmp	r0, #2
 8006b92:	f47f af21 	bne.w	80069d8 <__ssvfiscanf_r+0x54>
 8006b96:	e7cf      	b.n	8006b38 <__ssvfiscanf_r+0x1b4>
 8006b98:	220a      	movs	r2, #10
 8006b9a:	e7dd      	b.n	8006b58 <__ssvfiscanf_r+0x1d4>
 8006b9c:	2300      	movs	r3, #0
 8006b9e:	9342      	str	r3, [sp, #264]	; 0x108
 8006ba0:	2303      	movs	r3, #3
 8006ba2:	e7de      	b.n	8006b62 <__ssvfiscanf_r+0x1de>
 8006ba4:	2308      	movs	r3, #8
 8006ba6:	9342      	str	r3, [sp, #264]	; 0x108
 8006ba8:	2304      	movs	r3, #4
 8006baa:	e7da      	b.n	8006b62 <__ssvfiscanf_r+0x1de>
 8006bac:	4629      	mov	r1, r5
 8006bae:	4640      	mov	r0, r8
 8006bb0:	f000 fb1c 	bl	80071ec <__sccl>
 8006bb4:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8006bb6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006bba:	9341      	str	r3, [sp, #260]	; 0x104
 8006bbc:	4605      	mov	r5, r0
 8006bbe:	2301      	movs	r3, #1
 8006bc0:	e7cf      	b.n	8006b62 <__ssvfiscanf_r+0x1de>
 8006bc2:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8006bc4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006bc8:	9341      	str	r3, [sp, #260]	; 0x104
 8006bca:	2300      	movs	r3, #0
 8006bcc:	e7c9      	b.n	8006b62 <__ssvfiscanf_r+0x1de>
 8006bce:	2302      	movs	r3, #2
 8006bd0:	e7c7      	b.n	8006b62 <__ssvfiscanf_r+0x1de>
 8006bd2:	9841      	ldr	r0, [sp, #260]	; 0x104
 8006bd4:	06c3      	lsls	r3, r0, #27
 8006bd6:	f53f aeff 	bmi.w	80069d8 <__ssvfiscanf_r+0x54>
 8006bda:	9b00      	ldr	r3, [sp, #0]
 8006bdc:	9a45      	ldr	r2, [sp, #276]	; 0x114
 8006bde:	1d19      	adds	r1, r3, #4
 8006be0:	9100      	str	r1, [sp, #0]
 8006be2:	681b      	ldr	r3, [r3, #0]
 8006be4:	07c0      	lsls	r0, r0, #31
 8006be6:	bf4c      	ite	mi
 8006be8:	801a      	strhmi	r2, [r3, #0]
 8006bea:	601a      	strpl	r2, [r3, #0]
 8006bec:	e6f4      	b.n	80069d8 <__ssvfiscanf_r+0x54>
 8006bee:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 8006bf0:	4621      	mov	r1, r4
 8006bf2:	4630      	mov	r0, r6
 8006bf4:	4798      	blx	r3
 8006bf6:	2800      	cmp	r0, #0
 8006bf8:	d0b7      	beq.n	8006b6a <__ssvfiscanf_r+0x1e6>
 8006bfa:	e79d      	b.n	8006b38 <__ssvfiscanf_r+0x1b4>
 8006bfc:	9a45      	ldr	r2, [sp, #276]	; 0x114
 8006bfe:	3201      	adds	r2, #1
 8006c00:	9245      	str	r2, [sp, #276]	; 0x114
 8006c02:	6862      	ldr	r2, [r4, #4]
 8006c04:	3a01      	subs	r2, #1
 8006c06:	2a00      	cmp	r2, #0
 8006c08:	6062      	str	r2, [r4, #4]
 8006c0a:	dd02      	ble.n	8006c12 <__ssvfiscanf_r+0x28e>
 8006c0c:	3301      	adds	r3, #1
 8006c0e:	6023      	str	r3, [r4, #0]
 8006c10:	e7ae      	b.n	8006b70 <__ssvfiscanf_r+0x1ec>
 8006c12:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 8006c14:	4621      	mov	r1, r4
 8006c16:	4630      	mov	r0, r6
 8006c18:	4798      	blx	r3
 8006c1a:	2800      	cmp	r0, #0
 8006c1c:	d0a8      	beq.n	8006b70 <__ssvfiscanf_r+0x1ec>
 8006c1e:	e78b      	b.n	8006b38 <__ssvfiscanf_r+0x1b4>
 8006c20:	2b04      	cmp	r3, #4
 8006c22:	dc06      	bgt.n	8006c32 <__ssvfiscanf_r+0x2ae>
 8006c24:	466b      	mov	r3, sp
 8006c26:	4622      	mov	r2, r4
 8006c28:	a941      	add	r1, sp, #260	; 0x104
 8006c2a:	4630      	mov	r0, r6
 8006c2c:	f000 f9d2 	bl	8006fd4 <_scanf_i>
 8006c30:	e7ac      	b.n	8006b8c <__ssvfiscanf_r+0x208>
 8006c32:	4b0f      	ldr	r3, [pc, #60]	; (8006c70 <__ssvfiscanf_r+0x2ec>)
 8006c34:	2b00      	cmp	r3, #0
 8006c36:	f43f aecf 	beq.w	80069d8 <__ssvfiscanf_r+0x54>
 8006c3a:	466b      	mov	r3, sp
 8006c3c:	4622      	mov	r2, r4
 8006c3e:	a941      	add	r1, sp, #260	; 0x104
 8006c40:	4630      	mov	r0, r6
 8006c42:	f7fb ffbb 	bl	8002bbc <_scanf_float>
 8006c46:	e7a1      	b.n	8006b8c <__ssvfiscanf_r+0x208>
 8006c48:	89a3      	ldrh	r3, [r4, #12]
 8006c4a:	f013 0f40 	tst.w	r3, #64	; 0x40
 8006c4e:	bf18      	it	ne
 8006c50:	f04f 30ff 	movne.w	r0, #4294967295
 8006c54:	f50d 7d23 	add.w	sp, sp, #652	; 0x28c
 8006c58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006c5c:	9844      	ldr	r0, [sp, #272]	; 0x110
 8006c5e:	e7f9      	b.n	8006c54 <__ssvfiscanf_r+0x2d0>
 8006c60:	080068d1 	.word	0x080068d1
 8006c64:	0800694b 	.word	0x0800694b
 8006c68:	08007e0d 	.word	0x08007e0d
 8006c6c:	0800816a 	.word	0x0800816a
 8006c70:	08002bbd 	.word	0x08002bbd

08006c74 <__sfputc_r>:
 8006c74:	6893      	ldr	r3, [r2, #8]
 8006c76:	3b01      	subs	r3, #1
 8006c78:	2b00      	cmp	r3, #0
 8006c7a:	b410      	push	{r4}
 8006c7c:	6093      	str	r3, [r2, #8]
 8006c7e:	da07      	bge.n	8006c90 <__sfputc_r+0x1c>
 8006c80:	6994      	ldr	r4, [r2, #24]
 8006c82:	42a3      	cmp	r3, r4
 8006c84:	db01      	blt.n	8006c8a <__sfputc_r+0x16>
 8006c86:	290a      	cmp	r1, #10
 8006c88:	d102      	bne.n	8006c90 <__sfputc_r+0x1c>
 8006c8a:	bc10      	pop	{r4}
 8006c8c:	f7fd bb4e 	b.w	800432c <__swbuf_r>
 8006c90:	6813      	ldr	r3, [r2, #0]
 8006c92:	1c58      	adds	r0, r3, #1
 8006c94:	6010      	str	r0, [r2, #0]
 8006c96:	7019      	strb	r1, [r3, #0]
 8006c98:	4608      	mov	r0, r1
 8006c9a:	bc10      	pop	{r4}
 8006c9c:	4770      	bx	lr

08006c9e <__sfputs_r>:
 8006c9e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006ca0:	4606      	mov	r6, r0
 8006ca2:	460f      	mov	r7, r1
 8006ca4:	4614      	mov	r4, r2
 8006ca6:	18d5      	adds	r5, r2, r3
 8006ca8:	42ac      	cmp	r4, r5
 8006caa:	d101      	bne.n	8006cb0 <__sfputs_r+0x12>
 8006cac:	2000      	movs	r0, #0
 8006cae:	e007      	b.n	8006cc0 <__sfputs_r+0x22>
 8006cb0:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006cb4:	463a      	mov	r2, r7
 8006cb6:	4630      	mov	r0, r6
 8006cb8:	f7ff ffdc 	bl	8006c74 <__sfputc_r>
 8006cbc:	1c43      	adds	r3, r0, #1
 8006cbe:	d1f3      	bne.n	8006ca8 <__sfputs_r+0xa>
 8006cc0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08006cc4 <_vfiprintf_r>:
 8006cc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006cc8:	460d      	mov	r5, r1
 8006cca:	b09d      	sub	sp, #116	; 0x74
 8006ccc:	4614      	mov	r4, r2
 8006cce:	4698      	mov	r8, r3
 8006cd0:	4606      	mov	r6, r0
 8006cd2:	b118      	cbz	r0, 8006cdc <_vfiprintf_r+0x18>
 8006cd4:	6983      	ldr	r3, [r0, #24]
 8006cd6:	b90b      	cbnz	r3, 8006cdc <_vfiprintf_r+0x18>
 8006cd8:	f7fb f9c2 	bl	8002060 <__sinit>
 8006cdc:	4b89      	ldr	r3, [pc, #548]	; (8006f04 <_vfiprintf_r+0x240>)
 8006cde:	429d      	cmp	r5, r3
 8006ce0:	d11b      	bne.n	8006d1a <_vfiprintf_r+0x56>
 8006ce2:	6875      	ldr	r5, [r6, #4]
 8006ce4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8006ce6:	07d9      	lsls	r1, r3, #31
 8006ce8:	d405      	bmi.n	8006cf6 <_vfiprintf_r+0x32>
 8006cea:	89ab      	ldrh	r3, [r5, #12]
 8006cec:	059a      	lsls	r2, r3, #22
 8006cee:	d402      	bmi.n	8006cf6 <_vfiprintf_r+0x32>
 8006cf0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8006cf2:	f7fb fa94 	bl	800221e <__retarget_lock_acquire_recursive>
 8006cf6:	89ab      	ldrh	r3, [r5, #12]
 8006cf8:	071b      	lsls	r3, r3, #28
 8006cfa:	d501      	bpl.n	8006d00 <_vfiprintf_r+0x3c>
 8006cfc:	692b      	ldr	r3, [r5, #16]
 8006cfe:	b9eb      	cbnz	r3, 8006d3c <_vfiprintf_r+0x78>
 8006d00:	4629      	mov	r1, r5
 8006d02:	4630      	mov	r0, r6
 8006d04:	f7fd fb76 	bl	80043f4 <__swsetup_r>
 8006d08:	b1c0      	cbz	r0, 8006d3c <_vfiprintf_r+0x78>
 8006d0a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8006d0c:	07dc      	lsls	r4, r3, #31
 8006d0e:	d50e      	bpl.n	8006d2e <_vfiprintf_r+0x6a>
 8006d10:	f04f 30ff 	mov.w	r0, #4294967295
 8006d14:	b01d      	add	sp, #116	; 0x74
 8006d16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006d1a:	4b7b      	ldr	r3, [pc, #492]	; (8006f08 <_vfiprintf_r+0x244>)
 8006d1c:	429d      	cmp	r5, r3
 8006d1e:	d101      	bne.n	8006d24 <_vfiprintf_r+0x60>
 8006d20:	68b5      	ldr	r5, [r6, #8]
 8006d22:	e7df      	b.n	8006ce4 <_vfiprintf_r+0x20>
 8006d24:	4b79      	ldr	r3, [pc, #484]	; (8006f0c <_vfiprintf_r+0x248>)
 8006d26:	429d      	cmp	r5, r3
 8006d28:	bf08      	it	eq
 8006d2a:	68f5      	ldreq	r5, [r6, #12]
 8006d2c:	e7da      	b.n	8006ce4 <_vfiprintf_r+0x20>
 8006d2e:	89ab      	ldrh	r3, [r5, #12]
 8006d30:	0598      	lsls	r0, r3, #22
 8006d32:	d4ed      	bmi.n	8006d10 <_vfiprintf_r+0x4c>
 8006d34:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8006d36:	f7fb fa73 	bl	8002220 <__retarget_lock_release_recursive>
 8006d3a:	e7e9      	b.n	8006d10 <_vfiprintf_r+0x4c>
 8006d3c:	2300      	movs	r3, #0
 8006d3e:	9309      	str	r3, [sp, #36]	; 0x24
 8006d40:	2320      	movs	r3, #32
 8006d42:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8006d46:	f8cd 800c 	str.w	r8, [sp, #12]
 8006d4a:	2330      	movs	r3, #48	; 0x30
 8006d4c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8006f10 <_vfiprintf_r+0x24c>
 8006d50:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8006d54:	f04f 0901 	mov.w	r9, #1
 8006d58:	4623      	mov	r3, r4
 8006d5a:	469a      	mov	sl, r3
 8006d5c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006d60:	b10a      	cbz	r2, 8006d66 <_vfiprintf_r+0xa2>
 8006d62:	2a25      	cmp	r2, #37	; 0x25
 8006d64:	d1f9      	bne.n	8006d5a <_vfiprintf_r+0x96>
 8006d66:	ebba 0b04 	subs.w	fp, sl, r4
 8006d6a:	d00b      	beq.n	8006d84 <_vfiprintf_r+0xc0>
 8006d6c:	465b      	mov	r3, fp
 8006d6e:	4622      	mov	r2, r4
 8006d70:	4629      	mov	r1, r5
 8006d72:	4630      	mov	r0, r6
 8006d74:	f7ff ff93 	bl	8006c9e <__sfputs_r>
 8006d78:	3001      	adds	r0, #1
 8006d7a:	f000 80aa 	beq.w	8006ed2 <_vfiprintf_r+0x20e>
 8006d7e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8006d80:	445a      	add	r2, fp
 8006d82:	9209      	str	r2, [sp, #36]	; 0x24
 8006d84:	f89a 3000 	ldrb.w	r3, [sl]
 8006d88:	2b00      	cmp	r3, #0
 8006d8a:	f000 80a2 	beq.w	8006ed2 <_vfiprintf_r+0x20e>
 8006d8e:	2300      	movs	r3, #0
 8006d90:	f04f 32ff 	mov.w	r2, #4294967295
 8006d94:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8006d98:	f10a 0a01 	add.w	sl, sl, #1
 8006d9c:	9304      	str	r3, [sp, #16]
 8006d9e:	9307      	str	r3, [sp, #28]
 8006da0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8006da4:	931a      	str	r3, [sp, #104]	; 0x68
 8006da6:	4654      	mov	r4, sl
 8006da8:	2205      	movs	r2, #5
 8006daa:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006dae:	4858      	ldr	r0, [pc, #352]	; (8006f10 <_vfiprintf_r+0x24c>)
 8006db0:	f7f9 fa2e 	bl	8000210 <memchr>
 8006db4:	9a04      	ldr	r2, [sp, #16]
 8006db6:	b9d8      	cbnz	r0, 8006df0 <_vfiprintf_r+0x12c>
 8006db8:	06d1      	lsls	r1, r2, #27
 8006dba:	bf44      	itt	mi
 8006dbc:	2320      	movmi	r3, #32
 8006dbe:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8006dc2:	0713      	lsls	r3, r2, #28
 8006dc4:	bf44      	itt	mi
 8006dc6:	232b      	movmi	r3, #43	; 0x2b
 8006dc8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8006dcc:	f89a 3000 	ldrb.w	r3, [sl]
 8006dd0:	2b2a      	cmp	r3, #42	; 0x2a
 8006dd2:	d015      	beq.n	8006e00 <_vfiprintf_r+0x13c>
 8006dd4:	9a07      	ldr	r2, [sp, #28]
 8006dd6:	4654      	mov	r4, sl
 8006dd8:	2000      	movs	r0, #0
 8006dda:	f04f 0c0a 	mov.w	ip, #10
 8006dde:	4621      	mov	r1, r4
 8006de0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8006de4:	3b30      	subs	r3, #48	; 0x30
 8006de6:	2b09      	cmp	r3, #9
 8006de8:	d94e      	bls.n	8006e88 <_vfiprintf_r+0x1c4>
 8006dea:	b1b0      	cbz	r0, 8006e1a <_vfiprintf_r+0x156>
 8006dec:	9207      	str	r2, [sp, #28]
 8006dee:	e014      	b.n	8006e1a <_vfiprintf_r+0x156>
 8006df0:	eba0 0308 	sub.w	r3, r0, r8
 8006df4:	fa09 f303 	lsl.w	r3, r9, r3
 8006df8:	4313      	orrs	r3, r2
 8006dfa:	9304      	str	r3, [sp, #16]
 8006dfc:	46a2      	mov	sl, r4
 8006dfe:	e7d2      	b.n	8006da6 <_vfiprintf_r+0xe2>
 8006e00:	9b03      	ldr	r3, [sp, #12]
 8006e02:	1d19      	adds	r1, r3, #4
 8006e04:	681b      	ldr	r3, [r3, #0]
 8006e06:	9103      	str	r1, [sp, #12]
 8006e08:	2b00      	cmp	r3, #0
 8006e0a:	bfbb      	ittet	lt
 8006e0c:	425b      	neglt	r3, r3
 8006e0e:	f042 0202 	orrlt.w	r2, r2, #2
 8006e12:	9307      	strge	r3, [sp, #28]
 8006e14:	9307      	strlt	r3, [sp, #28]
 8006e16:	bfb8      	it	lt
 8006e18:	9204      	strlt	r2, [sp, #16]
 8006e1a:	7823      	ldrb	r3, [r4, #0]
 8006e1c:	2b2e      	cmp	r3, #46	; 0x2e
 8006e1e:	d10c      	bne.n	8006e3a <_vfiprintf_r+0x176>
 8006e20:	7863      	ldrb	r3, [r4, #1]
 8006e22:	2b2a      	cmp	r3, #42	; 0x2a
 8006e24:	d135      	bne.n	8006e92 <_vfiprintf_r+0x1ce>
 8006e26:	9b03      	ldr	r3, [sp, #12]
 8006e28:	1d1a      	adds	r2, r3, #4
 8006e2a:	681b      	ldr	r3, [r3, #0]
 8006e2c:	9203      	str	r2, [sp, #12]
 8006e2e:	2b00      	cmp	r3, #0
 8006e30:	bfb8      	it	lt
 8006e32:	f04f 33ff 	movlt.w	r3, #4294967295
 8006e36:	3402      	adds	r4, #2
 8006e38:	9305      	str	r3, [sp, #20]
 8006e3a:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8006f20 <_vfiprintf_r+0x25c>
 8006e3e:	7821      	ldrb	r1, [r4, #0]
 8006e40:	2203      	movs	r2, #3
 8006e42:	4650      	mov	r0, sl
 8006e44:	f7f9 f9e4 	bl	8000210 <memchr>
 8006e48:	b140      	cbz	r0, 8006e5c <_vfiprintf_r+0x198>
 8006e4a:	2340      	movs	r3, #64	; 0x40
 8006e4c:	eba0 000a 	sub.w	r0, r0, sl
 8006e50:	fa03 f000 	lsl.w	r0, r3, r0
 8006e54:	9b04      	ldr	r3, [sp, #16]
 8006e56:	4303      	orrs	r3, r0
 8006e58:	3401      	adds	r4, #1
 8006e5a:	9304      	str	r3, [sp, #16]
 8006e5c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006e60:	482c      	ldr	r0, [pc, #176]	; (8006f14 <_vfiprintf_r+0x250>)
 8006e62:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8006e66:	2206      	movs	r2, #6
 8006e68:	f7f9 f9d2 	bl	8000210 <memchr>
 8006e6c:	2800      	cmp	r0, #0
 8006e6e:	d03f      	beq.n	8006ef0 <_vfiprintf_r+0x22c>
 8006e70:	4b29      	ldr	r3, [pc, #164]	; (8006f18 <_vfiprintf_r+0x254>)
 8006e72:	bb1b      	cbnz	r3, 8006ebc <_vfiprintf_r+0x1f8>
 8006e74:	9b03      	ldr	r3, [sp, #12]
 8006e76:	3307      	adds	r3, #7
 8006e78:	f023 0307 	bic.w	r3, r3, #7
 8006e7c:	3308      	adds	r3, #8
 8006e7e:	9303      	str	r3, [sp, #12]
 8006e80:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006e82:	443b      	add	r3, r7
 8006e84:	9309      	str	r3, [sp, #36]	; 0x24
 8006e86:	e767      	b.n	8006d58 <_vfiprintf_r+0x94>
 8006e88:	fb0c 3202 	mla	r2, ip, r2, r3
 8006e8c:	460c      	mov	r4, r1
 8006e8e:	2001      	movs	r0, #1
 8006e90:	e7a5      	b.n	8006dde <_vfiprintf_r+0x11a>
 8006e92:	2300      	movs	r3, #0
 8006e94:	3401      	adds	r4, #1
 8006e96:	9305      	str	r3, [sp, #20]
 8006e98:	4619      	mov	r1, r3
 8006e9a:	f04f 0c0a 	mov.w	ip, #10
 8006e9e:	4620      	mov	r0, r4
 8006ea0:	f810 2b01 	ldrb.w	r2, [r0], #1
 8006ea4:	3a30      	subs	r2, #48	; 0x30
 8006ea6:	2a09      	cmp	r2, #9
 8006ea8:	d903      	bls.n	8006eb2 <_vfiprintf_r+0x1ee>
 8006eaa:	2b00      	cmp	r3, #0
 8006eac:	d0c5      	beq.n	8006e3a <_vfiprintf_r+0x176>
 8006eae:	9105      	str	r1, [sp, #20]
 8006eb0:	e7c3      	b.n	8006e3a <_vfiprintf_r+0x176>
 8006eb2:	fb0c 2101 	mla	r1, ip, r1, r2
 8006eb6:	4604      	mov	r4, r0
 8006eb8:	2301      	movs	r3, #1
 8006eba:	e7f0      	b.n	8006e9e <_vfiprintf_r+0x1da>
 8006ebc:	ab03      	add	r3, sp, #12
 8006ebe:	9300      	str	r3, [sp, #0]
 8006ec0:	462a      	mov	r2, r5
 8006ec2:	4b16      	ldr	r3, [pc, #88]	; (8006f1c <_vfiprintf_r+0x258>)
 8006ec4:	a904      	add	r1, sp, #16
 8006ec6:	4630      	mov	r0, r6
 8006ec8:	f7fb faba 	bl	8002440 <_printf_float>
 8006ecc:	4607      	mov	r7, r0
 8006ece:	1c78      	adds	r0, r7, #1
 8006ed0:	d1d6      	bne.n	8006e80 <_vfiprintf_r+0x1bc>
 8006ed2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8006ed4:	07d9      	lsls	r1, r3, #31
 8006ed6:	d405      	bmi.n	8006ee4 <_vfiprintf_r+0x220>
 8006ed8:	89ab      	ldrh	r3, [r5, #12]
 8006eda:	059a      	lsls	r2, r3, #22
 8006edc:	d402      	bmi.n	8006ee4 <_vfiprintf_r+0x220>
 8006ede:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8006ee0:	f7fb f99e 	bl	8002220 <__retarget_lock_release_recursive>
 8006ee4:	89ab      	ldrh	r3, [r5, #12]
 8006ee6:	065b      	lsls	r3, r3, #25
 8006ee8:	f53f af12 	bmi.w	8006d10 <_vfiprintf_r+0x4c>
 8006eec:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006eee:	e711      	b.n	8006d14 <_vfiprintf_r+0x50>
 8006ef0:	ab03      	add	r3, sp, #12
 8006ef2:	9300      	str	r3, [sp, #0]
 8006ef4:	462a      	mov	r2, r5
 8006ef6:	4b09      	ldr	r3, [pc, #36]	; (8006f1c <_vfiprintf_r+0x258>)
 8006ef8:	a904      	add	r1, sp, #16
 8006efa:	4630      	mov	r0, r6
 8006efc:	f7fb fd38 	bl	8002970 <_printf_i>
 8006f00:	e7e4      	b.n	8006ecc <_vfiprintf_r+0x208>
 8006f02:	bf00      	nop
 8006f04:	08007c8c 	.word	0x08007c8c
 8006f08:	08007cac 	.word	0x08007cac
 8006f0c:	08007c6c 	.word	0x08007c6c
 8006f10:	08008164 	.word	0x08008164
 8006f14:	0800816e 	.word	0x0800816e
 8006f18:	08002441 	.word	0x08002441
 8006f1c:	08006c9f 	.word	0x08006c9f
 8006f20:	0800816a 	.word	0x0800816a

08006f24 <_scanf_chars>:
 8006f24:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006f28:	4615      	mov	r5, r2
 8006f2a:	688a      	ldr	r2, [r1, #8]
 8006f2c:	4680      	mov	r8, r0
 8006f2e:	460c      	mov	r4, r1
 8006f30:	b932      	cbnz	r2, 8006f40 <_scanf_chars+0x1c>
 8006f32:	698a      	ldr	r2, [r1, #24]
 8006f34:	2a00      	cmp	r2, #0
 8006f36:	bf0c      	ite	eq
 8006f38:	2201      	moveq	r2, #1
 8006f3a:	f04f 32ff 	movne.w	r2, #4294967295
 8006f3e:	608a      	str	r2, [r1, #8]
 8006f40:	6822      	ldr	r2, [r4, #0]
 8006f42:	f8df 908c 	ldr.w	r9, [pc, #140]	; 8006fd0 <_scanf_chars+0xac>
 8006f46:	06d1      	lsls	r1, r2, #27
 8006f48:	bf5f      	itttt	pl
 8006f4a:	681a      	ldrpl	r2, [r3, #0]
 8006f4c:	1d11      	addpl	r1, r2, #4
 8006f4e:	6019      	strpl	r1, [r3, #0]
 8006f50:	6816      	ldrpl	r6, [r2, #0]
 8006f52:	2700      	movs	r7, #0
 8006f54:	69a0      	ldr	r0, [r4, #24]
 8006f56:	b188      	cbz	r0, 8006f7c <_scanf_chars+0x58>
 8006f58:	2801      	cmp	r0, #1
 8006f5a:	d107      	bne.n	8006f6c <_scanf_chars+0x48>
 8006f5c:	682b      	ldr	r3, [r5, #0]
 8006f5e:	781a      	ldrb	r2, [r3, #0]
 8006f60:	6963      	ldr	r3, [r4, #20]
 8006f62:	5c9b      	ldrb	r3, [r3, r2]
 8006f64:	b953      	cbnz	r3, 8006f7c <_scanf_chars+0x58>
 8006f66:	bb27      	cbnz	r7, 8006fb2 <_scanf_chars+0x8e>
 8006f68:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006f6c:	2802      	cmp	r0, #2
 8006f6e:	d120      	bne.n	8006fb2 <_scanf_chars+0x8e>
 8006f70:	682b      	ldr	r3, [r5, #0]
 8006f72:	781b      	ldrb	r3, [r3, #0]
 8006f74:	f813 3009 	ldrb.w	r3, [r3, r9]
 8006f78:	071b      	lsls	r3, r3, #28
 8006f7a:	d41a      	bmi.n	8006fb2 <_scanf_chars+0x8e>
 8006f7c:	6823      	ldr	r3, [r4, #0]
 8006f7e:	06da      	lsls	r2, r3, #27
 8006f80:	bf5e      	ittt	pl
 8006f82:	682b      	ldrpl	r3, [r5, #0]
 8006f84:	781b      	ldrbpl	r3, [r3, #0]
 8006f86:	f806 3b01 	strbpl.w	r3, [r6], #1
 8006f8a:	682a      	ldr	r2, [r5, #0]
 8006f8c:	686b      	ldr	r3, [r5, #4]
 8006f8e:	3201      	adds	r2, #1
 8006f90:	602a      	str	r2, [r5, #0]
 8006f92:	68a2      	ldr	r2, [r4, #8]
 8006f94:	3b01      	subs	r3, #1
 8006f96:	3a01      	subs	r2, #1
 8006f98:	606b      	str	r3, [r5, #4]
 8006f9a:	3701      	adds	r7, #1
 8006f9c:	60a2      	str	r2, [r4, #8]
 8006f9e:	b142      	cbz	r2, 8006fb2 <_scanf_chars+0x8e>
 8006fa0:	2b00      	cmp	r3, #0
 8006fa2:	dcd7      	bgt.n	8006f54 <_scanf_chars+0x30>
 8006fa4:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8006fa8:	4629      	mov	r1, r5
 8006faa:	4640      	mov	r0, r8
 8006fac:	4798      	blx	r3
 8006fae:	2800      	cmp	r0, #0
 8006fb0:	d0d0      	beq.n	8006f54 <_scanf_chars+0x30>
 8006fb2:	6823      	ldr	r3, [r4, #0]
 8006fb4:	f013 0310 	ands.w	r3, r3, #16
 8006fb8:	d105      	bne.n	8006fc6 <_scanf_chars+0xa2>
 8006fba:	68e2      	ldr	r2, [r4, #12]
 8006fbc:	3201      	adds	r2, #1
 8006fbe:	60e2      	str	r2, [r4, #12]
 8006fc0:	69a2      	ldr	r2, [r4, #24]
 8006fc2:	b102      	cbz	r2, 8006fc6 <_scanf_chars+0xa2>
 8006fc4:	7033      	strb	r3, [r6, #0]
 8006fc6:	6923      	ldr	r3, [r4, #16]
 8006fc8:	441f      	add	r7, r3
 8006fca:	6127      	str	r7, [r4, #16]
 8006fcc:	2000      	movs	r0, #0
 8006fce:	e7cb      	b.n	8006f68 <_scanf_chars+0x44>
 8006fd0:	08007e0d 	.word	0x08007e0d

08006fd4 <_scanf_i>:
 8006fd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006fd8:	4698      	mov	r8, r3
 8006fda:	4b74      	ldr	r3, [pc, #464]	; (80071ac <_scanf_i+0x1d8>)
 8006fdc:	460c      	mov	r4, r1
 8006fde:	4682      	mov	sl, r0
 8006fe0:	4616      	mov	r6, r2
 8006fe2:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8006fe6:	b087      	sub	sp, #28
 8006fe8:	ab03      	add	r3, sp, #12
 8006fea:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006fee:	4b70      	ldr	r3, [pc, #448]	; (80071b0 <_scanf_i+0x1dc>)
 8006ff0:	69a1      	ldr	r1, [r4, #24]
 8006ff2:	4a70      	ldr	r2, [pc, #448]	; (80071b4 <_scanf_i+0x1e0>)
 8006ff4:	2903      	cmp	r1, #3
 8006ff6:	bf18      	it	ne
 8006ff8:	461a      	movne	r2, r3
 8006ffa:	68a3      	ldr	r3, [r4, #8]
 8006ffc:	9201      	str	r2, [sp, #4]
 8006ffe:	1e5a      	subs	r2, r3, #1
 8007000:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 8007004:	bf88      	it	hi
 8007006:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 800700a:	4627      	mov	r7, r4
 800700c:	bf82      	ittt	hi
 800700e:	eb03 0905 	addhi.w	r9, r3, r5
 8007012:	f240 135d 	movwhi	r3, #349	; 0x15d
 8007016:	60a3      	strhi	r3, [r4, #8]
 8007018:	f857 3b1c 	ldr.w	r3, [r7], #28
 800701c:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
 8007020:	bf98      	it	ls
 8007022:	f04f 0900 	movls.w	r9, #0
 8007026:	6023      	str	r3, [r4, #0]
 8007028:	463d      	mov	r5, r7
 800702a:	f04f 0b00 	mov.w	fp, #0
 800702e:	6831      	ldr	r1, [r6, #0]
 8007030:	ab03      	add	r3, sp, #12
 8007032:	7809      	ldrb	r1, [r1, #0]
 8007034:	f853 002b 	ldr.w	r0, [r3, fp, lsl #2]
 8007038:	2202      	movs	r2, #2
 800703a:	f7f9 f8e9 	bl	8000210 <memchr>
 800703e:	b328      	cbz	r0, 800708c <_scanf_i+0xb8>
 8007040:	f1bb 0f01 	cmp.w	fp, #1
 8007044:	d159      	bne.n	80070fa <_scanf_i+0x126>
 8007046:	6862      	ldr	r2, [r4, #4]
 8007048:	b92a      	cbnz	r2, 8007056 <_scanf_i+0x82>
 800704a:	6822      	ldr	r2, [r4, #0]
 800704c:	2308      	movs	r3, #8
 800704e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007052:	6063      	str	r3, [r4, #4]
 8007054:	6022      	str	r2, [r4, #0]
 8007056:	6822      	ldr	r2, [r4, #0]
 8007058:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
 800705c:	6022      	str	r2, [r4, #0]
 800705e:	68a2      	ldr	r2, [r4, #8]
 8007060:	1e51      	subs	r1, r2, #1
 8007062:	60a1      	str	r1, [r4, #8]
 8007064:	b192      	cbz	r2, 800708c <_scanf_i+0xb8>
 8007066:	6832      	ldr	r2, [r6, #0]
 8007068:	1c51      	adds	r1, r2, #1
 800706a:	6031      	str	r1, [r6, #0]
 800706c:	7812      	ldrb	r2, [r2, #0]
 800706e:	f805 2b01 	strb.w	r2, [r5], #1
 8007072:	6872      	ldr	r2, [r6, #4]
 8007074:	3a01      	subs	r2, #1
 8007076:	2a00      	cmp	r2, #0
 8007078:	6072      	str	r2, [r6, #4]
 800707a:	dc07      	bgt.n	800708c <_scanf_i+0xb8>
 800707c:	f8d4 2180 	ldr.w	r2, [r4, #384]	; 0x180
 8007080:	4631      	mov	r1, r6
 8007082:	4650      	mov	r0, sl
 8007084:	4790      	blx	r2
 8007086:	2800      	cmp	r0, #0
 8007088:	f040 8085 	bne.w	8007196 <_scanf_i+0x1c2>
 800708c:	f10b 0b01 	add.w	fp, fp, #1
 8007090:	f1bb 0f03 	cmp.w	fp, #3
 8007094:	d1cb      	bne.n	800702e <_scanf_i+0x5a>
 8007096:	6863      	ldr	r3, [r4, #4]
 8007098:	b90b      	cbnz	r3, 800709e <_scanf_i+0xca>
 800709a:	230a      	movs	r3, #10
 800709c:	6063      	str	r3, [r4, #4]
 800709e:	6863      	ldr	r3, [r4, #4]
 80070a0:	4945      	ldr	r1, [pc, #276]	; (80071b8 <_scanf_i+0x1e4>)
 80070a2:	6960      	ldr	r0, [r4, #20]
 80070a4:	1ac9      	subs	r1, r1, r3
 80070a6:	f000 f8a1 	bl	80071ec <__sccl>
 80070aa:	f04f 0b00 	mov.w	fp, #0
 80070ae:	68a3      	ldr	r3, [r4, #8]
 80070b0:	6822      	ldr	r2, [r4, #0]
 80070b2:	2b00      	cmp	r3, #0
 80070b4:	d03d      	beq.n	8007132 <_scanf_i+0x15e>
 80070b6:	6831      	ldr	r1, [r6, #0]
 80070b8:	6960      	ldr	r0, [r4, #20]
 80070ba:	f891 c000 	ldrb.w	ip, [r1]
 80070be:	f810 000c 	ldrb.w	r0, [r0, ip]
 80070c2:	2800      	cmp	r0, #0
 80070c4:	d035      	beq.n	8007132 <_scanf_i+0x15e>
 80070c6:	f1bc 0f30 	cmp.w	ip, #48	; 0x30
 80070ca:	d124      	bne.n	8007116 <_scanf_i+0x142>
 80070cc:	0510      	lsls	r0, r2, #20
 80070ce:	d522      	bpl.n	8007116 <_scanf_i+0x142>
 80070d0:	f10b 0b01 	add.w	fp, fp, #1
 80070d4:	f1b9 0f00 	cmp.w	r9, #0
 80070d8:	d003      	beq.n	80070e2 <_scanf_i+0x10e>
 80070da:	3301      	adds	r3, #1
 80070dc:	f109 39ff 	add.w	r9, r9, #4294967295
 80070e0:	60a3      	str	r3, [r4, #8]
 80070e2:	6873      	ldr	r3, [r6, #4]
 80070e4:	3b01      	subs	r3, #1
 80070e6:	2b00      	cmp	r3, #0
 80070e8:	6073      	str	r3, [r6, #4]
 80070ea:	dd1b      	ble.n	8007124 <_scanf_i+0x150>
 80070ec:	6833      	ldr	r3, [r6, #0]
 80070ee:	3301      	adds	r3, #1
 80070f0:	6033      	str	r3, [r6, #0]
 80070f2:	68a3      	ldr	r3, [r4, #8]
 80070f4:	3b01      	subs	r3, #1
 80070f6:	60a3      	str	r3, [r4, #8]
 80070f8:	e7d9      	b.n	80070ae <_scanf_i+0xda>
 80070fa:	f1bb 0f02 	cmp.w	fp, #2
 80070fe:	d1ae      	bne.n	800705e <_scanf_i+0x8a>
 8007100:	6822      	ldr	r2, [r4, #0]
 8007102:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
 8007106:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 800710a:	d1bf      	bne.n	800708c <_scanf_i+0xb8>
 800710c:	2310      	movs	r3, #16
 800710e:	6063      	str	r3, [r4, #4]
 8007110:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007114:	e7a2      	b.n	800705c <_scanf_i+0x88>
 8007116:	f422 6210 	bic.w	r2, r2, #2304	; 0x900
 800711a:	6022      	str	r2, [r4, #0]
 800711c:	780b      	ldrb	r3, [r1, #0]
 800711e:	f805 3b01 	strb.w	r3, [r5], #1
 8007122:	e7de      	b.n	80070e2 <_scanf_i+0x10e>
 8007124:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8007128:	4631      	mov	r1, r6
 800712a:	4650      	mov	r0, sl
 800712c:	4798      	blx	r3
 800712e:	2800      	cmp	r0, #0
 8007130:	d0df      	beq.n	80070f2 <_scanf_i+0x11e>
 8007132:	6823      	ldr	r3, [r4, #0]
 8007134:	05d9      	lsls	r1, r3, #23
 8007136:	d50d      	bpl.n	8007154 <_scanf_i+0x180>
 8007138:	42bd      	cmp	r5, r7
 800713a:	d909      	bls.n	8007150 <_scanf_i+0x17c>
 800713c:	f815 1c01 	ldrb.w	r1, [r5, #-1]
 8007140:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8007144:	4632      	mov	r2, r6
 8007146:	4650      	mov	r0, sl
 8007148:	4798      	blx	r3
 800714a:	f105 39ff 	add.w	r9, r5, #4294967295
 800714e:	464d      	mov	r5, r9
 8007150:	42bd      	cmp	r5, r7
 8007152:	d028      	beq.n	80071a6 <_scanf_i+0x1d2>
 8007154:	6822      	ldr	r2, [r4, #0]
 8007156:	f012 0210 	ands.w	r2, r2, #16
 800715a:	d113      	bne.n	8007184 <_scanf_i+0x1b0>
 800715c:	702a      	strb	r2, [r5, #0]
 800715e:	6863      	ldr	r3, [r4, #4]
 8007160:	9e01      	ldr	r6, [sp, #4]
 8007162:	4639      	mov	r1, r7
 8007164:	4650      	mov	r0, sl
 8007166:	47b0      	blx	r6
 8007168:	f8d8 3000 	ldr.w	r3, [r8]
 800716c:	6821      	ldr	r1, [r4, #0]
 800716e:	1d1a      	adds	r2, r3, #4
 8007170:	f8c8 2000 	str.w	r2, [r8]
 8007174:	f011 0f20 	tst.w	r1, #32
 8007178:	681b      	ldr	r3, [r3, #0]
 800717a:	d00f      	beq.n	800719c <_scanf_i+0x1c8>
 800717c:	6018      	str	r0, [r3, #0]
 800717e:	68e3      	ldr	r3, [r4, #12]
 8007180:	3301      	adds	r3, #1
 8007182:	60e3      	str	r3, [r4, #12]
 8007184:	1bed      	subs	r5, r5, r7
 8007186:	44ab      	add	fp, r5
 8007188:	6925      	ldr	r5, [r4, #16]
 800718a:	445d      	add	r5, fp
 800718c:	6125      	str	r5, [r4, #16]
 800718e:	2000      	movs	r0, #0
 8007190:	b007      	add	sp, #28
 8007192:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007196:	f04f 0b00 	mov.w	fp, #0
 800719a:	e7ca      	b.n	8007132 <_scanf_i+0x15e>
 800719c:	07ca      	lsls	r2, r1, #31
 800719e:	bf4c      	ite	mi
 80071a0:	8018      	strhmi	r0, [r3, #0]
 80071a2:	6018      	strpl	r0, [r3, #0]
 80071a4:	e7eb      	b.n	800717e <_scanf_i+0x1aa>
 80071a6:	2001      	movs	r0, #1
 80071a8:	e7f2      	b.n	8007190 <_scanf_i+0x1bc>
 80071aa:	bf00      	nop
 80071ac:	08007c60 	.word	0x08007c60
 80071b0:	0800737d 	.word	0x0800737d
 80071b4:	08004329 	.word	0x08004329
 80071b8:	0800818e 	.word	0x0800818e

080071bc <_read_r>:
 80071bc:	b538      	push	{r3, r4, r5, lr}
 80071be:	4d07      	ldr	r5, [pc, #28]	; (80071dc <_read_r+0x20>)
 80071c0:	4604      	mov	r4, r0
 80071c2:	4608      	mov	r0, r1
 80071c4:	4611      	mov	r1, r2
 80071c6:	2200      	movs	r2, #0
 80071c8:	602a      	str	r2, [r5, #0]
 80071ca:	461a      	mov	r2, r3
 80071cc:	f7fa fd64 	bl	8001c98 <_read>
 80071d0:	1c43      	adds	r3, r0, #1
 80071d2:	d102      	bne.n	80071da <_read_r+0x1e>
 80071d4:	682b      	ldr	r3, [r5, #0]
 80071d6:	b103      	cbz	r3, 80071da <_read_r+0x1e>
 80071d8:	6023      	str	r3, [r4, #0]
 80071da:	bd38      	pop	{r3, r4, r5, pc}
 80071dc:	20000d3c 	.word	0x20000d3c

080071e0 <nan>:
 80071e0:	4901      	ldr	r1, [pc, #4]	; (80071e8 <nan+0x8>)
 80071e2:	2000      	movs	r0, #0
 80071e4:	4770      	bx	lr
 80071e6:	bf00      	nop
 80071e8:	7ff80000 	.word	0x7ff80000

080071ec <__sccl>:
 80071ec:	b570      	push	{r4, r5, r6, lr}
 80071ee:	780b      	ldrb	r3, [r1, #0]
 80071f0:	4604      	mov	r4, r0
 80071f2:	2b5e      	cmp	r3, #94	; 0x5e
 80071f4:	bf0b      	itete	eq
 80071f6:	784b      	ldrbeq	r3, [r1, #1]
 80071f8:	1c48      	addne	r0, r1, #1
 80071fa:	1c88      	addeq	r0, r1, #2
 80071fc:	2200      	movne	r2, #0
 80071fe:	bf08      	it	eq
 8007200:	2201      	moveq	r2, #1
 8007202:	1e61      	subs	r1, r4, #1
 8007204:	f104 05ff 	add.w	r5, r4, #255	; 0xff
 8007208:	f801 2f01 	strb.w	r2, [r1, #1]!
 800720c:	42a9      	cmp	r1, r5
 800720e:	d1fb      	bne.n	8007208 <__sccl+0x1c>
 8007210:	b90b      	cbnz	r3, 8007216 <__sccl+0x2a>
 8007212:	3801      	subs	r0, #1
 8007214:	bd70      	pop	{r4, r5, r6, pc}
 8007216:	f082 0101 	eor.w	r1, r2, #1
 800721a:	54e1      	strb	r1, [r4, r3]
 800721c:	1c42      	adds	r2, r0, #1
 800721e:	f812 5c01 	ldrb.w	r5, [r2, #-1]
 8007222:	2d2d      	cmp	r5, #45	; 0x2d
 8007224:	f102 36ff 	add.w	r6, r2, #4294967295
 8007228:	4610      	mov	r0, r2
 800722a:	d006      	beq.n	800723a <__sccl+0x4e>
 800722c:	2d5d      	cmp	r5, #93	; 0x5d
 800722e:	d0f1      	beq.n	8007214 <__sccl+0x28>
 8007230:	b90d      	cbnz	r5, 8007236 <__sccl+0x4a>
 8007232:	4630      	mov	r0, r6
 8007234:	e7ee      	b.n	8007214 <__sccl+0x28>
 8007236:	462b      	mov	r3, r5
 8007238:	e7ef      	b.n	800721a <__sccl+0x2e>
 800723a:	7816      	ldrb	r6, [r2, #0]
 800723c:	2e5d      	cmp	r6, #93	; 0x5d
 800723e:	d0fa      	beq.n	8007236 <__sccl+0x4a>
 8007240:	42b3      	cmp	r3, r6
 8007242:	dcf8      	bgt.n	8007236 <__sccl+0x4a>
 8007244:	4618      	mov	r0, r3
 8007246:	3001      	adds	r0, #1
 8007248:	4286      	cmp	r6, r0
 800724a:	5421      	strb	r1, [r4, r0]
 800724c:	dcfb      	bgt.n	8007246 <__sccl+0x5a>
 800724e:	43d8      	mvns	r0, r3
 8007250:	4430      	add	r0, r6
 8007252:	1c5d      	adds	r5, r3, #1
 8007254:	42b3      	cmp	r3, r6
 8007256:	bfa8      	it	ge
 8007258:	2000      	movge	r0, #0
 800725a:	182b      	adds	r3, r5, r0
 800725c:	3202      	adds	r2, #2
 800725e:	e7de      	b.n	800721e <__sccl+0x32>

08007260 <strncmp>:
 8007260:	b510      	push	{r4, lr}
 8007262:	b16a      	cbz	r2, 8007280 <strncmp+0x20>
 8007264:	3901      	subs	r1, #1
 8007266:	1884      	adds	r4, r0, r2
 8007268:	f810 3b01 	ldrb.w	r3, [r0], #1
 800726c:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8007270:	4293      	cmp	r3, r2
 8007272:	d103      	bne.n	800727c <strncmp+0x1c>
 8007274:	42a0      	cmp	r0, r4
 8007276:	d001      	beq.n	800727c <strncmp+0x1c>
 8007278:	2b00      	cmp	r3, #0
 800727a:	d1f5      	bne.n	8007268 <strncmp+0x8>
 800727c:	1a98      	subs	r0, r3, r2
 800727e:	bd10      	pop	{r4, pc}
 8007280:	4610      	mov	r0, r2
 8007282:	e7fc      	b.n	800727e <strncmp+0x1e>

08007284 <_strtoul_l.isra.0>:
 8007284:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007288:	4e3b      	ldr	r6, [pc, #236]	; (8007378 <_strtoul_l.isra.0+0xf4>)
 800728a:	4686      	mov	lr, r0
 800728c:	468c      	mov	ip, r1
 800728e:	4660      	mov	r0, ip
 8007290:	f81c 4b01 	ldrb.w	r4, [ip], #1
 8007294:	5da5      	ldrb	r5, [r4, r6]
 8007296:	f015 0508 	ands.w	r5, r5, #8
 800729a:	d1f8      	bne.n	800728e <_strtoul_l.isra.0+0xa>
 800729c:	2c2d      	cmp	r4, #45	; 0x2d
 800729e:	d134      	bne.n	800730a <_strtoul_l.isra.0+0x86>
 80072a0:	f89c 4000 	ldrb.w	r4, [ip]
 80072a4:	f04f 0801 	mov.w	r8, #1
 80072a8:	f100 0c02 	add.w	ip, r0, #2
 80072ac:	2b00      	cmp	r3, #0
 80072ae:	d05e      	beq.n	800736e <_strtoul_l.isra.0+0xea>
 80072b0:	2b10      	cmp	r3, #16
 80072b2:	d10c      	bne.n	80072ce <_strtoul_l.isra.0+0x4a>
 80072b4:	2c30      	cmp	r4, #48	; 0x30
 80072b6:	d10a      	bne.n	80072ce <_strtoul_l.isra.0+0x4a>
 80072b8:	f89c 0000 	ldrb.w	r0, [ip]
 80072bc:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 80072c0:	2858      	cmp	r0, #88	; 0x58
 80072c2:	d14f      	bne.n	8007364 <_strtoul_l.isra.0+0xe0>
 80072c4:	f89c 4001 	ldrb.w	r4, [ip, #1]
 80072c8:	2310      	movs	r3, #16
 80072ca:	f10c 0c02 	add.w	ip, ip, #2
 80072ce:	f04f 37ff 	mov.w	r7, #4294967295
 80072d2:	2500      	movs	r5, #0
 80072d4:	fbb7 f7f3 	udiv	r7, r7, r3
 80072d8:	fb03 f907 	mul.w	r9, r3, r7
 80072dc:	ea6f 0909 	mvn.w	r9, r9
 80072e0:	4628      	mov	r0, r5
 80072e2:	f1a4 0630 	sub.w	r6, r4, #48	; 0x30
 80072e6:	2e09      	cmp	r6, #9
 80072e8:	d818      	bhi.n	800731c <_strtoul_l.isra.0+0x98>
 80072ea:	4634      	mov	r4, r6
 80072ec:	42a3      	cmp	r3, r4
 80072ee:	dd24      	ble.n	800733a <_strtoul_l.isra.0+0xb6>
 80072f0:	2d00      	cmp	r5, #0
 80072f2:	db1f      	blt.n	8007334 <_strtoul_l.isra.0+0xb0>
 80072f4:	4287      	cmp	r7, r0
 80072f6:	d31d      	bcc.n	8007334 <_strtoul_l.isra.0+0xb0>
 80072f8:	d101      	bne.n	80072fe <_strtoul_l.isra.0+0x7a>
 80072fa:	45a1      	cmp	r9, r4
 80072fc:	db1a      	blt.n	8007334 <_strtoul_l.isra.0+0xb0>
 80072fe:	fb00 4003 	mla	r0, r0, r3, r4
 8007302:	2501      	movs	r5, #1
 8007304:	f81c 4b01 	ldrb.w	r4, [ip], #1
 8007308:	e7eb      	b.n	80072e2 <_strtoul_l.isra.0+0x5e>
 800730a:	2c2b      	cmp	r4, #43	; 0x2b
 800730c:	bf08      	it	eq
 800730e:	f89c 4000 	ldrbeq.w	r4, [ip]
 8007312:	46a8      	mov	r8, r5
 8007314:	bf08      	it	eq
 8007316:	f100 0c02 	addeq.w	ip, r0, #2
 800731a:	e7c7      	b.n	80072ac <_strtoul_l.isra.0+0x28>
 800731c:	f1a4 0641 	sub.w	r6, r4, #65	; 0x41
 8007320:	2e19      	cmp	r6, #25
 8007322:	d801      	bhi.n	8007328 <_strtoul_l.isra.0+0xa4>
 8007324:	3c37      	subs	r4, #55	; 0x37
 8007326:	e7e1      	b.n	80072ec <_strtoul_l.isra.0+0x68>
 8007328:	f1a4 0661 	sub.w	r6, r4, #97	; 0x61
 800732c:	2e19      	cmp	r6, #25
 800732e:	d804      	bhi.n	800733a <_strtoul_l.isra.0+0xb6>
 8007330:	3c57      	subs	r4, #87	; 0x57
 8007332:	e7db      	b.n	80072ec <_strtoul_l.isra.0+0x68>
 8007334:	f04f 35ff 	mov.w	r5, #4294967295
 8007338:	e7e4      	b.n	8007304 <_strtoul_l.isra.0+0x80>
 800733a:	2d00      	cmp	r5, #0
 800733c:	da07      	bge.n	800734e <_strtoul_l.isra.0+0xca>
 800733e:	2322      	movs	r3, #34	; 0x22
 8007340:	f8ce 3000 	str.w	r3, [lr]
 8007344:	f04f 30ff 	mov.w	r0, #4294967295
 8007348:	b942      	cbnz	r2, 800735c <_strtoul_l.isra.0+0xd8>
 800734a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800734e:	f1b8 0f00 	cmp.w	r8, #0
 8007352:	d000      	beq.n	8007356 <_strtoul_l.isra.0+0xd2>
 8007354:	4240      	negs	r0, r0
 8007356:	2a00      	cmp	r2, #0
 8007358:	d0f7      	beq.n	800734a <_strtoul_l.isra.0+0xc6>
 800735a:	b10d      	cbz	r5, 8007360 <_strtoul_l.isra.0+0xdc>
 800735c:	f10c 31ff 	add.w	r1, ip, #4294967295
 8007360:	6011      	str	r1, [r2, #0]
 8007362:	e7f2      	b.n	800734a <_strtoul_l.isra.0+0xc6>
 8007364:	2430      	movs	r4, #48	; 0x30
 8007366:	2b00      	cmp	r3, #0
 8007368:	d1b1      	bne.n	80072ce <_strtoul_l.isra.0+0x4a>
 800736a:	2308      	movs	r3, #8
 800736c:	e7af      	b.n	80072ce <_strtoul_l.isra.0+0x4a>
 800736e:	2c30      	cmp	r4, #48	; 0x30
 8007370:	d0a2      	beq.n	80072b8 <_strtoul_l.isra.0+0x34>
 8007372:	230a      	movs	r3, #10
 8007374:	e7ab      	b.n	80072ce <_strtoul_l.isra.0+0x4a>
 8007376:	bf00      	nop
 8007378:	08007e0d 	.word	0x08007e0d

0800737c <_strtoul_r>:
 800737c:	f7ff bf82 	b.w	8007284 <_strtoul_l.isra.0>

08007380 <__submore>:
 8007380:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007384:	460c      	mov	r4, r1
 8007386:	6b49      	ldr	r1, [r1, #52]	; 0x34
 8007388:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800738c:	4299      	cmp	r1, r3
 800738e:	d11d      	bne.n	80073cc <__submore+0x4c>
 8007390:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8007394:	f7fa ff5c 	bl	8002250 <_malloc_r>
 8007398:	b918      	cbnz	r0, 80073a2 <__submore+0x22>
 800739a:	f04f 30ff 	mov.w	r0, #4294967295
 800739e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80073a2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80073a6:	63a3      	str	r3, [r4, #56]	; 0x38
 80073a8:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 80073ac:	6360      	str	r0, [r4, #52]	; 0x34
 80073ae:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
 80073b2:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80073b6:	f880 33fe 	strb.w	r3, [r0, #1022]	; 0x3fe
 80073ba:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80073be:	f880 33fd 	strb.w	r3, [r0, #1021]	; 0x3fd
 80073c2:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
 80073c6:	6020      	str	r0, [r4, #0]
 80073c8:	2000      	movs	r0, #0
 80073ca:	e7e8      	b.n	800739e <__submore+0x1e>
 80073cc:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 80073ce:	0077      	lsls	r7, r6, #1
 80073d0:	463a      	mov	r2, r7
 80073d2:	f000 f85f 	bl	8007494 <_realloc_r>
 80073d6:	4605      	mov	r5, r0
 80073d8:	2800      	cmp	r0, #0
 80073da:	d0de      	beq.n	800739a <__submore+0x1a>
 80073dc:	eb00 0806 	add.w	r8, r0, r6
 80073e0:	4601      	mov	r1, r0
 80073e2:	4632      	mov	r2, r6
 80073e4:	4640      	mov	r0, r8
 80073e6:	f7fa ff1c 	bl	8002222 <memcpy>
 80073ea:	e9c4 570d 	strd	r5, r7, [r4, #52]	; 0x34
 80073ee:	f8c4 8000 	str.w	r8, [r4]
 80073f2:	e7e9      	b.n	80073c8 <__submore+0x48>

080073f4 <__ascii_wctomb>:
 80073f4:	4603      	mov	r3, r0
 80073f6:	4608      	mov	r0, r1
 80073f8:	b141      	cbz	r1, 800740c <__ascii_wctomb+0x18>
 80073fa:	2aff      	cmp	r2, #255	; 0xff
 80073fc:	d904      	bls.n	8007408 <__ascii_wctomb+0x14>
 80073fe:	228a      	movs	r2, #138	; 0x8a
 8007400:	601a      	str	r2, [r3, #0]
 8007402:	f04f 30ff 	mov.w	r0, #4294967295
 8007406:	4770      	bx	lr
 8007408:	700a      	strb	r2, [r1, #0]
 800740a:	2001      	movs	r0, #1
 800740c:	4770      	bx	lr

0800740e <abort>:
 800740e:	b508      	push	{r3, lr}
 8007410:	2006      	movs	r0, #6
 8007412:	f000 f88d 	bl	8007530 <raise>
 8007416:	2001      	movs	r0, #1
 8007418:	f7fa fbcd 	bl	8001bb6 <_exit>

0800741c <_fstat_r>:
 800741c:	b538      	push	{r3, r4, r5, lr}
 800741e:	4d07      	ldr	r5, [pc, #28]	; (800743c <_fstat_r+0x20>)
 8007420:	2300      	movs	r3, #0
 8007422:	4604      	mov	r4, r0
 8007424:	4608      	mov	r0, r1
 8007426:	4611      	mov	r1, r2
 8007428:	602b      	str	r3, [r5, #0]
 800742a:	f7fa fbd9 	bl	8001be0 <_fstat>
 800742e:	1c43      	adds	r3, r0, #1
 8007430:	d102      	bne.n	8007438 <_fstat_r+0x1c>
 8007432:	682b      	ldr	r3, [r5, #0]
 8007434:	b103      	cbz	r3, 8007438 <_fstat_r+0x1c>
 8007436:	6023      	str	r3, [r4, #0]
 8007438:	bd38      	pop	{r3, r4, r5, pc}
 800743a:	bf00      	nop
 800743c:	20000d3c 	.word	0x20000d3c

08007440 <_isatty_r>:
 8007440:	b538      	push	{r3, r4, r5, lr}
 8007442:	4d06      	ldr	r5, [pc, #24]	; (800745c <_isatty_r+0x1c>)
 8007444:	2300      	movs	r3, #0
 8007446:	4604      	mov	r4, r0
 8007448:	4608      	mov	r0, r1
 800744a:	602b      	str	r3, [r5, #0]
 800744c:	f7fa fbd7 	bl	8001bfe <_isatty>
 8007450:	1c43      	adds	r3, r0, #1
 8007452:	d102      	bne.n	800745a <_isatty_r+0x1a>
 8007454:	682b      	ldr	r3, [r5, #0]
 8007456:	b103      	cbz	r3, 800745a <_isatty_r+0x1a>
 8007458:	6023      	str	r3, [r4, #0]
 800745a:	bd38      	pop	{r3, r4, r5, pc}
 800745c:	20000d3c 	.word	0x20000d3c

08007460 <memmove>:
 8007460:	4288      	cmp	r0, r1
 8007462:	b510      	push	{r4, lr}
 8007464:	eb01 0402 	add.w	r4, r1, r2
 8007468:	d902      	bls.n	8007470 <memmove+0x10>
 800746a:	4284      	cmp	r4, r0
 800746c:	4623      	mov	r3, r4
 800746e:	d807      	bhi.n	8007480 <memmove+0x20>
 8007470:	1e43      	subs	r3, r0, #1
 8007472:	42a1      	cmp	r1, r4
 8007474:	d008      	beq.n	8007488 <memmove+0x28>
 8007476:	f811 2b01 	ldrb.w	r2, [r1], #1
 800747a:	f803 2f01 	strb.w	r2, [r3, #1]!
 800747e:	e7f8      	b.n	8007472 <memmove+0x12>
 8007480:	4402      	add	r2, r0
 8007482:	4601      	mov	r1, r0
 8007484:	428a      	cmp	r2, r1
 8007486:	d100      	bne.n	800748a <memmove+0x2a>
 8007488:	bd10      	pop	{r4, pc}
 800748a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800748e:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8007492:	e7f7      	b.n	8007484 <memmove+0x24>

08007494 <_realloc_r>:
 8007494:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007496:	4607      	mov	r7, r0
 8007498:	4614      	mov	r4, r2
 800749a:	460e      	mov	r6, r1
 800749c:	b921      	cbnz	r1, 80074a8 <_realloc_r+0x14>
 800749e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80074a2:	4611      	mov	r1, r2
 80074a4:	f7fa bed4 	b.w	8002250 <_malloc_r>
 80074a8:	b922      	cbnz	r2, 80074b4 <_realloc_r+0x20>
 80074aa:	f7ff f867 	bl	800657c <_free_r>
 80074ae:	4625      	mov	r5, r4
 80074b0:	4628      	mov	r0, r5
 80074b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80074b4:	f000 f858 	bl	8007568 <_malloc_usable_size_r>
 80074b8:	42a0      	cmp	r0, r4
 80074ba:	d20f      	bcs.n	80074dc <_realloc_r+0x48>
 80074bc:	4621      	mov	r1, r4
 80074be:	4638      	mov	r0, r7
 80074c0:	f7fa fec6 	bl	8002250 <_malloc_r>
 80074c4:	4605      	mov	r5, r0
 80074c6:	2800      	cmp	r0, #0
 80074c8:	d0f2      	beq.n	80074b0 <_realloc_r+0x1c>
 80074ca:	4631      	mov	r1, r6
 80074cc:	4622      	mov	r2, r4
 80074ce:	f7fa fea8 	bl	8002222 <memcpy>
 80074d2:	4631      	mov	r1, r6
 80074d4:	4638      	mov	r0, r7
 80074d6:	f7ff f851 	bl	800657c <_free_r>
 80074da:	e7e9      	b.n	80074b0 <_realloc_r+0x1c>
 80074dc:	4635      	mov	r5, r6
 80074de:	e7e7      	b.n	80074b0 <_realloc_r+0x1c>

080074e0 <_raise_r>:
 80074e0:	291f      	cmp	r1, #31
 80074e2:	b538      	push	{r3, r4, r5, lr}
 80074e4:	4604      	mov	r4, r0
 80074e6:	460d      	mov	r5, r1
 80074e8:	d904      	bls.n	80074f4 <_raise_r+0x14>
 80074ea:	2316      	movs	r3, #22
 80074ec:	6003      	str	r3, [r0, #0]
 80074ee:	f04f 30ff 	mov.w	r0, #4294967295
 80074f2:	bd38      	pop	{r3, r4, r5, pc}
 80074f4:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80074f6:	b112      	cbz	r2, 80074fe <_raise_r+0x1e>
 80074f8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80074fc:	b94b      	cbnz	r3, 8007512 <_raise_r+0x32>
 80074fe:	4620      	mov	r0, r4
 8007500:	f000 f830 	bl	8007564 <_getpid_r>
 8007504:	462a      	mov	r2, r5
 8007506:	4601      	mov	r1, r0
 8007508:	4620      	mov	r0, r4
 800750a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800750e:	f000 b817 	b.w	8007540 <_kill_r>
 8007512:	2b01      	cmp	r3, #1
 8007514:	d00a      	beq.n	800752c <_raise_r+0x4c>
 8007516:	1c59      	adds	r1, r3, #1
 8007518:	d103      	bne.n	8007522 <_raise_r+0x42>
 800751a:	2316      	movs	r3, #22
 800751c:	6003      	str	r3, [r0, #0]
 800751e:	2001      	movs	r0, #1
 8007520:	e7e7      	b.n	80074f2 <_raise_r+0x12>
 8007522:	2400      	movs	r4, #0
 8007524:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8007528:	4628      	mov	r0, r5
 800752a:	4798      	blx	r3
 800752c:	2000      	movs	r0, #0
 800752e:	e7e0      	b.n	80074f2 <_raise_r+0x12>

08007530 <raise>:
 8007530:	4b02      	ldr	r3, [pc, #8]	; (800753c <raise+0xc>)
 8007532:	4601      	mov	r1, r0
 8007534:	6818      	ldr	r0, [r3, #0]
 8007536:	f7ff bfd3 	b.w	80074e0 <_raise_r>
 800753a:	bf00      	nop
 800753c:	20000b10 	.word	0x20000b10

08007540 <_kill_r>:
 8007540:	b538      	push	{r3, r4, r5, lr}
 8007542:	4d07      	ldr	r5, [pc, #28]	; (8007560 <_kill_r+0x20>)
 8007544:	2300      	movs	r3, #0
 8007546:	4604      	mov	r4, r0
 8007548:	4608      	mov	r0, r1
 800754a:	4611      	mov	r1, r2
 800754c:	602b      	str	r3, [r5, #0]
 800754e:	f7fa fb22 	bl	8001b96 <_kill>
 8007552:	1c43      	adds	r3, r0, #1
 8007554:	d102      	bne.n	800755c <_kill_r+0x1c>
 8007556:	682b      	ldr	r3, [r5, #0]
 8007558:	b103      	cbz	r3, 800755c <_kill_r+0x1c>
 800755a:	6023      	str	r3, [r4, #0]
 800755c:	bd38      	pop	{r3, r4, r5, pc}
 800755e:	bf00      	nop
 8007560:	20000d3c 	.word	0x20000d3c

08007564 <_getpid_r>:
 8007564:	f7fa bb10 	b.w	8001b88 <_getpid>

08007568 <_malloc_usable_size_r>:
 8007568:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800756c:	1f18      	subs	r0, r3, #4
 800756e:	2b00      	cmp	r3, #0
 8007570:	bfbc      	itt	lt
 8007572:	580b      	ldrlt	r3, [r1, r0]
 8007574:	18c0      	addlt	r0, r0, r3
 8007576:	4770      	bx	lr

08007578 <_init>:
 8007578:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800757a:	bf00      	nop
 800757c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800757e:	bc08      	pop	{r3}
 8007580:	469e      	mov	lr, r3
 8007582:	4770      	bx	lr

08007584 <_fini>:
 8007584:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007586:	bf00      	nop
 8007588:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800758a:	bc08      	pop	{r3}
 800758c:	469e      	mov	lr, r3
 800758e:	4770      	bx	lr
