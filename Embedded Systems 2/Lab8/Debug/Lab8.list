
Lab8.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000095b4  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000010d0  08009788  08009788  00019788  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800a858  0800a858  00020ce8  2**0
                  CONTENTS
  4 .ARM          00000000  0800a858  0800a858  00020ce8  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800a858  0800a858  00020ce8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800a858  0800a858  0001a858  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800a85c  0800a85c  0001a85c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000ce8  20000000  0800a860  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000068  20000ce8  0800b548  00020ce8  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000d50  0800b548  00020d50  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00020ce8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00006b83  00000000  00000000  00020d12  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000012db  00000000  00000000  00027895  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000002a0  00000000  00000000  00028b70  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000208  00000000  00000000  00028e10  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00004515  00000000  00000000  00029018  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00003f95  00000000  00000000  0002d52d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000bb89  00000000  00000000  000314c2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0003d04b  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000026e4  00000000  00000000  0003d0a0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000ce8 	.word	0x20000ce8
 80001ec:	00000000 	.word	0x00000000
 80001f0:	0800976c 	.word	0x0800976c

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000cec 	.word	0x20000cec
 800020c:	0800976c 	.word	0x0800976c

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <strcmp>:
 80002b0:	f810 2b01 	ldrb.w	r2, [r0], #1
 80002b4:	f811 3b01 	ldrb.w	r3, [r1], #1
 80002b8:	2a01      	cmp	r2, #1
 80002ba:	bf28      	it	cs
 80002bc:	429a      	cmpcs	r2, r3
 80002be:	d0f7      	beq.n	80002b0 <strcmp>
 80002c0:	1ad0      	subs	r0, r2, r3
 80002c2:	4770      	bx	lr

080002c4 <strlen>:
 80002c4:	4603      	mov	r3, r0
 80002c6:	f813 2b01 	ldrb.w	r2, [r3], #1
 80002ca:	2a00      	cmp	r2, #0
 80002cc:	d1fb      	bne.n	80002c6 <strlen+0x2>
 80002ce:	1a18      	subs	r0, r3, r0
 80002d0:	3801      	subs	r0, #1
 80002d2:	4770      	bx	lr

080002d4 <__aeabi_drsub>:
 80002d4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002d8:	e002      	b.n	80002e0 <__adddf3>
 80002da:	bf00      	nop

080002dc <__aeabi_dsub>:
 80002dc:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002e0 <__adddf3>:
 80002e0:	b530      	push	{r4, r5, lr}
 80002e2:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002e6:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002ea:	ea94 0f05 	teq	r4, r5
 80002ee:	bf08      	it	eq
 80002f0:	ea90 0f02 	teqeq	r0, r2
 80002f4:	bf1f      	itttt	ne
 80002f6:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002fa:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002fe:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000302:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000306:	f000 80e2 	beq.w	80004ce <__adddf3+0x1ee>
 800030a:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800030e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000312:	bfb8      	it	lt
 8000314:	426d      	neglt	r5, r5
 8000316:	dd0c      	ble.n	8000332 <__adddf3+0x52>
 8000318:	442c      	add	r4, r5
 800031a:	ea80 0202 	eor.w	r2, r0, r2
 800031e:	ea81 0303 	eor.w	r3, r1, r3
 8000322:	ea82 0000 	eor.w	r0, r2, r0
 8000326:	ea83 0101 	eor.w	r1, r3, r1
 800032a:	ea80 0202 	eor.w	r2, r0, r2
 800032e:	ea81 0303 	eor.w	r3, r1, r3
 8000332:	2d36      	cmp	r5, #54	; 0x36
 8000334:	bf88      	it	hi
 8000336:	bd30      	pophi	{r4, r5, pc}
 8000338:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800033c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000340:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000344:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x70>
 800034a:	4240      	negs	r0, r0
 800034c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000350:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000354:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000358:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800035c:	d002      	beq.n	8000364 <__adddf3+0x84>
 800035e:	4252      	negs	r2, r2
 8000360:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000364:	ea94 0f05 	teq	r4, r5
 8000368:	f000 80a7 	beq.w	80004ba <__adddf3+0x1da>
 800036c:	f1a4 0401 	sub.w	r4, r4, #1
 8000370:	f1d5 0e20 	rsbs	lr, r5, #32
 8000374:	db0d      	blt.n	8000392 <__adddf3+0xb2>
 8000376:	fa02 fc0e 	lsl.w	ip, r2, lr
 800037a:	fa22 f205 	lsr.w	r2, r2, r5
 800037e:	1880      	adds	r0, r0, r2
 8000380:	f141 0100 	adc.w	r1, r1, #0
 8000384:	fa03 f20e 	lsl.w	r2, r3, lr
 8000388:	1880      	adds	r0, r0, r2
 800038a:	fa43 f305 	asr.w	r3, r3, r5
 800038e:	4159      	adcs	r1, r3
 8000390:	e00e      	b.n	80003b0 <__adddf3+0xd0>
 8000392:	f1a5 0520 	sub.w	r5, r5, #32
 8000396:	f10e 0e20 	add.w	lr, lr, #32
 800039a:	2a01      	cmp	r2, #1
 800039c:	fa03 fc0e 	lsl.w	ip, r3, lr
 80003a0:	bf28      	it	cs
 80003a2:	f04c 0c02 	orrcs.w	ip, ip, #2
 80003a6:	fa43 f305 	asr.w	r3, r3, r5
 80003aa:	18c0      	adds	r0, r0, r3
 80003ac:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80003b0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003b4:	d507      	bpl.n	80003c6 <__adddf3+0xe6>
 80003b6:	f04f 0e00 	mov.w	lr, #0
 80003ba:	f1dc 0c00 	rsbs	ip, ip, #0
 80003be:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003c2:	eb6e 0101 	sbc.w	r1, lr, r1
 80003c6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003ca:	d31b      	bcc.n	8000404 <__adddf3+0x124>
 80003cc:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003d0:	d30c      	bcc.n	80003ec <__adddf3+0x10c>
 80003d2:	0849      	lsrs	r1, r1, #1
 80003d4:	ea5f 0030 	movs.w	r0, r0, rrx
 80003d8:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003dc:	f104 0401 	add.w	r4, r4, #1
 80003e0:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003e4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003e8:	f080 809a 	bcs.w	8000520 <__adddf3+0x240>
 80003ec:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003f0:	bf08      	it	eq
 80003f2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003f6:	f150 0000 	adcs.w	r0, r0, #0
 80003fa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003fe:	ea41 0105 	orr.w	r1, r1, r5
 8000402:	bd30      	pop	{r4, r5, pc}
 8000404:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000408:	4140      	adcs	r0, r0
 800040a:	eb41 0101 	adc.w	r1, r1, r1
 800040e:	3c01      	subs	r4, #1
 8000410:	bf28      	it	cs
 8000412:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000416:	d2e9      	bcs.n	80003ec <__adddf3+0x10c>
 8000418:	f091 0f00 	teq	r1, #0
 800041c:	bf04      	itt	eq
 800041e:	4601      	moveq	r1, r0
 8000420:	2000      	moveq	r0, #0
 8000422:	fab1 f381 	clz	r3, r1
 8000426:	bf08      	it	eq
 8000428:	3320      	addeq	r3, #32
 800042a:	f1a3 030b 	sub.w	r3, r3, #11
 800042e:	f1b3 0220 	subs.w	r2, r3, #32
 8000432:	da0c      	bge.n	800044e <__adddf3+0x16e>
 8000434:	320c      	adds	r2, #12
 8000436:	dd08      	ble.n	800044a <__adddf3+0x16a>
 8000438:	f102 0c14 	add.w	ip, r2, #20
 800043c:	f1c2 020c 	rsb	r2, r2, #12
 8000440:	fa01 f00c 	lsl.w	r0, r1, ip
 8000444:	fa21 f102 	lsr.w	r1, r1, r2
 8000448:	e00c      	b.n	8000464 <__adddf3+0x184>
 800044a:	f102 0214 	add.w	r2, r2, #20
 800044e:	bfd8      	it	le
 8000450:	f1c2 0c20 	rsble	ip, r2, #32
 8000454:	fa01 f102 	lsl.w	r1, r1, r2
 8000458:	fa20 fc0c 	lsr.w	ip, r0, ip
 800045c:	bfdc      	itt	le
 800045e:	ea41 010c 	orrle.w	r1, r1, ip
 8000462:	4090      	lslle	r0, r2
 8000464:	1ae4      	subs	r4, r4, r3
 8000466:	bfa2      	ittt	ge
 8000468:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800046c:	4329      	orrge	r1, r5
 800046e:	bd30      	popge	{r4, r5, pc}
 8000470:	ea6f 0404 	mvn.w	r4, r4
 8000474:	3c1f      	subs	r4, #31
 8000476:	da1c      	bge.n	80004b2 <__adddf3+0x1d2>
 8000478:	340c      	adds	r4, #12
 800047a:	dc0e      	bgt.n	800049a <__adddf3+0x1ba>
 800047c:	f104 0414 	add.w	r4, r4, #20
 8000480:	f1c4 0220 	rsb	r2, r4, #32
 8000484:	fa20 f004 	lsr.w	r0, r0, r4
 8000488:	fa01 f302 	lsl.w	r3, r1, r2
 800048c:	ea40 0003 	orr.w	r0, r0, r3
 8000490:	fa21 f304 	lsr.w	r3, r1, r4
 8000494:	ea45 0103 	orr.w	r1, r5, r3
 8000498:	bd30      	pop	{r4, r5, pc}
 800049a:	f1c4 040c 	rsb	r4, r4, #12
 800049e:	f1c4 0220 	rsb	r2, r4, #32
 80004a2:	fa20 f002 	lsr.w	r0, r0, r2
 80004a6:	fa01 f304 	lsl.w	r3, r1, r4
 80004aa:	ea40 0003 	orr.w	r0, r0, r3
 80004ae:	4629      	mov	r1, r5
 80004b0:	bd30      	pop	{r4, r5, pc}
 80004b2:	fa21 f004 	lsr.w	r0, r1, r4
 80004b6:	4629      	mov	r1, r5
 80004b8:	bd30      	pop	{r4, r5, pc}
 80004ba:	f094 0f00 	teq	r4, #0
 80004be:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004c2:	bf06      	itte	eq
 80004c4:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004c8:	3401      	addeq	r4, #1
 80004ca:	3d01      	subne	r5, #1
 80004cc:	e74e      	b.n	800036c <__adddf3+0x8c>
 80004ce:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004d2:	bf18      	it	ne
 80004d4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004d8:	d029      	beq.n	800052e <__adddf3+0x24e>
 80004da:	ea94 0f05 	teq	r4, r5
 80004de:	bf08      	it	eq
 80004e0:	ea90 0f02 	teqeq	r0, r2
 80004e4:	d005      	beq.n	80004f2 <__adddf3+0x212>
 80004e6:	ea54 0c00 	orrs.w	ip, r4, r0
 80004ea:	bf04      	itt	eq
 80004ec:	4619      	moveq	r1, r3
 80004ee:	4610      	moveq	r0, r2
 80004f0:	bd30      	pop	{r4, r5, pc}
 80004f2:	ea91 0f03 	teq	r1, r3
 80004f6:	bf1e      	ittt	ne
 80004f8:	2100      	movne	r1, #0
 80004fa:	2000      	movne	r0, #0
 80004fc:	bd30      	popne	{r4, r5, pc}
 80004fe:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000502:	d105      	bne.n	8000510 <__adddf3+0x230>
 8000504:	0040      	lsls	r0, r0, #1
 8000506:	4149      	adcs	r1, r1
 8000508:	bf28      	it	cs
 800050a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800050e:	bd30      	pop	{r4, r5, pc}
 8000510:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000514:	bf3c      	itt	cc
 8000516:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800051a:	bd30      	popcc	{r4, r5, pc}
 800051c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000520:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000524:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000528:	f04f 0000 	mov.w	r0, #0
 800052c:	bd30      	pop	{r4, r5, pc}
 800052e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000532:	bf1a      	itte	ne
 8000534:	4619      	movne	r1, r3
 8000536:	4610      	movne	r0, r2
 8000538:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 800053c:	bf1c      	itt	ne
 800053e:	460b      	movne	r3, r1
 8000540:	4602      	movne	r2, r0
 8000542:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000546:	bf06      	itte	eq
 8000548:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800054c:	ea91 0f03 	teqeq	r1, r3
 8000550:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000554:	bd30      	pop	{r4, r5, pc}
 8000556:	bf00      	nop

08000558 <__aeabi_ui2d>:
 8000558:	f090 0f00 	teq	r0, #0
 800055c:	bf04      	itt	eq
 800055e:	2100      	moveq	r1, #0
 8000560:	4770      	bxeq	lr
 8000562:	b530      	push	{r4, r5, lr}
 8000564:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000568:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800056c:	f04f 0500 	mov.w	r5, #0
 8000570:	f04f 0100 	mov.w	r1, #0
 8000574:	e750      	b.n	8000418 <__adddf3+0x138>
 8000576:	bf00      	nop

08000578 <__aeabi_i2d>:
 8000578:	f090 0f00 	teq	r0, #0
 800057c:	bf04      	itt	eq
 800057e:	2100      	moveq	r1, #0
 8000580:	4770      	bxeq	lr
 8000582:	b530      	push	{r4, r5, lr}
 8000584:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000588:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800058c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000590:	bf48      	it	mi
 8000592:	4240      	negmi	r0, r0
 8000594:	f04f 0100 	mov.w	r1, #0
 8000598:	e73e      	b.n	8000418 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_f2d>:
 800059c:	0042      	lsls	r2, r0, #1
 800059e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80005a2:	ea4f 0131 	mov.w	r1, r1, rrx
 80005a6:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80005aa:	bf1f      	itttt	ne
 80005ac:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80005b0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005b4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005b8:	4770      	bxne	lr
 80005ba:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005be:	bf08      	it	eq
 80005c0:	4770      	bxeq	lr
 80005c2:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005c6:	bf04      	itt	eq
 80005c8:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005cc:	4770      	bxeq	lr
 80005ce:	b530      	push	{r4, r5, lr}
 80005d0:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005d4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005d8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005dc:	e71c      	b.n	8000418 <__adddf3+0x138>
 80005de:	bf00      	nop

080005e0 <__aeabi_ul2d>:
 80005e0:	ea50 0201 	orrs.w	r2, r0, r1
 80005e4:	bf08      	it	eq
 80005e6:	4770      	bxeq	lr
 80005e8:	b530      	push	{r4, r5, lr}
 80005ea:	f04f 0500 	mov.w	r5, #0
 80005ee:	e00a      	b.n	8000606 <__aeabi_l2d+0x16>

080005f0 <__aeabi_l2d>:
 80005f0:	ea50 0201 	orrs.w	r2, r0, r1
 80005f4:	bf08      	it	eq
 80005f6:	4770      	bxeq	lr
 80005f8:	b530      	push	{r4, r5, lr}
 80005fa:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005fe:	d502      	bpl.n	8000606 <__aeabi_l2d+0x16>
 8000600:	4240      	negs	r0, r0
 8000602:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000606:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800060a:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800060e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000612:	f43f aed8 	beq.w	80003c6 <__adddf3+0xe6>
 8000616:	f04f 0203 	mov.w	r2, #3
 800061a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800061e:	bf18      	it	ne
 8000620:	3203      	addne	r2, #3
 8000622:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000626:	bf18      	it	ne
 8000628:	3203      	addne	r2, #3
 800062a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800062e:	f1c2 0320 	rsb	r3, r2, #32
 8000632:	fa00 fc03 	lsl.w	ip, r0, r3
 8000636:	fa20 f002 	lsr.w	r0, r0, r2
 800063a:	fa01 fe03 	lsl.w	lr, r1, r3
 800063e:	ea40 000e 	orr.w	r0, r0, lr
 8000642:	fa21 f102 	lsr.w	r1, r1, r2
 8000646:	4414      	add	r4, r2
 8000648:	e6bd      	b.n	80003c6 <__adddf3+0xe6>
 800064a:	bf00      	nop

0800064c <__aeabi_dmul>:
 800064c:	b570      	push	{r4, r5, r6, lr}
 800064e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000652:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000656:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800065a:	bf1d      	ittte	ne
 800065c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000660:	ea94 0f0c 	teqne	r4, ip
 8000664:	ea95 0f0c 	teqne	r5, ip
 8000668:	f000 f8de 	bleq	8000828 <__aeabi_dmul+0x1dc>
 800066c:	442c      	add	r4, r5
 800066e:	ea81 0603 	eor.w	r6, r1, r3
 8000672:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000676:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800067a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800067e:	bf18      	it	ne
 8000680:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000684:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000688:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800068c:	d038      	beq.n	8000700 <__aeabi_dmul+0xb4>
 800068e:	fba0 ce02 	umull	ip, lr, r0, r2
 8000692:	f04f 0500 	mov.w	r5, #0
 8000696:	fbe1 e502 	umlal	lr, r5, r1, r2
 800069a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800069e:	fbe0 e503 	umlal	lr, r5, r0, r3
 80006a2:	f04f 0600 	mov.w	r6, #0
 80006a6:	fbe1 5603 	umlal	r5, r6, r1, r3
 80006aa:	f09c 0f00 	teq	ip, #0
 80006ae:	bf18      	it	ne
 80006b0:	f04e 0e01 	orrne.w	lr, lr, #1
 80006b4:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80006b8:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80006bc:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006c0:	d204      	bcs.n	80006cc <__aeabi_dmul+0x80>
 80006c2:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006c6:	416d      	adcs	r5, r5
 80006c8:	eb46 0606 	adc.w	r6, r6, r6
 80006cc:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006d0:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006d4:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006d8:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006dc:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006e0:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006e4:	bf88      	it	hi
 80006e6:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006ea:	d81e      	bhi.n	800072a <__aeabi_dmul+0xde>
 80006ec:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006f0:	bf08      	it	eq
 80006f2:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006f6:	f150 0000 	adcs.w	r0, r0, #0
 80006fa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006fe:	bd70      	pop	{r4, r5, r6, pc}
 8000700:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000704:	ea46 0101 	orr.w	r1, r6, r1
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	ea81 0103 	eor.w	r1, r1, r3
 8000710:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000714:	bfc2      	ittt	gt
 8000716:	ebd4 050c 	rsbsgt	r5, r4, ip
 800071a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800071e:	bd70      	popgt	{r4, r5, r6, pc}
 8000720:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000724:	f04f 0e00 	mov.w	lr, #0
 8000728:	3c01      	subs	r4, #1
 800072a:	f300 80ab 	bgt.w	8000884 <__aeabi_dmul+0x238>
 800072e:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000732:	bfde      	ittt	le
 8000734:	2000      	movle	r0, #0
 8000736:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800073a:	bd70      	pople	{r4, r5, r6, pc}
 800073c:	f1c4 0400 	rsb	r4, r4, #0
 8000740:	3c20      	subs	r4, #32
 8000742:	da35      	bge.n	80007b0 <__aeabi_dmul+0x164>
 8000744:	340c      	adds	r4, #12
 8000746:	dc1b      	bgt.n	8000780 <__aeabi_dmul+0x134>
 8000748:	f104 0414 	add.w	r4, r4, #20
 800074c:	f1c4 0520 	rsb	r5, r4, #32
 8000750:	fa00 f305 	lsl.w	r3, r0, r5
 8000754:	fa20 f004 	lsr.w	r0, r0, r4
 8000758:	fa01 f205 	lsl.w	r2, r1, r5
 800075c:	ea40 0002 	orr.w	r0, r0, r2
 8000760:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000764:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000768:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800076c:	fa21 f604 	lsr.w	r6, r1, r4
 8000770:	eb42 0106 	adc.w	r1, r2, r6
 8000774:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000778:	bf08      	it	eq
 800077a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800077e:	bd70      	pop	{r4, r5, r6, pc}
 8000780:	f1c4 040c 	rsb	r4, r4, #12
 8000784:	f1c4 0520 	rsb	r5, r4, #32
 8000788:	fa00 f304 	lsl.w	r3, r0, r4
 800078c:	fa20 f005 	lsr.w	r0, r0, r5
 8000790:	fa01 f204 	lsl.w	r2, r1, r4
 8000794:	ea40 0002 	orr.w	r0, r0, r2
 8000798:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800079c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80007a0:	f141 0100 	adc.w	r1, r1, #0
 80007a4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007a8:	bf08      	it	eq
 80007aa:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007ae:	bd70      	pop	{r4, r5, r6, pc}
 80007b0:	f1c4 0520 	rsb	r5, r4, #32
 80007b4:	fa00 f205 	lsl.w	r2, r0, r5
 80007b8:	ea4e 0e02 	orr.w	lr, lr, r2
 80007bc:	fa20 f304 	lsr.w	r3, r0, r4
 80007c0:	fa01 f205 	lsl.w	r2, r1, r5
 80007c4:	ea43 0302 	orr.w	r3, r3, r2
 80007c8:	fa21 f004 	lsr.w	r0, r1, r4
 80007cc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007d0:	fa21 f204 	lsr.w	r2, r1, r4
 80007d4:	ea20 0002 	bic.w	r0, r0, r2
 80007d8:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007dc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007e0:	bf08      	it	eq
 80007e2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007e6:	bd70      	pop	{r4, r5, r6, pc}
 80007e8:	f094 0f00 	teq	r4, #0
 80007ec:	d10f      	bne.n	800080e <__aeabi_dmul+0x1c2>
 80007ee:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007f2:	0040      	lsls	r0, r0, #1
 80007f4:	eb41 0101 	adc.w	r1, r1, r1
 80007f8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007fc:	bf08      	it	eq
 80007fe:	3c01      	subeq	r4, #1
 8000800:	d0f7      	beq.n	80007f2 <__aeabi_dmul+0x1a6>
 8000802:	ea41 0106 	orr.w	r1, r1, r6
 8000806:	f095 0f00 	teq	r5, #0
 800080a:	bf18      	it	ne
 800080c:	4770      	bxne	lr
 800080e:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000812:	0052      	lsls	r2, r2, #1
 8000814:	eb43 0303 	adc.w	r3, r3, r3
 8000818:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 800081c:	bf08      	it	eq
 800081e:	3d01      	subeq	r5, #1
 8000820:	d0f7      	beq.n	8000812 <__aeabi_dmul+0x1c6>
 8000822:	ea43 0306 	orr.w	r3, r3, r6
 8000826:	4770      	bx	lr
 8000828:	ea94 0f0c 	teq	r4, ip
 800082c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000830:	bf18      	it	ne
 8000832:	ea95 0f0c 	teqne	r5, ip
 8000836:	d00c      	beq.n	8000852 <__aeabi_dmul+0x206>
 8000838:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800083c:	bf18      	it	ne
 800083e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000842:	d1d1      	bne.n	80007e8 <__aeabi_dmul+0x19c>
 8000844:	ea81 0103 	eor.w	r1, r1, r3
 8000848:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000856:	bf06      	itte	eq
 8000858:	4610      	moveq	r0, r2
 800085a:	4619      	moveq	r1, r3
 800085c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000860:	d019      	beq.n	8000896 <__aeabi_dmul+0x24a>
 8000862:	ea94 0f0c 	teq	r4, ip
 8000866:	d102      	bne.n	800086e <__aeabi_dmul+0x222>
 8000868:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 800086c:	d113      	bne.n	8000896 <__aeabi_dmul+0x24a>
 800086e:	ea95 0f0c 	teq	r5, ip
 8000872:	d105      	bne.n	8000880 <__aeabi_dmul+0x234>
 8000874:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000878:	bf1c      	itt	ne
 800087a:	4610      	movne	r0, r2
 800087c:	4619      	movne	r1, r3
 800087e:	d10a      	bne.n	8000896 <__aeabi_dmul+0x24a>
 8000880:	ea81 0103 	eor.w	r1, r1, r3
 8000884:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000888:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800088c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000890:	f04f 0000 	mov.w	r0, #0
 8000894:	bd70      	pop	{r4, r5, r6, pc}
 8000896:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800089a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800089e:	bd70      	pop	{r4, r5, r6, pc}

080008a0 <__aeabi_ddiv>:
 80008a0:	b570      	push	{r4, r5, r6, lr}
 80008a2:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80008a6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80008aa:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80008ae:	bf1d      	ittte	ne
 80008b0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008b4:	ea94 0f0c 	teqne	r4, ip
 80008b8:	ea95 0f0c 	teqne	r5, ip
 80008bc:	f000 f8a7 	bleq	8000a0e <__aeabi_ddiv+0x16e>
 80008c0:	eba4 0405 	sub.w	r4, r4, r5
 80008c4:	ea81 0e03 	eor.w	lr, r1, r3
 80008c8:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008cc:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008d0:	f000 8088 	beq.w	80009e4 <__aeabi_ddiv+0x144>
 80008d4:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008d8:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008dc:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008e0:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008e4:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008e8:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008ec:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008f0:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008f4:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008f8:	429d      	cmp	r5, r3
 80008fa:	bf08      	it	eq
 80008fc:	4296      	cmpeq	r6, r2
 80008fe:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8000902:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000906:	d202      	bcs.n	800090e <__aeabi_ddiv+0x6e>
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	1ab6      	subs	r6, r6, r2
 8000910:	eb65 0503 	sbc.w	r5, r5, r3
 8000914:	085b      	lsrs	r3, r3, #1
 8000916:	ea4f 0232 	mov.w	r2, r2, rrx
 800091a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800091e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8000922:	ebb6 0e02 	subs.w	lr, r6, r2
 8000926:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092a:	bf22      	ittt	cs
 800092c:	1ab6      	subcs	r6, r6, r2
 800092e:	4675      	movcs	r5, lr
 8000930:	ea40 000c 	orrcs.w	r0, r0, ip
 8000934:	085b      	lsrs	r3, r3, #1
 8000936:	ea4f 0232 	mov.w	r2, r2, rrx
 800093a:	ebb6 0e02 	subs.w	lr, r6, r2
 800093e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000942:	bf22      	ittt	cs
 8000944:	1ab6      	subcs	r6, r6, r2
 8000946:	4675      	movcs	r5, lr
 8000948:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 800094c:	085b      	lsrs	r3, r3, #1
 800094e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000952:	ebb6 0e02 	subs.w	lr, r6, r2
 8000956:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095a:	bf22      	ittt	cs
 800095c:	1ab6      	subcs	r6, r6, r2
 800095e:	4675      	movcs	r5, lr
 8000960:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000964:	085b      	lsrs	r3, r3, #1
 8000966:	ea4f 0232 	mov.w	r2, r2, rrx
 800096a:	ebb6 0e02 	subs.w	lr, r6, r2
 800096e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000972:	bf22      	ittt	cs
 8000974:	1ab6      	subcs	r6, r6, r2
 8000976:	4675      	movcs	r5, lr
 8000978:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 800097c:	ea55 0e06 	orrs.w	lr, r5, r6
 8000980:	d018      	beq.n	80009b4 <__aeabi_ddiv+0x114>
 8000982:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000986:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800098a:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800098e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000992:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000996:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800099a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800099e:	d1c0      	bne.n	8000922 <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009a4:	d10b      	bne.n	80009be <__aeabi_ddiv+0x11e>
 80009a6:	ea41 0100 	orr.w	r1, r1, r0
 80009aa:	f04f 0000 	mov.w	r0, #0
 80009ae:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 80009b2:	e7b6      	b.n	8000922 <__aeabi_ddiv+0x82>
 80009b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009b8:	bf04      	itt	eq
 80009ba:	4301      	orreq	r1, r0
 80009bc:	2000      	moveq	r0, #0
 80009be:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009c2:	bf88      	it	hi
 80009c4:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009c8:	f63f aeaf 	bhi.w	800072a <__aeabi_dmul+0xde>
 80009cc:	ebb5 0c03 	subs.w	ip, r5, r3
 80009d0:	bf04      	itt	eq
 80009d2:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009d6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009da:	f150 0000 	adcs.w	r0, r0, #0
 80009de:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009e2:	bd70      	pop	{r4, r5, r6, pc}
 80009e4:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009e8:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009ec:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009f0:	bfc2      	ittt	gt
 80009f2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009f6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009fa:	bd70      	popgt	{r4, r5, r6, pc}
 80009fc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000a00:	f04f 0e00 	mov.w	lr, #0
 8000a04:	3c01      	subs	r4, #1
 8000a06:	e690      	b.n	800072a <__aeabi_dmul+0xde>
 8000a08:	ea45 0e06 	orr.w	lr, r5, r6
 8000a0c:	e68d      	b.n	800072a <__aeabi_dmul+0xde>
 8000a0e:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000a12:	ea94 0f0c 	teq	r4, ip
 8000a16:	bf08      	it	eq
 8000a18:	ea95 0f0c 	teqeq	r5, ip
 8000a1c:	f43f af3b 	beq.w	8000896 <__aeabi_dmul+0x24a>
 8000a20:	ea94 0f0c 	teq	r4, ip
 8000a24:	d10a      	bne.n	8000a3c <__aeabi_ddiv+0x19c>
 8000a26:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a2a:	f47f af34 	bne.w	8000896 <__aeabi_dmul+0x24a>
 8000a2e:	ea95 0f0c 	teq	r5, ip
 8000a32:	f47f af25 	bne.w	8000880 <__aeabi_dmul+0x234>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e72c      	b.n	8000896 <__aeabi_dmul+0x24a>
 8000a3c:	ea95 0f0c 	teq	r5, ip
 8000a40:	d106      	bne.n	8000a50 <__aeabi_ddiv+0x1b0>
 8000a42:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a46:	f43f aefd 	beq.w	8000844 <__aeabi_dmul+0x1f8>
 8000a4a:	4610      	mov	r0, r2
 8000a4c:	4619      	mov	r1, r3
 8000a4e:	e722      	b.n	8000896 <__aeabi_dmul+0x24a>
 8000a50:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a54:	bf18      	it	ne
 8000a56:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a5a:	f47f aec5 	bne.w	80007e8 <__aeabi_dmul+0x19c>
 8000a5e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a62:	f47f af0d 	bne.w	8000880 <__aeabi_dmul+0x234>
 8000a66:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a6a:	f47f aeeb 	bne.w	8000844 <__aeabi_dmul+0x1f8>
 8000a6e:	e712      	b.n	8000896 <__aeabi_dmul+0x24a>

08000a70 <__gedf2>:
 8000a70:	f04f 3cff 	mov.w	ip, #4294967295
 8000a74:	e006      	b.n	8000a84 <__cmpdf2+0x4>
 8000a76:	bf00      	nop

08000a78 <__ledf2>:
 8000a78:	f04f 0c01 	mov.w	ip, #1
 8000a7c:	e002      	b.n	8000a84 <__cmpdf2+0x4>
 8000a7e:	bf00      	nop

08000a80 <__cmpdf2>:
 8000a80:	f04f 0c01 	mov.w	ip, #1
 8000a84:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a88:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a8c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	bf18      	it	ne
 8000a96:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a9a:	d01b      	beq.n	8000ad4 <__cmpdf2+0x54>
 8000a9c:	b001      	add	sp, #4
 8000a9e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000aa2:	bf0c      	ite	eq
 8000aa4:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000aa8:	ea91 0f03 	teqne	r1, r3
 8000aac:	bf02      	ittt	eq
 8000aae:	ea90 0f02 	teqeq	r0, r2
 8000ab2:	2000      	moveq	r0, #0
 8000ab4:	4770      	bxeq	lr
 8000ab6:	f110 0f00 	cmn.w	r0, #0
 8000aba:	ea91 0f03 	teq	r1, r3
 8000abe:	bf58      	it	pl
 8000ac0:	4299      	cmppl	r1, r3
 8000ac2:	bf08      	it	eq
 8000ac4:	4290      	cmpeq	r0, r2
 8000ac6:	bf2c      	ite	cs
 8000ac8:	17d8      	asrcs	r0, r3, #31
 8000aca:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000ace:	f040 0001 	orr.w	r0, r0, #1
 8000ad2:	4770      	bx	lr
 8000ad4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ad8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000adc:	d102      	bne.n	8000ae4 <__cmpdf2+0x64>
 8000ade:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ae2:	d107      	bne.n	8000af4 <__cmpdf2+0x74>
 8000ae4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ae8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aec:	d1d6      	bne.n	8000a9c <__cmpdf2+0x1c>
 8000aee:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000af2:	d0d3      	beq.n	8000a9c <__cmpdf2+0x1c>
 8000af4:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000af8:	4770      	bx	lr
 8000afa:	bf00      	nop

08000afc <__aeabi_cdrcmple>:
 8000afc:	4684      	mov	ip, r0
 8000afe:	4610      	mov	r0, r2
 8000b00:	4662      	mov	r2, ip
 8000b02:	468c      	mov	ip, r1
 8000b04:	4619      	mov	r1, r3
 8000b06:	4663      	mov	r3, ip
 8000b08:	e000      	b.n	8000b0c <__aeabi_cdcmpeq>
 8000b0a:	bf00      	nop

08000b0c <__aeabi_cdcmpeq>:
 8000b0c:	b501      	push	{r0, lr}
 8000b0e:	f7ff ffb7 	bl	8000a80 <__cmpdf2>
 8000b12:	2800      	cmp	r0, #0
 8000b14:	bf48      	it	mi
 8000b16:	f110 0f00 	cmnmi.w	r0, #0
 8000b1a:	bd01      	pop	{r0, pc}

08000b1c <__aeabi_dcmpeq>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff fff4 	bl	8000b0c <__aeabi_cdcmpeq>
 8000b24:	bf0c      	ite	eq
 8000b26:	2001      	moveq	r0, #1
 8000b28:	2000      	movne	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmplt>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffea 	bl	8000b0c <__aeabi_cdcmpeq>
 8000b38:	bf34      	ite	cc
 8000b3a:	2001      	movcc	r0, #1
 8000b3c:	2000      	movcs	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmple>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffe0 	bl	8000b0c <__aeabi_cdcmpeq>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpge>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffce 	bl	8000afc <__aeabi_cdrcmple>
 8000b60:	bf94      	ite	ls
 8000b62:	2001      	movls	r0, #1
 8000b64:	2000      	movhi	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpgt>:
 8000b6c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b70:	f7ff ffc4 	bl	8000afc <__aeabi_cdrcmple>
 8000b74:	bf34      	ite	cc
 8000b76:	2001      	movcc	r0, #1
 8000b78:	2000      	movcs	r0, #0
 8000b7a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b7e:	bf00      	nop

08000b80 <__aeabi_dcmpun>:
 8000b80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b88:	d102      	bne.n	8000b90 <__aeabi_dcmpun+0x10>
 8000b8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b8e:	d10a      	bne.n	8000ba6 <__aeabi_dcmpun+0x26>
 8000b90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b98:	d102      	bne.n	8000ba0 <__aeabi_dcmpun+0x20>
 8000b9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b9e:	d102      	bne.n	8000ba6 <__aeabi_dcmpun+0x26>
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	f04f 0001 	mov.w	r0, #1
 8000baa:	4770      	bx	lr

08000bac <__aeabi_d2iz>:
 8000bac:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bb0:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bb4:	d215      	bcs.n	8000be2 <__aeabi_d2iz+0x36>
 8000bb6:	d511      	bpl.n	8000bdc <__aeabi_d2iz+0x30>
 8000bb8:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bbc:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bc0:	d912      	bls.n	8000be8 <__aeabi_d2iz+0x3c>
 8000bc2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bc6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bca:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bce:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000bd2:	fa23 f002 	lsr.w	r0, r3, r2
 8000bd6:	bf18      	it	ne
 8000bd8:	4240      	negne	r0, r0
 8000bda:	4770      	bx	lr
 8000bdc:	f04f 0000 	mov.w	r0, #0
 8000be0:	4770      	bx	lr
 8000be2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000be6:	d105      	bne.n	8000bf4 <__aeabi_d2iz+0x48>
 8000be8:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bec:	bf08      	it	eq
 8000bee:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bf2:	4770      	bx	lr
 8000bf4:	f04f 0000 	mov.w	r0, #0
 8000bf8:	4770      	bx	lr
 8000bfa:	bf00      	nop

08000bfc <__aeabi_d2uiz>:
 8000bfc:	004a      	lsls	r2, r1, #1
 8000bfe:	d211      	bcs.n	8000c24 <__aeabi_d2uiz+0x28>
 8000c00:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000c04:	d211      	bcs.n	8000c2a <__aeabi_d2uiz+0x2e>
 8000c06:	d50d      	bpl.n	8000c24 <__aeabi_d2uiz+0x28>
 8000c08:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000c0c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000c10:	d40e      	bmi.n	8000c30 <__aeabi_d2uiz+0x34>
 8000c12:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c16:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000c1a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000c1e:	fa23 f002 	lsr.w	r0, r3, r2
 8000c22:	4770      	bx	lr
 8000c24:	f04f 0000 	mov.w	r0, #0
 8000c28:	4770      	bx	lr
 8000c2a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000c2e:	d102      	bne.n	8000c36 <__aeabi_d2uiz+0x3a>
 8000c30:	f04f 30ff 	mov.w	r0, #4294967295
 8000c34:	4770      	bx	lr
 8000c36:	f04f 0000 	mov.w	r0, #0
 8000c3a:	4770      	bx	lr

08000c3c <__aeabi_d2f>:
 8000c3c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000c40:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000c44:	bf24      	itt	cs
 8000c46:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000c4a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000c4e:	d90d      	bls.n	8000c6c <__aeabi_d2f+0x30>
 8000c50:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c54:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c58:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c5c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c60:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c64:	bf08      	it	eq
 8000c66:	f020 0001 	biceq.w	r0, r0, #1
 8000c6a:	4770      	bx	lr
 8000c6c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c70:	d121      	bne.n	8000cb6 <__aeabi_d2f+0x7a>
 8000c72:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c76:	bfbc      	itt	lt
 8000c78:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c7c:	4770      	bxlt	lr
 8000c7e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c82:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c86:	f1c2 0218 	rsb	r2, r2, #24
 8000c8a:	f1c2 0c20 	rsb	ip, r2, #32
 8000c8e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c92:	fa20 f002 	lsr.w	r0, r0, r2
 8000c96:	bf18      	it	ne
 8000c98:	f040 0001 	orrne.w	r0, r0, #1
 8000c9c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000ca0:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000ca4:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000ca8:	ea40 000c 	orr.w	r0, r0, ip
 8000cac:	fa23 f302 	lsr.w	r3, r3, r2
 8000cb0:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000cb4:	e7cc      	b.n	8000c50 <__aeabi_d2f+0x14>
 8000cb6:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000cba:	d107      	bne.n	8000ccc <__aeabi_d2f+0x90>
 8000cbc:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000cc0:	bf1e      	ittt	ne
 8000cc2:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000cc6:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000cca:	4770      	bxne	lr
 8000ccc:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000cd0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000cd4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000cd8:	4770      	bx	lr
 8000cda:	bf00      	nop

08000cdc <__aeabi_frsub>:
 8000cdc:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8000ce0:	e002      	b.n	8000ce8 <__addsf3>
 8000ce2:	bf00      	nop

08000ce4 <__aeabi_fsub>:
 8000ce4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08000ce8 <__addsf3>:
 8000ce8:	0042      	lsls	r2, r0, #1
 8000cea:	bf1f      	itttt	ne
 8000cec:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000cf0:	ea92 0f03 	teqne	r2, r3
 8000cf4:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000cf8:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000cfc:	d06a      	beq.n	8000dd4 <__addsf3+0xec>
 8000cfe:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000d02:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000d06:	bfc1      	itttt	gt
 8000d08:	18d2      	addgt	r2, r2, r3
 8000d0a:	4041      	eorgt	r1, r0
 8000d0c:	4048      	eorgt	r0, r1
 8000d0e:	4041      	eorgt	r1, r0
 8000d10:	bfb8      	it	lt
 8000d12:	425b      	neglt	r3, r3
 8000d14:	2b19      	cmp	r3, #25
 8000d16:	bf88      	it	hi
 8000d18:	4770      	bxhi	lr
 8000d1a:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000d1e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000d22:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8000d26:	bf18      	it	ne
 8000d28:	4240      	negne	r0, r0
 8000d2a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000d2e:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8000d32:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8000d36:	bf18      	it	ne
 8000d38:	4249      	negne	r1, r1
 8000d3a:	ea92 0f03 	teq	r2, r3
 8000d3e:	d03f      	beq.n	8000dc0 <__addsf3+0xd8>
 8000d40:	f1a2 0201 	sub.w	r2, r2, #1
 8000d44:	fa41 fc03 	asr.w	ip, r1, r3
 8000d48:	eb10 000c 	adds.w	r0, r0, ip
 8000d4c:	f1c3 0320 	rsb	r3, r3, #32
 8000d50:	fa01 f103 	lsl.w	r1, r1, r3
 8000d54:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000d58:	d502      	bpl.n	8000d60 <__addsf3+0x78>
 8000d5a:	4249      	negs	r1, r1
 8000d5c:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000d60:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8000d64:	d313      	bcc.n	8000d8e <__addsf3+0xa6>
 8000d66:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8000d6a:	d306      	bcc.n	8000d7a <__addsf3+0x92>
 8000d6c:	0840      	lsrs	r0, r0, #1
 8000d6e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000d72:	f102 0201 	add.w	r2, r2, #1
 8000d76:	2afe      	cmp	r2, #254	; 0xfe
 8000d78:	d251      	bcs.n	8000e1e <__addsf3+0x136>
 8000d7a:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8000d7e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000d82:	bf08      	it	eq
 8000d84:	f020 0001 	biceq.w	r0, r0, #1
 8000d88:	ea40 0003 	orr.w	r0, r0, r3
 8000d8c:	4770      	bx	lr
 8000d8e:	0049      	lsls	r1, r1, #1
 8000d90:	eb40 0000 	adc.w	r0, r0, r0
 8000d94:	3a01      	subs	r2, #1
 8000d96:	bf28      	it	cs
 8000d98:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8000d9c:	d2ed      	bcs.n	8000d7a <__addsf3+0x92>
 8000d9e:	fab0 fc80 	clz	ip, r0
 8000da2:	f1ac 0c08 	sub.w	ip, ip, #8
 8000da6:	ebb2 020c 	subs.w	r2, r2, ip
 8000daa:	fa00 f00c 	lsl.w	r0, r0, ip
 8000dae:	bfaa      	itet	ge
 8000db0:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000db4:	4252      	neglt	r2, r2
 8000db6:	4318      	orrge	r0, r3
 8000db8:	bfbc      	itt	lt
 8000dba:	40d0      	lsrlt	r0, r2
 8000dbc:	4318      	orrlt	r0, r3
 8000dbe:	4770      	bx	lr
 8000dc0:	f092 0f00 	teq	r2, #0
 8000dc4:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000dc8:	bf06      	itte	eq
 8000dca:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8000dce:	3201      	addeq	r2, #1
 8000dd0:	3b01      	subne	r3, #1
 8000dd2:	e7b5      	b.n	8000d40 <__addsf3+0x58>
 8000dd4:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000dd8:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000ddc:	bf18      	it	ne
 8000dde:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000de2:	d021      	beq.n	8000e28 <__addsf3+0x140>
 8000de4:	ea92 0f03 	teq	r2, r3
 8000de8:	d004      	beq.n	8000df4 <__addsf3+0x10c>
 8000dea:	f092 0f00 	teq	r2, #0
 8000dee:	bf08      	it	eq
 8000df0:	4608      	moveq	r0, r1
 8000df2:	4770      	bx	lr
 8000df4:	ea90 0f01 	teq	r0, r1
 8000df8:	bf1c      	itt	ne
 8000dfa:	2000      	movne	r0, #0
 8000dfc:	4770      	bxne	lr
 8000dfe:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8000e02:	d104      	bne.n	8000e0e <__addsf3+0x126>
 8000e04:	0040      	lsls	r0, r0, #1
 8000e06:	bf28      	it	cs
 8000e08:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000e0c:	4770      	bx	lr
 8000e0e:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8000e12:	bf3c      	itt	cc
 8000e14:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000e18:	4770      	bxcc	lr
 8000e1a:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000e1e:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8000e22:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000e26:	4770      	bx	lr
 8000e28:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000e2c:	bf16      	itet	ne
 8000e2e:	4608      	movne	r0, r1
 8000e30:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000e34:	4601      	movne	r1, r0
 8000e36:	0242      	lsls	r2, r0, #9
 8000e38:	bf06      	itte	eq
 8000e3a:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000e3e:	ea90 0f01 	teqeq	r0, r1
 8000e42:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8000e46:	4770      	bx	lr

08000e48 <__aeabi_ui2f>:
 8000e48:	f04f 0300 	mov.w	r3, #0
 8000e4c:	e004      	b.n	8000e58 <__aeabi_i2f+0x8>
 8000e4e:	bf00      	nop

08000e50 <__aeabi_i2f>:
 8000e50:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8000e54:	bf48      	it	mi
 8000e56:	4240      	negmi	r0, r0
 8000e58:	ea5f 0c00 	movs.w	ip, r0
 8000e5c:	bf08      	it	eq
 8000e5e:	4770      	bxeq	lr
 8000e60:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8000e64:	4601      	mov	r1, r0
 8000e66:	f04f 0000 	mov.w	r0, #0
 8000e6a:	e01c      	b.n	8000ea6 <__aeabi_l2f+0x2a>

08000e6c <__aeabi_ul2f>:
 8000e6c:	ea50 0201 	orrs.w	r2, r0, r1
 8000e70:	bf08      	it	eq
 8000e72:	4770      	bxeq	lr
 8000e74:	f04f 0300 	mov.w	r3, #0
 8000e78:	e00a      	b.n	8000e90 <__aeabi_l2f+0x14>
 8000e7a:	bf00      	nop

08000e7c <__aeabi_l2f>:
 8000e7c:	ea50 0201 	orrs.w	r2, r0, r1
 8000e80:	bf08      	it	eq
 8000e82:	4770      	bxeq	lr
 8000e84:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8000e88:	d502      	bpl.n	8000e90 <__aeabi_l2f+0x14>
 8000e8a:	4240      	negs	r0, r0
 8000e8c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000e90:	ea5f 0c01 	movs.w	ip, r1
 8000e94:	bf02      	ittt	eq
 8000e96:	4684      	moveq	ip, r0
 8000e98:	4601      	moveq	r1, r0
 8000e9a:	2000      	moveq	r0, #0
 8000e9c:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8000ea0:	bf08      	it	eq
 8000ea2:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8000ea6:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8000eaa:	fabc f28c 	clz	r2, ip
 8000eae:	3a08      	subs	r2, #8
 8000eb0:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000eb4:	db10      	blt.n	8000ed8 <__aeabi_l2f+0x5c>
 8000eb6:	fa01 fc02 	lsl.w	ip, r1, r2
 8000eba:	4463      	add	r3, ip
 8000ebc:	fa00 fc02 	lsl.w	ip, r0, r2
 8000ec0:	f1c2 0220 	rsb	r2, r2, #32
 8000ec4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000ec8:	fa20 f202 	lsr.w	r2, r0, r2
 8000ecc:	eb43 0002 	adc.w	r0, r3, r2
 8000ed0:	bf08      	it	eq
 8000ed2:	f020 0001 	biceq.w	r0, r0, #1
 8000ed6:	4770      	bx	lr
 8000ed8:	f102 0220 	add.w	r2, r2, #32
 8000edc:	fa01 fc02 	lsl.w	ip, r1, r2
 8000ee0:	f1c2 0220 	rsb	r2, r2, #32
 8000ee4:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000ee8:	fa21 f202 	lsr.w	r2, r1, r2
 8000eec:	eb43 0002 	adc.w	r0, r3, r2
 8000ef0:	bf08      	it	eq
 8000ef2:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000ef6:	4770      	bx	lr

08000ef8 <__aeabi_fmul>:
 8000ef8:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000efc:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000f00:	bf1e      	ittt	ne
 8000f02:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000f06:	ea92 0f0c 	teqne	r2, ip
 8000f0a:	ea93 0f0c 	teqne	r3, ip
 8000f0e:	d06f      	beq.n	8000ff0 <__aeabi_fmul+0xf8>
 8000f10:	441a      	add	r2, r3
 8000f12:	ea80 0c01 	eor.w	ip, r0, r1
 8000f16:	0240      	lsls	r0, r0, #9
 8000f18:	bf18      	it	ne
 8000f1a:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000f1e:	d01e      	beq.n	8000f5e <__aeabi_fmul+0x66>
 8000f20:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8000f24:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000f28:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000f2c:	fba0 3101 	umull	r3, r1, r0, r1
 8000f30:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000f34:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8000f38:	bf3e      	ittt	cc
 8000f3a:	0049      	lslcc	r1, r1, #1
 8000f3c:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000f40:	005b      	lslcc	r3, r3, #1
 8000f42:	ea40 0001 	orr.w	r0, r0, r1
 8000f46:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 8000f4a:	2afd      	cmp	r2, #253	; 0xfd
 8000f4c:	d81d      	bhi.n	8000f8a <__aeabi_fmul+0x92>
 8000f4e:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8000f52:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000f56:	bf08      	it	eq
 8000f58:	f020 0001 	biceq.w	r0, r0, #1
 8000f5c:	4770      	bx	lr
 8000f5e:	f090 0f00 	teq	r0, #0
 8000f62:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000f66:	bf08      	it	eq
 8000f68:	0249      	lsleq	r1, r1, #9
 8000f6a:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000f6e:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000f72:	3a7f      	subs	r2, #127	; 0x7f
 8000f74:	bfc2      	ittt	gt
 8000f76:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000f7a:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000f7e:	4770      	bxgt	lr
 8000f80:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000f84:	f04f 0300 	mov.w	r3, #0
 8000f88:	3a01      	subs	r2, #1
 8000f8a:	dc5d      	bgt.n	8001048 <__aeabi_fmul+0x150>
 8000f8c:	f112 0f19 	cmn.w	r2, #25
 8000f90:	bfdc      	itt	le
 8000f92:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8000f96:	4770      	bxle	lr
 8000f98:	f1c2 0200 	rsb	r2, r2, #0
 8000f9c:	0041      	lsls	r1, r0, #1
 8000f9e:	fa21 f102 	lsr.w	r1, r1, r2
 8000fa2:	f1c2 0220 	rsb	r2, r2, #32
 8000fa6:	fa00 fc02 	lsl.w	ip, r0, r2
 8000faa:	ea5f 0031 	movs.w	r0, r1, rrx
 8000fae:	f140 0000 	adc.w	r0, r0, #0
 8000fb2:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000fb6:	bf08      	it	eq
 8000fb8:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000fbc:	4770      	bx	lr
 8000fbe:	f092 0f00 	teq	r2, #0
 8000fc2:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000fc6:	bf02      	ittt	eq
 8000fc8:	0040      	lsleq	r0, r0, #1
 8000fca:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000fce:	3a01      	subeq	r2, #1
 8000fd0:	d0f9      	beq.n	8000fc6 <__aeabi_fmul+0xce>
 8000fd2:	ea40 000c 	orr.w	r0, r0, ip
 8000fd6:	f093 0f00 	teq	r3, #0
 8000fda:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000fde:	bf02      	ittt	eq
 8000fe0:	0049      	lsleq	r1, r1, #1
 8000fe2:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000fe6:	3b01      	subeq	r3, #1
 8000fe8:	d0f9      	beq.n	8000fde <__aeabi_fmul+0xe6>
 8000fea:	ea41 010c 	orr.w	r1, r1, ip
 8000fee:	e78f      	b.n	8000f10 <__aeabi_fmul+0x18>
 8000ff0:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000ff4:	ea92 0f0c 	teq	r2, ip
 8000ff8:	bf18      	it	ne
 8000ffa:	ea93 0f0c 	teqne	r3, ip
 8000ffe:	d00a      	beq.n	8001016 <__aeabi_fmul+0x11e>
 8001000:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8001004:	bf18      	it	ne
 8001006:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 800100a:	d1d8      	bne.n	8000fbe <__aeabi_fmul+0xc6>
 800100c:	ea80 0001 	eor.w	r0, r0, r1
 8001010:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8001014:	4770      	bx	lr
 8001016:	f090 0f00 	teq	r0, #0
 800101a:	bf17      	itett	ne
 800101c:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8001020:	4608      	moveq	r0, r1
 8001022:	f091 0f00 	teqne	r1, #0
 8001026:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 800102a:	d014      	beq.n	8001056 <__aeabi_fmul+0x15e>
 800102c:	ea92 0f0c 	teq	r2, ip
 8001030:	d101      	bne.n	8001036 <__aeabi_fmul+0x13e>
 8001032:	0242      	lsls	r2, r0, #9
 8001034:	d10f      	bne.n	8001056 <__aeabi_fmul+0x15e>
 8001036:	ea93 0f0c 	teq	r3, ip
 800103a:	d103      	bne.n	8001044 <__aeabi_fmul+0x14c>
 800103c:	024b      	lsls	r3, r1, #9
 800103e:	bf18      	it	ne
 8001040:	4608      	movne	r0, r1
 8001042:	d108      	bne.n	8001056 <__aeabi_fmul+0x15e>
 8001044:	ea80 0001 	eor.w	r0, r0, r1
 8001048:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 800104c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8001050:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8001054:	4770      	bx	lr
 8001056:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 800105a:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 800105e:	4770      	bx	lr

08001060 <__aeabi_fdiv>:
 8001060:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8001064:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8001068:	bf1e      	ittt	ne
 800106a:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 800106e:	ea92 0f0c 	teqne	r2, ip
 8001072:	ea93 0f0c 	teqne	r3, ip
 8001076:	d069      	beq.n	800114c <__aeabi_fdiv+0xec>
 8001078:	eba2 0203 	sub.w	r2, r2, r3
 800107c:	ea80 0c01 	eor.w	ip, r0, r1
 8001080:	0249      	lsls	r1, r1, #9
 8001082:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8001086:	d037      	beq.n	80010f8 <__aeabi_fdiv+0x98>
 8001088:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800108c:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8001090:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8001094:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8001098:	428b      	cmp	r3, r1
 800109a:	bf38      	it	cc
 800109c:	005b      	lslcc	r3, r3, #1
 800109e:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 80010a2:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 80010a6:	428b      	cmp	r3, r1
 80010a8:	bf24      	itt	cs
 80010aa:	1a5b      	subcs	r3, r3, r1
 80010ac:	ea40 000c 	orrcs.w	r0, r0, ip
 80010b0:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 80010b4:	bf24      	itt	cs
 80010b6:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 80010ba:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80010be:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 80010c2:	bf24      	itt	cs
 80010c4:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 80010c8:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80010cc:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 80010d0:	bf24      	itt	cs
 80010d2:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 80010d6:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80010da:	011b      	lsls	r3, r3, #4
 80010dc:	bf18      	it	ne
 80010de:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 80010e2:	d1e0      	bne.n	80010a6 <__aeabi_fdiv+0x46>
 80010e4:	2afd      	cmp	r2, #253	; 0xfd
 80010e6:	f63f af50 	bhi.w	8000f8a <__aeabi_fmul+0x92>
 80010ea:	428b      	cmp	r3, r1
 80010ec:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80010f0:	bf08      	it	eq
 80010f2:	f020 0001 	biceq.w	r0, r0, #1
 80010f6:	4770      	bx	lr
 80010f8:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 80010fc:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8001100:	327f      	adds	r2, #127	; 0x7f
 8001102:	bfc2      	ittt	gt
 8001104:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8001108:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 800110c:	4770      	bxgt	lr
 800110e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8001112:	f04f 0300 	mov.w	r3, #0
 8001116:	3a01      	subs	r2, #1
 8001118:	e737      	b.n	8000f8a <__aeabi_fmul+0x92>
 800111a:	f092 0f00 	teq	r2, #0
 800111e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8001122:	bf02      	ittt	eq
 8001124:	0040      	lsleq	r0, r0, #1
 8001126:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 800112a:	3a01      	subeq	r2, #1
 800112c:	d0f9      	beq.n	8001122 <__aeabi_fdiv+0xc2>
 800112e:	ea40 000c 	orr.w	r0, r0, ip
 8001132:	f093 0f00 	teq	r3, #0
 8001136:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 800113a:	bf02      	ittt	eq
 800113c:	0049      	lsleq	r1, r1, #1
 800113e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8001142:	3b01      	subeq	r3, #1
 8001144:	d0f9      	beq.n	800113a <__aeabi_fdiv+0xda>
 8001146:	ea41 010c 	orr.w	r1, r1, ip
 800114a:	e795      	b.n	8001078 <__aeabi_fdiv+0x18>
 800114c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8001150:	ea92 0f0c 	teq	r2, ip
 8001154:	d108      	bne.n	8001168 <__aeabi_fdiv+0x108>
 8001156:	0242      	lsls	r2, r0, #9
 8001158:	f47f af7d 	bne.w	8001056 <__aeabi_fmul+0x15e>
 800115c:	ea93 0f0c 	teq	r3, ip
 8001160:	f47f af70 	bne.w	8001044 <__aeabi_fmul+0x14c>
 8001164:	4608      	mov	r0, r1
 8001166:	e776      	b.n	8001056 <__aeabi_fmul+0x15e>
 8001168:	ea93 0f0c 	teq	r3, ip
 800116c:	d104      	bne.n	8001178 <__aeabi_fdiv+0x118>
 800116e:	024b      	lsls	r3, r1, #9
 8001170:	f43f af4c 	beq.w	800100c <__aeabi_fmul+0x114>
 8001174:	4608      	mov	r0, r1
 8001176:	e76e      	b.n	8001056 <__aeabi_fmul+0x15e>
 8001178:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 800117c:	bf18      	it	ne
 800117e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8001182:	d1ca      	bne.n	800111a <__aeabi_fdiv+0xba>
 8001184:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 8001188:	f47f af5c 	bne.w	8001044 <__aeabi_fmul+0x14c>
 800118c:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 8001190:	f47f af3c 	bne.w	800100c <__aeabi_fmul+0x114>
 8001194:	e75f      	b.n	8001056 <__aeabi_fmul+0x15e>
 8001196:	bf00      	nop

08001198 <__gesf2>:
 8001198:	f04f 3cff 	mov.w	ip, #4294967295
 800119c:	e006      	b.n	80011ac <__cmpsf2+0x4>
 800119e:	bf00      	nop

080011a0 <__lesf2>:
 80011a0:	f04f 0c01 	mov.w	ip, #1
 80011a4:	e002      	b.n	80011ac <__cmpsf2+0x4>
 80011a6:	bf00      	nop

080011a8 <__cmpsf2>:
 80011a8:	f04f 0c01 	mov.w	ip, #1
 80011ac:	f84d cd04 	str.w	ip, [sp, #-4]!
 80011b0:	ea4f 0240 	mov.w	r2, r0, lsl #1
 80011b4:	ea4f 0341 	mov.w	r3, r1, lsl #1
 80011b8:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 80011bc:	bf18      	it	ne
 80011be:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 80011c2:	d011      	beq.n	80011e8 <__cmpsf2+0x40>
 80011c4:	b001      	add	sp, #4
 80011c6:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 80011ca:	bf18      	it	ne
 80011cc:	ea90 0f01 	teqne	r0, r1
 80011d0:	bf58      	it	pl
 80011d2:	ebb2 0003 	subspl.w	r0, r2, r3
 80011d6:	bf88      	it	hi
 80011d8:	17c8      	asrhi	r0, r1, #31
 80011da:	bf38      	it	cc
 80011dc:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 80011e0:	bf18      	it	ne
 80011e2:	f040 0001 	orrne.w	r0, r0, #1
 80011e6:	4770      	bx	lr
 80011e8:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 80011ec:	d102      	bne.n	80011f4 <__cmpsf2+0x4c>
 80011ee:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 80011f2:	d105      	bne.n	8001200 <__cmpsf2+0x58>
 80011f4:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 80011f8:	d1e4      	bne.n	80011c4 <__cmpsf2+0x1c>
 80011fa:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 80011fe:	d0e1      	beq.n	80011c4 <__cmpsf2+0x1c>
 8001200:	f85d 0b04 	ldr.w	r0, [sp], #4
 8001204:	4770      	bx	lr
 8001206:	bf00      	nop

08001208 <__aeabi_cfrcmple>:
 8001208:	4684      	mov	ip, r0
 800120a:	4608      	mov	r0, r1
 800120c:	4661      	mov	r1, ip
 800120e:	e7ff      	b.n	8001210 <__aeabi_cfcmpeq>

08001210 <__aeabi_cfcmpeq>:
 8001210:	b50f      	push	{r0, r1, r2, r3, lr}
 8001212:	f7ff ffc9 	bl	80011a8 <__cmpsf2>
 8001216:	2800      	cmp	r0, #0
 8001218:	bf48      	it	mi
 800121a:	f110 0f00 	cmnmi.w	r0, #0
 800121e:	bd0f      	pop	{r0, r1, r2, r3, pc}

08001220 <__aeabi_fcmpeq>:
 8001220:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001224:	f7ff fff4 	bl	8001210 <__aeabi_cfcmpeq>
 8001228:	bf0c      	ite	eq
 800122a:	2001      	moveq	r0, #1
 800122c:	2000      	movne	r0, #0
 800122e:	f85d fb08 	ldr.w	pc, [sp], #8
 8001232:	bf00      	nop

08001234 <__aeabi_fcmplt>:
 8001234:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001238:	f7ff ffea 	bl	8001210 <__aeabi_cfcmpeq>
 800123c:	bf34      	ite	cc
 800123e:	2001      	movcc	r0, #1
 8001240:	2000      	movcs	r0, #0
 8001242:	f85d fb08 	ldr.w	pc, [sp], #8
 8001246:	bf00      	nop

08001248 <__aeabi_fcmple>:
 8001248:	f84d ed08 	str.w	lr, [sp, #-8]!
 800124c:	f7ff ffe0 	bl	8001210 <__aeabi_cfcmpeq>
 8001250:	bf94      	ite	ls
 8001252:	2001      	movls	r0, #1
 8001254:	2000      	movhi	r0, #0
 8001256:	f85d fb08 	ldr.w	pc, [sp], #8
 800125a:	bf00      	nop

0800125c <__aeabi_fcmpge>:
 800125c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001260:	f7ff ffd2 	bl	8001208 <__aeabi_cfrcmple>
 8001264:	bf94      	ite	ls
 8001266:	2001      	movls	r0, #1
 8001268:	2000      	movhi	r0, #0
 800126a:	f85d fb08 	ldr.w	pc, [sp], #8
 800126e:	bf00      	nop

08001270 <__aeabi_fcmpgt>:
 8001270:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001274:	f7ff ffc8 	bl	8001208 <__aeabi_cfrcmple>
 8001278:	bf34      	ite	cc
 800127a:	2001      	movcc	r0, #1
 800127c:	2000      	movcs	r0, #0
 800127e:	f85d fb08 	ldr.w	pc, [sp], #8
 8001282:	bf00      	nop

08001284 <__aeabi_fcmpun>:
 8001284:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8001288:	ea4f 0341 	mov.w	r3, r1, lsl #1
 800128c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8001290:	d102      	bne.n	8001298 <__aeabi_fcmpun+0x14>
 8001292:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8001296:	d108      	bne.n	80012aa <__aeabi_fcmpun+0x26>
 8001298:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 800129c:	d102      	bne.n	80012a4 <__aeabi_fcmpun+0x20>
 800129e:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 80012a2:	d102      	bne.n	80012aa <__aeabi_fcmpun+0x26>
 80012a4:	f04f 0000 	mov.w	r0, #0
 80012a8:	4770      	bx	lr
 80012aa:	f04f 0001 	mov.w	r0, #1
 80012ae:	4770      	bx	lr

080012b0 <__aeabi_f2iz>:
 80012b0:	ea4f 0240 	mov.w	r2, r0, lsl #1
 80012b4:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 80012b8:	d30f      	bcc.n	80012da <__aeabi_f2iz+0x2a>
 80012ba:	f04f 039e 	mov.w	r3, #158	; 0x9e
 80012be:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 80012c2:	d90d      	bls.n	80012e0 <__aeabi_f2iz+0x30>
 80012c4:	ea4f 2300 	mov.w	r3, r0, lsl #8
 80012c8:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 80012cc:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 80012d0:	fa23 f002 	lsr.w	r0, r3, r2
 80012d4:	bf18      	it	ne
 80012d6:	4240      	negne	r0, r0
 80012d8:	4770      	bx	lr
 80012da:	f04f 0000 	mov.w	r0, #0
 80012de:	4770      	bx	lr
 80012e0:	f112 0f61 	cmn.w	r2, #97	; 0x61
 80012e4:	d101      	bne.n	80012ea <__aeabi_f2iz+0x3a>
 80012e6:	0242      	lsls	r2, r0, #9
 80012e8:	d105      	bne.n	80012f6 <__aeabi_f2iz+0x46>
 80012ea:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
 80012ee:	bf08      	it	eq
 80012f0:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 80012f4:	4770      	bx	lr
 80012f6:	f04f 0000 	mov.w	r0, #0
 80012fa:	4770      	bx	lr

080012fc <__aeabi_f2uiz>:
 80012fc:	0042      	lsls	r2, r0, #1
 80012fe:	d20e      	bcs.n	800131e <__aeabi_f2uiz+0x22>
 8001300:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8001304:	d30b      	bcc.n	800131e <__aeabi_f2uiz+0x22>
 8001306:	f04f 039e 	mov.w	r3, #158	; 0x9e
 800130a:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 800130e:	d409      	bmi.n	8001324 <__aeabi_f2uiz+0x28>
 8001310:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8001314:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8001318:	fa23 f002 	lsr.w	r0, r3, r2
 800131c:	4770      	bx	lr
 800131e:	f04f 0000 	mov.w	r0, #0
 8001322:	4770      	bx	lr
 8001324:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8001328:	d101      	bne.n	800132e <__aeabi_f2uiz+0x32>
 800132a:	0242      	lsls	r2, r0, #9
 800132c:	d102      	bne.n	8001334 <__aeabi_f2uiz+0x38>
 800132e:	f04f 30ff 	mov.w	r0, #4294967295
 8001332:	4770      	bx	lr
 8001334:	f04f 0000 	mov.w	r0, #0
 8001338:	4770      	bx	lr
 800133a:	bf00      	nop

0800133c <__aeabi_d2lz>:
 800133c:	b538      	push	{r3, r4, r5, lr}
 800133e:	4605      	mov	r5, r0
 8001340:	460c      	mov	r4, r1
 8001342:	4628      	mov	r0, r5
 8001344:	4621      	mov	r1, r4
 8001346:	2200      	movs	r2, #0
 8001348:	2300      	movs	r3, #0
 800134a:	f7ff fbf1 	bl	8000b30 <__aeabi_dcmplt>
 800134e:	b928      	cbnz	r0, 800135c <__aeabi_d2lz+0x20>
 8001350:	4628      	mov	r0, r5
 8001352:	4621      	mov	r1, r4
 8001354:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001358:	f000 b80a 	b.w	8001370 <__aeabi_d2ulz>
 800135c:	4628      	mov	r0, r5
 800135e:	f104 4100 	add.w	r1, r4, #2147483648	; 0x80000000
 8001362:	f000 f805 	bl	8001370 <__aeabi_d2ulz>
 8001366:	4240      	negs	r0, r0
 8001368:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800136c:	bd38      	pop	{r3, r4, r5, pc}
 800136e:	bf00      	nop

08001370 <__aeabi_d2ulz>:
 8001370:	b5d0      	push	{r4, r6, r7, lr}
 8001372:	4b0c      	ldr	r3, [pc, #48]	; (80013a4 <__aeabi_d2ulz+0x34>)
 8001374:	2200      	movs	r2, #0
 8001376:	4606      	mov	r6, r0
 8001378:	460f      	mov	r7, r1
 800137a:	f7ff f967 	bl	800064c <__aeabi_dmul>
 800137e:	f7ff fc3d 	bl	8000bfc <__aeabi_d2uiz>
 8001382:	4604      	mov	r4, r0
 8001384:	f7ff f8e8 	bl	8000558 <__aeabi_ui2d>
 8001388:	4b07      	ldr	r3, [pc, #28]	; (80013a8 <__aeabi_d2ulz+0x38>)
 800138a:	2200      	movs	r2, #0
 800138c:	f7ff f95e 	bl	800064c <__aeabi_dmul>
 8001390:	4602      	mov	r2, r0
 8001392:	460b      	mov	r3, r1
 8001394:	4630      	mov	r0, r6
 8001396:	4639      	mov	r1, r7
 8001398:	f7fe ffa0 	bl	80002dc <__aeabi_dsub>
 800139c:	f7ff fc2e 	bl	8000bfc <__aeabi_d2uiz>
 80013a0:	4621      	mov	r1, r4
 80013a2:	bdd0      	pop	{r4, r6, r7, pc}
 80013a4:	3df00000 	.word	0x3df00000
 80013a8:	41f00000 	.word	0x41f00000

080013ac <delay_Init>:
	Note: Uses TIM2 prescaled to 1MHz
*/

#include "registers_new.h"
#include <inttypes.h>
void delay_Init() {
 80013ac:	b480      	push	{r7}
 80013ae:	b083      	sub	sp, #12
 80013b0:	af00      	add	r7, sp, #0
	volatile RCC* RCC_Target = (RCC*) RCC_BASE;
 80013b2:	4b11      	ldr	r3, [pc, #68]	; (80013f8 <delay_Init+0x4c>)
 80013b4:	607b      	str	r3, [r7, #4]
	volatile TIMER* TIM2 = (TIMER*) TIM2_BASE;
 80013b6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80013ba:	603b      	str	r3, [r7, #0]

	// Enable TIM2 in APB1ENR
	RCC_Target->APB1ENR |= RCC_TIM2EN;
 80013bc:	687b      	ldr	r3, [r7, #4]
 80013be:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80013c0:	f043 0201 	orr.w	r2, r3, #1
 80013c4:	687b      	ldr	r3, [r7, #4]
 80013c6:	641a      	str	r2, [r3, #64]	; 0x40

	// Set TIM2 CR configurations, one-pulse & countdown
	TIM2->CR1 |= (TIM_OPM | TIM_DIR);
 80013c8:	683b      	ldr	r3, [r7, #0]
 80013ca:	681b      	ldr	r3, [r3, #0]
 80013cc:	f043 0218 	orr.w	r2, r3, #24
 80013d0:	683b      	ldr	r3, [r7, #0]
 80013d2:	601a      	str	r2, [r3, #0]

	// Set TIM2 prescale to 16, aka 1 count = 1us
	TIM2->PSC = 16;
 80013d4:	683b      	ldr	r3, [r7, #0]
 80013d6:	2210      	movs	r2, #16
 80013d8:	629a      	str	r2, [r3, #40]	; 0x28

	// Prescale fix
	// Forces an event to be generated and then
	// clears it right away which tricks the timer
	// into applying the prescale somehow
	TIM2->EGR = 1;
 80013da:	683b      	ldr	r3, [r7, #0]
 80013dc:	2201      	movs	r2, #1
 80013de:	615a      	str	r2, [r3, #20]
	TIM2->SR &= ~(1);
 80013e0:	683b      	ldr	r3, [r7, #0]
 80013e2:	691b      	ldr	r3, [r3, #16]
 80013e4:	f023 0201 	bic.w	r2, r3, #1
 80013e8:	683b      	ldr	r3, [r7, #0]
 80013ea:	611a      	str	r2, [r3, #16]

	return;
 80013ec:	bf00      	nop
}
 80013ee:	370c      	adds	r7, #12
 80013f0:	46bd      	mov	sp, r7
 80013f2:	bc80      	pop	{r7}
 80013f4:	4770      	bx	lr
 80013f6:	bf00      	nop
 80013f8:	40023800 	.word	0x40023800

080013fc <delay_us>:
	}

	return;
}

void delay_us(uint32_t delay) {
 80013fc:	b480      	push	{r7}
 80013fe:	b087      	sub	sp, #28
 8001400:	af00      	add	r7, sp, #0
 8001402:	6078      	str	r0, [r7, #4]
	// Initialize Variables
	volatile TIMER* TIM2 = (TIMER*) TIM2_BASE;
 8001404:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001408:	617b      	str	r3, [r7, #20]

	// Assert counting is not enabled
	TIM2->CR1 &= ~(TIM_CEN);
 800140a:	697b      	ldr	r3, [r7, #20]
 800140c:	681b      	ldr	r3, [r3, #0]
 800140e:	f023 0201 	bic.w	r2, r3, #1
 8001412:	697b      	ldr	r3, [r7, #20]
 8001414:	601a      	str	r2, [r3, #0]

	// Write the desired count
	TIM2->CNT = delay;
 8001416:	697b      	ldr	r3, [r7, #20]
 8001418:	687a      	ldr	r2, [r7, #4]
 800141a:	625a      	str	r2, [r3, #36]	; 0x24

	// Enable count
	TIM2->CR1 |= TIM_CEN;
 800141c:	697b      	ldr	r3, [r7, #20]
 800141e:	681b      	ldr	r3, [r3, #0]
 8001420:	f043 0201 	orr.w	r2, r3, #1
 8001424:	697b      	ldr	r3, [r7, #20]
 8001426:	601a      	str	r2, [r3, #0]

	// Busy loop
	uint32_t mask = (TIM_CEN);
 8001428:	2301      	movs	r3, #1
 800142a:	613b      	str	r3, [r7, #16]
	volatile uint32_t contents = TIM2->CR1 & mask;
 800142c:	697b      	ldr	r3, [r7, #20]
 800142e:	681a      	ldr	r2, [r3, #0]
 8001430:	693b      	ldr	r3, [r7, #16]
 8001432:	4013      	ands	r3, r2
 8001434:	60fb      	str	r3, [r7, #12]

	while(contents != 0) {
 8001436:	e004      	b.n	8001442 <delay_us+0x46>
		contents = TIM2->CR1 & mask;
 8001438:	697b      	ldr	r3, [r7, #20]
 800143a:	681a      	ldr	r2, [r3, #0]
 800143c:	693b      	ldr	r3, [r7, #16]
 800143e:	4013      	ands	r3, r2
 8001440:	60fb      	str	r3, [r7, #12]
	while(contents != 0) {
 8001442:	68fb      	ldr	r3, [r7, #12]
 8001444:	2b00      	cmp	r3, #0
 8001446:	d1f7      	bne.n	8001438 <delay_us+0x3c>
	}

	return;
 8001448:	bf00      	nop
}
 800144a:	371c      	adds	r7, #28
 800144c:	46bd      	mov	sp, r7
 800144e:	bc80      	pop	{r7}
 8001450:	4770      	bx	lr
	...

08001454 <main>:
		{E, 5, zeldaTempo>>1},
		{0, 0, 0}
};

// main
int main(void){
 8001454:	b580      	push	{r7, lr}
 8001456:	b094      	sub	sp, #80	; 0x50
 8001458:	af00      	add	r7, sp, #0
	init_usart2(115200,F_CPU);
 800145a:	49a9      	ldr	r1, [pc, #676]	; (8001700 <main+0x2ac>)
 800145c:	f44f 30e1 	mov.w	r0, #115200	; 0x1c200
 8001460:	f001 f8b6 	bl	80025d0 <init_usart2>

	delay_Init();
 8001464:	f7ff ffa2 	bl	80013ac <delay_Init>

	music_Init();
 8001468:	f000 fcc0 	bl	8001dec <music_Init>

	period_Init();
 800146c:	f000 fe64 	bl	8002138 <period_Init>

	wave_Init();
 8001470:	f001 fa82 	bl	8002978 <wave_Init>

	// Blank string for input
	char input[30] = "";
 8001474:	2300      	movs	r3, #0
 8001476:	603b      	str	r3, [r7, #0]
 8001478:	1d3b      	adds	r3, r7, #4
 800147a:	2200      	movs	r2, #0
 800147c:	601a      	str	r2, [r3, #0]
 800147e:	605a      	str	r2, [r3, #4]
 8001480:	609a      	str	r2, [r3, #8]
 8001482:	60da      	str	r2, [r3, #12]
 8001484:	611a      	str	r2, [r3, #16]
 8001486:	615a      	str	r2, [r3, #20]
 8001488:	831a      	strh	r2, [r3, #24]

	// Address to interact with
	uint32_t* address = 0;
 800148a:	2300      	movs	r3, #0
 800148c:	64fb      	str	r3, [r7, #76]	; 0x4c

	// Command variable
	int command = -1;
 800148e:	f04f 33ff 	mov.w	r3, #4294967295
 8001492:	63bb      	str	r3, [r7, #56]	; 0x38

	uint32_t frequency = 0;
 8001494:	2300      	movs	r3, #0
 8001496:	64bb      	str	r3, [r7, #72]	; 0x48
	uint32_t samples = 0;
 8001498:	2300      	movs	r3, #0
 800149a:	647b      	str	r3, [r7, #68]	; 0x44
	uint16_t* waveform;

	// Last argument, either length to read or value to write
	uint32_t argument = 0;
 800149c:	2300      	movs	r3, #0
 800149e:	63fb      	str	r3, [r7, #60]	; 0x3c

	// Welcome message
	printf("Evan's Memory Management Console\n\r");
 80014a0:	4898      	ldr	r0, [pc, #608]	; (8001704 <main+0x2b0>)
 80014a2:	f002 fccf 	bl	8003e44 <iprintf>
	printf("Type \'?\' for help\n\r");
 80014a6:	4898      	ldr	r0, [pc, #608]	; (8001708 <main+0x2b4>)
 80014a8:	f002 fccc 	bl	8003e44 <iprintf>

	// Infinite loop for program
	while(1==1) {
		// Prompt
		printf("> ");
 80014ac:	4897      	ldr	r0, [pc, #604]	; (800170c <main+0x2b8>)
 80014ae:	f002 fcc9 	bl	8003e44 <iprintf>
		fgets(input, 29, stdin);
 80014b2:	4b97      	ldr	r3, [pc, #604]	; (8001710 <main+0x2bc>)
 80014b4:	681b      	ldr	r3, [r3, #0]
 80014b6:	685a      	ldr	r2, [r3, #4]
 80014b8:	463b      	mov	r3, r7
 80014ba:	211d      	movs	r1, #29
 80014bc:	4618      	mov	r0, r3
 80014be:	f001 fc43 	bl	8002d48 <fgets>

		// First token, determines command
		char* strnCommand = strtok(input, " ");
 80014c2:	463b      	mov	r3, r7
 80014c4:	4993      	ldr	r1, [pc, #588]	; (8001714 <main+0x2c0>)
 80014c6:	4618      	mov	r0, r3
 80014c8:	f003 fd80 	bl	8004fcc <strtok>
 80014cc:	6378      	str	r0, [r7, #52]	; 0x34

		// Second token
		char* arg1 = strtok(NULL, " ");
 80014ce:	4991      	ldr	r1, [pc, #580]	; (8001714 <main+0x2c0>)
 80014d0:	2000      	movs	r0, #0
 80014d2:	f003 fd7b 	bl	8004fcc <strtok>
 80014d6:	6338      	str	r0, [r7, #48]	; 0x30

		// Third token
		char* arg2 = strtok(NULL, " ");
 80014d8:	498e      	ldr	r1, [pc, #568]	; (8001714 <main+0x2c0>)
 80014da:	2000      	movs	r0, #0
 80014dc:	f003 fd76 	bl	8004fcc <strtok>
 80014e0:	62f8      	str	r0, [r7, #44]	; 0x2c

		// If there is an extracted command
		if(strnCommand != NULL) {
 80014e2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80014e4:	2b00      	cmp	r3, #0
 80014e6:	f000 8187 	beq.w	80017f8 <main+0x3a4>
			// Attempt to parse the command
			command = parseCommand(strnCommand);
 80014ea:	6b78      	ldr	r0, [r7, #52]	; 0x34
 80014ec:	f000 fb0a 	bl	8001b04 <parseCommand>
 80014f0:	63b8      	str	r0, [r7, #56]	; 0x38
 80014f2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80014f4:	2b09      	cmp	r3, #9
 80014f6:	f200 817b 	bhi.w	80017f0 <main+0x39c>
 80014fa:	a201      	add	r2, pc, #4	; (adr r2, 8001500 <main+0xac>)
 80014fc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001500:	08001529 	.word	0x08001529
 8001504:	0800152f 	.word	0x0800152f
 8001508:	08001571 	.word	0x08001571
 800150c:	080015a3 	.word	0x080015a3
 8001510:	080015e5 	.word	0x080015e5
 8001514:	08001663 	.word	0x08001663
 8001518:	080016a1 	.word	0x080016a1
 800151c:	080016f1 	.word	0x080016f1
 8001520:	08001799 	.word	0x08001799
 8001524:	080017e5 	.word	0x080017e5
			// Switch case for reported commands
			switch (command) {

			// Help command
			case 0:
				help();
 8001528:	f000 fbb8 	bl	8001c9c <help>
				break;
 800152c:	e16d      	b.n	800180a <main+0x3b6>

			// Dump memory command
			case 1:
				// Attempt to parse address
				if(arg1 != NULL) {
 800152e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8001530:	2b00      	cmp	r3, #0
 8001532:	d003      	beq.n	800153c <main+0xe8>
					address = parseAddress(arg1);
 8001534:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8001536:	f000 fc03 	bl	8001d40 <parseAddress>
 800153a:	64f8      	str	r0, [r7, #76]	; 0x4c
				}

				// Attempt to parse second argument
				if(arg2 != NULL) {
 800153c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800153e:	2b00      	cmp	r3, #0
 8001540:	d003      	beq.n	800154a <main+0xf6>
					argument = parseArgument(arg2);
 8001542:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8001544:	f000 fc10 	bl	8001d68 <parseArgument>
 8001548:	63f8      	str	r0, [r7, #60]	; 0x3c
				}

				if(arg1 != NULL) {
 800154a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800154c:	2b00      	cmp	r3, #0
 800154e:	d00b      	beq.n	8001568 <main+0x114>
					if(arg2 == NULL) {
 8001550:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001552:	2b00      	cmp	r3, #0
 8001554:	d103      	bne.n	800155e <main+0x10a>
						memdmpDefault((uint8_t*)address);
 8001556:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 8001558:	f000 f974 	bl	8001844 <memdmpDefault>
						memdmp((uint8_t*)address, argument);
					}
				} else {
					printf("No address provided\n\r");
				}
				break;
 800155c:	e155      	b.n	800180a <main+0x3b6>
						memdmp((uint8_t*)address, argument);
 800155e:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8001560:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 8001562:	f000 f9cb 	bl	80018fc <memdmp>
				break;
 8001566:	e150      	b.n	800180a <main+0x3b6>
					printf("No address provided\n\r");
 8001568:	486b      	ldr	r0, [pc, #428]	; (8001718 <main+0x2c4>)
 800156a:	f002 fc6b 	bl	8003e44 <iprintf>
				break;
 800156e:	e14c      	b.n	800180a <main+0x3b6>

			// Read word command
			case 2:
				// Attempt to parse address
				if(arg1 != NULL) {
 8001570:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8001572:	2b00      	cmp	r3, #0
 8001574:	d003      	beq.n	800157e <main+0x12a>
					address = parseAddress(arg1);
 8001576:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8001578:	f000 fbe2 	bl	8001d40 <parseAddress>
 800157c:	64f8      	str	r0, [r7, #76]	; 0x4c
				}

				// Attempt to parse second argument
				if(arg2 != NULL) {
 800157e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001580:	2b00      	cmp	r3, #0
 8001582:	d003      	beq.n	800158c <main+0x138>
					argument = parseArgument(arg2);
 8001584:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8001586:	f000 fbef 	bl	8001d68 <parseArgument>
 800158a:	63f8      	str	r0, [r7, #60]	; 0x3c
				}

				if(arg1 != NULL) {
 800158c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800158e:	2b00      	cmp	r3, #0
 8001590:	d003      	beq.n	800159a <main+0x146>
					memwrd(address);
 8001592:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 8001594:	f000 fa78 	bl	8001a88 <memwrd>
				} else {
					printf("No address provided\n\r");
				}
				break;
 8001598:	e137      	b.n	800180a <main+0x3b6>
					printf("No address provided\n\r");
 800159a:	485f      	ldr	r0, [pc, #380]	; (8001718 <main+0x2c4>)
 800159c:	f002 fc52 	bl	8003e44 <iprintf>
				break;
 80015a0:	e133      	b.n	800180a <main+0x3b6>

			// Write word command
			case 3:
				// Attempt to parse address
				if(arg1 != NULL) {
 80015a2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80015a4:	2b00      	cmp	r3, #0
 80015a6:	d003      	beq.n	80015b0 <main+0x15c>
					address = parseAddress(arg1);
 80015a8:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80015aa:	f000 fbc9 	bl	8001d40 <parseAddress>
 80015ae:	64f8      	str	r0, [r7, #76]	; 0x4c
				}

				// Attempt to parse second argument
				if(arg2 != NULL) {
 80015b0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80015b2:	2b00      	cmp	r3, #0
 80015b4:	d003      	beq.n	80015be <main+0x16a>
					argument = parseArgument(arg2);
 80015b6:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 80015b8:	f000 fbd6 	bl	8001d68 <parseArgument>
 80015bc:	63f8      	str	r0, [r7, #60]	; 0x3c
				}

				if(arg1 != NULL) {
 80015be:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80015c0:	2b00      	cmp	r3, #0
 80015c2:	d00b      	beq.n	80015dc <main+0x188>
					if(arg2 != NULL) {
 80015c4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80015c6:	2b00      	cmp	r3, #0
 80015c8:	d004      	beq.n	80015d4 <main+0x180>
						wmemwrd(address, argument);
 80015ca:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 80015cc:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 80015ce:	f000 fa7d 	bl	8001acc <wmemwrd>
						printf("No value to write provided\n\r");
					}
				} else {
					printf("No address provided\n\r");
				}
				break;
 80015d2:	e11a      	b.n	800180a <main+0x3b6>
						printf("No value to write provided\n\r");
 80015d4:	4851      	ldr	r0, [pc, #324]	; (800171c <main+0x2c8>)
 80015d6:	f002 fc35 	bl	8003e44 <iprintf>
				break;
 80015da:	e116      	b.n	800180a <main+0x3b6>
					printf("No address provided\n\r");
 80015dc:	484e      	ldr	r0, [pc, #312]	; (8001718 <main+0x2c4>)
 80015de:	f002 fc31 	bl	8003e44 <iprintf>
				break;
 80015e2:	e112      	b.n	800180a <main+0x3b6>

			// Music command
			case 4:
				// Determine song to be played
				if(strcmp(arg1, "doom") == 0 || strcmp(arg1, "doom\n") == 0) {
 80015e4:	494e      	ldr	r1, [pc, #312]	; (8001720 <main+0x2cc>)
 80015e6:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80015e8:	f7fe fe62 	bl	80002b0 <strcmp>
 80015ec:	4603      	mov	r3, r0
 80015ee:	2b00      	cmp	r3, #0
 80015f0:	d006      	beq.n	8001600 <main+0x1ac>
 80015f2:	494c      	ldr	r1, [pc, #304]	; (8001724 <main+0x2d0>)
 80015f4:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80015f6:	f7fe fe5b 	bl	80002b0 <strcmp>
 80015fa:	4603      	mov	r3, r0
 80015fc:	2b00      	cmp	r3, #0
 80015fe:	d10e      	bne.n	800161e <main+0x1ca>

					// Play background/foreground accordingly
					if(strcmp(arg2, "background\n") == 0) {
 8001600:	4949      	ldr	r1, [pc, #292]	; (8001728 <main+0x2d4>)
 8001602:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8001604:	f7fe fe54 	bl	80002b0 <strcmp>
 8001608:	4603      	mov	r3, r0
 800160a:	2b00      	cmp	r3, #0
 800160c:	d103      	bne.n	8001616 <main+0x1c2>
						music_Background(atDoomsGate);
 800160e:	4847      	ldr	r0, [pc, #284]	; (800172c <main+0x2d8>)
 8001610:	f000 fcd4 	bl	8001fbc <music_Background>
					if(strcmp(arg2, "background\n") == 0) {
 8001614:	e024      	b.n	8001660 <main+0x20c>
					} else {
						music_Play(atDoomsGate);
 8001616:	4845      	ldr	r0, [pc, #276]	; (800172c <main+0x2d8>)
 8001618:	f000 fc58 	bl	8001ecc <music_Play>
					if(strcmp(arg2, "background\n") == 0) {
 800161c:	e020      	b.n	8001660 <main+0x20c>
					}

				} else if(strcmp(arg1, "zelda") == 0 || strcmp(arg1, "zelda\n") == 0) {
 800161e:	4944      	ldr	r1, [pc, #272]	; (8001730 <main+0x2dc>)
 8001620:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8001622:	f7fe fe45 	bl	80002b0 <strcmp>
 8001626:	4603      	mov	r3, r0
 8001628:	2b00      	cmp	r3, #0
 800162a:	d006      	beq.n	800163a <main+0x1e6>
 800162c:	4941      	ldr	r1, [pc, #260]	; (8001734 <main+0x2e0>)
 800162e:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8001630:	f7fe fe3e 	bl	80002b0 <strcmp>
 8001634:	4603      	mov	r3, r0
 8001636:	2b00      	cmp	r3, #0
 8001638:	d10e      	bne.n	8001658 <main+0x204>

					// Play background/foreground accordingly
					if(strcmp(arg2, "background\n") == 0) {
 800163a:	493b      	ldr	r1, [pc, #236]	; (8001728 <main+0x2d4>)
 800163c:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 800163e:	f7fe fe37 	bl	80002b0 <strcmp>
 8001642:	4603      	mov	r3, r0
 8001644:	2b00      	cmp	r3, #0
 8001646:	d103      	bne.n	8001650 <main+0x1fc>
						music_Background(zelda);
 8001648:	483b      	ldr	r0, [pc, #236]	; (8001738 <main+0x2e4>)
 800164a:	f000 fcb7 	bl	8001fbc <music_Background>
					if(strcmp(arg2, "background\n") == 0) {
 800164e:	e007      	b.n	8001660 <main+0x20c>
					} else {
						music_Play(zelda);
 8001650:	4839      	ldr	r0, [pc, #228]	; (8001738 <main+0x2e4>)
 8001652:	f000 fc3b 	bl	8001ecc <music_Play>
					if(strcmp(arg2, "background\n") == 0) {
 8001656:	e003      	b.n	8001660 <main+0x20c>
					}

				} else {
					printf("Invalid song\n");
 8001658:	4838      	ldr	r0, [pc, #224]	; (800173c <main+0x2e8>)
 800165a:	f002 fc79 	bl	8003f50 <puts>
				}
				break;
 800165e:	e0d4      	b.n	800180a <main+0x3b6>
 8001660:	e0d3      	b.n	800180a <main+0x3b6>

			// Frequency Measurement
			case 5:
				if(arg1 != NULL) {
 8001662:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8001664:	2b00      	cmp	r3, #0
 8001666:	d017      	beq.n	8001698 <main+0x244>
					if(strcmp(arg1, "frequency\n") == 0) {
 8001668:	4935      	ldr	r1, [pc, #212]	; (8001740 <main+0x2ec>)
 800166a:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800166c:	f7fe fe20 	bl	80002b0 <strcmp>
 8001670:	4603      	mov	r3, r0
 8001672:	2b00      	cmp	r3, #0
 8001674:	d10c      	bne.n	8001690 <main+0x23c>
						printf("\nMeasuring frequency...\n\n");
 8001676:	4833      	ldr	r0, [pc, #204]	; (8001744 <main+0x2f0>)
 8001678:	f002 fc6a 	bl	8003f50 <puts>
						double average = period_Measure();
 800167c:	f000 fdb4 	bl	80021e8 <period_Measure>
 8001680:	e9c7 0108 	strd	r0, r1, [r7, #32]
						printf("Measured frequency was %.2f Hz\n", average);
 8001684:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8001688:	482f      	ldr	r0, [pc, #188]	; (8001748 <main+0x2f4>)
 800168a:	f002 fbdb 	bl	8003e44 <iprintf>
						printf("Invalid measurement\n");
					}
				} else {
					printf("Measurement type required\n");
				}
				break;
 800168e:	e0bc      	b.n	800180a <main+0x3b6>
						printf("Invalid measurement\n");
 8001690:	482e      	ldr	r0, [pc, #184]	; (800174c <main+0x2f8>)
 8001692:	f002 fc5d 	bl	8003f50 <puts>
				break;
 8001696:	e0b8      	b.n	800180a <main+0x3b6>
					printf("Measurement type required\n");
 8001698:	482d      	ldr	r0, [pc, #180]	; (8001750 <main+0x2fc>)
 800169a:	f002 fc59 	bl	8003f50 <puts>
				break;
 800169e:	e0b4      	b.n	800180a <main+0x3b6>

			// Sine wave command
			case 6:
				// Parse Frequency
				if(arg1 != NULL) {
 80016a0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80016a2:	2b00      	cmp	r3, #0
 80016a4:	d004      	beq.n	80016b0 <main+0x25c>
					frequency = parseArgument(arg1);
 80016a6:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80016a8:	f000 fb5e 	bl	8001d68 <parseArgument>
 80016ac:	64b8      	str	r0, [r7, #72]	; 0x48
 80016ae:	e002      	b.n	80016b6 <main+0x262>
				} else {
					printf("No frequency provided\n");
 80016b0:	4828      	ldr	r0, [pc, #160]	; (8001754 <main+0x300>)
 80016b2:	f002 fc4d 	bl	8003f50 <puts>
				}

				// Parse Samples
				if(arg2 != NULL) {
 80016b6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80016b8:	2b00      	cmp	r3, #0
 80016ba:	d004      	beq.n	80016c6 <main+0x272>
					samples = parseArgument(arg2);
 80016bc:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 80016be:	f000 fb53 	bl	8001d68 <parseArgument>
 80016c2:	6478      	str	r0, [r7, #68]	; 0x44
 80016c4:	e002      	b.n	80016cc <main+0x278>
				} else {
					printf("No number of samples provided\n");
 80016c6:	4824      	ldr	r0, [pc, #144]	; (8001758 <main+0x304>)
 80016c8:	f002 fc42 	bl	8003f50 <puts>
				}

				// Execute Command
				if(arg1 != NULL && arg2 != NULL) {
 80016cc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80016ce:	2b00      	cmp	r3, #0
 80016d0:	f000 8096 	beq.w	8001800 <main+0x3ac>
 80016d4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80016d6:	2b00      	cmp	r3, #0
 80016d8:	f000 8092 	beq.w	8001800 <main+0x3ac>
					waveform = sineWave(samples);
 80016dc:	6c78      	ldr	r0, [r7, #68]	; 0x44
 80016de:	f000 ffcf 	bl	8002680 <sineWave>
 80016e2:	6438      	str	r0, [r7, #64]	; 0x40
					wave_Start(waveform, frequency, samples);
 80016e4:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 80016e6:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 80016e8:	6c38      	ldr	r0, [r7, #64]	; 0x40
 80016ea:	f001 f9ad 	bl	8002a48 <wave_Start>
				}
				break;
 80016ee:	e087      	b.n	8001800 <main+0x3ac>

			// Sawtooth wave command
			case 7:
				// Parse Frequency
				if(arg1 != NULL) {
 80016f0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80016f2:	2b00      	cmp	r3, #0
 80016f4:	d032      	beq.n	800175c <main+0x308>
					frequency = parseArgument(arg1);
 80016f6:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80016f8:	f000 fb36 	bl	8001d68 <parseArgument>
 80016fc:	64b8      	str	r0, [r7, #72]	; 0x48
 80016fe:	e030      	b.n	8001762 <main+0x30e>
 8001700:	00f42400 	.word	0x00f42400
 8001704:	08009788 	.word	0x08009788
 8001708:	080097ac 	.word	0x080097ac
 800170c:	080097c0 	.word	0x080097c0
 8001710:	20000b10 	.word	0x20000b10
 8001714:	080097c4 	.word	0x080097c4
 8001718:	080097c8 	.word	0x080097c8
 800171c:	080097e0 	.word	0x080097e0
 8001720:	08009800 	.word	0x08009800
 8001724:	08009808 	.word	0x08009808
 8001728:	08009810 	.word	0x08009810
 800172c:	20000000 	.word	0x20000000
 8001730:	0800981c 	.word	0x0800981c
 8001734:	08009824 	.word	0x08009824
 8001738:	20000540 	.word	0x20000540
 800173c:	0800982c 	.word	0x0800982c
 8001740:	0800983c 	.word	0x0800983c
 8001744:	08009848 	.word	0x08009848
 8001748:	08009864 	.word	0x08009864
 800174c:	08009884 	.word	0x08009884
 8001750:	08009898 	.word	0x08009898
 8001754:	080098b4 	.word	0x080098b4
 8001758:	080098cc 	.word	0x080098cc
				} else {
					printf("No frequency provided\n");
 800175c:	4834      	ldr	r0, [pc, #208]	; (8001830 <main+0x3dc>)
 800175e:	f002 fbf7 	bl	8003f50 <puts>
				}

				// Parse Samples
				if(arg2 != NULL) {
 8001762:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001764:	2b00      	cmp	r3, #0
 8001766:	d004      	beq.n	8001772 <main+0x31e>
					samples = parseArgument(arg2);
 8001768:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 800176a:	f000 fafd 	bl	8001d68 <parseArgument>
 800176e:	6478      	str	r0, [r7, #68]	; 0x44
 8001770:	e002      	b.n	8001778 <main+0x324>
				} else {
					printf("No number of samples provided\n");
 8001772:	4830      	ldr	r0, [pc, #192]	; (8001834 <main+0x3e0>)
 8001774:	f002 fbec 	bl	8003f50 <puts>
				}

				// Execute Command
				if(arg1 != NULL && arg2 != NULL) {
 8001778:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800177a:	2b00      	cmp	r3, #0
 800177c:	d042      	beq.n	8001804 <main+0x3b0>
 800177e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001780:	2b00      	cmp	r3, #0
 8001782:	d03f      	beq.n	8001804 <main+0x3b0>
					waveform = sawtoothWave(samples);
 8001784:	6c78      	ldr	r0, [r7, #68]	; 0x44
 8001786:	f001 f873 	bl	8002870 <sawtoothWave>
 800178a:	6438      	str	r0, [r7, #64]	; 0x40
					wave_Start(waveform, frequency, samples);
 800178c:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800178e:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 8001790:	6c38      	ldr	r0, [r7, #64]	; 0x40
 8001792:	f001 f959 	bl	8002a48 <wave_Start>
				}
				break;
 8001796:	e035      	b.n	8001804 <main+0x3b0>

			// Triangle wave command
			case 8:
				// Parse Frequency
				if(arg1 != NULL) {
 8001798:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800179a:	2b00      	cmp	r3, #0
 800179c:	d004      	beq.n	80017a8 <main+0x354>
					frequency = parseArgument(arg1);
 800179e:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80017a0:	f000 fae2 	bl	8001d68 <parseArgument>
 80017a4:	64b8      	str	r0, [r7, #72]	; 0x48
 80017a6:	e002      	b.n	80017ae <main+0x35a>
				} else {
					printf("No frequency provided\n");
 80017a8:	4821      	ldr	r0, [pc, #132]	; (8001830 <main+0x3dc>)
 80017aa:	f002 fbd1 	bl	8003f50 <puts>
				}

				// Parse Samples
				if(arg2 != NULL) {
 80017ae:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80017b0:	2b00      	cmp	r3, #0
 80017b2:	d004      	beq.n	80017be <main+0x36a>
					samples = parseArgument(arg2);
 80017b4:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 80017b6:	f000 fad7 	bl	8001d68 <parseArgument>
 80017ba:	6478      	str	r0, [r7, #68]	; 0x44
 80017bc:	e002      	b.n	80017c4 <main+0x370>
				} else {
					printf("No number of samples provided\n");
 80017be:	481d      	ldr	r0, [pc, #116]	; (8001834 <main+0x3e0>)
 80017c0:	f002 fbc6 	bl	8003f50 <puts>
				}

				// Execute Command
				if(arg1 != NULL && arg2 != NULL) {
 80017c4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80017c6:	2b00      	cmp	r3, #0
 80017c8:	d01e      	beq.n	8001808 <main+0x3b4>
 80017ca:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80017cc:	2b00      	cmp	r3, #0
 80017ce:	d01b      	beq.n	8001808 <main+0x3b4>
					waveform = triWave(samples);
 80017d0:	6c78      	ldr	r0, [r7, #68]	; 0x44
 80017d2:	f000 ffcd 	bl	8002770 <triWave>
 80017d6:	6438      	str	r0, [r7, #64]	; 0x40
					wave_Start(waveform, frequency, samples);
 80017d8:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 80017da:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 80017dc:	6c38      	ldr	r0, [r7, #64]	; 0x40
 80017de:	f001 f933 	bl	8002a48 <wave_Start>
				}
				break;
 80017e2:	e011      	b.n	8001808 <main+0x3b4>

			// Stop waveform command
			case 9:
				wave_Stop();
 80017e4:	f001 f996 	bl	8002b14 <wave_Stop>

				// Free the malloc
				free((void*) waveform);
 80017e8:	6c38      	ldr	r0, [r7, #64]	; 0x40
 80017ea:	f001 fbf9 	bl	8002fe0 <free>
				break;
 80017ee:	e00c      	b.n	800180a <main+0x3b6>

			default:
				printf("Invalid command\n\r");
 80017f0:	4811      	ldr	r0, [pc, #68]	; (8001838 <main+0x3e4>)
 80017f2:	f002 fb27 	bl	8003e44 <iprintf>
 80017f6:	e008      	b.n	800180a <main+0x3b6>
			}

		} else {
			printf("No input\n\r");
 80017f8:	4810      	ldr	r0, [pc, #64]	; (800183c <main+0x3e8>)
 80017fa:	f002 fb23 	bl	8003e44 <iprintf>
 80017fe:	e004      	b.n	800180a <main+0x3b6>
				break;
 8001800:	bf00      	nop
 8001802:	e002      	b.n	800180a <main+0x3b6>
				break;
 8001804:	bf00      	nop
 8001806:	e000      	b.n	800180a <main+0x3b6>
				break;
 8001808:	bf00      	nop
		}

		// fgets again because it will read the newline from previous entry
		fgets(input, 29, stdin);
 800180a:	4b0d      	ldr	r3, [pc, #52]	; (8001840 <main+0x3ec>)
 800180c:	681b      	ldr	r3, [r3, #0]
 800180e:	685a      	ldr	r2, [r3, #4]
 8001810:	463b      	mov	r3, r7
 8001812:	211d      	movs	r1, #29
 8001814:	4618      	mov	r0, r3
 8001816:	f001 fa97 	bl	8002d48 <fgets>

		// Clear the input string
		memset(input, 0, strlen(input));
 800181a:	463b      	mov	r3, r7
 800181c:	4618      	mov	r0, r3
 800181e:	f7fe fd51 	bl	80002c4 <strlen>
 8001822:	4602      	mov	r2, r0
 8001824:	463b      	mov	r3, r7
 8001826:	2100      	movs	r1, #0
 8001828:	4618      	mov	r0, r3
 800182a:	f001 fbef 	bl	800300c <memset>
	while(1==1) {
 800182e:	e63d      	b.n	80014ac <main+0x58>
 8001830:	080098b4 	.word	0x080098b4
 8001834:	080098cc 	.word	0x080098cc
 8001838:	080098ec 	.word	0x080098ec
 800183c:	08009900 	.word	0x08009900
 8001840:	20000b10 	.word	0x20000b10

08001844 <memdmpDefault>:
 * Syntax: dm [address]
 *
 * Address must be hexadecimal, prefaced with '0x' and the letters
 * must be caps.
 */
void memdmpDefault(uint8_t* const addr) {
 8001844:	b580      	push	{r7, lr}
 8001846:	b0a2      	sub	sp, #136	; 0x88
 8001848:	af00      	add	r7, sp, #0
 800184a:	6078      	str	r0, [r7, #4]
	// Empty string containing memory dump
	char output[100] = "";
 800184c:	2300      	movs	r3, #0
 800184e:	61bb      	str	r3, [r7, #24]
 8001850:	f107 031c 	add.w	r3, r7, #28
 8001854:	2260      	movs	r2, #96	; 0x60
 8001856:	2100      	movs	r1, #0
 8001858:	4618      	mov	r0, r3
 800185a:	f001 fbd7 	bl	800300c <memset>

	// Add hex dump
	for(int i = 0; i < DEFAULT_SIZE; i++) {
 800185e:	2300      	movs	r3, #0
 8001860:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8001864:	e035      	b.n	80018d2 <memdmpDefault+0x8e>
		uint8_t* target = addr + i;
 8001866:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800186a:	687a      	ldr	r2, [r7, #4]
 800186c:	4413      	add	r3, r2
 800186e:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
		//delay_us(MEM_DELAY);
		uint8_t contents = *target;
 8001872:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 8001876:	781b      	ldrb	r3, [r3, #0]
 8001878:	f887 307f 	strb.w	r3, [r7, #127]	; 0x7f
		//delay_us(MEM_DELAY);
		char temp[10] = "";
 800187c:	2300      	movs	r3, #0
 800187e:	60fb      	str	r3, [r7, #12]
 8001880:	f107 0310 	add.w	r3, r7, #16
 8001884:	2200      	movs	r2, #0
 8001886:	601a      	str	r2, [r3, #0]
 8001888:	809a      	strh	r2, [r3, #4]
		sprintf(temp, "%X", contents);
 800188a:	f897 207f 	ldrb.w	r2, [r7, #127]	; 0x7f
 800188e:	f107 030c 	add.w	r3, r7, #12
 8001892:	4917      	ldr	r1, [pc, #92]	; (80018f0 <memdmpDefault+0xac>)
 8001894:	4618      	mov	r0, r3
 8001896:	f002 fcd1 	bl	800423c <siprintf>
		strcat(temp, " ");
 800189a:	f107 030c 	add.w	r3, r7, #12
 800189e:	4618      	mov	r0, r3
 80018a0:	f7fe fd10 	bl	80002c4 <strlen>
 80018a4:	4603      	mov	r3, r0
 80018a6:	461a      	mov	r2, r3
 80018a8:	f107 030c 	add.w	r3, r7, #12
 80018ac:	4413      	add	r3, r2
 80018ae:	4911      	ldr	r1, [pc, #68]	; (80018f4 <memdmpDefault+0xb0>)
 80018b0:	461a      	mov	r2, r3
 80018b2:	460b      	mov	r3, r1
 80018b4:	881b      	ldrh	r3, [r3, #0]
 80018b6:	8013      	strh	r3, [r2, #0]
		strcat(output, temp);
 80018b8:	f107 020c 	add.w	r2, r7, #12
 80018bc:	f107 0318 	add.w	r3, r7, #24
 80018c0:	4611      	mov	r1, r2
 80018c2:	4618      	mov	r0, r3
 80018c4:	f002 fd49 	bl	800435a <strcat>
	for(int i = 0; i < DEFAULT_SIZE; i++) {
 80018c8:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 80018cc:	3301      	adds	r3, #1
 80018ce:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 80018d2:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 80018d6:	2b0f      	cmp	r3, #15
 80018d8:	ddc5      	ble.n	8001866 <memdmpDefault+0x22>
	}

	// Print the formatted result
	printf("0x%X: %s\n\r", (unsigned int)addr, output);
 80018da:	687b      	ldr	r3, [r7, #4]
 80018dc:	f107 0218 	add.w	r2, r7, #24
 80018e0:	4619      	mov	r1, r3
 80018e2:	4805      	ldr	r0, [pc, #20]	; (80018f8 <memdmpDefault+0xb4>)
 80018e4:	f002 faae 	bl	8003e44 <iprintf>

	return;
 80018e8:	bf00      	nop
}
 80018ea:	3788      	adds	r7, #136	; 0x88
 80018ec:	46bd      	mov	sp, r7
 80018ee:	bd80      	pop	{r7, pc}
 80018f0:	0800990c 	.word	0x0800990c
 80018f4:	08009910 	.word	0x08009910
 80018f8:	08009914 	.word	0x08009914

080018fc <memdmp>:
 * Syntax: dm [address] [length]
 *
 * Address must be hexadecimal, prefaced with '0x' and the letters
 * must be caps.
 */
void memdmp(uint8_t* const addr, uint32_t len) {
 80018fc:	b580      	push	{r7, lr}
 80018fe:	b0a6      	sub	sp, #152	; 0x98
 8001900:	af00      	add	r7, sp, #0
 8001902:	6078      	str	r0, [r7, #4]
 8001904:	6039      	str	r1, [r7, #0]
	char output[100] = "";
 8001906:	2300      	movs	r3, #0
 8001908:	623b      	str	r3, [r7, #32]
 800190a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800190e:	2260      	movs	r2, #96	; 0x60
 8001910:	2100      	movs	r1, #0
 8001912:	4618      	mov	r0, r3
 8001914:	f001 fb7a 	bl	800300c <memset>
	unsigned int newlines = 0;
 8001918:	2300      	movs	r3, #0
 800191a:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
	uint8_t* newaddr = 0;
 800191e:	2300      	movs	r3, #0
 8001920:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
	uint8_t contents = 0;
 8001924:	2300      	movs	r3, #0
 8001926:	f887 308b 	strb.w	r3, [r7, #139]	; 0x8b

	// Hex dump
	for(int i = 0; i < len; i++) {
 800192a:	2300      	movs	r3, #0
 800192c:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8001930:	e080      	b.n	8001a34 <memdmp+0x138>
		newaddr = addr + i;
 8001932:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8001936:	687a      	ldr	r2, [r7, #4]
 8001938:	4413      	add	r3, r2
 800193a:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
		contents = *newaddr;
 800193e:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8001942:	781b      	ldrb	r3, [r3, #0]
 8001944:	f887 308b 	strb.w	r3, [r7, #139]	; 0x8b
		// New line every 16 bytes, clear output buffer after printing
		if((i%16 == 0) && i > 0) {
 8001948:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 800194c:	f003 030f 	and.w	r3, r3, #15
 8001950:	2b00      	cmp	r3, #0
 8001952:	d144      	bne.n	80019de <memdmp+0xe2>
 8001954:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8001958:	2b00      	cmp	r3, #0
 800195a:	dd40      	ble.n	80019de <memdmp+0xe2>
			printf("0x%X: %s\n\r", (unsigned int)newaddr-16, output);
 800195c:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8001960:	3b10      	subs	r3, #16
 8001962:	f107 0220 	add.w	r2, r7, #32
 8001966:	4619      	mov	r1, r3
 8001968:	4844      	ldr	r0, [pc, #272]	; (8001a7c <memdmp+0x180>)
 800196a:	f002 fa6b 	bl	8003e44 <iprintf>
			memset(output, 0, strlen(output));
 800196e:	f107 0320 	add.w	r3, r7, #32
 8001972:	4618      	mov	r0, r3
 8001974:	f7fe fca6 	bl	80002c4 <strlen>
 8001978:	4602      	mov	r2, r0
 800197a:	f107 0320 	add.w	r3, r7, #32
 800197e:	2100      	movs	r1, #0
 8001980:	4618      	mov	r0, r3
 8001982:	f001 fb43 	bl	800300c <memset>
			newlines++;
 8001986:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800198a:	3301      	adds	r3, #1
 800198c:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94

			char temp[10] = "";
 8001990:	2300      	movs	r3, #0
 8001992:	617b      	str	r3, [r7, #20]
 8001994:	f107 0318 	add.w	r3, r7, #24
 8001998:	2200      	movs	r2, #0
 800199a:	601a      	str	r2, [r3, #0]
 800199c:	809a      	strh	r2, [r3, #4]
			sprintf(temp, "%X", contents);
 800199e:	f897 208b 	ldrb.w	r2, [r7, #139]	; 0x8b
 80019a2:	f107 0314 	add.w	r3, r7, #20
 80019a6:	4936      	ldr	r1, [pc, #216]	; (8001a80 <memdmp+0x184>)
 80019a8:	4618      	mov	r0, r3
 80019aa:	f002 fc47 	bl	800423c <siprintf>

			// Append a space
			strcat(temp, " ");
 80019ae:	f107 0314 	add.w	r3, r7, #20
 80019b2:	4618      	mov	r0, r3
 80019b4:	f7fe fc86 	bl	80002c4 <strlen>
 80019b8:	4603      	mov	r3, r0
 80019ba:	461a      	mov	r2, r3
 80019bc:	f107 0314 	add.w	r3, r7, #20
 80019c0:	4413      	add	r3, r2
 80019c2:	4930      	ldr	r1, [pc, #192]	; (8001a84 <memdmp+0x188>)
 80019c4:	461a      	mov	r2, r3
 80019c6:	460b      	mov	r3, r1
 80019c8:	881b      	ldrh	r3, [r3, #0]
 80019ca:	8013      	strh	r3, [r2, #0]

			// Append contents to output
			strcat(output, temp);
 80019cc:	f107 0214 	add.w	r2, r7, #20
 80019d0:	f107 0320 	add.w	r3, r7, #32
 80019d4:	4611      	mov	r1, r2
 80019d6:	4618      	mov	r0, r3
 80019d8:	f002 fcbf 	bl	800435a <strcat>
		if((i%16 == 0) && i > 0) {
 80019dc:	e025      	b.n	8001a2a <memdmp+0x12e>
		} else {
			// Current contents string
			char temp[10] = "";
 80019de:	2300      	movs	r3, #0
 80019e0:	60bb      	str	r3, [r7, #8]
 80019e2:	f107 030c 	add.w	r3, r7, #12
 80019e6:	2200      	movs	r2, #0
 80019e8:	601a      	str	r2, [r3, #0]
 80019ea:	809a      	strh	r2, [r3, #4]
			sprintf(temp, "%X", contents);
 80019ec:	f897 208b 	ldrb.w	r2, [r7, #139]	; 0x8b
 80019f0:	f107 0308 	add.w	r3, r7, #8
 80019f4:	4922      	ldr	r1, [pc, #136]	; (8001a80 <memdmp+0x184>)
 80019f6:	4618      	mov	r0, r3
 80019f8:	f002 fc20 	bl	800423c <siprintf>

			// Append a space
			strcat(temp, " ");
 80019fc:	f107 0308 	add.w	r3, r7, #8
 8001a00:	4618      	mov	r0, r3
 8001a02:	f7fe fc5f 	bl	80002c4 <strlen>
 8001a06:	4603      	mov	r3, r0
 8001a08:	461a      	mov	r2, r3
 8001a0a:	f107 0308 	add.w	r3, r7, #8
 8001a0e:	4413      	add	r3, r2
 8001a10:	491c      	ldr	r1, [pc, #112]	; (8001a84 <memdmp+0x188>)
 8001a12:	461a      	mov	r2, r3
 8001a14:	460b      	mov	r3, r1
 8001a16:	881b      	ldrh	r3, [r3, #0]
 8001a18:	8013      	strh	r3, [r2, #0]

			// Append contents to output
			strcat(output, temp);
 8001a1a:	f107 0208 	add.w	r2, r7, #8
 8001a1e:	f107 0320 	add.w	r3, r7, #32
 8001a22:	4611      	mov	r1, r2
 8001a24:	4618      	mov	r0, r3
 8001a26:	f002 fc98 	bl	800435a <strcat>
	for(int i = 0; i < len; i++) {
 8001a2a:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8001a2e:	3301      	adds	r3, #1
 8001a30:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8001a34:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8001a38:	683a      	ldr	r2, [r7, #0]
 8001a3a:	429a      	cmp	r2, r3
 8001a3c:	f63f af79 	bhi.w	8001932 <memdmp+0x36>
		}
	}

	// If output is not empty, print it
	if(strnlen((const char*)output, 99) > 1) {
 8001a40:	f107 0320 	add.w	r3, r7, #32
 8001a44:	2163      	movs	r1, #99	; 0x63
 8001a46:	4618      	mov	r0, r3
 8001a48:	f002 fc96 	bl	8004378 <strnlen>
 8001a4c:	4603      	mov	r3, r0
 8001a4e:	2b01      	cmp	r3, #1
 8001a50:	d90f      	bls.n	8001a72 <memdmp+0x176>
		unsigned int actualAddr = (unsigned int)addr + (newlines * 16);
 8001a52:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8001a56:	011a      	lsls	r2, r3, #4
 8001a58:	687b      	ldr	r3, [r7, #4]
 8001a5a:	4413      	add	r3, r2
 8001a5c:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
		printf("0x%X: %s\n\r", actualAddr, output);
 8001a60:	f107 0320 	add.w	r3, r7, #32
 8001a64:	461a      	mov	r2, r3
 8001a66:	f8d7 1084 	ldr.w	r1, [r7, #132]	; 0x84
 8001a6a:	4804      	ldr	r0, [pc, #16]	; (8001a7c <memdmp+0x180>)
 8001a6c:	f002 f9ea 	bl	8003e44 <iprintf>
	}

	return;
 8001a70:	bf00      	nop
 8001a72:	bf00      	nop
}
 8001a74:	3798      	adds	r7, #152	; 0x98
 8001a76:	46bd      	mov	sp, r7
 8001a78:	bd80      	pop	{r7, pc}
 8001a7a:	bf00      	nop
 8001a7c:	08009914 	.word	0x08009914
 8001a80:	0800990c 	.word	0x0800990c
 8001a84:	08009910 	.word	0x08009910

08001a88 <memwrd>:
 * Syntax: rmw [address]
 *
 * Address must be hexadecimal and word aligned, prefaced with '0x'
 * and the letters must be caps.
 */
void memwrd(const uint32_t* addr) {
 8001a88:	b580      	push	{r7, lr}
 8001a8a:	b084      	sub	sp, #16
 8001a8c:	af00      	add	r7, sp, #0
 8001a8e:	6078      	str	r0, [r7, #4]
	// One word in our system is 32 bits, so word alignment is every 32 bits
	unsigned int contents = 0;
 8001a90:	2300      	movs	r3, #0
 8001a92:	60fb      	str	r3, [r7, #12]

	if((unsigned int)addr%32 == 0) {
 8001a94:	687b      	ldr	r3, [r7, #4]
 8001a96:	f003 031f 	and.w	r3, r3, #31
 8001a9a:	2b00      	cmp	r3, #0
 8001a9c:	d109      	bne.n	8001ab2 <memwrd+0x2a>
		contents = *addr;
 8001a9e:	687b      	ldr	r3, [r7, #4]
 8001aa0:	681b      	ldr	r3, [r3, #0]
 8001aa2:	60fb      	str	r3, [r7, #12]
		printf("0x%X: 0x%X %d\n\r", (unsigned int)addr, contents, contents);
 8001aa4:	6879      	ldr	r1, [r7, #4]
 8001aa6:	68fb      	ldr	r3, [r7, #12]
 8001aa8:	68fa      	ldr	r2, [r7, #12]
 8001aaa:	4806      	ldr	r0, [pc, #24]	; (8001ac4 <memwrd+0x3c>)
 8001aac:	f002 f9ca 	bl	8003e44 <iprintf>
	} else {
		// Print the address and the text "Bad alignment" if it breaks word boundaries
		printf("0x%X: Bad alignment\n\r", (unsigned int)addr);
	}

	return;
 8001ab0:	e005      	b.n	8001abe <memwrd+0x36>
		printf("0x%X: Bad alignment\n\r", (unsigned int)addr);
 8001ab2:	687b      	ldr	r3, [r7, #4]
 8001ab4:	4619      	mov	r1, r3
 8001ab6:	4804      	ldr	r0, [pc, #16]	; (8001ac8 <memwrd+0x40>)
 8001ab8:	f002 f9c4 	bl	8003e44 <iprintf>
	return;
 8001abc:	bf00      	nop
}
 8001abe:	3710      	adds	r7, #16
 8001ac0:	46bd      	mov	sp, r7
 8001ac2:	bd80      	pop	{r7, pc}
 8001ac4:	08009920 	.word	0x08009920
 8001ac8:	08009930 	.word	0x08009930

08001acc <wmemwrd>:
 * Syntax: wmw [address] [value]
 *
 * Address must be hexadecimal and word aligned, prefaced with '0x'
 * and the letters must be caps.
 */
void wmemwrd(uint32_t* const dest, uint32_t contents) {
 8001acc:	b580      	push	{r7, lr}
 8001ace:	b082      	sub	sp, #8
 8001ad0:	af00      	add	r7, sp, #0
 8001ad2:	6078      	str	r0, [r7, #4]
 8001ad4:	6039      	str	r1, [r7, #0]
	if((unsigned int)dest % 32 == 0) {
 8001ad6:	687b      	ldr	r3, [r7, #4]
 8001ad8:	f003 031f 	and.w	r3, r3, #31
 8001adc:	2b00      	cmp	r3, #0
 8001ade:	d106      	bne.n	8001aee <wmemwrd+0x22>
		// Write value
		*dest = contents;
 8001ae0:	687b      	ldr	r3, [r7, #4]
 8001ae2:	683a      	ldr	r2, [r7, #0]
 8001ae4:	601a      	str	r2, [r3, #0]

		// Print new value
		memwrd(dest);
 8001ae6:	6878      	ldr	r0, [r7, #4]
 8001ae8:	f7ff ffce 	bl	8001a88 <memwrd>
	} else {
		// Error message
		printf("0x%X: Bad alignment, nothing written\n\r", (unsigned int)dest);
	}
	return;
 8001aec:	e005      	b.n	8001afa <wmemwrd+0x2e>
		printf("0x%X: Bad alignment, nothing written\n\r", (unsigned int)dest);
 8001aee:	687b      	ldr	r3, [r7, #4]
 8001af0:	4619      	mov	r1, r3
 8001af2:	4803      	ldr	r0, [pc, #12]	; (8001b00 <wmemwrd+0x34>)
 8001af4:	f002 f9a6 	bl	8003e44 <iprintf>
	return;
 8001af8:	bf00      	nop
}
 8001afa:	3708      	adds	r7, #8
 8001afc:	46bd      	mov	sp, r7
 8001afe:	bd80      	pop	{r7, pc}
 8001b00:	08009948 	.word	0x08009948

08001b04 <parseCommand>:
 * 'saw' = 7
 * 'tri' = 8
 * 'stop' = 9
 * invalid = -1
 */
int parseCommand(const char* input) {
 8001b04:	b580      	push	{r7, lr}
 8001b06:	b084      	sub	sp, #16
 8001b08:	af00      	add	r7, sp, #0
 8001b0a:	6078      	str	r0, [r7, #4]
	// Default command, -1 = invalid command
	int command = -1;
 8001b0c:	f04f 33ff 	mov.w	r3, #4294967295
 8001b10:	60fb      	str	r3, [r7, #12]

	// Switch statement based on first char
	switch(input[0]) {
 8001b12:	687b      	ldr	r3, [r7, #4]
 8001b14:	781b      	ldrb	r3, [r3, #0]
 8001b16:	2b3f      	cmp	r3, #63	; 0x3f
 8001b18:	d038      	beq.n	8001b8c <parseCommand+0x88>
 8001b1a:	2b3f      	cmp	r3, #63	; 0x3f
 8001b1c:	f2c0 80af 	blt.w	8001c7e <parseCommand+0x17a>
 8001b20:	2b77      	cmp	r3, #119	; 0x77
 8001b22:	f300 80ac 	bgt.w	8001c7e <parseCommand+0x17a>
 8001b26:	2b64      	cmp	r3, #100	; 0x64
 8001b28:	f2c0 80a9 	blt.w	8001c7e <parseCommand+0x17a>
 8001b2c:	3b64      	subs	r3, #100	; 0x64
 8001b2e:	2b13      	cmp	r3, #19
 8001b30:	f200 80a5 	bhi.w	8001c7e <parseCommand+0x17a>
 8001b34:	a201      	add	r2, pc, #4	; (adr r2, 8001b3c <parseCommand+0x38>)
 8001b36:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001b3a:	bf00      	nop
 8001b3c:	08001b93 	.word	0x08001b93
 8001b40:	08001c7f 	.word	0x08001c7f
 8001b44:	08001c7f 	.word	0x08001c7f
 8001b48:	08001c7f 	.word	0x08001c7f
 8001b4c:	08001c7f 	.word	0x08001c7f
 8001b50:	08001c7f 	.word	0x08001c7f
 8001b54:	08001c7f 	.word	0x08001c7f
 8001b58:	08001c7f 	.word	0x08001c7f
 8001b5c:	08001c7f 	.word	0x08001c7f
 8001b60:	08001bd7 	.word	0x08001bd7
 8001b64:	08001c7f 	.word	0x08001c7f
 8001b68:	08001c7f 	.word	0x08001c7f
 8001b6c:	08001c7f 	.word	0x08001c7f
 8001b70:	08001c7f 	.word	0x08001c7f
 8001b74:	08001ba3 	.word	0x08001ba3
 8001b78:	08001c19 	.word	0x08001c19
 8001b7c:	08001c55 	.word	0x08001c55
 8001b80:	08001c7f 	.word	0x08001c7f
 8001b84:	08001c7f 	.word	0x08001c7f
 8001b88:	08001bbd 	.word	0x08001bbd
	// Help command, return 0
	case '?':
		command = 0;
 8001b8c:	2300      	movs	r3, #0
 8001b8e:	60fb      	str	r3, [r7, #12]
		break;
 8001b90:	e075      	b.n	8001c7e <parseCommand+0x17a>

	// Dump memory command, return 1
	case 'd':
		if(input[1] == 'm') {
 8001b92:	687b      	ldr	r3, [r7, #4]
 8001b94:	3301      	adds	r3, #1
 8001b96:	781b      	ldrb	r3, [r3, #0]
 8001b98:	2b6d      	cmp	r3, #109	; 0x6d
 8001b9a:	d165      	bne.n	8001c68 <parseCommand+0x164>
			command = 1;
 8001b9c:	2301      	movs	r3, #1
 8001b9e:	60fb      	str	r3, [r7, #12]
		}
		break;
 8001ba0:	e062      	b.n	8001c68 <parseCommand+0x164>

	// Read word command, return 2
	case 'r':
		if(input[1] == 'm' && input[2] == 'w') {
 8001ba2:	687b      	ldr	r3, [r7, #4]
 8001ba4:	3301      	adds	r3, #1
 8001ba6:	781b      	ldrb	r3, [r3, #0]
 8001ba8:	2b6d      	cmp	r3, #109	; 0x6d
 8001baa:	d15f      	bne.n	8001c6c <parseCommand+0x168>
 8001bac:	687b      	ldr	r3, [r7, #4]
 8001bae:	3302      	adds	r3, #2
 8001bb0:	781b      	ldrb	r3, [r3, #0]
 8001bb2:	2b77      	cmp	r3, #119	; 0x77
 8001bb4:	d15a      	bne.n	8001c6c <parseCommand+0x168>
			command = 2;
 8001bb6:	2302      	movs	r3, #2
 8001bb8:	60fb      	str	r3, [r7, #12]
		}
		break;
 8001bba:	e057      	b.n	8001c6c <parseCommand+0x168>

	// Write word command, return 3
	case 'w':
		if(input[1] == 'm' && input[2] == 'w') {
 8001bbc:	687b      	ldr	r3, [r7, #4]
 8001bbe:	3301      	adds	r3, #1
 8001bc0:	781b      	ldrb	r3, [r3, #0]
 8001bc2:	2b6d      	cmp	r3, #109	; 0x6d
 8001bc4:	d154      	bne.n	8001c70 <parseCommand+0x16c>
 8001bc6:	687b      	ldr	r3, [r7, #4]
 8001bc8:	3302      	adds	r3, #2
 8001bca:	781b      	ldrb	r3, [r3, #0]
 8001bcc:	2b77      	cmp	r3, #119	; 0x77
 8001bce:	d14f      	bne.n	8001c70 <parseCommand+0x16c>
			command = 3;
 8001bd0:	2303      	movs	r3, #3
 8001bd2:	60fb      	str	r3, [r7, #12]
		}
		break;
 8001bd4:	e04c      	b.n	8001c70 <parseCommand+0x16c>

	case 'm':
		if(input[1] == 'u' && input[2] == 's' && input[3] == 'i' && input[4] == 'c') {
 8001bd6:	687b      	ldr	r3, [r7, #4]
 8001bd8:	3301      	adds	r3, #1
 8001bda:	781b      	ldrb	r3, [r3, #0]
 8001bdc:	2b75      	cmp	r3, #117	; 0x75
 8001bde:	d111      	bne.n	8001c04 <parseCommand+0x100>
 8001be0:	687b      	ldr	r3, [r7, #4]
 8001be2:	3302      	adds	r3, #2
 8001be4:	781b      	ldrb	r3, [r3, #0]
 8001be6:	2b73      	cmp	r3, #115	; 0x73
 8001be8:	d10c      	bne.n	8001c04 <parseCommand+0x100>
 8001bea:	687b      	ldr	r3, [r7, #4]
 8001bec:	3303      	adds	r3, #3
 8001bee:	781b      	ldrb	r3, [r3, #0]
 8001bf0:	2b69      	cmp	r3, #105	; 0x69
 8001bf2:	d107      	bne.n	8001c04 <parseCommand+0x100>
 8001bf4:	687b      	ldr	r3, [r7, #4]
 8001bf6:	3304      	adds	r3, #4
 8001bf8:	781b      	ldrb	r3, [r3, #0]
 8001bfa:	2b63      	cmp	r3, #99	; 0x63
 8001bfc:	d102      	bne.n	8001c04 <parseCommand+0x100>
			command = 4;
 8001bfe:	2304      	movs	r3, #4
 8001c00:	60fb      	str	r3, [r7, #12]
		} else if(strcmp(input, "measure") == 0) {
			command = 5;
		}
		break;
 8001c02:	e037      	b.n	8001c74 <parseCommand+0x170>
		} else if(strcmp(input, "measure") == 0) {
 8001c04:	4920      	ldr	r1, [pc, #128]	; (8001c88 <parseCommand+0x184>)
 8001c06:	6878      	ldr	r0, [r7, #4]
 8001c08:	f7fe fb52 	bl	80002b0 <strcmp>
 8001c0c:	4603      	mov	r3, r0
 8001c0e:	2b00      	cmp	r3, #0
 8001c10:	d130      	bne.n	8001c74 <parseCommand+0x170>
			command = 5;
 8001c12:	2305      	movs	r3, #5
 8001c14:	60fb      	str	r3, [r7, #12]
		break;
 8001c16:	e02d      	b.n	8001c74 <parseCommand+0x170>

	// Sine/sawtooth command
	case 's':
		if(strcmp(input, "sine") == 0) {
 8001c18:	491c      	ldr	r1, [pc, #112]	; (8001c8c <parseCommand+0x188>)
 8001c1a:	6878      	ldr	r0, [r7, #4]
 8001c1c:	f7fe fb48 	bl	80002b0 <strcmp>
 8001c20:	4603      	mov	r3, r0
 8001c22:	2b00      	cmp	r3, #0
 8001c24:	d102      	bne.n	8001c2c <parseCommand+0x128>
			command = 6;
 8001c26:	2306      	movs	r3, #6
 8001c28:	60fb      	str	r3, [r7, #12]
		} else if(strcmp(input, "saw") == 0) {
			command = 7;
		} else if(strcmp(input, "stop\n") == 0) {
			command = 9;
		}
		break;
 8001c2a:	e025      	b.n	8001c78 <parseCommand+0x174>
		} else if(strcmp(input, "saw") == 0) {
 8001c2c:	4918      	ldr	r1, [pc, #96]	; (8001c90 <parseCommand+0x18c>)
 8001c2e:	6878      	ldr	r0, [r7, #4]
 8001c30:	f7fe fb3e 	bl	80002b0 <strcmp>
 8001c34:	4603      	mov	r3, r0
 8001c36:	2b00      	cmp	r3, #0
 8001c38:	d102      	bne.n	8001c40 <parseCommand+0x13c>
			command = 7;
 8001c3a:	2307      	movs	r3, #7
 8001c3c:	60fb      	str	r3, [r7, #12]
		break;
 8001c3e:	e01b      	b.n	8001c78 <parseCommand+0x174>
		} else if(strcmp(input, "stop\n") == 0) {
 8001c40:	4914      	ldr	r1, [pc, #80]	; (8001c94 <parseCommand+0x190>)
 8001c42:	6878      	ldr	r0, [r7, #4]
 8001c44:	f7fe fb34 	bl	80002b0 <strcmp>
 8001c48:	4603      	mov	r3, r0
 8001c4a:	2b00      	cmp	r3, #0
 8001c4c:	d114      	bne.n	8001c78 <parseCommand+0x174>
			command = 9;
 8001c4e:	2309      	movs	r3, #9
 8001c50:	60fb      	str	r3, [r7, #12]
		break;
 8001c52:	e011      	b.n	8001c78 <parseCommand+0x174>

	// Triangle wave
	case 't':
		if(strcmp(input, "tri") == 0) {
 8001c54:	4910      	ldr	r1, [pc, #64]	; (8001c98 <parseCommand+0x194>)
 8001c56:	6878      	ldr	r0, [r7, #4]
 8001c58:	f7fe fb2a 	bl	80002b0 <strcmp>
 8001c5c:	4603      	mov	r3, r0
 8001c5e:	2b00      	cmp	r3, #0
 8001c60:	d10c      	bne.n	8001c7c <parseCommand+0x178>
			command = 8;
 8001c62:	2308      	movs	r3, #8
 8001c64:	60fb      	str	r3, [r7, #12]
		}
		break;
 8001c66:	e009      	b.n	8001c7c <parseCommand+0x178>
		break;
 8001c68:	bf00      	nop
 8001c6a:	e008      	b.n	8001c7e <parseCommand+0x17a>
		break;
 8001c6c:	bf00      	nop
 8001c6e:	e006      	b.n	8001c7e <parseCommand+0x17a>
		break;
 8001c70:	bf00      	nop
 8001c72:	e004      	b.n	8001c7e <parseCommand+0x17a>
		break;
 8001c74:	bf00      	nop
 8001c76:	e002      	b.n	8001c7e <parseCommand+0x17a>
		break;
 8001c78:	bf00      	nop
 8001c7a:	e000      	b.n	8001c7e <parseCommand+0x17a>
		break;
 8001c7c:	bf00      	nop
	}

	return command;
 8001c7e:	68fb      	ldr	r3, [r7, #12]
}
 8001c80:	4618      	mov	r0, r3
 8001c82:	3710      	adds	r7, #16
 8001c84:	46bd      	mov	sp, r7
 8001c86:	bd80      	pop	{r7, pc}
 8001c88:	08009970 	.word	0x08009970
 8001c8c:	08009978 	.word	0x08009978
 8001c90:	08009980 	.word	0x08009980
 8001c94:	08009984 	.word	0x08009984
 8001c98:	0800998c 	.word	0x0800998c

08001c9c <help>:
/**
 * help
 * Prints a bunch of lines to stdout to help
 * with syntaxes of the commands
 */
void help() {
 8001c9c:	b580      	push	{r7, lr}
 8001c9e:	af00      	add	r7, sp, #0
	printf("NOTE: All commands are case-sensitive!\n\n");
 8001ca0:	4818      	ldr	r0, [pc, #96]	; (8001d04 <help+0x68>)
 8001ca2:	f002 f955 	bl	8003f50 <puts>

	// WMW
	printf("command \'wmw\' - write memory word - writes a provided 32-bit value into the specified address in memory\n\r");
 8001ca6:	4818      	ldr	r0, [pc, #96]	; (8001d08 <help+0x6c>)
 8001ca8:	f002 f8cc 	bl	8003e44 <iprintf>
	printf("\tsyntax: wmw [address] [value]\n\r");
 8001cac:	4817      	ldr	r0, [pc, #92]	; (8001d0c <help+0x70>)
 8001cae:	f002 f8c9 	bl	8003e44 <iprintf>
	printf("the provided address must be hexadecimal with capital letters and prefaced with \'0x\'\n\r");
 8001cb2:	4817      	ldr	r0, [pc, #92]	; (8001d10 <help+0x74>)
 8001cb4:	f002 f8c6 	bl	8003e44 <iprintf>
	printf("the value to be written can be provided in either hex or decimal, default is decimal, unless a \'0x\' is found\n\n\r");
 8001cb8:	4816      	ldr	r0, [pc, #88]	; (8001d14 <help+0x78>)
 8001cba:	f002 f8c3 	bl	8003e44 <iprintf>

	// RMW
	printf("command \'rmw\' - read memory word - reads a provided address and outputs the unsigned contents of that address in both hex and decimal\n\r");
 8001cbe:	4816      	ldr	r0, [pc, #88]	; (8001d18 <help+0x7c>)
 8001cc0:	f002 f8c0 	bl	8003e44 <iprintf>
	printf("\tsyntax: rmw [address]\n\r");
 8001cc4:	4815      	ldr	r0, [pc, #84]	; (8001d1c <help+0x80>)
 8001cc6:	f002 f8bd 	bl	8003e44 <iprintf>
	printf("the provided address must be hexadecimal with capital letters and prefaced with \'0x\'\n\n\r");
 8001cca:	4815      	ldr	r0, [pc, #84]	; (8001d20 <help+0x84>)
 8001ccc:	f002 f8ba 	bl	8003e44 <iprintf>

	// DM
	printf("command \'dm\' - dump memory - reads memory starting at the provided address for the provided length in bytes, outputs byte-sized hex values\n\r");
 8001cd0:	4814      	ldr	r0, [pc, #80]	; (8001d24 <help+0x88>)
 8001cd2:	f002 f8b7 	bl	8003e44 <iprintf>
	printf("\tsyntax: dm [address] [OPT:length]\n\r");
 8001cd6:	4814      	ldr	r0, [pc, #80]	; (8001d28 <help+0x8c>)
 8001cd8:	f002 f8b4 	bl	8003e44 <iprintf>
	printf("\tif no length is specified, default is 16 bytes\n\r");
 8001cdc:	4813      	ldr	r0, [pc, #76]	; (8001d2c <help+0x90>)
 8001cde:	f002 f8b1 	bl	8003e44 <iprintf>
	printf("the provided address must be hexadecimal with capital letters and prefaced with \'0x\'\n\r");
 8001ce2:	480b      	ldr	r0, [pc, #44]	; (8001d10 <help+0x74>)
 8001ce4:	f002 f8ae 	bl	8003e44 <iprintf>
	printf("the length can be provided in either hex or decimal, default is decimal, unless a \'0x\' is found\n\r");
 8001ce8:	4811      	ldr	r0, [pc, #68]	; (8001d30 <help+0x94>)
 8001cea:	f002 f8ab 	bl	8003e44 <iprintf>

	// music
	printf("command \'music\' - Plays a song\n");
 8001cee:	4811      	ldr	r0, [pc, #68]	; (8001d34 <help+0x98>)
 8001cf0:	f002 f92e 	bl	8003f50 <puts>
	printf("\tsyntax: music [song] [OPT:background]\n");
 8001cf4:	4810      	ldr	r0, [pc, #64]	; (8001d38 <help+0x9c>)
 8001cf6:	f002 f92b 	bl	8003f50 <puts>
	printf("current songs as of lab 5: \n\t\'doom\' - At Doom's Gate\n\t\'zelda\' - Legend of Zelda Main Theme");
 8001cfa:	4810      	ldr	r0, [pc, #64]	; (8001d3c <help+0xa0>)
 8001cfc:	f002 f8a2 	bl	8003e44 <iprintf>
	return;
 8001d00:	bf00      	nop
}
 8001d02:	bd80      	pop	{r7, pc}
 8001d04:	08009990 	.word	0x08009990
 8001d08:	080099b8 	.word	0x080099b8
 8001d0c:	08009a24 	.word	0x08009a24
 8001d10:	08009a48 	.word	0x08009a48
 8001d14:	08009aa0 	.word	0x08009aa0
 8001d18:	08009b10 	.word	0x08009b10
 8001d1c:	08009b98 	.word	0x08009b98
 8001d20:	08009bb4 	.word	0x08009bb4
 8001d24:	08009c0c 	.word	0x08009c0c
 8001d28:	08009c9c 	.word	0x08009c9c
 8001d2c:	08009cc4 	.word	0x08009cc4
 8001d30:	08009cf8 	.word	0x08009cf8
 8001d34:	08009d5c 	.word	0x08009d5c
 8001d38:	08009d7c 	.word	0x08009d7c
 8001d3c:	08009da4 	.word	0x08009da4

08001d40 <parseAddress>:
 * Attempts to parse a string containing an address into that address.
 * Uses sscanf
 * Input must be hex and prefaced with '0x'
 * All hex chars after the preface must be caps
 */
uint32_t* parseAddress(const char* input) {
 8001d40:	b580      	push	{r7, lr}
 8001d42:	b084      	sub	sp, #16
 8001d44:	af00      	add	r7, sp, #0
 8001d46:	6078      	str	r0, [r7, #4]
	// Variable to store parsed address
	unsigned int address = 0;
 8001d48:	2300      	movs	r3, #0
 8001d4a:	60fb      	str	r3, [r7, #12]

	// Parse the address
	sscanf(input, "0x%X", &address);
 8001d4c:	f107 030c 	add.w	r3, r7, #12
 8001d50:	461a      	mov	r2, r3
 8001d52:	4904      	ldr	r1, [pc, #16]	; (8001d64 <parseAddress+0x24>)
 8001d54:	6878      	ldr	r0, [r7, #4]
 8001d56:	f002 fa91 	bl	800427c <siscanf>

	// Return the address
	return (uint32_t*)address;
 8001d5a:	68fb      	ldr	r3, [r7, #12]
}
 8001d5c:	4618      	mov	r0, r3
 8001d5e:	3710      	adds	r7, #16
 8001d60:	46bd      	mov	sp, r7
 8001d62:	bd80      	pop	{r7, pc}
 8001d64:	08009e00 	.word	0x08009e00

08001d68 <parseArgument>:
/**
 * parseArgument
 * Takes a string and attempts to convert it to a number.
 * Input must be in decimal and unsigned.
 */
uint32_t parseArgument(const char* input) {
 8001d68:	b580      	push	{r7, lr}
 8001d6a:	b084      	sub	sp, #16
 8001d6c:	af00      	add	r7, sp, #0
 8001d6e:	6078      	str	r0, [r7, #4]
	// Default value if the input can't be parsed
	uint32_t parsed = -1;
 8001d70:	f04f 33ff 	mov.w	r3, #4294967295
 8001d74:	60fb      	str	r3, [r7, #12]

	// Attempt to parse
	sscanf(input, "%lu", &parsed);
 8001d76:	f107 030c 	add.w	r3, r7, #12
 8001d7a:	461a      	mov	r2, r3
 8001d7c:	4904      	ldr	r1, [pc, #16]	; (8001d90 <parseArgument+0x28>)
 8001d7e:	6878      	ldr	r0, [r7, #4]
 8001d80:	f002 fa7c 	bl	800427c <siscanf>

	// Return the parsed value
	return parsed;
 8001d84:	68fb      	ldr	r3, [r7, #12]
}
 8001d86:	4618      	mov	r0, r3
 8001d88:	3710      	adds	r7, #16
 8001d8a:	46bd      	mov	sp, r7
 8001d8c:	bd80      	pop	{r7, pc}
 8001d8e:	bf00      	nop
 8001d90:	08009e08 	.word	0x08009e08

08001d94 <note_Play>:
static uint8_t backgroundPlaying = 0;

/**
 * Plays individual notes using a busy wait
 */
void note_Play(uint32_t period, uint32_t duration) {
 8001d94:	b580      	push	{r7, lr}
 8001d96:	b084      	sub	sp, #16
 8001d98:	af00      	add	r7, sp, #0
 8001d9a:	6078      	str	r0, [r7, #4]
 8001d9c:	6039      	str	r1, [r7, #0]
	volatile TIMER* TIM3 = (TIMER*) TIM3_BASE;
 8001d9e:	4b12      	ldr	r3, [pc, #72]	; (8001de8 <note_Play+0x54>)
 8001da0:	60fb      	str	r3, [r7, #12]
	if(period == 0) {
 8001da2:	687b      	ldr	r3, [r7, #4]
 8001da4:	2b00      	cmp	r3, #0
 8001da6:	d103      	bne.n	8001db0 <note_Play+0x1c>
		// If period = 0, just do a delay
		delay_us(duration);
 8001da8:	6838      	ldr	r0, [r7, #0]
 8001daa:	f7ff fb27 	bl	80013fc <delay_us>

		// Stop playing note
		TIM3->CR1 &= ~(1);
	}

	return;
 8001dae:	e017      	b.n	8001de0 <note_Play+0x4c>
		TIM3->CCR1 = period >> 1;
 8001db0:	687b      	ldr	r3, [r7, #4]
 8001db2:	085a      	lsrs	r2, r3, #1
 8001db4:	68fb      	ldr	r3, [r7, #12]
 8001db6:	635a      	str	r2, [r3, #52]	; 0x34
		TIM3->ARR = period - 1;
 8001db8:	687b      	ldr	r3, [r7, #4]
 8001dba:	1e5a      	subs	r2, r3, #1
 8001dbc:	68fb      	ldr	r3, [r7, #12]
 8001dbe:	62da      	str	r2, [r3, #44]	; 0x2c
		TIM3->CR1 |= 1;
 8001dc0:	68fb      	ldr	r3, [r7, #12]
 8001dc2:	681b      	ldr	r3, [r3, #0]
 8001dc4:	f043 0201 	orr.w	r2, r3, #1
 8001dc8:	68fb      	ldr	r3, [r7, #12]
 8001dca:	601a      	str	r2, [r3, #0]
		delay_us(duration);
 8001dcc:	6838      	ldr	r0, [r7, #0]
 8001dce:	f7ff fb15 	bl	80013fc <delay_us>
		TIM3->CR1 &= ~(1);
 8001dd2:	68fb      	ldr	r3, [r7, #12]
 8001dd4:	681b      	ldr	r3, [r3, #0]
 8001dd6:	f023 0201 	bic.w	r2, r3, #1
 8001dda:	68fb      	ldr	r3, [r7, #12]
 8001ddc:	601a      	str	r2, [r3, #0]
	return;
 8001dde:	bf00      	nop
}
 8001de0:	3710      	adds	r7, #16
 8001de2:	46bd      	mov	sp, r7
 8001de4:	bd80      	pop	{r7, pc}
 8001de6:	bf00      	nop
 8001de8:	40000400 	.word	0x40000400

08001dec <music_Init>:

/**
 * Initializes the appropriate timers and GPIO port
 */
void music_Init() {
 8001dec:	b480      	push	{r7}
 8001dee:	b087      	sub	sp, #28
 8001df0:	af00      	add	r7, sp, #0
	// Pointers for all used peripherals
	// TIM5 will be a simple down-counter which will trigger interrupts
	// 	each time a note completes playing in the background.
	volatile RCC* RCC_Target = (RCC*) RCC_BASE;
 8001df2:	4b31      	ldr	r3, [pc, #196]	; (8001eb8 <music_Init+0xcc>)
 8001df4:	617b      	str	r3, [r7, #20]
	volatile GPIO* GPIOB = (GPIO*) GPIOB_BASE;
 8001df6:	4b31      	ldr	r3, [pc, #196]	; (8001ebc <music_Init+0xd0>)
 8001df8:	613b      	str	r3, [r7, #16]
	volatile TIMER* TIM3 = (TIMER*) TIM3_BASE;
 8001dfa:	4b31      	ldr	r3, [pc, #196]	; (8001ec0 <music_Init+0xd4>)
 8001dfc:	60fb      	str	r3, [r7, #12]
	volatile TIMER* TIM5 = (TIMER*) TIM5_BASE;
 8001dfe:	4b31      	ldr	r3, [pc, #196]	; (8001ec4 <music_Init+0xd8>)
 8001e00:	60bb      	str	r3, [r7, #8]
	volatile NVIC* NVIC_Target = (NVIC*) NVIC_BASE;
 8001e02:	4b31      	ldr	r3, [pc, #196]	; (8001ec8 <music_Init+0xdc>)
 8001e04:	607b      	str	r3, [r7, #4]

	// Enable GPIOB in RCC
	RCC_Target->AHB1ENR |= RCC_GPIOBEN;
 8001e06:	697b      	ldr	r3, [r7, #20]
 8001e08:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e0a:	f043 0202 	orr.w	r2, r3, #2
 8001e0e:	697b      	ldr	r3, [r7, #20]
 8001e10:	631a      	str	r2, [r3, #48]	; 0x30

	// Enable TIM3 and TIM5 in RCC
	RCC_Target->APB1ENR |= (RCC_TIM3EN | RCC_TIM5EN);
 8001e12:	697b      	ldr	r3, [r7, #20]
 8001e14:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001e16:	f043 020a 	orr.w	r2, r3, #10
 8001e1a:	697b      	ldr	r3, [r7, #20]
 8001e1c:	641a      	str	r2, [r3, #64]	; 0x40

	// Set PB4 to alternate function
	GPIOB->MODER = GPIO_ALTFUN << 8;
 8001e1e:	693b      	ldr	r3, [r7, #16]
 8001e20:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001e24:	601a      	str	r2, [r3, #0]

	// Set AFRL such that PB4 is connected to TIM3
	GPIOB->AFRL = PB4_PIEZO;
 8001e26:	693b      	ldr	r3, [r7, #16]
 8001e28:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8001e2c:	621a      	str	r2, [r3, #32]

	// Set TIM3 & TIM5 prescale to 16, AKA 1 count = 1us
	TIM3->PSC = 16;
 8001e2e:	68fb      	ldr	r3, [r7, #12]
 8001e30:	2210      	movs	r2, #16
 8001e32:	629a      	str	r2, [r3, #40]	; 0x28
	TIM5->PSC = 16;
 8001e34:	68bb      	ldr	r3, [r7, #8]
 8001e36:	2210      	movs	r2, #16
 8001e38:	629a      	str	r2, [r3, #40]	; 0x28

	// Prescale fix
	// Forces an event to be generated and then
	// clears it right away which tricks the timer
	// into applying the prescale somehow
	TIM3->EGR = 1;
 8001e3a:	68fb      	ldr	r3, [r7, #12]
 8001e3c:	2201      	movs	r2, #1
 8001e3e:	615a      	str	r2, [r3, #20]
	TIM3->SR &= ~(1);
 8001e40:	68fb      	ldr	r3, [r7, #12]
 8001e42:	691b      	ldr	r3, [r3, #16]
 8001e44:	f023 0201 	bic.w	r2, r3, #1
 8001e48:	68fb      	ldr	r3, [r7, #12]
 8001e4a:	611a      	str	r2, [r3, #16]
	TIM5->EGR = 1;
 8001e4c:	68bb      	ldr	r3, [r7, #8]
 8001e4e:	2201      	movs	r2, #1
 8001e50:	615a      	str	r2, [r3, #20]
	TIM5->SR &= ~(1);
 8001e52:	68bb      	ldr	r3, [r7, #8]
 8001e54:	691b      	ldr	r3, [r3, #16]
 8001e56:	f023 0201 	bic.w	r2, r3, #1
 8001e5a:	68bb      	ldr	r3, [r7, #8]
 8001e5c:	611a      	str	r2, [r3, #16]

	// Configure CCMR for PWM mode
	TIM3->CCMR1 |= (OC1M_PWM | OC1M_PE);
 8001e5e:	68fb      	ldr	r3, [r7, #12]
 8001e60:	699b      	ldr	r3, [r3, #24]
 8001e62:	f043 0268 	orr.w	r2, r3, #104	; 0x68
 8001e66:	68fb      	ldr	r3, [r7, #12]
 8001e68:	619a      	str	r2, [r3, #24]

	// Enable in CCER
	TIM3->CCER |= CCER_CC1E;
 8001e6a:	68fb      	ldr	r3, [r7, #12]
 8001e6c:	6a1b      	ldr	r3, [r3, #32]
 8001e6e:	f043 0201 	orr.w	r2, r3, #1
 8001e72:	68fb      	ldr	r3, [r7, #12]
 8001e74:	621a      	str	r2, [r3, #32]

	// Assert not counting in CR1
	TIM3->CR1 &= ~(TIM_CEN);
 8001e76:	68fb      	ldr	r3, [r7, #12]
 8001e78:	681b      	ldr	r3, [r3, #0]
 8001e7a:	f023 0201 	bic.w	r2, r3, #1
 8001e7e:	68fb      	ldr	r3, [r7, #12]
 8001e80:	601a      	str	r2, [r3, #0]
	TIM5->CR1 &= ~(TIM_CEN);
 8001e82:	68bb      	ldr	r3, [r7, #8]
 8001e84:	681b      	ldr	r3, [r3, #0]
 8001e86:	f023 0201 	bic.w	r2, r3, #1
 8001e8a:	68bb      	ldr	r3, [r7, #8]
 8001e8c:	601a      	str	r2, [r3, #0]

	// Enable interrupts for TIM5
	TIM5->DIER |= TIM_UIE;
 8001e8e:	68bb      	ldr	r3, [r7, #8]
 8001e90:	68db      	ldr	r3, [r3, #12]
 8001e92:	f043 0201 	orr.w	r2, r3, #1
 8001e96:	68bb      	ldr	r3, [r7, #8]
 8001e98:	60da      	str	r2, [r3, #12]

	// Set TIM5 to count-down and one-pulse
	TIM5->CR1 |= (TIM_OPM | TIM_DIR);
 8001e9a:	68bb      	ldr	r3, [r7, #8]
 8001e9c:	681b      	ldr	r3, [r3, #0]
 8001e9e:	f043 0218 	orr.w	r2, r3, #24
 8001ea2:	68bb      	ldr	r3, [r7, #8]
 8001ea4:	601a      	str	r2, [r3, #0]

	// Enable the TIM5 interrupt in ISER, slot 50
	//	aka 1<<18 in ISER1
	NVIC_Target->ISER[1] = 1<<18;
 8001ea6:	687b      	ldr	r3, [r7, #4]
 8001ea8:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 8001eac:	605a      	str	r2, [r3, #4]

	return;
 8001eae:	bf00      	nop
}
 8001eb0:	371c      	adds	r7, #28
 8001eb2:	46bd      	mov	sp, r7
 8001eb4:	bc80      	pop	{r7}
 8001eb6:	4770      	bx	lr
 8001eb8:	40023800 	.word	0x40023800
 8001ebc:	40020400 	.word	0x40020400
 8001ec0:	40000400 	.word	0x40000400
 8001ec4:	40000c00 	.word	0x40000c00
 8001ec8:	e000e100 	.word	0xe000e100

08001ecc <music_Play>:

/**
 * Iterates through the provided array of notes until a null
 * note is found
 */
void music_Play(const note song[]) {
 8001ecc:	b5b0      	push	{r4, r5, r7, lr}
 8001ece:	b084      	sub	sp, #16
 8001ed0:	af00      	add	r7, sp, #0
 8001ed2:	6078      	str	r0, [r7, #4]
	// Index counter
	int i = 0;
 8001ed4:	2300      	movs	r3, #0
 8001ed6:	60fb      	str	r3, [r7, #12]

	if(backgroundPlaying == 0) {
 8001ed8:	4b23      	ldr	r3, [pc, #140]	; (8001f68 <music_Play+0x9c>)
 8001eda:	781b      	ldrb	r3, [r3, #0]
 8001edc:	2b00      	cmp	r3, #0
 8001ede:	d13c      	bne.n	8001f5a <music_Play+0x8e>
		// Loop through array until we find a note with 0 period and 0 length
		while(!(song[i].period == 0 && song[i].length == 0)) {
 8001ee0:	e024      	b.n	8001f2c <music_Play+0x60>
			// Attempt to put these in a register for passing to the funct
			register uint32_t length = song[i].length;
 8001ee2:	68fa      	ldr	r2, [r7, #12]
 8001ee4:	4613      	mov	r3, r2
 8001ee6:	005b      	lsls	r3, r3, #1
 8001ee8:	4413      	add	r3, r2
 8001eea:	009b      	lsls	r3, r3, #2
 8001eec:	461a      	mov	r2, r3
 8001eee:	687b      	ldr	r3, [r7, #4]
 8001ef0:	4413      	add	r3, r2
 8001ef2:	689d      	ldr	r5, [r3, #8]
			register uint32_t period = song[i].period;
 8001ef4:	68fa      	ldr	r2, [r7, #12]
 8001ef6:	4613      	mov	r3, r2
 8001ef8:	005b      	lsls	r3, r3, #1
 8001efa:	4413      	add	r3, r2
 8001efc:	009b      	lsls	r3, r3, #2
 8001efe:	461a      	mov	r2, r3
 8001f00:	687b      	ldr	r3, [r7, #4]
 8001f02:	4413      	add	r3, r2
 8001f04:	681c      	ldr	r4, [r3, #0]

			uint32_t octave = song[i].octave;
 8001f06:	68fa      	ldr	r2, [r7, #12]
 8001f08:	4613      	mov	r3, r2
 8001f0a:	005b      	lsls	r3, r3, #1
 8001f0c:	4413      	add	r3, r2
 8001f0e:	009b      	lsls	r3, r3, #2
 8001f10:	461a      	mov	r2, r3
 8001f12:	687b      	ldr	r3, [r7, #4]
 8001f14:	4413      	add	r3, r2
 8001f16:	685b      	ldr	r3, [r3, #4]
 8001f18:	60bb      	str	r3, [r7, #8]
			period = period >> octave;
 8001f1a:	68bb      	ldr	r3, [r7, #8]
 8001f1c:	40dc      	lsrs	r4, r3
			note_Play(period, length);
 8001f1e:	4629      	mov	r1, r5
 8001f20:	4620      	mov	r0, r4
 8001f22:	f7ff ff37 	bl	8001d94 <note_Play>
			i++;
 8001f26:	68fb      	ldr	r3, [r7, #12]
 8001f28:	3301      	adds	r3, #1
 8001f2a:	60fb      	str	r3, [r7, #12]
		while(!(song[i].period == 0 && song[i].length == 0)) {
 8001f2c:	68fa      	ldr	r2, [r7, #12]
 8001f2e:	4613      	mov	r3, r2
 8001f30:	005b      	lsls	r3, r3, #1
 8001f32:	4413      	add	r3, r2
 8001f34:	009b      	lsls	r3, r3, #2
 8001f36:	461a      	mov	r2, r3
 8001f38:	687b      	ldr	r3, [r7, #4]
 8001f3a:	4413      	add	r3, r2
 8001f3c:	681b      	ldr	r3, [r3, #0]
 8001f3e:	2b00      	cmp	r3, #0
 8001f40:	d1cf      	bne.n	8001ee2 <music_Play+0x16>
 8001f42:	68fa      	ldr	r2, [r7, #12]
 8001f44:	4613      	mov	r3, r2
 8001f46:	005b      	lsls	r3, r3, #1
 8001f48:	4413      	add	r3, r2
 8001f4a:	009b      	lsls	r3, r3, #2
 8001f4c:	461a      	mov	r2, r3
 8001f4e:	687b      	ldr	r3, [r7, #4]
 8001f50:	4413      	add	r3, r2
 8001f52:	689b      	ldr	r3, [r3, #8]
 8001f54:	2b00      	cmp	r3, #0
 8001f56:	d1c4      	bne.n	8001ee2 <music_Play+0x16>
		}
	} else {
		printf("Cannot play a song while one is playing in the background\n");
	}

	return;
 8001f58:	e003      	b.n	8001f62 <music_Play+0x96>
		printf("Cannot play a song while one is playing in the background\n");
 8001f5a:	4804      	ldr	r0, [pc, #16]	; (8001f6c <music_Play+0xa0>)
 8001f5c:	f001 fff8 	bl	8003f50 <puts>
	return;
 8001f60:	bf00      	nop
}
 8001f62:	3710      	adds	r7, #16
 8001f64:	46bd      	mov	sp, r7
 8001f66:	bdb0      	pop	{r4, r5, r7, pc}
 8001f68:	20000d0c 	.word	0x20000d0c
 8001f6c:	08009e0c 	.word	0x08009e0c

08001f70 <music_StopBackground>:

/**
 * Stops a background song that is playing
 */
void music_StopBackground() {
 8001f70:	b480      	push	{r7}
 8001f72:	b083      	sub	sp, #12
 8001f74:	af00      	add	r7, sp, #0
	volatile TIMER* TIM3 = (TIMER*) TIM3_BASE;
 8001f76:	4b0d      	ldr	r3, [pc, #52]	; (8001fac <music_StopBackground+0x3c>)
 8001f78:	607b      	str	r3, [r7, #4]
	volatile TIMER* TIM5 = (TIMER*) TIM5_BASE;
 8001f7a:	4b0d      	ldr	r3, [pc, #52]	; (8001fb0 <music_StopBackground+0x40>)
 8001f7c:	603b      	str	r3, [r7, #0]

	// Stop the timers
	TIM5->CR1 &= ~(TIM_CEN);
 8001f7e:	683b      	ldr	r3, [r7, #0]
 8001f80:	681b      	ldr	r3, [r3, #0]
 8001f82:	f023 0201 	bic.w	r2, r3, #1
 8001f86:	683b      	ldr	r3, [r7, #0]
 8001f88:	601a      	str	r2, [r3, #0]
	TIM3->CR1 &= ~(TIM_CEN);
 8001f8a:	687b      	ldr	r3, [r7, #4]
 8001f8c:	681b      	ldr	r3, [r3, #0]
 8001f8e:	f023 0201 	bic.w	r2, r3, #1
 8001f92:	687b      	ldr	r3, [r7, #4]
 8001f94:	601a      	str	r2, [r3, #0]

	// Reset controls
	backgroundPlaying = 0;
 8001f96:	4b07      	ldr	r3, [pc, #28]	; (8001fb4 <music_StopBackground+0x44>)
 8001f98:	2200      	movs	r2, #0
 8001f9a:	701a      	strb	r2, [r3, #0]
	musicIndex = 0;
 8001f9c:	4b06      	ldr	r3, [pc, #24]	; (8001fb8 <music_StopBackground+0x48>)
 8001f9e:	2200      	movs	r2, #0
 8001fa0:	601a      	str	r2, [r3, #0]

	return;
 8001fa2:	bf00      	nop
}
 8001fa4:	370c      	adds	r7, #12
 8001fa6:	46bd      	mov	sp, r7
 8001fa8:	bc80      	pop	{r7}
 8001faa:	4770      	bx	lr
 8001fac:	40000400 	.word	0x40000400
 8001fb0:	40000c00 	.word	0x40000c00
 8001fb4:	20000d0c 	.word	0x20000d0c
 8001fb8:	20000d04 	.word	0x20000d04

08001fbc <music_Background>:

/**
 * Starts the provided song playing in the background
 */
void music_Background(note song[]) {
 8001fbc:	b580      	push	{r7, lr}
 8001fbe:	b086      	sub	sp, #24
 8001fc0:	af00      	add	r7, sp, #0
 8001fc2:	6078      	str	r0, [r7, #4]
	volatile TIMER* TIM3 = (TIMER*) TIM3_BASE;
 8001fc4:	4b1d      	ldr	r3, [pc, #116]	; (800203c <music_Background+0x80>)
 8001fc6:	617b      	str	r3, [r7, #20]
	volatile TIMER* TIM5 = (TIMER*) TIM5_BASE;
 8001fc8:	4b1d      	ldr	r3, [pc, #116]	; (8002040 <music_Background+0x84>)
 8001fca:	613b      	str	r3, [r7, #16]

	// Stop background song
	music_StopBackground();
 8001fcc:	f7ff ffd0 	bl	8001f70 <music_StopBackground>

	// Set flag to show music is playing
	backgroundPlaying = 1;
 8001fd0:	4b1c      	ldr	r3, [pc, #112]	; (8002044 <music_Background+0x88>)
 8001fd2:	2201      	movs	r2, #1
 8001fd4:	701a      	strb	r2, [r3, #0]

	// Set new address and reset note index
	// note index gets set to one because this method
	// plays the 0th note on its own, then the interrupts
	// take over
	backgroundSong = song;
 8001fd6:	4a1c      	ldr	r2, [pc, #112]	; (8002048 <music_Background+0x8c>)
 8001fd8:	687b      	ldr	r3, [r7, #4]
 8001fda:	6013      	str	r3, [r2, #0]
	musicIndex = 1;
 8001fdc:	4b1b      	ldr	r3, [pc, #108]	; (800204c <music_Background+0x90>)
 8001fde:	2201      	movs	r2, #1
 8001fe0:	601a      	str	r2, [r3, #0]

	// Load the period and length
	uint32_t period = song[0].period;
 8001fe2:	687b      	ldr	r3, [r7, #4]
 8001fe4:	681b      	ldr	r3, [r3, #0]
 8001fe6:	60fb      	str	r3, [r7, #12]
	period = period >> song[0].octave;
 8001fe8:	687b      	ldr	r3, [r7, #4]
 8001fea:	685b      	ldr	r3, [r3, #4]
 8001fec:	68fa      	ldr	r2, [r7, #12]
 8001fee:	fa22 f303 	lsr.w	r3, r2, r3
 8001ff2:	60fb      	str	r3, [r7, #12]
	uint32_t length = song[0].length;
 8001ff4:	687b      	ldr	r3, [r7, #4]
 8001ff6:	689b      	ldr	r3, [r3, #8]
 8001ff8:	60bb      	str	r3, [r7, #8]

	// Write values
	TIM5->CNT = length;
 8001ffa:	693b      	ldr	r3, [r7, #16]
 8001ffc:	68ba      	ldr	r2, [r7, #8]
 8001ffe:	625a      	str	r2, [r3, #36]	; 0x24
	TIM3->ARR = period - 1;
 8002000:	68fb      	ldr	r3, [r7, #12]
 8002002:	1e5a      	subs	r2, r3, #1
 8002004:	697b      	ldr	r3, [r7, #20]
 8002006:	62da      	str	r2, [r3, #44]	; 0x2c
	TIM3->CCR1= period >> 1;
 8002008:	68fb      	ldr	r3, [r7, #12]
 800200a:	085a      	lsrs	r2, r3, #1
 800200c:	697b      	ldr	r3, [r7, #20]
 800200e:	635a      	str	r2, [r3, #52]	; 0x34

	// Start timers
	TIM5->DIER|= TIM_UIE;
 8002010:	693b      	ldr	r3, [r7, #16]
 8002012:	68db      	ldr	r3, [r3, #12]
 8002014:	f043 0201 	orr.w	r2, r3, #1
 8002018:	693b      	ldr	r3, [r7, #16]
 800201a:	60da      	str	r2, [r3, #12]
	TIM3->CR1 |= TIM_CEN;
 800201c:	697b      	ldr	r3, [r7, #20]
 800201e:	681b      	ldr	r3, [r3, #0]
 8002020:	f043 0201 	orr.w	r2, r3, #1
 8002024:	697b      	ldr	r3, [r7, #20]
 8002026:	601a      	str	r2, [r3, #0]
	TIM5->CR1 |= TIM_CEN;
 8002028:	693b      	ldr	r3, [r7, #16]
 800202a:	681b      	ldr	r3, [r3, #0]
 800202c:	f043 0201 	orr.w	r2, r3, #1
 8002030:	693b      	ldr	r3, [r7, #16]
 8002032:	601a      	str	r2, [r3, #0]

	return;
 8002034:	bf00      	nop
}
 8002036:	3718      	adds	r7, #24
 8002038:	46bd      	mov	sp, r7
 800203a:	bd80      	pop	{r7, pc}
 800203c:	40000400 	.word	0x40000400
 8002040:	40000c00 	.word	0x40000c00
 8002044:	20000d0c 	.word	0x20000d0c
 8002048:	20000d08 	.word	0x20000d08
 800204c:	20000d04 	.word	0x20000d04

08002050 <TIM5_IRQHandler>:
 * ISR
 * Triggers when TIM5 hits zero;
 * loads next note from the global song array into appropriate
 * timers and increments the global note index
 */
void TIM5_IRQHandler() {
 8002050:	b480      	push	{r7}
 8002052:	b089      	sub	sp, #36	; 0x24
 8002054:	af00      	add	r7, sp, #0
	volatile TIMER* TIM3 = (TIMER*) TIM3_BASE;
 8002056:	4b33      	ldr	r3, [pc, #204]	; (8002124 <TIM5_IRQHandler+0xd4>)
 8002058:	61fb      	str	r3, [r7, #28]
	volatile TIMER* TIM5 = (TIMER*) TIM5_BASE;
 800205a:	4b33      	ldr	r3, [pc, #204]	; (8002128 <TIM5_IRQHandler+0xd8>)
 800205c:	61bb      	str	r3, [r7, #24]


	// Clear the register that triggers interrupts
	TIM5->SR = 0;
 800205e:	69bb      	ldr	r3, [r7, #24]
 8002060:	2200      	movs	r2, #0
 8002062:	611a      	str	r2, [r3, #16]

	// Stop the frequency timer
	TIM3->CR1 &= ~(TIM_CEN);
 8002064:	69fb      	ldr	r3, [r7, #28]
 8002066:	681b      	ldr	r3, [r3, #0]
 8002068:	f023 0201 	bic.w	r2, r3, #1
 800206c:	69fb      	ldr	r3, [r7, #28]
 800206e:	601a      	str	r2, [r3, #0]

	// Load current note info
	note current = backgroundSong[musicIndex];
 8002070:	4b2e      	ldr	r3, [pc, #184]	; (800212c <TIM5_IRQHandler+0xdc>)
 8002072:	6819      	ldr	r1, [r3, #0]
 8002074:	4b2e      	ldr	r3, [pc, #184]	; (8002130 <TIM5_IRQHandler+0xe0>)
 8002076:	681a      	ldr	r2, [r3, #0]
 8002078:	4613      	mov	r3, r2
 800207a:	005b      	lsls	r3, r3, #1
 800207c:	4413      	add	r3, r2
 800207e:	009b      	lsls	r3, r3, #2
 8002080:	18ca      	adds	r2, r1, r3
 8002082:	1d3b      	adds	r3, r7, #4
 8002084:	ca07      	ldmia	r2, {r0, r1, r2}
 8002086:	e883 0007 	stmia.w	r3, {r0, r1, r2}
	uint32_t period = current.period;
 800208a:	687b      	ldr	r3, [r7, #4]
 800208c:	617b      	str	r3, [r7, #20]
	period = period >> current.octave;
 800208e:	68bb      	ldr	r3, [r7, #8]
 8002090:	697a      	ldr	r2, [r7, #20]
 8002092:	fa22 f303 	lsr.w	r3, r2, r3
 8002096:	617b      	str	r3, [r7, #20]
	uint32_t length = current.length;
 8002098:	68fb      	ldr	r3, [r7, #12]
 800209a:	613b      	str	r3, [r7, #16]

	// If the note isn't a terminator
	if(!(period == 0 && length == 0)) {
 800209c:	697b      	ldr	r3, [r7, #20]
 800209e:	2b00      	cmp	r3, #0
 80020a0:	d102      	bne.n	80020a8 <TIM5_IRQHandler+0x58>
 80020a2:	693b      	ldr	r3, [r7, #16]
 80020a4:	2b00      	cmp	r3, #0
 80020a6:	d01c      	beq.n	80020e2 <TIM5_IRQHandler+0x92>
		// Write the period values accordingly
		TIM3->ARR = period - 1;
 80020a8:	697b      	ldr	r3, [r7, #20]
 80020aa:	1e5a      	subs	r2, r3, #1
 80020ac:	69fb      	ldr	r3, [r7, #28]
 80020ae:	62da      	str	r2, [r3, #44]	; 0x2c
		TIM3->CCR1 = period >> 1;
 80020b0:	697b      	ldr	r3, [r7, #20]
 80020b2:	085a      	lsrs	r2, r3, #1
 80020b4:	69fb      	ldr	r3, [r7, #28]
 80020b6:	635a      	str	r2, [r3, #52]	; 0x34
		// Write the note duration
		TIM5->CNT = length;
 80020b8:	69bb      	ldr	r3, [r7, #24]
 80020ba:	693a      	ldr	r2, [r7, #16]
 80020bc:	625a      	str	r2, [r3, #36]	; 0x24

		// Increment the note counter
		musicIndex++;
 80020be:	4b1c      	ldr	r3, [pc, #112]	; (8002130 <TIM5_IRQHandler+0xe0>)
 80020c0:	681b      	ldr	r3, [r3, #0]
 80020c2:	3301      	adds	r3, #1
 80020c4:	4a1a      	ldr	r2, [pc, #104]	; (8002130 <TIM5_IRQHandler+0xe0>)
 80020c6:	6013      	str	r3, [r2, #0]

		// Enable both timers
		TIM3->CR1 |= TIM_CEN;
 80020c8:	69fb      	ldr	r3, [r7, #28]
 80020ca:	681b      	ldr	r3, [r3, #0]
 80020cc:	f043 0201 	orr.w	r2, r3, #1
 80020d0:	69fb      	ldr	r3, [r7, #28]
 80020d2:	601a      	str	r2, [r3, #0]
		TIM5->CR1 |= TIM_CEN;
 80020d4:	69bb      	ldr	r3, [r7, #24]
 80020d6:	681b      	ldr	r3, [r3, #0]
 80020d8:	f043 0201 	orr.w	r2, r3, #1
 80020dc:	69bb      	ldr	r3, [r7, #24]
 80020de:	601a      	str	r2, [r3, #0]
 80020e0:	e01a      	b.n	8002118 <TIM5_IRQHandler+0xc8>

	// If the note is a terminator
	} else if(period == 0 && length == 0) {
 80020e2:	697b      	ldr	r3, [r7, #20]
 80020e4:	2b00      	cmp	r3, #0
 80020e6:	d118      	bne.n	800211a <TIM5_IRQHandler+0xca>
 80020e8:	693b      	ldr	r3, [r7, #16]
 80020ea:	2b00      	cmp	r3, #0
 80020ec:	d115      	bne.n	800211a <TIM5_IRQHandler+0xca>
		// Clear the note counter
		musicIndex = 0;
 80020ee:	4b10      	ldr	r3, [pc, #64]	; (8002130 <TIM5_IRQHandler+0xe0>)
 80020f0:	2200      	movs	r2, #0
 80020f2:	601a      	str	r2, [r3, #0]

		// Clear the flag for background songs
		backgroundPlaying = 0;
 80020f4:	4b0f      	ldr	r3, [pc, #60]	; (8002134 <TIM5_IRQHandler+0xe4>)
 80020f6:	2200      	movs	r2, #0
 80020f8:	701a      	strb	r2, [r3, #0]

		// Disable timer 5's interrupts
		TIM5->DIER &= ~(TIM_UIE);
 80020fa:	69bb      	ldr	r3, [r7, #24]
 80020fc:	68db      	ldr	r3, [r3, #12]
 80020fe:	f023 0201 	bic.w	r2, r3, #1
 8002102:	69bb      	ldr	r3, [r7, #24]
 8002104:	60da      	str	r2, [r3, #12]

		// Clear the timers
		TIM3->ARR = 0;
 8002106:	69fb      	ldr	r3, [r7, #28]
 8002108:	2200      	movs	r2, #0
 800210a:	62da      	str	r2, [r3, #44]	; 0x2c
		TIM3->CCR1 = 0;
 800210c:	69fb      	ldr	r3, [r7, #28]
 800210e:	2200      	movs	r2, #0
 8002110:	635a      	str	r2, [r3, #52]	; 0x34
		TIM5->CNT = 0;
 8002112:	69bb      	ldr	r3, [r7, #24]
 8002114:	2200      	movs	r2, #0
 8002116:	625a      	str	r2, [r3, #36]	; 0x24
	}

	return;
 8002118:	bf00      	nop
 800211a:	bf00      	nop
}
 800211c:	3724      	adds	r7, #36	; 0x24
 800211e:	46bd      	mov	sp, r7
 8002120:	bc80      	pop	{r7}
 8002122:	4770      	bx	lr
 8002124:	40000400 	.word	0x40000400
 8002128:	40000c00 	.word	0x40000c00
 800212c:	20000d08 	.word	0x20000d08
 8002130:	20000d04 	.word	0x20000d04
 8002134:	20000d0c 	.word	0x20000d0c

08002138 <period_Init>:
#include <stdio.h>

static uint8_t period_Status;
static uint16_t readings[10];

void period_Init() {
 8002138:	b480      	push	{r7}
 800213a:	b085      	sub	sp, #20
 800213c:	af00      	add	r7, sp, #0
	// Setup peripheral objects
	volatile RCC* RCC_Target = (RCC*) RCC_BASE;
 800213e:	4b26      	ldr	r3, [pc, #152]	; (80021d8 <period_Init+0xa0>)
 8002140:	60fb      	str	r3, [r7, #12]
	volatile TIMER* TIM4 = (TIMER*) TIM4_BASE;
 8002142:	4b26      	ldr	r3, [pc, #152]	; (80021dc <period_Init+0xa4>)
 8002144:	60bb      	str	r3, [r7, #8]
	volatile NVIC* NVIC_Target = (NVIC*)NVIC_BASE;
 8002146:	4b26      	ldr	r3, [pc, #152]	; (80021e0 <period_Init+0xa8>)
 8002148:	607b      	str	r3, [r7, #4]
	volatile GPIO* GPIOB = (GPIO*) GPIOB_BASE;
 800214a:	4b26      	ldr	r3, [pc, #152]	; (80021e4 <period_Init+0xac>)
 800214c:	603b      	str	r3, [r7, #0]

	// Enable GPIOB, even though it most likely already was
	RCC_Target->AHB1ENR |= RCC_GPIOBEN;
 800214e:	68fb      	ldr	r3, [r7, #12]
 8002150:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002152:	f043 0202 	orr.w	r2, r3, #2
 8002156:	68fb      	ldr	r3, [r7, #12]
 8002158:	631a      	str	r2, [r3, #48]	; 0x30

	// Enable TIM4 in APB1ENR
	RCC_Target->APB1ENR |= RCC_TIM4EN;
 800215a:	68fb      	ldr	r3, [r7, #12]
 800215c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800215e:	f043 0204 	orr.w	r2, r3, #4
 8002162:	68fb      	ldr	r3, [r7, #12]
 8002164:	641a      	str	r2, [r3, #64]	; 0x40

	// Set the 10us prescale on TIM4
	TIM4->PSC = 16;
 8002166:	68bb      	ldr	r3, [r7, #8]
 8002168:	2210      	movs	r2, #16
 800216a:	629a      	str	r2, [r3, #40]	; 0x28

	// Set PB6 MODER to alternate funct
	GPIOB->MODER |= (GPIO_ALTFUN << 12);
 800216c:	683b      	ldr	r3, [r7, #0]
 800216e:	681b      	ldr	r3, [r3, #0]
 8002170:	f443 5200 	orr.w	r2, r3, #8192	; 0x2000
 8002174:	683b      	ldr	r3, [r7, #0]
 8002176:	601a      	str	r2, [r3, #0]

	// Configure PB6 to Alternate Funct 2; TIM4_CH1
	GPIOB->AFRL |= (2<<24);
 8002178:	683b      	ldr	r3, [r7, #0]
 800217a:	6a1b      	ldr	r3, [r3, #32]
 800217c:	f043 7200 	orr.w	r2, r3, #33554432	; 0x2000000
 8002180:	683b      	ldr	r3, [r7, #0]
 8002182:	621a      	str	r2, [r3, #32]

	// Setup PWM Input mode for TIM4 CH1
	// CC1P and CC1NP in CCER stay defaults; active-high input
	TIM4->CCMR1 |= 0b01<<0;	// CC1S input mapped on TI1
 8002184:	68bb      	ldr	r3, [r7, #8]
 8002186:	699b      	ldr	r3, [r3, #24]
 8002188:	f043 0201 	orr.w	r2, r3, #1
 800218c:	68bb      	ldr	r3, [r7, #8]
 800218e:	619a      	str	r2, [r3, #24]
	TIM4->SMCR |= (0b101 << 4);	// Set trigger to Timer Input Ch1
 8002190:	68bb      	ldr	r3, [r7, #8]
 8002192:	689b      	ldr	r3, [r3, #8]
 8002194:	f043 0250 	orr.w	r2, r3, #80	; 0x50
 8002198:	68bb      	ldr	r3, [r7, #8]
 800219a:	609a      	str	r2, [r3, #8]
	TIM4->SMCR |= (0b100 << 0); // Set slave mode to reset on TI1 rising edge
 800219c:	68bb      	ldr	r3, [r7, #8]
 800219e:	689b      	ldr	r3, [r3, #8]
 80021a0:	f043 0204 	orr.w	r2, r3, #4
 80021a4:	68bb      	ldr	r3, [r7, #8]
 80021a6:	609a      	str	r2, [r3, #8]
	TIM4->CCER |= 1;			// Enable capture/compare Ch1
 80021a8:	68bb      	ldr	r3, [r7, #8]
 80021aa:	6a1b      	ldr	r3, [r3, #32]
 80021ac:	f043 0201 	orr.w	r2, r3, #1
 80021b0:	68bb      	ldr	r3, [r7, #8]
 80021b2:	621a      	str	r2, [r3, #32]
	TIM4->CR1 |= TIM_CEN;
 80021b4:	68bb      	ldr	r3, [r7, #8]
 80021b6:	681b      	ldr	r3, [r3, #0]
 80021b8:	f043 0201 	orr.w	r2, r3, #1
 80021bc:	68bb      	ldr	r3, [r7, #8]
 80021be:	601a      	str	r2, [r3, #0]

	// Enable TIM4 interrupts in NVIC
	NVIC_Target->ISER[0] |= (1<<30);
 80021c0:	687b      	ldr	r3, [r7, #4]
 80021c2:	681b      	ldr	r3, [r3, #0]
 80021c4:	f043 4280 	orr.w	r2, r3, #1073741824	; 0x40000000
 80021c8:	687b      	ldr	r3, [r7, #4]
 80021ca:	601a      	str	r2, [r3, #0]

	return;
 80021cc:	bf00      	nop
}
 80021ce:	3714      	adds	r7, #20
 80021d0:	46bd      	mov	sp, r7
 80021d2:	bc80      	pop	{r7}
 80021d4:	4770      	bx	lr
 80021d6:	bf00      	nop
 80021d8:	40023800 	.word	0x40023800
 80021dc:	40000800 	.word	0x40000800
 80021e0:	e000e100 	.word	0xe000e100
 80021e4:	40020400 	.word	0x40020400

080021e8 <period_Measure>:

double period_Measure() {
 80021e8:	b580      	push	{r7, lr}
 80021ea:	b08a      	sub	sp, #40	; 0x28
 80021ec:	af00      	add	r7, sp, #0
	volatile TIMER* TIM4 = (TIMER*)TIM4_BASE;
 80021ee:	4b52      	ldr	r3, [pc, #328]	; (8002338 <period_Measure+0x150>)
 80021f0:	60bb      	str	r3, [r7, #8]

	double average = 0;
 80021f2:	f04f 0200 	mov.w	r2, #0
 80021f6:	f04f 0300 	mov.w	r3, #0
 80021fa:	e9c7 2308 	strd	r2, r3, [r7, #32]

	// This method takes the main thread of execution, but still
	if(!period_Status) {
 80021fe:	4b4f      	ldr	r3, [pc, #316]	; (800233c <period_Measure+0x154>)
 8002200:	781b      	ldrb	r3, [r3, #0]
 8002202:	2b00      	cmp	r3, #0
 8002204:	f040 808b 	bne.w	800231e <period_Measure+0x136>
		// Enable interrupt and counter, set flag
		period_Status = 1;
 8002208:	4b4c      	ldr	r3, [pc, #304]	; (800233c <period_Measure+0x154>)
 800220a:	2201      	movs	r2, #1
 800220c:	701a      	strb	r2, [r3, #0]
		TIM4->DIER |= (1<<6);
 800220e:	68bb      	ldr	r3, [r7, #8]
 8002210:	68db      	ldr	r3, [r3, #12]
 8002212:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8002216:	68bb      	ldr	r3, [r7, #8]
 8002218:	60da      	str	r2, [r3, #12]

		// Busy wait until measurements are done
		while(period_Status) {}
 800221a:	bf00      	nop
 800221c:	4b47      	ldr	r3, [pc, #284]	; (800233c <period_Measure+0x154>)
 800221e:	781b      	ldrb	r3, [r3, #0]
 8002220:	2b00      	cmp	r3, #0
 8002222:	d1fb      	bne.n	800221c <period_Measure+0x34>

		double minimum = 131072;
 8002224:	f04f 0200 	mov.w	r2, #0
 8002228:	f04f 4382 	mov.w	r3, #1090519040	; 0x41000000
 800222c:	e9c7 2306 	strd	r2, r3, [r7, #24]
		double maximum = 0;
 8002230:	f04f 0200 	mov.w	r2, #0
 8002234:	f04f 0300 	mov.w	r3, #0
 8002238:	e9c7 2304 	strd	r2, r3, [r7, #16]

		// Calculate the average period
		for(int i = 0; i < 10; i++) {
 800223c:	2300      	movs	r3, #0
 800223e:	60fb      	str	r3, [r7, #12]
 8002240:	e03f      	b.n	80022c2 <period_Measure+0xda>
			uint16_t value = readings[i];
 8002242:	4a3f      	ldr	r2, [pc, #252]	; (8002340 <period_Measure+0x158>)
 8002244:	68fb      	ldr	r3, [r7, #12]
 8002246:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800224a:	80fb      	strh	r3, [r7, #6]

			// Record min/max
			if((double)value >= maximum) {
 800224c:	88fb      	ldrh	r3, [r7, #6]
 800224e:	4618      	mov	r0, r3
 8002250:	f7fe f982 	bl	8000558 <__aeabi_ui2d>
 8002254:	4602      	mov	r2, r0
 8002256:	460b      	mov	r3, r1
 8002258:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800225c:	f7fe fc72 	bl	8000b44 <__aeabi_dcmple>
 8002260:	4603      	mov	r3, r0
 8002262:	2b00      	cmp	r3, #0
 8002264:	d007      	beq.n	8002276 <period_Measure+0x8e>
				maximum = value;
 8002266:	88fb      	ldrh	r3, [r7, #6]
 8002268:	4618      	mov	r0, r3
 800226a:	f7fe f975 	bl	8000558 <__aeabi_ui2d>
 800226e:	4602      	mov	r2, r0
 8002270:	460b      	mov	r3, r1
 8002272:	e9c7 2304 	strd	r2, r3, [r7, #16]
			}
			if((double)value <= minimum) {
 8002276:	88fb      	ldrh	r3, [r7, #6]
 8002278:	4618      	mov	r0, r3
 800227a:	f7fe f96d 	bl	8000558 <__aeabi_ui2d>
 800227e:	4602      	mov	r2, r0
 8002280:	460b      	mov	r3, r1
 8002282:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8002286:	f7fe fc67 	bl	8000b58 <__aeabi_dcmpge>
 800228a:	4603      	mov	r3, r0
 800228c:	2b00      	cmp	r3, #0
 800228e:	d007      	beq.n	80022a0 <period_Measure+0xb8>
				minimum = value;
 8002290:	88fb      	ldrh	r3, [r7, #6]
 8002292:	4618      	mov	r0, r3
 8002294:	f7fe f960 	bl	8000558 <__aeabi_ui2d>
 8002298:	4602      	mov	r2, r0
 800229a:	460b      	mov	r3, r1
 800229c:	e9c7 2306 	strd	r2, r3, [r7, #24]
			}

			average += value;
 80022a0:	88fb      	ldrh	r3, [r7, #6]
 80022a2:	4618      	mov	r0, r3
 80022a4:	f7fe f968 	bl	8000578 <__aeabi_i2d>
 80022a8:	4602      	mov	r2, r0
 80022aa:	460b      	mov	r3, r1
 80022ac:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 80022b0:	f7fe f816 	bl	80002e0 <__adddf3>
 80022b4:	4602      	mov	r2, r0
 80022b6:	460b      	mov	r3, r1
 80022b8:	e9c7 2308 	strd	r2, r3, [r7, #32]
		for(int i = 0; i < 10; i++) {
 80022bc:	68fb      	ldr	r3, [r7, #12]
 80022be:	3301      	adds	r3, #1
 80022c0:	60fb      	str	r3, [r7, #12]
 80022c2:	68fb      	ldr	r3, [r7, #12]
 80022c4:	2b09      	cmp	r3, #9
 80022c6:	ddbc      	ble.n	8002242 <period_Measure+0x5a>
		}

		// Calculate average period in us
		average = average / 10;
 80022c8:	f04f 0200 	mov.w	r2, #0
 80022cc:	4b1d      	ldr	r3, [pc, #116]	; (8002344 <period_Measure+0x15c>)
 80022ce:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 80022d2:	f7fe fae5 	bl	80008a0 <__aeabi_ddiv>
 80022d6:	4602      	mov	r2, r0
 80022d8:	460b      	mov	r3, r1
 80022da:	e9c7 2308 	strd	r2, r3, [r7, #32]

		// Convert to period in seconds
		average *= (1E-6);
 80022de:	a314      	add	r3, pc, #80	; (adr r3, 8002330 <period_Measure+0x148>)
 80022e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80022e4:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 80022e8:	f7fe f9b0 	bl	800064c <__aeabi_dmul>
 80022ec:	4602      	mov	r2, r0
 80022ee:	460b      	mov	r3, r1
 80022f0:	e9c7 2308 	strd	r2, r3, [r7, #32]

		// Convert period to frequency
		average = 1/average;
 80022f4:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 80022f8:	f04f 0000 	mov.w	r0, #0
 80022fc:	4912      	ldr	r1, [pc, #72]	; (8002348 <period_Measure+0x160>)
 80022fe:	f7fe facf 	bl	80008a0 <__aeabi_ddiv>
 8002302:	4602      	mov	r2, r0
 8002304:	460b      	mov	r3, r1
 8002306:	e9c7 2308 	strd	r2, r3, [r7, #32]
		printf("Smallest recorded pulse was %.2f nanoseconds\n", minimum);
 800230a:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800230e:	480f      	ldr	r0, [pc, #60]	; (800234c <period_Measure+0x164>)
 8002310:	f001 fd98 	bl	8003e44 <iprintf>
		printf("Largest recorded pulse was %.2f nanoseconds\n", maximum);
 8002314:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8002318:	480d      	ldr	r0, [pc, #52]	; (8002350 <period_Measure+0x168>)
 800231a:	f001 fd93 	bl	8003e44 <iprintf>
	}

	return average;
 800231e:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
}
 8002322:	4610      	mov	r0, r2
 8002324:	4619      	mov	r1, r3
 8002326:	3728      	adds	r7, #40	; 0x28
 8002328:	46bd      	mov	sp, r7
 800232a:	bd80      	pop	{r7, pc}
 800232c:	f3af 8000 	nop.w
 8002330:	a0b5ed8d 	.word	0xa0b5ed8d
 8002334:	3eb0c6f7 	.word	0x3eb0c6f7
 8002338:	40000800 	.word	0x40000800
 800233c:	20000d0d 	.word	0x20000d0d
 8002340:	20000d10 	.word	0x20000d10
 8002344:	40240000 	.word	0x40240000
 8002348:	3ff00000 	.word	0x3ff00000
 800234c:	08009e48 	.word	0x08009e48
 8002350:	08009e78 	.word	0x08009e78

08002354 <TIM4_IRQHandler>:

void TIM4_IRQHandler(void) {
 8002354:	b490      	push	{r4, r7}
 8002356:	b082      	sub	sp, #8
 8002358:	af00      	add	r7, sp, #0
	// Timer object
	// CCR1 stores period in units of 1us
	volatile TIMER* TIM4 = (TIMER*) TIM4_BASE;
 800235a:	4b15      	ldr	r3, [pc, #84]	; (80023b0 <TIM4_IRQHandler+0x5c>)
 800235c:	607b      	str	r3, [r7, #4]

	// Clear status register so this doesn't keep triggering
	TIM4->SR = 0;
 800235e:	687b      	ldr	r3, [r7, #4]
 8002360:	2200      	movs	r2, #0
 8002362:	611a      	str	r2, [r3, #16]

	// Static to retain count between calls, but not file-scope
	static uint8_t count;

	// Partially for debugging purposes to see what value was read
	register uint16_t value = TIM4->CCR1;
 8002364:	687b      	ldr	r3, [r7, #4]
 8002366:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002368:	b29c      	uxth	r4, r3

	if(count < 10) {
 800236a:	4b12      	ldr	r3, [pc, #72]	; (80023b4 <TIM4_IRQHandler+0x60>)
 800236c:	781b      	ldrb	r3, [r3, #0]
 800236e:	2b09      	cmp	r3, #9
 8002370:	d80d      	bhi.n	800238e <TIM4_IRQHandler+0x3a>
		// Store recorded value and increment counter
		readings[count] = value;
 8002372:	4b10      	ldr	r3, [pc, #64]	; (80023b4 <TIM4_IRQHandler+0x60>)
 8002374:	781b      	ldrb	r3, [r3, #0]
 8002376:	461a      	mov	r2, r3
 8002378:	4b0f      	ldr	r3, [pc, #60]	; (80023b8 <TIM4_IRQHandler+0x64>)
 800237a:	4621      	mov	r1, r4
 800237c:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
		count++;
 8002380:	4b0c      	ldr	r3, [pc, #48]	; (80023b4 <TIM4_IRQHandler+0x60>)
 8002382:	781b      	ldrb	r3, [r3, #0]
 8002384:	3301      	adds	r3, #1
 8002386:	b2da      	uxtb	r2, r3
 8002388:	4b0a      	ldr	r3, [pc, #40]	; (80023b4 <TIM4_IRQHandler+0x60>)
 800238a:	701a      	strb	r2, [r3, #0]
		TIM4->DIER &= ~(1<<6);
		period_Status = 0;
		count = 0;
	}

	return;
 800238c:	e00c      	b.n	80023a8 <TIM4_IRQHandler+0x54>
		TIM4->DIER &= ~(1<<6);
 800238e:	687b      	ldr	r3, [r7, #4]
 8002390:	68db      	ldr	r3, [r3, #12]
 8002392:	f023 0240 	bic.w	r2, r3, #64	; 0x40
 8002396:	687b      	ldr	r3, [r7, #4]
 8002398:	60da      	str	r2, [r3, #12]
		period_Status = 0;
 800239a:	4b08      	ldr	r3, [pc, #32]	; (80023bc <TIM4_IRQHandler+0x68>)
 800239c:	2200      	movs	r2, #0
 800239e:	701a      	strb	r2, [r3, #0]
		count = 0;
 80023a0:	4b04      	ldr	r3, [pc, #16]	; (80023b4 <TIM4_IRQHandler+0x60>)
 80023a2:	2200      	movs	r2, #0
 80023a4:	701a      	strb	r2, [r3, #0]
	return;
 80023a6:	bf00      	nop
}
 80023a8:	3708      	adds	r7, #8
 80023aa:	46bd      	mov	sp, r7
 80023ac:	bc90      	pop	{r4, r7}
 80023ae:	4770      	bx	lr
 80023b0:	40000800 	.word	0x40000800
 80023b4:	20000d24 	.word	0x20000d24
 80023b8:	20000d10 	.word	0x20000d10
 80023bc:	20000d0d 	.word	0x20000d0d

080023c0 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80023c0:	b480      	push	{r7}
 80023c2:	af00      	add	r7, sp, #0
	return 1;
 80023c4:	2301      	movs	r3, #1
}
 80023c6:	4618      	mov	r0, r3
 80023c8:	46bd      	mov	sp, r7
 80023ca:	bc80      	pop	{r7}
 80023cc:	4770      	bx	lr

080023ce <_kill>:

int _kill(int pid, int sig)
{
 80023ce:	b580      	push	{r7, lr}
 80023d0:	b082      	sub	sp, #8
 80023d2:	af00      	add	r7, sp, #0
 80023d4:	6078      	str	r0, [r7, #4]
 80023d6:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 80023d8:	f000 fc36 	bl	8002c48 <__errno>
 80023dc:	4603      	mov	r3, r0
 80023de:	2216      	movs	r2, #22
 80023e0:	601a      	str	r2, [r3, #0]
	return -1;
 80023e2:	f04f 33ff 	mov.w	r3, #4294967295
}
 80023e6:	4618      	mov	r0, r3
 80023e8:	3708      	adds	r7, #8
 80023ea:	46bd      	mov	sp, r7
 80023ec:	bd80      	pop	{r7, pc}

080023ee <_exit>:

void _exit (int status)
{
 80023ee:	b580      	push	{r7, lr}
 80023f0:	b082      	sub	sp, #8
 80023f2:	af00      	add	r7, sp, #0
 80023f4:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 80023f6:	f04f 31ff 	mov.w	r1, #4294967295
 80023fa:	6878      	ldr	r0, [r7, #4]
 80023fc:	f7ff ffe7 	bl	80023ce <_kill>
	while (1) {}		/* Make sure we hang here */
 8002400:	e7fe      	b.n	8002400 <_exit+0x12>

08002402 <_close>:
	}
	return len;
}

int _close(int file)
{
 8002402:	b480      	push	{r7}
 8002404:	b083      	sub	sp, #12
 8002406:	af00      	add	r7, sp, #0
 8002408:	6078      	str	r0, [r7, #4]
	return -1;
 800240a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800240e:	4618      	mov	r0, r3
 8002410:	370c      	adds	r7, #12
 8002412:	46bd      	mov	sp, r7
 8002414:	bc80      	pop	{r7}
 8002416:	4770      	bx	lr

08002418 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8002418:	b480      	push	{r7}
 800241a:	b083      	sub	sp, #12
 800241c:	af00      	add	r7, sp, #0
 800241e:	6078      	str	r0, [r7, #4]
 8002420:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8002422:	683b      	ldr	r3, [r7, #0]
 8002424:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8002428:	605a      	str	r2, [r3, #4]
	return 0;
 800242a:	2300      	movs	r3, #0
}
 800242c:	4618      	mov	r0, r3
 800242e:	370c      	adds	r7, #12
 8002430:	46bd      	mov	sp, r7
 8002432:	bc80      	pop	{r7}
 8002434:	4770      	bx	lr

08002436 <_isatty>:

int _isatty(int file)
{
 8002436:	b480      	push	{r7}
 8002438:	b083      	sub	sp, #12
 800243a:	af00      	add	r7, sp, #0
 800243c:	6078      	str	r0, [r7, #4]
	return 1;
 800243e:	2301      	movs	r3, #1
}
 8002440:	4618      	mov	r0, r3
 8002442:	370c      	adds	r7, #12
 8002444:	46bd      	mov	sp, r7
 8002446:	bc80      	pop	{r7}
 8002448:	4770      	bx	lr

0800244a <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800244a:	b480      	push	{r7}
 800244c:	b085      	sub	sp, #20
 800244e:	af00      	add	r7, sp, #0
 8002450:	60f8      	str	r0, [r7, #12]
 8002452:	60b9      	str	r1, [r7, #8]
 8002454:	607a      	str	r2, [r7, #4]
	return 0;
 8002456:	2300      	movs	r3, #0
}
 8002458:	4618      	mov	r0, r3
 800245a:	3714      	adds	r7, #20
 800245c:	46bd      	mov	sp, r7
 800245e:	bc80      	pop	{r7}
 8002460:	4770      	bx	lr
	...

08002464 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8002464:	b580      	push	{r7, lr}
 8002466:	b086      	sub	sp, #24
 8002468:	af00      	add	r7, sp, #0
 800246a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800246c:	4a14      	ldr	r2, [pc, #80]	; (80024c0 <_sbrk+0x5c>)
 800246e:	4b15      	ldr	r3, [pc, #84]	; (80024c4 <_sbrk+0x60>)
 8002470:	1ad3      	subs	r3, r2, r3
 8002472:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8002474:	697b      	ldr	r3, [r7, #20]
 8002476:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002478:	4b13      	ldr	r3, [pc, #76]	; (80024c8 <_sbrk+0x64>)
 800247a:	681b      	ldr	r3, [r3, #0]
 800247c:	2b00      	cmp	r3, #0
 800247e:	d102      	bne.n	8002486 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8002480:	4b11      	ldr	r3, [pc, #68]	; (80024c8 <_sbrk+0x64>)
 8002482:	4a12      	ldr	r2, [pc, #72]	; (80024cc <_sbrk+0x68>)
 8002484:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002486:	4b10      	ldr	r3, [pc, #64]	; (80024c8 <_sbrk+0x64>)
 8002488:	681a      	ldr	r2, [r3, #0]
 800248a:	687b      	ldr	r3, [r7, #4]
 800248c:	4413      	add	r3, r2
 800248e:	693a      	ldr	r2, [r7, #16]
 8002490:	429a      	cmp	r2, r3
 8002492:	d207      	bcs.n	80024a4 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002494:	f000 fbd8 	bl	8002c48 <__errno>
 8002498:	4603      	mov	r3, r0
 800249a:	220c      	movs	r2, #12
 800249c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800249e:	f04f 33ff 	mov.w	r3, #4294967295
 80024a2:	e009      	b.n	80024b8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80024a4:	4b08      	ldr	r3, [pc, #32]	; (80024c8 <_sbrk+0x64>)
 80024a6:	681b      	ldr	r3, [r3, #0]
 80024a8:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80024aa:	4b07      	ldr	r3, [pc, #28]	; (80024c8 <_sbrk+0x64>)
 80024ac:	681a      	ldr	r2, [r3, #0]
 80024ae:	687b      	ldr	r3, [r7, #4]
 80024b0:	4413      	add	r3, r2
 80024b2:	4a05      	ldr	r2, [pc, #20]	; (80024c8 <_sbrk+0x64>)
 80024b4:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80024b6:	68fb      	ldr	r3, [r7, #12]
}
 80024b8:	4618      	mov	r0, r3
 80024ba:	3718      	adds	r7, #24
 80024bc:	46bd      	mov	sp, r7
 80024be:	bd80      	pop	{r7, pc}
 80024c0:	20020000 	.word	0x20020000
 80024c4:	00000400 	.word	0x00000400
 80024c8:	20000d28 	.word	0x20000d28
 80024cc:	20000d50 	.word	0x20000d50

080024d0 <_read>:


// These will override _read and _write in syscalls.c, which are
// prototyped as weak
int _read(int file, char *ptr, int len)
{
 80024d0:	b580      	push	{r7, lr}
 80024d2:	b086      	sub	sp, #24
 80024d4:	af00      	add	r7, sp, #0
 80024d6:	60f8      	str	r0, [r7, #12]
 80024d8:	60b9      	str	r1, [r7, #8]
 80024da:	607a      	str	r2, [r7, #4]
	int DataIdx;
	// Modified the for loop in order to get the correct behavior for fgets
	int byteCnt = 0;
 80024dc:	2300      	movs	r3, #0
 80024de:	613b      	str	r3, [r7, #16]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80024e0:	2300      	movs	r3, #0
 80024e2:	617b      	str	r3, [r7, #20]
 80024e4:	e012      	b.n	800250c <_read+0x3c>
	{
		//*ptr++ = __io_getchar();
		byteCnt++;
 80024e6:	693b      	ldr	r3, [r7, #16]
 80024e8:	3301      	adds	r3, #1
 80024ea:	613b      	str	r3, [r7, #16]
		//*ptr++ = usart2_getch();
		*ptr = usart2_getch();
 80024ec:	f000 f836 	bl	800255c <usart2_getch>
 80024f0:	4603      	mov	r3, r0
 80024f2:	461a      	mov	r2, r3
 80024f4:	68bb      	ldr	r3, [r7, #8]
 80024f6:	701a      	strb	r2, [r3, #0]
		if(*ptr == '\n') break;
 80024f8:	68bb      	ldr	r3, [r7, #8]
 80024fa:	781b      	ldrb	r3, [r3, #0]
 80024fc:	2b0a      	cmp	r3, #10
 80024fe:	d00a      	beq.n	8002516 <_read+0x46>
		ptr++;
 8002500:	68bb      	ldr	r3, [r7, #8]
 8002502:	3301      	adds	r3, #1
 8002504:	60bb      	str	r3, [r7, #8]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002506:	697b      	ldr	r3, [r7, #20]
 8002508:	3301      	adds	r3, #1
 800250a:	617b      	str	r3, [r7, #20]
 800250c:	697a      	ldr	r2, [r7, #20]
 800250e:	687b      	ldr	r3, [r7, #4]
 8002510:	429a      	cmp	r2, r3
 8002512:	dbe8      	blt.n	80024e6 <_read+0x16>
 8002514:	e000      	b.n	8002518 <_read+0x48>
		if(*ptr == '\n') break;
 8002516:	bf00      	nop
	}

	//return len;
	return byteCnt; // Return byte count
 8002518:	693b      	ldr	r3, [r7, #16]
}
 800251a:	4618      	mov	r0, r3
 800251c:	3718      	adds	r7, #24
 800251e:	46bd      	mov	sp, r7
 8002520:	bd80      	pop	{r7, pc}

08002522 <_write>:

int _write(int file, char *ptr, int len)
{
 8002522:	b580      	push	{r7, lr}
 8002524:	b086      	sub	sp, #24
 8002526:	af00      	add	r7, sp, #0
 8002528:	60f8      	str	r0, [r7, #12]
 800252a:	60b9      	str	r1, [r7, #8]
 800252c:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800252e:	2300      	movs	r3, #0
 8002530:	617b      	str	r3, [r7, #20]
 8002532:	e009      	b.n	8002548 <_write+0x26>
	{
		usart2_putch(*ptr++);
 8002534:	68bb      	ldr	r3, [r7, #8]
 8002536:	1c5a      	adds	r2, r3, #1
 8002538:	60ba      	str	r2, [r7, #8]
 800253a:	781b      	ldrb	r3, [r3, #0]
 800253c:	4618      	mov	r0, r3
 800253e:	f000 f82f 	bl	80025a0 <usart2_putch>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002542:	697b      	ldr	r3, [r7, #20]
 8002544:	3301      	adds	r3, #1
 8002546:	617b      	str	r3, [r7, #20]
 8002548:	697a      	ldr	r2, [r7, #20]
 800254a:	687b      	ldr	r3, [r7, #4]
 800254c:	429a      	cmp	r2, r3
 800254e:	dbf1      	blt.n	8002534 <_write+0x12>
	}
	return len;
 8002550:	687b      	ldr	r3, [r7, #4]
}
 8002552:	4618      	mov	r0, r3
 8002554:	3718      	adds	r7, #24
 8002556:	46bd      	mov	sp, r7
 8002558:	bd80      	pop	{r7, pc}
	...

0800255c <usart2_getch>:



char usart2_getch(){
 800255c:	b580      	push	{r7, lr}
 800255e:	b082      	sub	sp, #8
 8002560:	af00      	add	r7, sp, #0
	char c;
	while((*(USART_SR)&(1<<RXNE)) != (1<<RXNE));
 8002562:	bf00      	nop
 8002564:	4b0c      	ldr	r3, [pc, #48]	; (8002598 <usart2_getch+0x3c>)
 8002566:	681b      	ldr	r3, [r3, #0]
 8002568:	f003 0320 	and.w	r3, r3, #32
 800256c:	2b20      	cmp	r3, #32
 800256e:	d1f9      	bne.n	8002564 <usart2_getch+0x8>
	c = ((char) *USART_DR);  // Read character from usart
 8002570:	4b0a      	ldr	r3, [pc, #40]	; (800259c <usart2_getch+0x40>)
 8002572:	681b      	ldr	r3, [r3, #0]
 8002574:	71fb      	strb	r3, [r7, #7]
	usart2_putch(c);  // Echo back
 8002576:	79fb      	ldrb	r3, [r7, #7]
 8002578:	4618      	mov	r0, r3
 800257a:	f000 f811 	bl	80025a0 <usart2_putch>

	if (c == '\r'){  // If character is CR
 800257e:	79fb      	ldrb	r3, [r7, #7]
 8002580:	2b0d      	cmp	r3, #13
 8002582:	d104      	bne.n	800258e <usart2_getch+0x32>
		usart2_putch('\n');  // send it
 8002584:	200a      	movs	r0, #10
 8002586:	f000 f80b 	bl	80025a0 <usart2_putch>
		c = '\n';   // Return LF. fgets is terminated by LF
 800258a:	230a      	movs	r3, #10
 800258c:	71fb      	strb	r3, [r7, #7]
	}

	return c;
 800258e:	79fb      	ldrb	r3, [r7, #7]
}
 8002590:	4618      	mov	r0, r3
 8002592:	3708      	adds	r7, #8
 8002594:	46bd      	mov	sp, r7
 8002596:	bd80      	pop	{r7, pc}
 8002598:	40004400 	.word	0x40004400
 800259c:	40004404 	.word	0x40004404

080025a0 <usart2_putch>:

void usart2_putch(char c){
 80025a0:	b480      	push	{r7}
 80025a2:	b083      	sub	sp, #12
 80025a4:	af00      	add	r7, sp, #0
 80025a6:	4603      	mov	r3, r0
 80025a8:	71fb      	strb	r3, [r7, #7]
	while((*(USART_SR)&(1<<TXE)) != (1<<TXE));
 80025aa:	bf00      	nop
 80025ac:	4b06      	ldr	r3, [pc, #24]	; (80025c8 <usart2_putch+0x28>)
 80025ae:	681b      	ldr	r3, [r3, #0]
 80025b0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80025b4:	2b80      	cmp	r3, #128	; 0x80
 80025b6:	d1f9      	bne.n	80025ac <usart2_putch+0xc>
	*(USART_DR) = c;
 80025b8:	4a04      	ldr	r2, [pc, #16]	; (80025cc <usart2_putch+0x2c>)
 80025ba:	79fb      	ldrb	r3, [r7, #7]
 80025bc:	6013      	str	r3, [r2, #0]
}
 80025be:	bf00      	nop
 80025c0:	370c      	adds	r7, #12
 80025c2:	46bd      	mov	sp, r7
 80025c4:	bc80      	pop	{r7}
 80025c6:	4770      	bx	lr
 80025c8:	40004400 	.word	0x40004400
 80025cc:	40004404 	.word	0x40004404

080025d0 <init_usart2>:

void init_usart2(uint32_t baud, uint32_t sysclk){
 80025d0:	b580      	push	{r7, lr}
 80025d2:	b082      	sub	sp, #8
 80025d4:	af00      	add	r7, sp, #0
 80025d6:	6078      	str	r0, [r7, #4]
 80025d8:	6039      	str	r1, [r7, #0]
	// Enable clocks for GPIOA and USART2
	*(RCC_AHB1ENR) |= (1<<GPIOAEN);
 80025da:	4b20      	ldr	r3, [pc, #128]	; (800265c <init_usart2+0x8c>)
 80025dc:	681b      	ldr	r3, [r3, #0]
 80025de:	4a1f      	ldr	r2, [pc, #124]	; (800265c <init_usart2+0x8c>)
 80025e0:	f043 0301 	orr.w	r3, r3, #1
 80025e4:	6013      	str	r3, [r2, #0]
	*(RCC_APB1ENR) |= (1<<USART2EN);
 80025e6:	4b1e      	ldr	r3, [pc, #120]	; (8002660 <init_usart2+0x90>)
 80025e8:	681b      	ldr	r3, [r3, #0]
 80025ea:	4a1d      	ldr	r2, [pc, #116]	; (8002660 <init_usart2+0x90>)
 80025ec:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80025f0:	6013      	str	r3, [r2, #0]

	// Function 7 of PORTA pins is USART
	*(GPIOA_AFRL) &= (0xFFFF00FF); // Clear the bits associated with PA3 and PA2
 80025f2:	4b1c      	ldr	r3, [pc, #112]	; (8002664 <init_usart2+0x94>)
 80025f4:	681b      	ldr	r3, [r3, #0]
 80025f6:	4a1b      	ldr	r2, [pc, #108]	; (8002664 <init_usart2+0x94>)
 80025f8:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80025fc:	6013      	str	r3, [r2, #0]
	*(GPIOA_AFRL) |= (0b01110111<<8);  // Choose function 7 for both PA3 and PA2
 80025fe:	4b19      	ldr	r3, [pc, #100]	; (8002664 <init_usart2+0x94>)
 8002600:	681b      	ldr	r3, [r3, #0]
 8002602:	4a18      	ldr	r2, [pc, #96]	; (8002664 <init_usart2+0x94>)
 8002604:	f443 43ee 	orr.w	r3, r3, #30464	; 0x7700
 8002608:	6013      	str	r3, [r2, #0]
	*(GPIOA_MODER) &= (0xFFFFFF0F);  // Clear mode bits for PA3 and PA2
 800260a:	4b17      	ldr	r3, [pc, #92]	; (8002668 <init_usart2+0x98>)
 800260c:	681b      	ldr	r3, [r3, #0]
 800260e:	4a16      	ldr	r2, [pc, #88]	; (8002668 <init_usart2+0x98>)
 8002610:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8002614:	6013      	str	r3, [r2, #0]
	*(GPIOA_MODER) |= (0b1010<<4);  // Both PA3 and PA2 in alt function mode
 8002616:	4b14      	ldr	r3, [pc, #80]	; (8002668 <init_usart2+0x98>)
 8002618:	681b      	ldr	r3, [r3, #0]
 800261a:	4a13      	ldr	r2, [pc, #76]	; (8002668 <init_usart2+0x98>)
 800261c:	f043 03a0 	orr.w	r3, r3, #160	; 0xa0
 8002620:	6013      	str	r3, [r2, #0]
	//USART2_init();  //8n1 no flow control
	// over8 = 0..oversample by 16
	// M = 0..1 start bit, data size is 8, 1 stop bit
	// PCE= 0..Parity check not enabled
	// no interrupts... using polling
	*(USART_CR1) = (1<<UE)|(1<<TE)|(1<<RE); // Enable UART, Tx and Rx
 8002622:	4b12      	ldr	r3, [pc, #72]	; (800266c <init_usart2+0x9c>)
 8002624:	f242 020c 	movw	r2, #8204	; 0x200c
 8002628:	601a      	str	r2, [r3, #0]
	*(USART_CR2) = 0;  // This is the default, but do it anyway
 800262a:	4b11      	ldr	r3, [pc, #68]	; (8002670 <init_usart2+0xa0>)
 800262c:	2200      	movs	r2, #0
 800262e:	601a      	str	r2, [r3, #0]
	*(USART_CR3) = 0;  // This is the default, but do it anyway
 8002630:	4b10      	ldr	r3, [pc, #64]	; (8002674 <init_usart2+0xa4>)
 8002632:	2200      	movs	r2, #0
 8002634:	601a      	str	r2, [r3, #0]
	*(USART_BRR) = sysclk/baud;
 8002636:	4910      	ldr	r1, [pc, #64]	; (8002678 <init_usart2+0xa8>)
 8002638:	683a      	ldr	r2, [r7, #0]
 800263a:	687b      	ldr	r3, [r7, #4]
 800263c:	fbb2 f3f3 	udiv	r3, r2, r3
 8002640:	600b      	str	r3, [r1, #0]

	/* I'm not sure if this is needed for standard IO*/
	 //setvbuf(stderr, NULL, _IONBF, 0);
	 //setvbuf(stdin, NULL, _IONBF, 0);
	 setvbuf(stdout, NULL, _IONBF, 0);
 8002642:	4b0e      	ldr	r3, [pc, #56]	; (800267c <init_usart2+0xac>)
 8002644:	681b      	ldr	r3, [r3, #0]
 8002646:	6898      	ldr	r0, [r3, #8]
 8002648:	2300      	movs	r3, #0
 800264a:	2202      	movs	r2, #2
 800264c:	2100      	movs	r1, #0
 800264e:	f001 fd2b 	bl	80040a8 <setvbuf>
}
 8002652:	bf00      	nop
 8002654:	3708      	adds	r7, #8
 8002656:	46bd      	mov	sp, r7
 8002658:	bd80      	pop	{r7, pc}
 800265a:	bf00      	nop
 800265c:	40023830 	.word	0x40023830
 8002660:	40023840 	.word	0x40023840
 8002664:	40020020 	.word	0x40020020
 8002668:	40020000 	.word	0x40020000
 800266c:	4000440c 	.word	0x4000440c
 8002670:	40004410 	.word	0x40004410
 8002674:	40004414 	.word	0x40004414
 8002678:	40004408 	.word	0x40004408
 800267c:	20000b10 	.word	0x20000b10

08002680 <sineWave>:
/**
 * Generates a dynamically allocated float array containing
 * samples of a sine/cosine wave with samples on the interval
 * [0,4095]
 */
uint16_t* sineWave(uint32_t samples) {
 8002680:	b5b0      	push	{r4, r5, r7, lr}
 8002682:	b086      	sub	sp, #24
 8002684:	af00      	add	r7, sp, #0
 8002686:	6078      	str	r0, [r7, #4]
	// Create a chunk of memory to dump the waveform with
	// one extra space for a terminator
	uint16_t* wave = (uint16_t*) malloc((samples+1) * sizeof(uint16_t));
 8002688:	687b      	ldr	r3, [r7, #4]
 800268a:	3301      	adds	r3, #1
 800268c:	005b      	lsls	r3, r3, #1
 800268e:	4618      	mov	r0, r3
 8002690:	f000 fc9e 	bl	8002fd0 <malloc>
 8002694:	4603      	mov	r3, r0
 8002696:	613b      	str	r3, [r7, #16]

	for(int i = 0; i < samples; i++) {
 8002698:	2300      	movs	r3, #0
 800269a:	617b      	str	r3, [r7, #20]
 800269c:	e04d      	b.n	800273a <sineWave+0xba>
		// For speed purposes try to fit a float into a register or registers
		register float sample = (0.5) * cosf((2*PI*i)/(samples-1)) + (0.5);
 800269e:	6978      	ldr	r0, [r7, #20]
 80026a0:	f7fd ff6a 	bl	8000578 <__aeabi_i2d>
 80026a4:	a32e      	add	r3, pc, #184	; (adr r3, 8002760 <sineWave+0xe0>)
 80026a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80026aa:	f7fd ffcf 	bl	800064c <__aeabi_dmul>
 80026ae:	4602      	mov	r2, r0
 80026b0:	460b      	mov	r3, r1
 80026b2:	4614      	mov	r4, r2
 80026b4:	461d      	mov	r5, r3
 80026b6:	687b      	ldr	r3, [r7, #4]
 80026b8:	3b01      	subs	r3, #1
 80026ba:	4618      	mov	r0, r3
 80026bc:	f7fd ff4c 	bl	8000558 <__aeabi_ui2d>
 80026c0:	4602      	mov	r2, r0
 80026c2:	460b      	mov	r3, r1
 80026c4:	4620      	mov	r0, r4
 80026c6:	4629      	mov	r1, r5
 80026c8:	f7fe f8ea 	bl	80008a0 <__aeabi_ddiv>
 80026cc:	4602      	mov	r2, r0
 80026ce:	460b      	mov	r3, r1
 80026d0:	4610      	mov	r0, r2
 80026d2:	4619      	mov	r1, r3
 80026d4:	f7fe fab2 	bl	8000c3c <__aeabi_d2f>
 80026d8:	4603      	mov	r3, r0
 80026da:	4618      	mov	r0, r3
 80026dc:	f005 ff36 	bl	800854c <cosf>
 80026e0:	4603      	mov	r3, r0
 80026e2:	4618      	mov	r0, r3
 80026e4:	f7fd ff5a 	bl	800059c <__aeabi_f2d>
 80026e8:	f04f 0200 	mov.w	r2, #0
 80026ec:	4b1e      	ldr	r3, [pc, #120]	; (8002768 <sineWave+0xe8>)
 80026ee:	f7fd ffad 	bl	800064c <__aeabi_dmul>
 80026f2:	4602      	mov	r2, r0
 80026f4:	460b      	mov	r3, r1
 80026f6:	4610      	mov	r0, r2
 80026f8:	4619      	mov	r1, r3
 80026fa:	f04f 0200 	mov.w	r2, #0
 80026fe:	4b1a      	ldr	r3, [pc, #104]	; (8002768 <sineWave+0xe8>)
 8002700:	f7fd fdee 	bl	80002e0 <__adddf3>
 8002704:	4602      	mov	r2, r0
 8002706:	460b      	mov	r3, r1
 8002708:	4610      	mov	r0, r2
 800270a:	4619      	mov	r1, r3
 800270c:	f7fe fa96 	bl	8000c3c <__aeabi_d2f>
 8002710:	4603      	mov	r3, r0
 8002712:	461c      	mov	r4, r3

		// Convert to a 16-bit int even though its artificially limited to 12-bit
		uint16_t conversion = sample * DAC_MAX;
 8002714:	4915      	ldr	r1, [pc, #84]	; (800276c <sineWave+0xec>)
 8002716:	4620      	mov	r0, r4
 8002718:	f7fe fbee 	bl	8000ef8 <__aeabi_fmul>
 800271c:	4603      	mov	r3, r0
 800271e:	4618      	mov	r0, r3
 8002720:	f7fe fdec 	bl	80012fc <__aeabi_f2uiz>
 8002724:	4603      	mov	r3, r0
 8002726:	81fb      	strh	r3, [r7, #14]

		// Write
		wave[i] = conversion;
 8002728:	697b      	ldr	r3, [r7, #20]
 800272a:	005b      	lsls	r3, r3, #1
 800272c:	693a      	ldr	r2, [r7, #16]
 800272e:	4413      	add	r3, r2
 8002730:	89fa      	ldrh	r2, [r7, #14]
 8002732:	801a      	strh	r2, [r3, #0]
	for(int i = 0; i < samples; i++) {
 8002734:	697b      	ldr	r3, [r7, #20]
 8002736:	3301      	adds	r3, #1
 8002738:	617b      	str	r3, [r7, #20]
 800273a:	697b      	ldr	r3, [r7, #20]
 800273c:	687a      	ldr	r2, [r7, #4]
 800273e:	429a      	cmp	r2, r3
 8002740:	d8ad      	bhi.n	800269e <sineWave+0x1e>
	}

	// Terminator
	wave[samples] = -1;
 8002742:	687b      	ldr	r3, [r7, #4]
 8002744:	005b      	lsls	r3, r3, #1
 8002746:	693a      	ldr	r2, [r7, #16]
 8002748:	4413      	add	r3, r2
 800274a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800274e:	801a      	strh	r2, [r3, #0]

	return wave;
 8002750:	693b      	ldr	r3, [r7, #16]
}
 8002752:	4618      	mov	r0, r3
 8002754:	3718      	adds	r7, #24
 8002756:	46bd      	mov	sp, r7
 8002758:	bdb0      	pop	{r4, r5, r7, pc}
 800275a:	bf00      	nop
 800275c:	f3af 8000 	nop.w
 8002760:	4d12d84a 	.word	0x4d12d84a
 8002764:	401921fb 	.word	0x401921fb
 8002768:	3fe00000 	.word	0x3fe00000
 800276c:	457ff000 	.word	0x457ff000

08002770 <triWave>:
/**
 * Generates a dynamically allocated float array containing
 * samples of a triangle wave, with samples being on
 * the interval of [0,4095]
 */
uint16_t* triWave(uint32_t samples) {
 8002770:	b5b0      	push	{r4, r5, r7, lr}
 8002772:	b086      	sub	sp, #24
 8002774:	af00      	add	r7, sp, #0
 8002776:	6078      	str	r0, [r7, #4]
	// Create a chunk of memory to dump the waveform with
	// one extra space for a terminator
	uint16_t* wave = (uint16_t*) malloc((samples+1) * sizeof(uint16_t));
 8002778:	687b      	ldr	r3, [r7, #4]
 800277a:	3301      	adds	r3, #1
 800277c:	005b      	lsls	r3, r3, #1
 800277e:	4618      	mov	r0, r3
 8002780:	f000 fc26 	bl	8002fd0 <malloc>
 8002784:	4603      	mov	r3, r0
 8002786:	613b      	str	r3, [r7, #16]

	for(int i = 0; i < samples; i++) {
 8002788:	2300      	movs	r3, #0
 800278a:	617b      	str	r3, [r7, #20]
 800278c:	e051      	b.n	8002832 <triWave+0xc2>
		register float sample = (2/(2*PI)) * asinf(sinf((2*PI*i)/(samples-1))) + (0.5);
 800278e:	6978      	ldr	r0, [r7, #20]
 8002790:	f7fd fef2 	bl	8000578 <__aeabi_i2d>
 8002794:	a330      	add	r3, pc, #192	; (adr r3, 8002858 <triWave+0xe8>)
 8002796:	e9d3 2300 	ldrd	r2, r3, [r3]
 800279a:	f7fd ff57 	bl	800064c <__aeabi_dmul>
 800279e:	4602      	mov	r2, r0
 80027a0:	460b      	mov	r3, r1
 80027a2:	4614      	mov	r4, r2
 80027a4:	461d      	mov	r5, r3
 80027a6:	687b      	ldr	r3, [r7, #4]
 80027a8:	3b01      	subs	r3, #1
 80027aa:	4618      	mov	r0, r3
 80027ac:	f7fd fed4 	bl	8000558 <__aeabi_ui2d>
 80027b0:	4602      	mov	r2, r0
 80027b2:	460b      	mov	r3, r1
 80027b4:	4620      	mov	r0, r4
 80027b6:	4629      	mov	r1, r5
 80027b8:	f7fe f872 	bl	80008a0 <__aeabi_ddiv>
 80027bc:	4602      	mov	r2, r0
 80027be:	460b      	mov	r3, r1
 80027c0:	4610      	mov	r0, r2
 80027c2:	4619      	mov	r1, r3
 80027c4:	f7fe fa3a 	bl	8000c3c <__aeabi_d2f>
 80027c8:	4603      	mov	r3, r0
 80027ca:	4618      	mov	r0, r3
 80027cc:	f005 fef6 	bl	80085bc <sinf>
 80027d0:	4603      	mov	r3, r0
 80027d2:	4618      	mov	r0, r3
 80027d4:	f005 ff4a 	bl	800866c <asinf>
 80027d8:	4603      	mov	r3, r0
 80027da:	4618      	mov	r0, r3
 80027dc:	f7fd fede 	bl	800059c <__aeabi_f2d>
 80027e0:	a31f      	add	r3, pc, #124	; (adr r3, 8002860 <triWave+0xf0>)
 80027e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80027e6:	f7fd ff31 	bl	800064c <__aeabi_dmul>
 80027ea:	4602      	mov	r2, r0
 80027ec:	460b      	mov	r3, r1
 80027ee:	4610      	mov	r0, r2
 80027f0:	4619      	mov	r1, r3
 80027f2:	f04f 0200 	mov.w	r2, #0
 80027f6:	4b1c      	ldr	r3, [pc, #112]	; (8002868 <triWave+0xf8>)
 80027f8:	f7fd fd72 	bl	80002e0 <__adddf3>
 80027fc:	4602      	mov	r2, r0
 80027fe:	460b      	mov	r3, r1
 8002800:	4610      	mov	r0, r2
 8002802:	4619      	mov	r1, r3
 8002804:	f7fe fa1a 	bl	8000c3c <__aeabi_d2f>
 8002808:	4603      	mov	r3, r0
 800280a:	461c      	mov	r4, r3

		uint16_t conversion = sample * DAC_MAX;
 800280c:	4917      	ldr	r1, [pc, #92]	; (800286c <triWave+0xfc>)
 800280e:	4620      	mov	r0, r4
 8002810:	f7fe fb72 	bl	8000ef8 <__aeabi_fmul>
 8002814:	4603      	mov	r3, r0
 8002816:	4618      	mov	r0, r3
 8002818:	f7fe fd70 	bl	80012fc <__aeabi_f2uiz>
 800281c:	4603      	mov	r3, r0
 800281e:	81fb      	strh	r3, [r7, #14]

		wave[i] = conversion;
 8002820:	697b      	ldr	r3, [r7, #20]
 8002822:	005b      	lsls	r3, r3, #1
 8002824:	693a      	ldr	r2, [r7, #16]
 8002826:	4413      	add	r3, r2
 8002828:	89fa      	ldrh	r2, [r7, #14]
 800282a:	801a      	strh	r2, [r3, #0]
	for(int i = 0; i < samples; i++) {
 800282c:	697b      	ldr	r3, [r7, #20]
 800282e:	3301      	adds	r3, #1
 8002830:	617b      	str	r3, [r7, #20]
 8002832:	697b      	ldr	r3, [r7, #20]
 8002834:	687a      	ldr	r2, [r7, #4]
 8002836:	429a      	cmp	r2, r3
 8002838:	d8a9      	bhi.n	800278e <triWave+0x1e>
	}

	wave[samples] = -1;
 800283a:	687b      	ldr	r3, [r7, #4]
 800283c:	005b      	lsls	r3, r3, #1
 800283e:	693a      	ldr	r2, [r7, #16]
 8002840:	4413      	add	r3, r2
 8002842:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8002846:	801a      	strh	r2, [r3, #0]
	return wave;
 8002848:	693b      	ldr	r3, [r7, #16]

}
 800284a:	4618      	mov	r0, r3
 800284c:	3718      	adds	r7, #24
 800284e:	46bd      	mov	sp, r7
 8002850:	bdb0      	pop	{r4, r5, r7, pc}
 8002852:	bf00      	nop
 8002854:	f3af 8000 	nop.w
 8002858:	4d12d84a 	.word	0x4d12d84a
 800285c:	401921fb 	.word	0x401921fb
 8002860:	739e4f68 	.word	0x739e4f68
 8002864:	3fd45f30 	.word	0x3fd45f30
 8002868:	3fe00000 	.word	0x3fe00000
 800286c:	457ff000 	.word	0x457ff000

08002870 <sawtoothWave>:
/**
 * Generates a dynamically allocated float array containing
 * samples of a sawtooth wave, with samples being on the
 * interval of [0,4095]
 */
uint16_t* sawtoothWave(uint32_t samples) {
 8002870:	b5b0      	push	{r4, r5, r7, lr}
 8002872:	b086      	sub	sp, #24
 8002874:	af00      	add	r7, sp, #0
 8002876:	6078      	str	r0, [r7, #4]
	// Create a chunk of memory to dump the waveform with
	// one extra space for a terminator
	uint16_t* wave = (uint16_t*) malloc((samples+1) * sizeof(uint16_t));
 8002878:	687b      	ldr	r3, [r7, #4]
 800287a:	3301      	adds	r3, #1
 800287c:	005b      	lsls	r3, r3, #1
 800287e:	4618      	mov	r0, r3
 8002880:	f000 fba6 	bl	8002fd0 <malloc>
 8002884:	4603      	mov	r3, r0
 8002886:	613b      	str	r3, [r7, #16]

	for(int i = 0; i < samples; i++) {
 8002888:	2300      	movs	r3, #0
 800288a:	617b      	str	r3, [r7, #20]
 800288c:	e057      	b.n	800293e <sawtoothWave+0xce>
		register float sample = ((-1 / PI) * atanf((1/tanf((PI*i/(samples-1)))))) + 0.5;
 800288e:	6978      	ldr	r0, [r7, #20]
 8002890:	f7fd fe72 	bl	8000578 <__aeabi_i2d>
 8002894:	a332      	add	r3, pc, #200	; (adr r3, 8002960 <sawtoothWave+0xf0>)
 8002896:	e9d3 2300 	ldrd	r2, r3, [r3]
 800289a:	f7fd fed7 	bl	800064c <__aeabi_dmul>
 800289e:	4602      	mov	r2, r0
 80028a0:	460b      	mov	r3, r1
 80028a2:	4614      	mov	r4, r2
 80028a4:	461d      	mov	r5, r3
 80028a6:	687b      	ldr	r3, [r7, #4]
 80028a8:	3b01      	subs	r3, #1
 80028aa:	4618      	mov	r0, r3
 80028ac:	f7fd fe54 	bl	8000558 <__aeabi_ui2d>
 80028b0:	4602      	mov	r2, r0
 80028b2:	460b      	mov	r3, r1
 80028b4:	4620      	mov	r0, r4
 80028b6:	4629      	mov	r1, r5
 80028b8:	f7fd fff2 	bl	80008a0 <__aeabi_ddiv>
 80028bc:	4602      	mov	r2, r0
 80028be:	460b      	mov	r3, r1
 80028c0:	4610      	mov	r0, r2
 80028c2:	4619      	mov	r1, r3
 80028c4:	f7fe f9ba 	bl	8000c3c <__aeabi_d2f>
 80028c8:	4603      	mov	r3, r0
 80028ca:	4618      	mov	r0, r3
 80028cc:	f005 feac 	bl	8008628 <tanf>
 80028d0:	4603      	mov	r3, r0
 80028d2:	4619      	mov	r1, r3
 80028d4:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 80028d8:	f7fe fbc2 	bl	8001060 <__aeabi_fdiv>
 80028dc:	4603      	mov	r3, r0
 80028de:	4618      	mov	r0, r3
 80028e0:	f005 fd28 	bl	8008334 <atanf>
 80028e4:	4603      	mov	r3, r0
 80028e6:	4618      	mov	r0, r3
 80028e8:	f7fd fe58 	bl	800059c <__aeabi_f2d>
 80028ec:	a31e      	add	r3, pc, #120	; (adr r3, 8002968 <sawtoothWave+0xf8>)
 80028ee:	e9d3 2300 	ldrd	r2, r3, [r3]
 80028f2:	f7fd feab 	bl	800064c <__aeabi_dmul>
 80028f6:	4602      	mov	r2, r0
 80028f8:	460b      	mov	r3, r1
 80028fa:	4610      	mov	r0, r2
 80028fc:	4619      	mov	r1, r3
 80028fe:	f04f 0200 	mov.w	r2, #0
 8002902:	4b1b      	ldr	r3, [pc, #108]	; (8002970 <sawtoothWave+0x100>)
 8002904:	f7fd fcec 	bl	80002e0 <__adddf3>
 8002908:	4602      	mov	r2, r0
 800290a:	460b      	mov	r3, r1
 800290c:	4610      	mov	r0, r2
 800290e:	4619      	mov	r1, r3
 8002910:	f7fe f994 	bl	8000c3c <__aeabi_d2f>
 8002914:	4603      	mov	r3, r0
 8002916:	461c      	mov	r4, r3

		uint16_t conversion = sample * DAC_MAX;
 8002918:	4916      	ldr	r1, [pc, #88]	; (8002974 <sawtoothWave+0x104>)
 800291a:	4620      	mov	r0, r4
 800291c:	f7fe faec 	bl	8000ef8 <__aeabi_fmul>
 8002920:	4603      	mov	r3, r0
 8002922:	4618      	mov	r0, r3
 8002924:	f7fe fcea 	bl	80012fc <__aeabi_f2uiz>
 8002928:	4603      	mov	r3, r0
 800292a:	81fb      	strh	r3, [r7, #14]

		wave[i] = conversion;
 800292c:	697b      	ldr	r3, [r7, #20]
 800292e:	005b      	lsls	r3, r3, #1
 8002930:	693a      	ldr	r2, [r7, #16]
 8002932:	4413      	add	r3, r2
 8002934:	89fa      	ldrh	r2, [r7, #14]
 8002936:	801a      	strh	r2, [r3, #0]
	for(int i = 0; i < samples; i++) {
 8002938:	697b      	ldr	r3, [r7, #20]
 800293a:	3301      	adds	r3, #1
 800293c:	617b      	str	r3, [r7, #20]
 800293e:	697b      	ldr	r3, [r7, #20]
 8002940:	687a      	ldr	r2, [r7, #4]
 8002942:	429a      	cmp	r2, r3
 8002944:	d8a3      	bhi.n	800288e <sawtoothWave+0x1e>
	}

	// Terminator
	wave[samples] = -1;
 8002946:	687b      	ldr	r3, [r7, #4]
 8002948:	005b      	lsls	r3, r3, #1
 800294a:	693a      	ldr	r2, [r7, #16]
 800294c:	4413      	add	r3, r2
 800294e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8002952:	801a      	strh	r2, [r3, #0]

	return wave;
 8002954:	693b      	ldr	r3, [r7, #16]
}
 8002956:	4618      	mov	r0, r3
 8002958:	3718      	adds	r7, #24
 800295a:	46bd      	mov	sp, r7
 800295c:	bdb0      	pop	{r4, r5, r7, pc}
 800295e:	bf00      	nop
 8002960:	4d12d84a 	.word	0x4d12d84a
 8002964:	400921fb 	.word	0x400921fb
 8002968:	739e4f68 	.word	0x739e4f68
 800296c:	bfd45f30 	.word	0xbfd45f30
 8002970:	3fe00000 	.word	0x3fe00000
 8002974:	457ff000 	.word	0x457ff000

08002978 <wave_Init>:

void wave_Init() {
 8002978:	b480      	push	{r7}
 800297a:	b087      	sub	sp, #28
 800297c:	af00      	add	r7, sp, #0
	// Use TIM6 (basic 16-bit timer) to sequence the waveform
	// NOTE: TIM6 is only an upcounter! Write period to ARR!
	// PA4 as analog output connected to DAC ch.1

	volatile RCC* RCC_Target = (RCC*) RCC_BASE;
 800297e:	4b2c      	ldr	r3, [pc, #176]	; (8002a30 <wave_Init+0xb8>)
 8002980:	617b      	str	r3, [r7, #20]
	volatile GPIO* GPIOA = (GPIO*) GPIOA_BASE;
 8002982:	4b2c      	ldr	r3, [pc, #176]	; (8002a34 <wave_Init+0xbc>)
 8002984:	613b      	str	r3, [r7, #16]
	volatile TIMER_BASIC* TIM6 = (TIMER_BASIC*) TIM6_BASE;
 8002986:	4b2c      	ldr	r3, [pc, #176]	; (8002a38 <wave_Init+0xc0>)
 8002988:	60fb      	str	r3, [r7, #12]
	volatile NVIC* NVIC_Target = (NVIC*) NVIC_BASE;
 800298a:	4b2c      	ldr	r3, [pc, #176]	; (8002a3c <wave_Init+0xc4>)
 800298c:	60bb      	str	r3, [r7, #8]
	volatile DAC* DAC_Target = (DAC*) DAC_BASE;
 800298e:	4b2c      	ldr	r3, [pc, #176]	; (8002a40 <wave_Init+0xc8>)
 8002990:	607b      	str	r3, [r7, #4]

	// Debugging purposes, set TIM6 to freeze in debugging mode
	uint32_t* DBG_APB1 = (uint32_t*)0xE0042008;
 8002992:	4b2c      	ldr	r3, [pc, #176]	; (8002a44 <wave_Init+0xcc>)
 8002994:	603b      	str	r3, [r7, #0]
	*DBG_APB1 |= 1<<4;
 8002996:	683b      	ldr	r3, [r7, #0]
 8002998:	681b      	ldr	r3, [r3, #0]
 800299a:	f043 0210 	orr.w	r2, r3, #16
 800299e:	683b      	ldr	r3, [r7, #0]
 80029a0:	601a      	str	r2, [r3, #0]

	// Enable GPIOA
	RCC_Target->AHB1ENR |= RCC_GPIOAEN;
 80029a2:	697b      	ldr	r3, [r7, #20]
 80029a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029a6:	f043 0201 	orr.w	r2, r3, #1
 80029aa:	697b      	ldr	r3, [r7, #20]
 80029ac:	631a      	str	r2, [r3, #48]	; 0x30

	// Set PA4 as analog
	GPIOA->MODER |= (GPIO_ANALOG << 8);
 80029ae:	693b      	ldr	r3, [r7, #16]
 80029b0:	681b      	ldr	r3, [r3, #0]
 80029b2:	f443 7240 	orr.w	r2, r3, #768	; 0x300
 80029b6:	693b      	ldr	r3, [r7, #16]
 80029b8:	601a      	str	r2, [r3, #0]

	// Enable TIM6
	RCC_Target->APB1ENR |= RCC_TIM6EN;
 80029ba:	697b      	ldr	r3, [r7, #20]
 80029bc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80029be:	f043 0210 	orr.w	r2, r3, #16
 80029c2:	697b      	ldr	r3, [r7, #20]
 80029c4:	641a      	str	r2, [r3, #64]	; 0x40

	// Enable DAC
	RCC_Target->APB1ENR |= RCC_DACEN;
 80029c6:	697b      	ldr	r3, [r7, #20]
 80029c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80029ca:	f043 5200 	orr.w	r2, r3, #536870912	; 0x20000000
 80029ce:	697b      	ldr	r3, [r7, #20]
 80029d0:	641a      	str	r2, [r3, #64]	; 0x40

	// Prescale TIM6 to 1us
	TIM6->PSC = 15;
 80029d2:	68fb      	ldr	r3, [r7, #12]
 80029d4:	220f      	movs	r2, #15
 80029d6:	629a      	str	r2, [r3, #40]	; 0x28

	// Prescale fix
	TIM6->EGR = 1;
 80029d8:	68fb      	ldr	r3, [r7, #12]
 80029da:	2201      	movs	r2, #1
 80029dc:	615a      	str	r2, [r3, #20]
	TIM6->SR &= ~(1);
 80029de:	68fb      	ldr	r3, [r7, #12]
 80029e0:	691b      	ldr	r3, [r3, #16]
 80029e2:	f023 0201 	bic.w	r2, r3, #1
 80029e6:	68fb      	ldr	r3, [r7, #12]
 80029e8:	611a      	str	r2, [r3, #16]

	// Assert not one-pulse mode
	TIM6->CR1 &= ~(TIM_OPM);
 80029ea:	68fb      	ldr	r3, [r7, #12]
 80029ec:	681b      	ldr	r3, [r3, #0]
 80029ee:	f023 0208 	bic.w	r2, r3, #8
 80029f2:	68fb      	ldr	r3, [r7, #12]
 80029f4:	601a      	str	r2, [r3, #0]

	// Enable DAC Ch1 & its Trigger
	DAC_Target->CR |= DAC_CH1EN;
 80029f6:	687b      	ldr	r3, [r7, #4]
 80029f8:	681b      	ldr	r3, [r3, #0]
 80029fa:	f043 0201 	orr.w	r2, r3, #1
 80029fe:	687b      	ldr	r3, [r7, #4]
 8002a00:	601a      	str	r2, [r3, #0]
	DAC_Target->CR |= (DAC_SWTGR << 3);
 8002a02:	687b      	ldr	r3, [r7, #4]
 8002a04:	681b      	ldr	r3, [r3, #0]
 8002a06:	f043 0238 	orr.w	r2, r3, #56	; 0x38
 8002a0a:	687b      	ldr	r3, [r7, #4]
 8002a0c:	601a      	str	r2, [r3, #0]
	DAC_Target->CR |= DAC_TEN1;
 8002a0e:	687b      	ldr	r3, [r7, #4]
 8002a10:	681b      	ldr	r3, [r3, #0]
 8002a12:	f043 0204 	orr.w	r2, r3, #4
 8002a16:	687b      	ldr	r3, [r7, #4]
 8002a18:	601a      	str	r2, [r3, #0]

	// Enable TIM6 interrupts in NVIC
	// NVIC_ISER1 bit 22
	NVIC_Target->ISER[1] |= 1<<22;
 8002a1a:	68bb      	ldr	r3, [r7, #8]
 8002a1c:	685b      	ldr	r3, [r3, #4]
 8002a1e:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 8002a22:	68bb      	ldr	r3, [r7, #8]
 8002a24:	605a      	str	r2, [r3, #4]

}
 8002a26:	bf00      	nop
 8002a28:	371c      	adds	r7, #28
 8002a2a:	46bd      	mov	sp, r7
 8002a2c:	bc80      	pop	{r7}
 8002a2e:	4770      	bx	lr
 8002a30:	40023800 	.word	0x40023800
 8002a34:	40020000 	.word	0x40020000
 8002a38:	40001000 	.word	0x40001000
 8002a3c:	e000e100 	.word	0xe000e100
 8002a40:	40007400 	.word	0x40007400
 8002a44:	e0042008 	.word	0xe0042008

08002a48 <wave_Start>:

void wave_Start(uint16_t* samples, uint32_t frequency, uint32_t numSamples) {
 8002a48:	b580      	push	{r7, lr}
 8002a4a:	b088      	sub	sp, #32
 8002a4c:	af00      	add	r7, sp, #0
 8002a4e:	60f8      	str	r0, [r7, #12]
 8002a50:	60b9      	str	r1, [r7, #8]
 8002a52:	607a      	str	r2, [r7, #4]
	// If the generator is already running
	if(waveStatus != 0) {
 8002a54:	4b2a      	ldr	r3, [pc, #168]	; (8002b00 <wave_Start+0xb8>)
 8002a56:	781b      	ldrb	r3, [r3, #0]
 8002a58:	2b00      	cmp	r3, #0
 8002a5a:	d003      	beq.n	8002a64 <wave_Start+0x1c>
		printf("Waveform generator is already running. Stop the current generator to continue\n");
 8002a5c:	4829      	ldr	r0, [pc, #164]	; (8002b04 <wave_Start+0xbc>)
 8002a5e:	f001 fa77 	bl	8003f50 <puts>

		// Set TIM6_CEN
		TIM6->CR1 |= TIM_CEN;
	}

	return;
 8002a62:	e043      	b.n	8002aec <wave_Start+0xa4>
		volatile TIMER_BASIC* TIM6 = (TIMER_BASIC*) TIM6_BASE;
 8002a64:	4b28      	ldr	r3, [pc, #160]	; (8002b08 <wave_Start+0xc0>)
 8002a66:	61fb      	str	r3, [r7, #28]
		waveform = samples;
 8002a68:	4a28      	ldr	r2, [pc, #160]	; (8002b0c <wave_Start+0xc4>)
 8002a6a:	68fb      	ldr	r3, [r7, #12]
 8002a6c:	6013      	str	r3, [r2, #0]
		waveStatus = 1;
 8002a6e:	4b24      	ldr	r3, [pc, #144]	; (8002b00 <wave_Start+0xb8>)
 8002a70:	2201      	movs	r2, #1
 8002a72:	701a      	strb	r2, [r3, #0]
		double timePerSample = ((double)1) / frequency;
 8002a74:	68b8      	ldr	r0, [r7, #8]
 8002a76:	f7fd fd6f 	bl	8000558 <__aeabi_ui2d>
 8002a7a:	4602      	mov	r2, r0
 8002a7c:	460b      	mov	r3, r1
 8002a7e:	f04f 0000 	mov.w	r0, #0
 8002a82:	4923      	ldr	r1, [pc, #140]	; (8002b10 <wave_Start+0xc8>)
 8002a84:	f7fd ff0c 	bl	80008a0 <__aeabi_ddiv>
 8002a88:	4602      	mov	r2, r0
 8002a8a:	460b      	mov	r3, r1
 8002a8c:	e9c7 2304 	strd	r2, r3, [r7, #16]
		timePerSample *= 10E5;
 8002a90:	a319      	add	r3, pc, #100	; (adr r3, 8002af8 <wave_Start+0xb0>)
 8002a92:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002a96:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8002a9a:	f7fd fdd7 	bl	800064c <__aeabi_dmul>
 8002a9e:	4602      	mov	r2, r0
 8002aa0:	460b      	mov	r3, r1
 8002aa2:	e9c7 2304 	strd	r2, r3, [r7, #16]
		timePerSample = timePerSample / numSamples;
 8002aa6:	6878      	ldr	r0, [r7, #4]
 8002aa8:	f7fd fd56 	bl	8000558 <__aeabi_ui2d>
 8002aac:	4602      	mov	r2, r0
 8002aae:	460b      	mov	r3, r1
 8002ab0:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8002ab4:	f7fd fef4 	bl	80008a0 <__aeabi_ddiv>
 8002ab8:	4602      	mov	r2, r0
 8002aba:	460b      	mov	r3, r1
 8002abc:	e9c7 2304 	strd	r2, r3, [r7, #16]
		TIM6->ARR = (uint16_t)timePerSample;
 8002ac0:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8002ac4:	f7fe f89a 	bl	8000bfc <__aeabi_d2uiz>
 8002ac8:	4603      	mov	r3, r0
 8002aca:	b29b      	uxth	r3, r3
 8002acc:	461a      	mov	r2, r3
 8002ace:	69fb      	ldr	r3, [r7, #28]
 8002ad0:	62da      	str	r2, [r3, #44]	; 0x2c
		TIM6->DIER |= TIM_UIE;
 8002ad2:	69fb      	ldr	r3, [r7, #28]
 8002ad4:	68db      	ldr	r3, [r3, #12]
 8002ad6:	f043 0201 	orr.w	r2, r3, #1
 8002ada:	69fb      	ldr	r3, [r7, #28]
 8002adc:	60da      	str	r2, [r3, #12]
		TIM6->CR1 |= TIM_CEN;
 8002ade:	69fb      	ldr	r3, [r7, #28]
 8002ae0:	681b      	ldr	r3, [r3, #0]
 8002ae2:	f043 0201 	orr.w	r2, r3, #1
 8002ae6:	69fb      	ldr	r3, [r7, #28]
 8002ae8:	601a      	str	r2, [r3, #0]
	return;
 8002aea:	bf00      	nop
}
 8002aec:	3720      	adds	r7, #32
 8002aee:	46bd      	mov	sp, r7
 8002af0:	bd80      	pop	{r7, pc}
 8002af2:	bf00      	nop
 8002af4:	f3af 8000 	nop.w
 8002af8:	00000000 	.word	0x00000000
 8002afc:	412e8480 	.word	0x412e8480
 8002b00:	20000d2c 	.word	0x20000d2c
 8002b04:	08009ea8 	.word	0x08009ea8
 8002b08:	40001000 	.word	0x40001000
 8002b0c:	20000d30 	.word	0x20000d30
 8002b10:	3ff00000 	.word	0x3ff00000

08002b14 <wave_Stop>:

void wave_Stop() {
 8002b14:	b580      	push	{r7, lr}
 8002b16:	b082      	sub	sp, #8
 8002b18:	af00      	add	r7, sp, #0
	// If the generator is not running
	if(waveStatus != 1) {
 8002b1a:	4b0e      	ldr	r3, [pc, #56]	; (8002b54 <wave_Stop+0x40>)
 8002b1c:	781b      	ldrb	r3, [r3, #0]
 8002b1e:	2b01      	cmp	r3, #1
 8002b20:	d003      	beq.n	8002b2a <wave_Stop+0x16>
		printf("Waveform generator is not currently running. No changes made.\n");
 8002b22:	480d      	ldr	r0, [pc, #52]	; (8002b58 <wave_Stop+0x44>)
 8002b24:	f001 fa14 	bl	8003f50 <puts>
		// Stop TIM6 interrupts
		TIM6->DIER &= ~(TIM_UIE);

		waveStatus = 0;
	}
	return;
 8002b28:	e011      	b.n	8002b4e <wave_Stop+0x3a>
		volatile TIMER_BASIC* TIM6 = (TIMER_BASIC*) TIM6_BASE;
 8002b2a:	4b0c      	ldr	r3, [pc, #48]	; (8002b5c <wave_Stop+0x48>)
 8002b2c:	607b      	str	r3, [r7, #4]
		TIM6->CR1 &= ~(TIM_CEN);
 8002b2e:	687b      	ldr	r3, [r7, #4]
 8002b30:	681b      	ldr	r3, [r3, #0]
 8002b32:	f023 0201 	bic.w	r2, r3, #1
 8002b36:	687b      	ldr	r3, [r7, #4]
 8002b38:	601a      	str	r2, [r3, #0]
		TIM6->DIER &= ~(TIM_UIE);
 8002b3a:	687b      	ldr	r3, [r7, #4]
 8002b3c:	68db      	ldr	r3, [r3, #12]
 8002b3e:	f023 0201 	bic.w	r2, r3, #1
 8002b42:	687b      	ldr	r3, [r7, #4]
 8002b44:	60da      	str	r2, [r3, #12]
		waveStatus = 0;
 8002b46:	4b03      	ldr	r3, [pc, #12]	; (8002b54 <wave_Stop+0x40>)
 8002b48:	2200      	movs	r2, #0
 8002b4a:	701a      	strb	r2, [r3, #0]
	return;
 8002b4c:	bf00      	nop
}
 8002b4e:	3708      	adds	r7, #8
 8002b50:	46bd      	mov	sp, r7
 8002b52:	bd80      	pop	{r7, pc}
 8002b54:	20000d2c 	.word	0x20000d2c
 8002b58:	08009ef8 	.word	0x08009ef8
 8002b5c:	40001000 	.word	0x40001000

08002b60 <TIM6_DAC_IRQHandler>:

void TIM6_DAC_IRQHandler(void) {
 8002b60:	b490      	push	{r4, r7}
 8002b62:	b082      	sub	sp, #8
 8002b64:	af00      	add	r7, sp, #0
	// Clear status register
	volatile TIMER_BASIC* TIM6 = (TIMER_BASIC*) TIM6_BASE;
 8002b66:	4b1f      	ldr	r3, [pc, #124]	; (8002be4 <TIM6_DAC_IRQHandler+0x84>)
 8002b68:	607b      	str	r3, [r7, #4]
	TIM6->SR = 0;
 8002b6a:	687b      	ldr	r3, [r7, #4]
 8002b6c:	2200      	movs	r2, #0
 8002b6e:	611a      	str	r2, [r3, #16]

	volatile DAC* DAC_Target = (DAC*) DAC_BASE;
 8002b70:	4b1d      	ldr	r3, [pc, #116]	; (8002be8 <TIM6_DAC_IRQHandler+0x88>)
 8002b72:	603b      	str	r3, [r7, #0]

	// Iterator
	static uint32_t i = 0;

	// Read sample
	register uint16_t sample = waveform[i];
 8002b74:	4b1d      	ldr	r3, [pc, #116]	; (8002bec <TIM6_DAC_IRQHandler+0x8c>)
 8002b76:	681a      	ldr	r2, [r3, #0]
 8002b78:	4b1d      	ldr	r3, [pc, #116]	; (8002bf0 <TIM6_DAC_IRQHandler+0x90>)
 8002b7a:	681b      	ldr	r3, [r3, #0]
 8002b7c:	005b      	lsls	r3, r3, #1
 8002b7e:	4413      	add	r3, r2
 8002b80:	881c      	ldrh	r4, [r3, #0]

	// Check for terminator
	if(sample != 65535) {
 8002b82:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002b86:	429c      	cmp	r4, r3
 8002b88:	d00e      	beq.n	8002ba8 <TIM6_DAC_IRQHandler+0x48>
		// Push sample to DAC
		// Samples are already limited to 12-bit, so just write
		DAC_Target->CH1_R12 = sample;
 8002b8a:	4622      	mov	r2, r4
 8002b8c:	683b      	ldr	r3, [r7, #0]
 8002b8e:	609a      	str	r2, [r3, #8]

		// Increment iterator
		i++;
 8002b90:	4b17      	ldr	r3, [pc, #92]	; (8002bf0 <TIM6_DAC_IRQHandler+0x90>)
 8002b92:	681b      	ldr	r3, [r3, #0]
 8002b94:	3301      	adds	r3, #1
 8002b96:	4a16      	ldr	r2, [pc, #88]	; (8002bf0 <TIM6_DAC_IRQHandler+0x90>)
 8002b98:	6013      	str	r3, [r2, #0]

		// Trigger DAC Ch1
		DAC_Target->SW_TRIGR |= 1<<0;
 8002b9a:	683b      	ldr	r3, [r7, #0]
 8002b9c:	685b      	ldr	r3, [r3, #4]
 8002b9e:	f043 0201 	orr.w	r2, r3, #1
 8002ba2:	683b      	ldr	r3, [r7, #0]
 8002ba4:	605a      	str	r2, [r3, #4]

		// Trigger DAC Ch1
		DAC_Target->SW_TRIGR |= 1<<0;
	}

	return;
 8002ba6:	e018      	b.n	8002bda <TIM6_DAC_IRQHandler+0x7a>
		i = 0;
 8002ba8:	4b11      	ldr	r3, [pc, #68]	; (8002bf0 <TIM6_DAC_IRQHandler+0x90>)
 8002baa:	2200      	movs	r2, #0
 8002bac:	601a      	str	r2, [r3, #0]
		sample = waveform[i];
 8002bae:	4b0f      	ldr	r3, [pc, #60]	; (8002bec <TIM6_DAC_IRQHandler+0x8c>)
 8002bb0:	681a      	ldr	r2, [r3, #0]
 8002bb2:	4b0f      	ldr	r3, [pc, #60]	; (8002bf0 <TIM6_DAC_IRQHandler+0x90>)
 8002bb4:	681b      	ldr	r3, [r3, #0]
 8002bb6:	005b      	lsls	r3, r3, #1
 8002bb8:	4413      	add	r3, r2
 8002bba:	881c      	ldrh	r4, [r3, #0]
		DAC_Target->CH1_R12 = sample;
 8002bbc:	4622      	mov	r2, r4
 8002bbe:	683b      	ldr	r3, [r7, #0]
 8002bc0:	609a      	str	r2, [r3, #8]
		i++;
 8002bc2:	4b0b      	ldr	r3, [pc, #44]	; (8002bf0 <TIM6_DAC_IRQHandler+0x90>)
 8002bc4:	681b      	ldr	r3, [r3, #0]
 8002bc6:	3301      	adds	r3, #1
 8002bc8:	4a09      	ldr	r2, [pc, #36]	; (8002bf0 <TIM6_DAC_IRQHandler+0x90>)
 8002bca:	6013      	str	r3, [r2, #0]
		DAC_Target->SW_TRIGR |= 1<<0;
 8002bcc:	683b      	ldr	r3, [r7, #0]
 8002bce:	685b      	ldr	r3, [r3, #4]
 8002bd0:	f043 0201 	orr.w	r2, r3, #1
 8002bd4:	683b      	ldr	r3, [r7, #0]
 8002bd6:	605a      	str	r2, [r3, #4]
	return;
 8002bd8:	bf00      	nop
}
 8002bda:	3708      	adds	r7, #8
 8002bdc:	46bd      	mov	sp, r7
 8002bde:	bc90      	pop	{r4, r7}
 8002be0:	4770      	bx	lr
 8002be2:	bf00      	nop
 8002be4:	40001000 	.word	0x40001000
 8002be8:	40007400 	.word	0x40007400
 8002bec:	20000d30 	.word	0x20000d30
 8002bf0:	20000d34 	.word	0x20000d34

08002bf4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8002bf4:	480d      	ldr	r0, [pc, #52]	; (8002c2c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8002bf6:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8002bf8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8002bfc:	480c      	ldr	r0, [pc, #48]	; (8002c30 <LoopForever+0x6>)
  ldr r1, =_edata
 8002bfe:	490d      	ldr	r1, [pc, #52]	; (8002c34 <LoopForever+0xa>)
  ldr r2, =_sidata
 8002c00:	4a0d      	ldr	r2, [pc, #52]	; (8002c38 <LoopForever+0xe>)
  movs r3, #0
 8002c02:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8002c04:	e002      	b.n	8002c0c <LoopCopyDataInit>

08002c06 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8002c06:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8002c08:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8002c0a:	3304      	adds	r3, #4

08002c0c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002c0c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8002c0e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002c10:	d3f9      	bcc.n	8002c06 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8002c12:	4a0a      	ldr	r2, [pc, #40]	; (8002c3c <LoopForever+0x12>)
  ldr r4, =_ebss
 8002c14:	4c0a      	ldr	r4, [pc, #40]	; (8002c40 <LoopForever+0x16>)
  movs r3, #0
 8002c16:	2300      	movs	r3, #0
  b LoopFillZerobss
 8002c18:	e001      	b.n	8002c1e <LoopFillZerobss>

08002c1a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8002c1a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002c1c:	3204      	adds	r2, #4

08002c1e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8002c1e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002c20:	d3fb      	bcc.n	8002c1a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8002c22:	f000 f9ad 	bl	8002f80 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8002c26:	f7fe fc15 	bl	8001454 <main>

08002c2a <LoopForever>:

LoopForever:
    b LoopForever
 8002c2a:	e7fe      	b.n	8002c2a <LoopForever>
  ldr   r0, =_estack
 8002c2c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8002c30:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8002c34:	20000ce8 	.word	0x20000ce8
  ldr r2, =_sidata
 8002c38:	0800a860 	.word	0x0800a860
  ldr r2, =_sbss
 8002c3c:	20000ce8 	.word	0x20000ce8
  ldr r4, =_ebss
 8002c40:	20000d50 	.word	0x20000d50

08002c44 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8002c44:	e7fe      	b.n	8002c44 <ADC_IRQHandler>
	...

08002c48 <__errno>:
 8002c48:	4b01      	ldr	r3, [pc, #4]	; (8002c50 <__errno+0x8>)
 8002c4a:	6818      	ldr	r0, [r3, #0]
 8002c4c:	4770      	bx	lr
 8002c4e:	bf00      	nop
 8002c50:	20000b10 	.word	0x20000b10

08002c54 <_fgets_r>:
 8002c54:	2a01      	cmp	r2, #1
 8002c56:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002c5a:	4680      	mov	r8, r0
 8002c5c:	460d      	mov	r5, r1
 8002c5e:	4617      	mov	r7, r2
 8002c60:	461c      	mov	r4, r3
 8002c62:	dc03      	bgt.n	8002c6c <_fgets_r+0x18>
 8002c64:	2500      	movs	r5, #0
 8002c66:	4628      	mov	r0, r5
 8002c68:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002c6c:	b118      	cbz	r0, 8002c76 <_fgets_r+0x22>
 8002c6e:	6983      	ldr	r3, [r0, #24]
 8002c70:	b90b      	cbnz	r3, 8002c76 <_fgets_r+0x22>
 8002c72:	f000 f8cb 	bl	8002e0c <__sinit>
 8002c76:	4b31      	ldr	r3, [pc, #196]	; (8002d3c <_fgets_r+0xe8>)
 8002c78:	429c      	cmp	r4, r3
 8002c7a:	d120      	bne.n	8002cbe <_fgets_r+0x6a>
 8002c7c:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8002c80:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8002c82:	07de      	lsls	r6, r3, #31
 8002c84:	d405      	bmi.n	8002c92 <_fgets_r+0x3e>
 8002c86:	89a3      	ldrh	r3, [r4, #12]
 8002c88:	0598      	lsls	r0, r3, #22
 8002c8a:	d402      	bmi.n	8002c92 <_fgets_r+0x3e>
 8002c8c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8002c8e:	f000 f99c 	bl	8002fca <__retarget_lock_acquire_recursive>
 8002c92:	3f01      	subs	r7, #1
 8002c94:	46a9      	mov	r9, r5
 8002c96:	6866      	ldr	r6, [r4, #4]
 8002c98:	b9f6      	cbnz	r6, 8002cd8 <_fgets_r+0x84>
 8002c9a:	4621      	mov	r1, r4
 8002c9c:	4640      	mov	r0, r8
 8002c9e:	f001 f969 	bl	8003f74 <__srefill_r>
 8002ca2:	b1c0      	cbz	r0, 8002cd6 <_fgets_r+0x82>
 8002ca4:	45a9      	cmp	r9, r5
 8002ca6:	d145      	bne.n	8002d34 <_fgets_r+0xe0>
 8002ca8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8002caa:	07d9      	lsls	r1, r3, #31
 8002cac:	d4da      	bmi.n	8002c64 <_fgets_r+0x10>
 8002cae:	89a5      	ldrh	r5, [r4, #12]
 8002cb0:	f415 7500 	ands.w	r5, r5, #512	; 0x200
 8002cb4:	d1d6      	bne.n	8002c64 <_fgets_r+0x10>
 8002cb6:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8002cb8:	f000 f988 	bl	8002fcc <__retarget_lock_release_recursive>
 8002cbc:	e7d3      	b.n	8002c66 <_fgets_r+0x12>
 8002cbe:	4b20      	ldr	r3, [pc, #128]	; (8002d40 <_fgets_r+0xec>)
 8002cc0:	429c      	cmp	r4, r3
 8002cc2:	d102      	bne.n	8002cca <_fgets_r+0x76>
 8002cc4:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8002cc8:	e7da      	b.n	8002c80 <_fgets_r+0x2c>
 8002cca:	4b1e      	ldr	r3, [pc, #120]	; (8002d44 <_fgets_r+0xf0>)
 8002ccc:	429c      	cmp	r4, r3
 8002cce:	bf08      	it	eq
 8002cd0:	f8d8 400c 	ldreq.w	r4, [r8, #12]
 8002cd4:	e7d4      	b.n	8002c80 <_fgets_r+0x2c>
 8002cd6:	6866      	ldr	r6, [r4, #4]
 8002cd8:	f8d4 a000 	ldr.w	sl, [r4]
 8002cdc:	42be      	cmp	r6, r7
 8002cde:	bf28      	it	cs
 8002ce0:	463e      	movcs	r6, r7
 8002ce2:	4632      	mov	r2, r6
 8002ce4:	210a      	movs	r1, #10
 8002ce6:	4650      	mov	r0, sl
 8002ce8:	f7fd fa92 	bl	8000210 <memchr>
 8002cec:	6863      	ldr	r3, [r4, #4]
 8002cee:	b1a0      	cbz	r0, 8002d1a <_fgets_r+0xc6>
 8002cf0:	3001      	adds	r0, #1
 8002cf2:	eba0 060a 	sub.w	r6, r0, sl
 8002cf6:	1b9b      	subs	r3, r3, r6
 8002cf8:	e9c4 0300 	strd	r0, r3, [r4]
 8002cfc:	4632      	mov	r2, r6
 8002cfe:	4651      	mov	r1, sl
 8002d00:	4648      	mov	r0, r9
 8002d02:	f000 f975 	bl	8002ff0 <memcpy>
 8002d06:	2300      	movs	r3, #0
 8002d08:	f809 3006 	strb.w	r3, [r9, r6]
 8002d0c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8002d0e:	07da      	lsls	r2, r3, #31
 8002d10:	d4a9      	bmi.n	8002c66 <_fgets_r+0x12>
 8002d12:	89a3      	ldrh	r3, [r4, #12]
 8002d14:	059b      	lsls	r3, r3, #22
 8002d16:	d4a6      	bmi.n	8002c66 <_fgets_r+0x12>
 8002d18:	e7cd      	b.n	8002cb6 <_fgets_r+0x62>
 8002d1a:	1b9b      	subs	r3, r3, r6
 8002d1c:	6063      	str	r3, [r4, #4]
 8002d1e:	6823      	ldr	r3, [r4, #0]
 8002d20:	4433      	add	r3, r6
 8002d22:	4648      	mov	r0, r9
 8002d24:	6023      	str	r3, [r4, #0]
 8002d26:	4632      	mov	r2, r6
 8002d28:	4651      	mov	r1, sl
 8002d2a:	f000 f961 	bl	8002ff0 <memcpy>
 8002d2e:	1bbf      	subs	r7, r7, r6
 8002d30:	44b1      	add	r9, r6
 8002d32:	d1b0      	bne.n	8002c96 <_fgets_r+0x42>
 8002d34:	2300      	movs	r3, #0
 8002d36:	f889 3000 	strb.w	r3, [r9]
 8002d3a:	e7e7      	b.n	8002d0c <_fgets_r+0xb8>
 8002d3c:	08009f64 	.word	0x08009f64
 8002d40:	08009f84 	.word	0x08009f84
 8002d44:	08009f44 	.word	0x08009f44

08002d48 <fgets>:
 8002d48:	4613      	mov	r3, r2
 8002d4a:	460a      	mov	r2, r1
 8002d4c:	4601      	mov	r1, r0
 8002d4e:	4802      	ldr	r0, [pc, #8]	; (8002d58 <fgets+0x10>)
 8002d50:	6800      	ldr	r0, [r0, #0]
 8002d52:	f7ff bf7f 	b.w	8002c54 <_fgets_r>
 8002d56:	bf00      	nop
 8002d58:	20000b10 	.word	0x20000b10

08002d5c <std>:
 8002d5c:	2300      	movs	r3, #0
 8002d5e:	b510      	push	{r4, lr}
 8002d60:	4604      	mov	r4, r0
 8002d62:	e9c0 3300 	strd	r3, r3, [r0]
 8002d66:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8002d6a:	6083      	str	r3, [r0, #8]
 8002d6c:	8181      	strh	r1, [r0, #12]
 8002d6e:	6643      	str	r3, [r0, #100]	; 0x64
 8002d70:	81c2      	strh	r2, [r0, #14]
 8002d72:	6183      	str	r3, [r0, #24]
 8002d74:	4619      	mov	r1, r3
 8002d76:	2208      	movs	r2, #8
 8002d78:	305c      	adds	r0, #92	; 0x5c
 8002d7a:	f000 f947 	bl	800300c <memset>
 8002d7e:	4b05      	ldr	r3, [pc, #20]	; (8002d94 <std+0x38>)
 8002d80:	6263      	str	r3, [r4, #36]	; 0x24
 8002d82:	4b05      	ldr	r3, [pc, #20]	; (8002d98 <std+0x3c>)
 8002d84:	62a3      	str	r3, [r4, #40]	; 0x28
 8002d86:	4b05      	ldr	r3, [pc, #20]	; (8002d9c <std+0x40>)
 8002d88:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002d8a:	4b05      	ldr	r3, [pc, #20]	; (8002da0 <std+0x44>)
 8002d8c:	6224      	str	r4, [r4, #32]
 8002d8e:	6323      	str	r3, [r4, #48]	; 0x30
 8002d90:	bd10      	pop	{r4, pc}
 8002d92:	bf00      	nop
 8002d94:	080042d1 	.word	0x080042d1
 8002d98:	080042f7 	.word	0x080042f7
 8002d9c:	0800432f 	.word	0x0800432f
 8002da0:	08004353 	.word	0x08004353

08002da4 <_cleanup_r>:
 8002da4:	4901      	ldr	r1, [pc, #4]	; (8002dac <_cleanup_r+0x8>)
 8002da6:	f000 b8cc 	b.w	8002f42 <_fwalk_reent>
 8002daa:	bf00      	nop
 8002dac:	08006199 	.word	0x08006199

08002db0 <__sfmoreglue>:
 8002db0:	b570      	push	{r4, r5, r6, lr}
 8002db2:	1e4a      	subs	r2, r1, #1
 8002db4:	2568      	movs	r5, #104	; 0x68
 8002db6:	4355      	muls	r5, r2
 8002db8:	460e      	mov	r6, r1
 8002dba:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8002dbe:	f000 f97b 	bl	80030b8 <_malloc_r>
 8002dc2:	4604      	mov	r4, r0
 8002dc4:	b140      	cbz	r0, 8002dd8 <__sfmoreglue+0x28>
 8002dc6:	2100      	movs	r1, #0
 8002dc8:	e9c0 1600 	strd	r1, r6, [r0]
 8002dcc:	300c      	adds	r0, #12
 8002dce:	60a0      	str	r0, [r4, #8]
 8002dd0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8002dd4:	f000 f91a 	bl	800300c <memset>
 8002dd8:	4620      	mov	r0, r4
 8002dda:	bd70      	pop	{r4, r5, r6, pc}

08002ddc <__sfp_lock_acquire>:
 8002ddc:	4801      	ldr	r0, [pc, #4]	; (8002de4 <__sfp_lock_acquire+0x8>)
 8002dde:	f000 b8f4 	b.w	8002fca <__retarget_lock_acquire_recursive>
 8002de2:	bf00      	nop
 8002de4:	20000d48 	.word	0x20000d48

08002de8 <__sfp_lock_release>:
 8002de8:	4801      	ldr	r0, [pc, #4]	; (8002df0 <__sfp_lock_release+0x8>)
 8002dea:	f000 b8ef 	b.w	8002fcc <__retarget_lock_release_recursive>
 8002dee:	bf00      	nop
 8002df0:	20000d48 	.word	0x20000d48

08002df4 <__sinit_lock_acquire>:
 8002df4:	4801      	ldr	r0, [pc, #4]	; (8002dfc <__sinit_lock_acquire+0x8>)
 8002df6:	f000 b8e8 	b.w	8002fca <__retarget_lock_acquire_recursive>
 8002dfa:	bf00      	nop
 8002dfc:	20000d43 	.word	0x20000d43

08002e00 <__sinit_lock_release>:
 8002e00:	4801      	ldr	r0, [pc, #4]	; (8002e08 <__sinit_lock_release+0x8>)
 8002e02:	f000 b8e3 	b.w	8002fcc <__retarget_lock_release_recursive>
 8002e06:	bf00      	nop
 8002e08:	20000d43 	.word	0x20000d43

08002e0c <__sinit>:
 8002e0c:	b510      	push	{r4, lr}
 8002e0e:	4604      	mov	r4, r0
 8002e10:	f7ff fff0 	bl	8002df4 <__sinit_lock_acquire>
 8002e14:	69a3      	ldr	r3, [r4, #24]
 8002e16:	b11b      	cbz	r3, 8002e20 <__sinit+0x14>
 8002e18:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002e1c:	f7ff bff0 	b.w	8002e00 <__sinit_lock_release>
 8002e20:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8002e24:	6523      	str	r3, [r4, #80]	; 0x50
 8002e26:	4b13      	ldr	r3, [pc, #76]	; (8002e74 <__sinit+0x68>)
 8002e28:	4a13      	ldr	r2, [pc, #76]	; (8002e78 <__sinit+0x6c>)
 8002e2a:	681b      	ldr	r3, [r3, #0]
 8002e2c:	62a2      	str	r2, [r4, #40]	; 0x28
 8002e2e:	42a3      	cmp	r3, r4
 8002e30:	bf04      	itt	eq
 8002e32:	2301      	moveq	r3, #1
 8002e34:	61a3      	streq	r3, [r4, #24]
 8002e36:	4620      	mov	r0, r4
 8002e38:	f000 f820 	bl	8002e7c <__sfp>
 8002e3c:	6060      	str	r0, [r4, #4]
 8002e3e:	4620      	mov	r0, r4
 8002e40:	f000 f81c 	bl	8002e7c <__sfp>
 8002e44:	60a0      	str	r0, [r4, #8]
 8002e46:	4620      	mov	r0, r4
 8002e48:	f000 f818 	bl	8002e7c <__sfp>
 8002e4c:	2200      	movs	r2, #0
 8002e4e:	60e0      	str	r0, [r4, #12]
 8002e50:	2104      	movs	r1, #4
 8002e52:	6860      	ldr	r0, [r4, #4]
 8002e54:	f7ff ff82 	bl	8002d5c <std>
 8002e58:	68a0      	ldr	r0, [r4, #8]
 8002e5a:	2201      	movs	r2, #1
 8002e5c:	2109      	movs	r1, #9
 8002e5e:	f7ff ff7d 	bl	8002d5c <std>
 8002e62:	68e0      	ldr	r0, [r4, #12]
 8002e64:	2202      	movs	r2, #2
 8002e66:	2112      	movs	r1, #18
 8002e68:	f7ff ff78 	bl	8002d5c <std>
 8002e6c:	2301      	movs	r3, #1
 8002e6e:	61a3      	str	r3, [r4, #24]
 8002e70:	e7d2      	b.n	8002e18 <__sinit+0xc>
 8002e72:	bf00      	nop
 8002e74:	08009fa4 	.word	0x08009fa4
 8002e78:	08002da5 	.word	0x08002da5

08002e7c <__sfp>:
 8002e7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002e7e:	4607      	mov	r7, r0
 8002e80:	f7ff ffac 	bl	8002ddc <__sfp_lock_acquire>
 8002e84:	4b1e      	ldr	r3, [pc, #120]	; (8002f00 <__sfp+0x84>)
 8002e86:	681e      	ldr	r6, [r3, #0]
 8002e88:	69b3      	ldr	r3, [r6, #24]
 8002e8a:	b913      	cbnz	r3, 8002e92 <__sfp+0x16>
 8002e8c:	4630      	mov	r0, r6
 8002e8e:	f7ff ffbd 	bl	8002e0c <__sinit>
 8002e92:	3648      	adds	r6, #72	; 0x48
 8002e94:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8002e98:	3b01      	subs	r3, #1
 8002e9a:	d503      	bpl.n	8002ea4 <__sfp+0x28>
 8002e9c:	6833      	ldr	r3, [r6, #0]
 8002e9e:	b30b      	cbz	r3, 8002ee4 <__sfp+0x68>
 8002ea0:	6836      	ldr	r6, [r6, #0]
 8002ea2:	e7f7      	b.n	8002e94 <__sfp+0x18>
 8002ea4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8002ea8:	b9d5      	cbnz	r5, 8002ee0 <__sfp+0x64>
 8002eaa:	4b16      	ldr	r3, [pc, #88]	; (8002f04 <__sfp+0x88>)
 8002eac:	60e3      	str	r3, [r4, #12]
 8002eae:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8002eb2:	6665      	str	r5, [r4, #100]	; 0x64
 8002eb4:	f000 f888 	bl	8002fc8 <__retarget_lock_init_recursive>
 8002eb8:	f7ff ff96 	bl	8002de8 <__sfp_lock_release>
 8002ebc:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8002ec0:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8002ec4:	6025      	str	r5, [r4, #0]
 8002ec6:	61a5      	str	r5, [r4, #24]
 8002ec8:	2208      	movs	r2, #8
 8002eca:	4629      	mov	r1, r5
 8002ecc:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8002ed0:	f000 f89c 	bl	800300c <memset>
 8002ed4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8002ed8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8002edc:	4620      	mov	r0, r4
 8002ede:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002ee0:	3468      	adds	r4, #104	; 0x68
 8002ee2:	e7d9      	b.n	8002e98 <__sfp+0x1c>
 8002ee4:	2104      	movs	r1, #4
 8002ee6:	4638      	mov	r0, r7
 8002ee8:	f7ff ff62 	bl	8002db0 <__sfmoreglue>
 8002eec:	4604      	mov	r4, r0
 8002eee:	6030      	str	r0, [r6, #0]
 8002ef0:	2800      	cmp	r0, #0
 8002ef2:	d1d5      	bne.n	8002ea0 <__sfp+0x24>
 8002ef4:	f7ff ff78 	bl	8002de8 <__sfp_lock_release>
 8002ef8:	230c      	movs	r3, #12
 8002efa:	603b      	str	r3, [r7, #0]
 8002efc:	e7ee      	b.n	8002edc <__sfp+0x60>
 8002efe:	bf00      	nop
 8002f00:	08009fa4 	.word	0x08009fa4
 8002f04:	ffff0001 	.word	0xffff0001

08002f08 <_fwalk>:
 8002f08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002f0c:	460f      	mov	r7, r1
 8002f0e:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8002f12:	2600      	movs	r6, #0
 8002f14:	e9d4 8501 	ldrd	r8, r5, [r4, #4]
 8002f18:	f1b8 0801 	subs.w	r8, r8, #1
 8002f1c:	d505      	bpl.n	8002f2a <_fwalk+0x22>
 8002f1e:	6824      	ldr	r4, [r4, #0]
 8002f20:	2c00      	cmp	r4, #0
 8002f22:	d1f7      	bne.n	8002f14 <_fwalk+0xc>
 8002f24:	4630      	mov	r0, r6
 8002f26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002f2a:	89ab      	ldrh	r3, [r5, #12]
 8002f2c:	2b01      	cmp	r3, #1
 8002f2e:	d906      	bls.n	8002f3e <_fwalk+0x36>
 8002f30:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8002f34:	3301      	adds	r3, #1
 8002f36:	d002      	beq.n	8002f3e <_fwalk+0x36>
 8002f38:	4628      	mov	r0, r5
 8002f3a:	47b8      	blx	r7
 8002f3c:	4306      	orrs	r6, r0
 8002f3e:	3568      	adds	r5, #104	; 0x68
 8002f40:	e7ea      	b.n	8002f18 <_fwalk+0x10>

08002f42 <_fwalk_reent>:
 8002f42:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002f46:	4606      	mov	r6, r0
 8002f48:	4688      	mov	r8, r1
 8002f4a:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8002f4e:	2700      	movs	r7, #0
 8002f50:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8002f54:	f1b9 0901 	subs.w	r9, r9, #1
 8002f58:	d505      	bpl.n	8002f66 <_fwalk_reent+0x24>
 8002f5a:	6824      	ldr	r4, [r4, #0]
 8002f5c:	2c00      	cmp	r4, #0
 8002f5e:	d1f7      	bne.n	8002f50 <_fwalk_reent+0xe>
 8002f60:	4638      	mov	r0, r7
 8002f62:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002f66:	89ab      	ldrh	r3, [r5, #12]
 8002f68:	2b01      	cmp	r3, #1
 8002f6a:	d907      	bls.n	8002f7c <_fwalk_reent+0x3a>
 8002f6c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8002f70:	3301      	adds	r3, #1
 8002f72:	d003      	beq.n	8002f7c <_fwalk_reent+0x3a>
 8002f74:	4629      	mov	r1, r5
 8002f76:	4630      	mov	r0, r6
 8002f78:	47c0      	blx	r8
 8002f7a:	4307      	orrs	r7, r0
 8002f7c:	3568      	adds	r5, #104	; 0x68
 8002f7e:	e7e9      	b.n	8002f54 <_fwalk_reent+0x12>

08002f80 <__libc_init_array>:
 8002f80:	b570      	push	{r4, r5, r6, lr}
 8002f82:	4d0d      	ldr	r5, [pc, #52]	; (8002fb8 <__libc_init_array+0x38>)
 8002f84:	4c0d      	ldr	r4, [pc, #52]	; (8002fbc <__libc_init_array+0x3c>)
 8002f86:	1b64      	subs	r4, r4, r5
 8002f88:	10a4      	asrs	r4, r4, #2
 8002f8a:	2600      	movs	r6, #0
 8002f8c:	42a6      	cmp	r6, r4
 8002f8e:	d109      	bne.n	8002fa4 <__libc_init_array+0x24>
 8002f90:	4d0b      	ldr	r5, [pc, #44]	; (8002fc0 <__libc_init_array+0x40>)
 8002f92:	4c0c      	ldr	r4, [pc, #48]	; (8002fc4 <__libc_init_array+0x44>)
 8002f94:	f006 fbea 	bl	800976c <_init>
 8002f98:	1b64      	subs	r4, r4, r5
 8002f9a:	10a4      	asrs	r4, r4, #2
 8002f9c:	2600      	movs	r6, #0
 8002f9e:	42a6      	cmp	r6, r4
 8002fa0:	d105      	bne.n	8002fae <__libc_init_array+0x2e>
 8002fa2:	bd70      	pop	{r4, r5, r6, pc}
 8002fa4:	f855 3b04 	ldr.w	r3, [r5], #4
 8002fa8:	4798      	blx	r3
 8002faa:	3601      	adds	r6, #1
 8002fac:	e7ee      	b.n	8002f8c <__libc_init_array+0xc>
 8002fae:	f855 3b04 	ldr.w	r3, [r5], #4
 8002fb2:	4798      	blx	r3
 8002fb4:	3601      	adds	r6, #1
 8002fb6:	e7f2      	b.n	8002f9e <__libc_init_array+0x1e>
 8002fb8:	0800a858 	.word	0x0800a858
 8002fbc:	0800a858 	.word	0x0800a858
 8002fc0:	0800a858 	.word	0x0800a858
 8002fc4:	0800a85c 	.word	0x0800a85c

08002fc8 <__retarget_lock_init_recursive>:
 8002fc8:	4770      	bx	lr

08002fca <__retarget_lock_acquire_recursive>:
 8002fca:	4770      	bx	lr

08002fcc <__retarget_lock_release_recursive>:
 8002fcc:	4770      	bx	lr
	...

08002fd0 <malloc>:
 8002fd0:	4b02      	ldr	r3, [pc, #8]	; (8002fdc <malloc+0xc>)
 8002fd2:	4601      	mov	r1, r0
 8002fd4:	6818      	ldr	r0, [r3, #0]
 8002fd6:	f000 b86f 	b.w	80030b8 <_malloc_r>
 8002fda:	bf00      	nop
 8002fdc:	20000b10 	.word	0x20000b10

08002fe0 <free>:
 8002fe0:	4b02      	ldr	r3, [pc, #8]	; (8002fec <free+0xc>)
 8002fe2:	4601      	mov	r1, r0
 8002fe4:	6818      	ldr	r0, [r3, #0]
 8002fe6:	f000 b819 	b.w	800301c <_free_r>
 8002fea:	bf00      	nop
 8002fec:	20000b10 	.word	0x20000b10

08002ff0 <memcpy>:
 8002ff0:	440a      	add	r2, r1
 8002ff2:	4291      	cmp	r1, r2
 8002ff4:	f100 33ff 	add.w	r3, r0, #4294967295
 8002ff8:	d100      	bne.n	8002ffc <memcpy+0xc>
 8002ffa:	4770      	bx	lr
 8002ffc:	b510      	push	{r4, lr}
 8002ffe:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003002:	f803 4f01 	strb.w	r4, [r3, #1]!
 8003006:	4291      	cmp	r1, r2
 8003008:	d1f9      	bne.n	8002ffe <memcpy+0xe>
 800300a:	bd10      	pop	{r4, pc}

0800300c <memset>:
 800300c:	4402      	add	r2, r0
 800300e:	4603      	mov	r3, r0
 8003010:	4293      	cmp	r3, r2
 8003012:	d100      	bne.n	8003016 <memset+0xa>
 8003014:	4770      	bx	lr
 8003016:	f803 1b01 	strb.w	r1, [r3], #1
 800301a:	e7f9      	b.n	8003010 <memset+0x4>

0800301c <_free_r>:
 800301c:	b538      	push	{r3, r4, r5, lr}
 800301e:	4605      	mov	r5, r0
 8003020:	2900      	cmp	r1, #0
 8003022:	d045      	beq.n	80030b0 <_free_r+0x94>
 8003024:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003028:	1f0c      	subs	r4, r1, #4
 800302a:	2b00      	cmp	r3, #0
 800302c:	bfb8      	it	lt
 800302e:	18e4      	addlt	r4, r4, r3
 8003030:	f003 fd02 	bl	8006a38 <__malloc_lock>
 8003034:	4a1f      	ldr	r2, [pc, #124]	; (80030b4 <_free_r+0x98>)
 8003036:	6813      	ldr	r3, [r2, #0]
 8003038:	4610      	mov	r0, r2
 800303a:	b933      	cbnz	r3, 800304a <_free_r+0x2e>
 800303c:	6063      	str	r3, [r4, #4]
 800303e:	6014      	str	r4, [r2, #0]
 8003040:	4628      	mov	r0, r5
 8003042:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003046:	f003 bcfd 	b.w	8006a44 <__malloc_unlock>
 800304a:	42a3      	cmp	r3, r4
 800304c:	d90b      	bls.n	8003066 <_free_r+0x4a>
 800304e:	6821      	ldr	r1, [r4, #0]
 8003050:	1862      	adds	r2, r4, r1
 8003052:	4293      	cmp	r3, r2
 8003054:	bf04      	itt	eq
 8003056:	681a      	ldreq	r2, [r3, #0]
 8003058:	685b      	ldreq	r3, [r3, #4]
 800305a:	6063      	str	r3, [r4, #4]
 800305c:	bf04      	itt	eq
 800305e:	1852      	addeq	r2, r2, r1
 8003060:	6022      	streq	r2, [r4, #0]
 8003062:	6004      	str	r4, [r0, #0]
 8003064:	e7ec      	b.n	8003040 <_free_r+0x24>
 8003066:	461a      	mov	r2, r3
 8003068:	685b      	ldr	r3, [r3, #4]
 800306a:	b10b      	cbz	r3, 8003070 <_free_r+0x54>
 800306c:	42a3      	cmp	r3, r4
 800306e:	d9fa      	bls.n	8003066 <_free_r+0x4a>
 8003070:	6811      	ldr	r1, [r2, #0]
 8003072:	1850      	adds	r0, r2, r1
 8003074:	42a0      	cmp	r0, r4
 8003076:	d10b      	bne.n	8003090 <_free_r+0x74>
 8003078:	6820      	ldr	r0, [r4, #0]
 800307a:	4401      	add	r1, r0
 800307c:	1850      	adds	r0, r2, r1
 800307e:	4283      	cmp	r3, r0
 8003080:	6011      	str	r1, [r2, #0]
 8003082:	d1dd      	bne.n	8003040 <_free_r+0x24>
 8003084:	6818      	ldr	r0, [r3, #0]
 8003086:	685b      	ldr	r3, [r3, #4]
 8003088:	6053      	str	r3, [r2, #4]
 800308a:	4401      	add	r1, r0
 800308c:	6011      	str	r1, [r2, #0]
 800308e:	e7d7      	b.n	8003040 <_free_r+0x24>
 8003090:	d902      	bls.n	8003098 <_free_r+0x7c>
 8003092:	230c      	movs	r3, #12
 8003094:	602b      	str	r3, [r5, #0]
 8003096:	e7d3      	b.n	8003040 <_free_r+0x24>
 8003098:	6820      	ldr	r0, [r4, #0]
 800309a:	1821      	adds	r1, r4, r0
 800309c:	428b      	cmp	r3, r1
 800309e:	bf04      	itt	eq
 80030a0:	6819      	ldreq	r1, [r3, #0]
 80030a2:	685b      	ldreq	r3, [r3, #4]
 80030a4:	6063      	str	r3, [r4, #4]
 80030a6:	bf04      	itt	eq
 80030a8:	1809      	addeq	r1, r1, r0
 80030aa:	6021      	streq	r1, [r4, #0]
 80030ac:	6054      	str	r4, [r2, #4]
 80030ae:	e7c7      	b.n	8003040 <_free_r+0x24>
 80030b0:	bd38      	pop	{r3, r4, r5, pc}
 80030b2:	bf00      	nop
 80030b4:	20000d38 	.word	0x20000d38

080030b8 <_malloc_r>:
 80030b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80030ba:	1ccd      	adds	r5, r1, #3
 80030bc:	f025 0503 	bic.w	r5, r5, #3
 80030c0:	3508      	adds	r5, #8
 80030c2:	2d0c      	cmp	r5, #12
 80030c4:	bf38      	it	cc
 80030c6:	250c      	movcc	r5, #12
 80030c8:	2d00      	cmp	r5, #0
 80030ca:	4606      	mov	r6, r0
 80030cc:	db01      	blt.n	80030d2 <_malloc_r+0x1a>
 80030ce:	42a9      	cmp	r1, r5
 80030d0:	d903      	bls.n	80030da <_malloc_r+0x22>
 80030d2:	230c      	movs	r3, #12
 80030d4:	6033      	str	r3, [r6, #0]
 80030d6:	2000      	movs	r0, #0
 80030d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80030da:	f003 fcad 	bl	8006a38 <__malloc_lock>
 80030de:	4921      	ldr	r1, [pc, #132]	; (8003164 <_malloc_r+0xac>)
 80030e0:	680a      	ldr	r2, [r1, #0]
 80030e2:	4614      	mov	r4, r2
 80030e4:	b99c      	cbnz	r4, 800310e <_malloc_r+0x56>
 80030e6:	4f20      	ldr	r7, [pc, #128]	; (8003168 <_malloc_r+0xb0>)
 80030e8:	683b      	ldr	r3, [r7, #0]
 80030ea:	b923      	cbnz	r3, 80030f6 <_malloc_r+0x3e>
 80030ec:	4621      	mov	r1, r4
 80030ee:	4630      	mov	r0, r6
 80030f0:	f000 ffca 	bl	8004088 <_sbrk_r>
 80030f4:	6038      	str	r0, [r7, #0]
 80030f6:	4629      	mov	r1, r5
 80030f8:	4630      	mov	r0, r6
 80030fa:	f000 ffc5 	bl	8004088 <_sbrk_r>
 80030fe:	1c43      	adds	r3, r0, #1
 8003100:	d123      	bne.n	800314a <_malloc_r+0x92>
 8003102:	230c      	movs	r3, #12
 8003104:	6033      	str	r3, [r6, #0]
 8003106:	4630      	mov	r0, r6
 8003108:	f003 fc9c 	bl	8006a44 <__malloc_unlock>
 800310c:	e7e3      	b.n	80030d6 <_malloc_r+0x1e>
 800310e:	6823      	ldr	r3, [r4, #0]
 8003110:	1b5b      	subs	r3, r3, r5
 8003112:	d417      	bmi.n	8003144 <_malloc_r+0x8c>
 8003114:	2b0b      	cmp	r3, #11
 8003116:	d903      	bls.n	8003120 <_malloc_r+0x68>
 8003118:	6023      	str	r3, [r4, #0]
 800311a:	441c      	add	r4, r3
 800311c:	6025      	str	r5, [r4, #0]
 800311e:	e004      	b.n	800312a <_malloc_r+0x72>
 8003120:	6863      	ldr	r3, [r4, #4]
 8003122:	42a2      	cmp	r2, r4
 8003124:	bf0c      	ite	eq
 8003126:	600b      	streq	r3, [r1, #0]
 8003128:	6053      	strne	r3, [r2, #4]
 800312a:	4630      	mov	r0, r6
 800312c:	f003 fc8a 	bl	8006a44 <__malloc_unlock>
 8003130:	f104 000b 	add.w	r0, r4, #11
 8003134:	1d23      	adds	r3, r4, #4
 8003136:	f020 0007 	bic.w	r0, r0, #7
 800313a:	1ac2      	subs	r2, r0, r3
 800313c:	d0cc      	beq.n	80030d8 <_malloc_r+0x20>
 800313e:	1a1b      	subs	r3, r3, r0
 8003140:	50a3      	str	r3, [r4, r2]
 8003142:	e7c9      	b.n	80030d8 <_malloc_r+0x20>
 8003144:	4622      	mov	r2, r4
 8003146:	6864      	ldr	r4, [r4, #4]
 8003148:	e7cc      	b.n	80030e4 <_malloc_r+0x2c>
 800314a:	1cc4      	adds	r4, r0, #3
 800314c:	f024 0403 	bic.w	r4, r4, #3
 8003150:	42a0      	cmp	r0, r4
 8003152:	d0e3      	beq.n	800311c <_malloc_r+0x64>
 8003154:	1a21      	subs	r1, r4, r0
 8003156:	4630      	mov	r0, r6
 8003158:	f000 ff96 	bl	8004088 <_sbrk_r>
 800315c:	3001      	adds	r0, #1
 800315e:	d1dd      	bne.n	800311c <_malloc_r+0x64>
 8003160:	e7cf      	b.n	8003102 <_malloc_r+0x4a>
 8003162:	bf00      	nop
 8003164:	20000d38 	.word	0x20000d38
 8003168:	20000d3c 	.word	0x20000d3c

0800316c <__cvt>:
 800316c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003170:	b088      	sub	sp, #32
 8003172:	2b00      	cmp	r3, #0
 8003174:	461f      	mov	r7, r3
 8003176:	4614      	mov	r4, r2
 8003178:	bfb8      	it	lt
 800317a:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 800317e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8003180:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8003182:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
 8003186:	bfb6      	itet	lt
 8003188:	461f      	movlt	r7, r3
 800318a:	2300      	movge	r3, #0
 800318c:	232d      	movlt	r3, #45	; 0x2d
 800318e:	7013      	strb	r3, [r2, #0]
 8003190:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8003192:	f023 0820 	bic.w	r8, r3, #32
 8003196:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800319a:	d005      	beq.n	80031a8 <__cvt+0x3c>
 800319c:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 80031a0:	d100      	bne.n	80031a4 <__cvt+0x38>
 80031a2:	3501      	adds	r5, #1
 80031a4:	2302      	movs	r3, #2
 80031a6:	e000      	b.n	80031aa <__cvt+0x3e>
 80031a8:	2303      	movs	r3, #3
 80031aa:	aa07      	add	r2, sp, #28
 80031ac:	9204      	str	r2, [sp, #16]
 80031ae:	aa06      	add	r2, sp, #24
 80031b0:	e9cd a202 	strd	sl, r2, [sp, #8]
 80031b4:	e9cd 3500 	strd	r3, r5, [sp]
 80031b8:	4622      	mov	r2, r4
 80031ba:	463b      	mov	r3, r7
 80031bc:	f002 f978 	bl	80054b0 <_dtoa_r>
 80031c0:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 80031c4:	4606      	mov	r6, r0
 80031c6:	d102      	bne.n	80031ce <__cvt+0x62>
 80031c8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80031ca:	07db      	lsls	r3, r3, #31
 80031cc:	d522      	bpl.n	8003214 <__cvt+0xa8>
 80031ce:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80031d2:	eb06 0905 	add.w	r9, r6, r5
 80031d6:	d110      	bne.n	80031fa <__cvt+0x8e>
 80031d8:	7833      	ldrb	r3, [r6, #0]
 80031da:	2b30      	cmp	r3, #48	; 0x30
 80031dc:	d10a      	bne.n	80031f4 <__cvt+0x88>
 80031de:	2200      	movs	r2, #0
 80031e0:	2300      	movs	r3, #0
 80031e2:	4620      	mov	r0, r4
 80031e4:	4639      	mov	r1, r7
 80031e6:	f7fd fc99 	bl	8000b1c <__aeabi_dcmpeq>
 80031ea:	b918      	cbnz	r0, 80031f4 <__cvt+0x88>
 80031ec:	f1c5 0501 	rsb	r5, r5, #1
 80031f0:	f8ca 5000 	str.w	r5, [sl]
 80031f4:	f8da 3000 	ldr.w	r3, [sl]
 80031f8:	4499      	add	r9, r3
 80031fa:	2200      	movs	r2, #0
 80031fc:	2300      	movs	r3, #0
 80031fe:	4620      	mov	r0, r4
 8003200:	4639      	mov	r1, r7
 8003202:	f7fd fc8b 	bl	8000b1c <__aeabi_dcmpeq>
 8003206:	b108      	cbz	r0, 800320c <__cvt+0xa0>
 8003208:	f8cd 901c 	str.w	r9, [sp, #28]
 800320c:	2230      	movs	r2, #48	; 0x30
 800320e:	9b07      	ldr	r3, [sp, #28]
 8003210:	454b      	cmp	r3, r9
 8003212:	d307      	bcc.n	8003224 <__cvt+0xb8>
 8003214:	9b07      	ldr	r3, [sp, #28]
 8003216:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8003218:	1b9b      	subs	r3, r3, r6
 800321a:	4630      	mov	r0, r6
 800321c:	6013      	str	r3, [r2, #0]
 800321e:	b008      	add	sp, #32
 8003220:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003224:	1c59      	adds	r1, r3, #1
 8003226:	9107      	str	r1, [sp, #28]
 8003228:	701a      	strb	r2, [r3, #0]
 800322a:	e7f0      	b.n	800320e <__cvt+0xa2>

0800322c <__exponent>:
 800322c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800322e:	4603      	mov	r3, r0
 8003230:	2900      	cmp	r1, #0
 8003232:	bfb8      	it	lt
 8003234:	4249      	neglt	r1, r1
 8003236:	f803 2b02 	strb.w	r2, [r3], #2
 800323a:	bfb4      	ite	lt
 800323c:	222d      	movlt	r2, #45	; 0x2d
 800323e:	222b      	movge	r2, #43	; 0x2b
 8003240:	2909      	cmp	r1, #9
 8003242:	7042      	strb	r2, [r0, #1]
 8003244:	dd2a      	ble.n	800329c <__exponent+0x70>
 8003246:	f10d 0407 	add.w	r4, sp, #7
 800324a:	46a4      	mov	ip, r4
 800324c:	270a      	movs	r7, #10
 800324e:	46a6      	mov	lr, r4
 8003250:	460a      	mov	r2, r1
 8003252:	fb91 f6f7 	sdiv	r6, r1, r7
 8003256:	fb07 1516 	mls	r5, r7, r6, r1
 800325a:	3530      	adds	r5, #48	; 0x30
 800325c:	2a63      	cmp	r2, #99	; 0x63
 800325e:	f104 34ff 	add.w	r4, r4, #4294967295
 8003262:	f80e 5c01 	strb.w	r5, [lr, #-1]
 8003266:	4631      	mov	r1, r6
 8003268:	dcf1      	bgt.n	800324e <__exponent+0x22>
 800326a:	3130      	adds	r1, #48	; 0x30
 800326c:	f1ae 0502 	sub.w	r5, lr, #2
 8003270:	f804 1c01 	strb.w	r1, [r4, #-1]
 8003274:	1c44      	adds	r4, r0, #1
 8003276:	4629      	mov	r1, r5
 8003278:	4561      	cmp	r1, ip
 800327a:	d30a      	bcc.n	8003292 <__exponent+0x66>
 800327c:	f10d 0209 	add.w	r2, sp, #9
 8003280:	eba2 020e 	sub.w	r2, r2, lr
 8003284:	4565      	cmp	r5, ip
 8003286:	bf88      	it	hi
 8003288:	2200      	movhi	r2, #0
 800328a:	4413      	add	r3, r2
 800328c:	1a18      	subs	r0, r3, r0
 800328e:	b003      	add	sp, #12
 8003290:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003292:	f811 2b01 	ldrb.w	r2, [r1], #1
 8003296:	f804 2f01 	strb.w	r2, [r4, #1]!
 800329a:	e7ed      	b.n	8003278 <__exponent+0x4c>
 800329c:	2330      	movs	r3, #48	; 0x30
 800329e:	3130      	adds	r1, #48	; 0x30
 80032a0:	7083      	strb	r3, [r0, #2]
 80032a2:	70c1      	strb	r1, [r0, #3]
 80032a4:	1d03      	adds	r3, r0, #4
 80032a6:	e7f1      	b.n	800328c <__exponent+0x60>

080032a8 <_printf_float>:
 80032a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80032ac:	b091      	sub	sp, #68	; 0x44
 80032ae:	460c      	mov	r4, r1
 80032b0:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 80032b4:	4616      	mov	r6, r2
 80032b6:	461f      	mov	r7, r3
 80032b8:	4605      	mov	r5, r0
 80032ba:	f003 fb31 	bl	8006920 <_localeconv_r>
 80032be:	6803      	ldr	r3, [r0, #0]
 80032c0:	9309      	str	r3, [sp, #36]	; 0x24
 80032c2:	4618      	mov	r0, r3
 80032c4:	f7fc fffe 	bl	80002c4 <strlen>
 80032c8:	2300      	movs	r3, #0
 80032ca:	930e      	str	r3, [sp, #56]	; 0x38
 80032cc:	f8d8 3000 	ldr.w	r3, [r8]
 80032d0:	900a      	str	r0, [sp, #40]	; 0x28
 80032d2:	3307      	adds	r3, #7
 80032d4:	f023 0307 	bic.w	r3, r3, #7
 80032d8:	f103 0208 	add.w	r2, r3, #8
 80032dc:	f894 9018 	ldrb.w	r9, [r4, #24]
 80032e0:	f8d4 b000 	ldr.w	fp, [r4]
 80032e4:	f8c8 2000 	str.w	r2, [r8]
 80032e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80032ec:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 80032f0:	e9d4 8a12 	ldrd	r8, sl, [r4, #72]	; 0x48
 80032f4:	f02a 4300 	bic.w	r3, sl, #2147483648	; 0x80000000
 80032f8:	930b      	str	r3, [sp, #44]	; 0x2c
 80032fa:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80032fc:	4b9c      	ldr	r3, [pc, #624]	; (8003570 <_printf_float+0x2c8>)
 80032fe:	f04f 32ff 	mov.w	r2, #4294967295
 8003302:	4640      	mov	r0, r8
 8003304:	f7fd fc3c 	bl	8000b80 <__aeabi_dcmpun>
 8003308:	bb70      	cbnz	r0, 8003368 <_printf_float+0xc0>
 800330a:	4b99      	ldr	r3, [pc, #612]	; (8003570 <_printf_float+0x2c8>)
 800330c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800330e:	f04f 32ff 	mov.w	r2, #4294967295
 8003312:	4640      	mov	r0, r8
 8003314:	f7fd fc16 	bl	8000b44 <__aeabi_dcmple>
 8003318:	bb30      	cbnz	r0, 8003368 <_printf_float+0xc0>
 800331a:	2200      	movs	r2, #0
 800331c:	2300      	movs	r3, #0
 800331e:	4640      	mov	r0, r8
 8003320:	4651      	mov	r1, sl
 8003322:	f7fd fc05 	bl	8000b30 <__aeabi_dcmplt>
 8003326:	b110      	cbz	r0, 800332e <_printf_float+0x86>
 8003328:	232d      	movs	r3, #45	; 0x2d
 800332a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800332e:	4b91      	ldr	r3, [pc, #580]	; (8003574 <_printf_float+0x2cc>)
 8003330:	4891      	ldr	r0, [pc, #580]	; (8003578 <_printf_float+0x2d0>)
 8003332:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
 8003336:	bf94      	ite	ls
 8003338:	4698      	movls	r8, r3
 800333a:	4680      	movhi	r8, r0
 800333c:	2303      	movs	r3, #3
 800333e:	6123      	str	r3, [r4, #16]
 8003340:	f02b 0304 	bic.w	r3, fp, #4
 8003344:	6023      	str	r3, [r4, #0]
 8003346:	f04f 0a00 	mov.w	sl, #0
 800334a:	9700      	str	r7, [sp, #0]
 800334c:	4633      	mov	r3, r6
 800334e:	aa0f      	add	r2, sp, #60	; 0x3c
 8003350:	4621      	mov	r1, r4
 8003352:	4628      	mov	r0, r5
 8003354:	f000 f9d2 	bl	80036fc <_printf_common>
 8003358:	3001      	adds	r0, #1
 800335a:	f040 808f 	bne.w	800347c <_printf_float+0x1d4>
 800335e:	f04f 30ff 	mov.w	r0, #4294967295
 8003362:	b011      	add	sp, #68	; 0x44
 8003364:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003368:	4642      	mov	r2, r8
 800336a:	4653      	mov	r3, sl
 800336c:	4640      	mov	r0, r8
 800336e:	4651      	mov	r1, sl
 8003370:	f7fd fc06 	bl	8000b80 <__aeabi_dcmpun>
 8003374:	b140      	cbz	r0, 8003388 <_printf_float+0xe0>
 8003376:	f1ba 0f00 	cmp.w	sl, #0
 800337a:	bfbc      	itt	lt
 800337c:	232d      	movlt	r3, #45	; 0x2d
 800337e:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 8003382:	487e      	ldr	r0, [pc, #504]	; (800357c <_printf_float+0x2d4>)
 8003384:	4b7e      	ldr	r3, [pc, #504]	; (8003580 <_printf_float+0x2d8>)
 8003386:	e7d4      	b.n	8003332 <_printf_float+0x8a>
 8003388:	6863      	ldr	r3, [r4, #4]
 800338a:	1c5a      	adds	r2, r3, #1
 800338c:	f009 01df 	and.w	r1, r9, #223	; 0xdf
 8003390:	d142      	bne.n	8003418 <_printf_float+0x170>
 8003392:	2306      	movs	r3, #6
 8003394:	6063      	str	r3, [r4, #4]
 8003396:	2200      	movs	r2, #0
 8003398:	9206      	str	r2, [sp, #24]
 800339a:	aa0e      	add	r2, sp, #56	; 0x38
 800339c:	e9cd 9204 	strd	r9, r2, [sp, #16]
 80033a0:	aa0d      	add	r2, sp, #52	; 0x34
 80033a2:	f44b 6380 	orr.w	r3, fp, #1024	; 0x400
 80033a6:	9203      	str	r2, [sp, #12]
 80033a8:	f10d 0233 	add.w	r2, sp, #51	; 0x33
 80033ac:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80033b0:	6023      	str	r3, [r4, #0]
 80033b2:	6863      	ldr	r3, [r4, #4]
 80033b4:	9300      	str	r3, [sp, #0]
 80033b6:	4642      	mov	r2, r8
 80033b8:	4653      	mov	r3, sl
 80033ba:	4628      	mov	r0, r5
 80033bc:	910b      	str	r1, [sp, #44]	; 0x2c
 80033be:	f7ff fed5 	bl	800316c <__cvt>
 80033c2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80033c4:	2947      	cmp	r1, #71	; 0x47
 80033c6:	4680      	mov	r8, r0
 80033c8:	990d      	ldr	r1, [sp, #52]	; 0x34
 80033ca:	d108      	bne.n	80033de <_printf_float+0x136>
 80033cc:	1cc8      	adds	r0, r1, #3
 80033ce:	db02      	blt.n	80033d6 <_printf_float+0x12e>
 80033d0:	6863      	ldr	r3, [r4, #4]
 80033d2:	4299      	cmp	r1, r3
 80033d4:	dd40      	ble.n	8003458 <_printf_float+0x1b0>
 80033d6:	f1a9 0902 	sub.w	r9, r9, #2
 80033da:	fa5f f989 	uxtb.w	r9, r9
 80033de:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 80033e2:	d81f      	bhi.n	8003424 <_printf_float+0x17c>
 80033e4:	3901      	subs	r1, #1
 80033e6:	464a      	mov	r2, r9
 80033e8:	f104 0050 	add.w	r0, r4, #80	; 0x50
 80033ec:	910d      	str	r1, [sp, #52]	; 0x34
 80033ee:	f7ff ff1d 	bl	800322c <__exponent>
 80033f2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80033f4:	1813      	adds	r3, r2, r0
 80033f6:	2a01      	cmp	r2, #1
 80033f8:	4682      	mov	sl, r0
 80033fa:	6123      	str	r3, [r4, #16]
 80033fc:	dc02      	bgt.n	8003404 <_printf_float+0x15c>
 80033fe:	6822      	ldr	r2, [r4, #0]
 8003400:	07d2      	lsls	r2, r2, #31
 8003402:	d501      	bpl.n	8003408 <_printf_float+0x160>
 8003404:	3301      	adds	r3, #1
 8003406:	6123      	str	r3, [r4, #16]
 8003408:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 800340c:	2b00      	cmp	r3, #0
 800340e:	d09c      	beq.n	800334a <_printf_float+0xa2>
 8003410:	232d      	movs	r3, #45	; 0x2d
 8003412:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8003416:	e798      	b.n	800334a <_printf_float+0xa2>
 8003418:	2947      	cmp	r1, #71	; 0x47
 800341a:	d1bc      	bne.n	8003396 <_printf_float+0xee>
 800341c:	2b00      	cmp	r3, #0
 800341e:	d1ba      	bne.n	8003396 <_printf_float+0xee>
 8003420:	2301      	movs	r3, #1
 8003422:	e7b7      	b.n	8003394 <_printf_float+0xec>
 8003424:	f1b9 0f66 	cmp.w	r9, #102	; 0x66
 8003428:	d118      	bne.n	800345c <_printf_float+0x1b4>
 800342a:	2900      	cmp	r1, #0
 800342c:	6863      	ldr	r3, [r4, #4]
 800342e:	dd0b      	ble.n	8003448 <_printf_float+0x1a0>
 8003430:	6121      	str	r1, [r4, #16]
 8003432:	b913      	cbnz	r3, 800343a <_printf_float+0x192>
 8003434:	6822      	ldr	r2, [r4, #0]
 8003436:	07d0      	lsls	r0, r2, #31
 8003438:	d502      	bpl.n	8003440 <_printf_float+0x198>
 800343a:	3301      	adds	r3, #1
 800343c:	440b      	add	r3, r1
 800343e:	6123      	str	r3, [r4, #16]
 8003440:	65a1      	str	r1, [r4, #88]	; 0x58
 8003442:	f04f 0a00 	mov.w	sl, #0
 8003446:	e7df      	b.n	8003408 <_printf_float+0x160>
 8003448:	b913      	cbnz	r3, 8003450 <_printf_float+0x1a8>
 800344a:	6822      	ldr	r2, [r4, #0]
 800344c:	07d2      	lsls	r2, r2, #31
 800344e:	d501      	bpl.n	8003454 <_printf_float+0x1ac>
 8003450:	3302      	adds	r3, #2
 8003452:	e7f4      	b.n	800343e <_printf_float+0x196>
 8003454:	2301      	movs	r3, #1
 8003456:	e7f2      	b.n	800343e <_printf_float+0x196>
 8003458:	f04f 0967 	mov.w	r9, #103	; 0x67
 800345c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800345e:	4299      	cmp	r1, r3
 8003460:	db05      	blt.n	800346e <_printf_float+0x1c6>
 8003462:	6823      	ldr	r3, [r4, #0]
 8003464:	6121      	str	r1, [r4, #16]
 8003466:	07d8      	lsls	r0, r3, #31
 8003468:	d5ea      	bpl.n	8003440 <_printf_float+0x198>
 800346a:	1c4b      	adds	r3, r1, #1
 800346c:	e7e7      	b.n	800343e <_printf_float+0x196>
 800346e:	2900      	cmp	r1, #0
 8003470:	bfd4      	ite	le
 8003472:	f1c1 0202 	rsble	r2, r1, #2
 8003476:	2201      	movgt	r2, #1
 8003478:	4413      	add	r3, r2
 800347a:	e7e0      	b.n	800343e <_printf_float+0x196>
 800347c:	6823      	ldr	r3, [r4, #0]
 800347e:	055a      	lsls	r2, r3, #21
 8003480:	d407      	bmi.n	8003492 <_printf_float+0x1ea>
 8003482:	6923      	ldr	r3, [r4, #16]
 8003484:	4642      	mov	r2, r8
 8003486:	4631      	mov	r1, r6
 8003488:	4628      	mov	r0, r5
 800348a:	47b8      	blx	r7
 800348c:	3001      	adds	r0, #1
 800348e:	d12b      	bne.n	80034e8 <_printf_float+0x240>
 8003490:	e765      	b.n	800335e <_printf_float+0xb6>
 8003492:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 8003496:	f240 80dc 	bls.w	8003652 <_printf_float+0x3aa>
 800349a:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800349e:	2200      	movs	r2, #0
 80034a0:	2300      	movs	r3, #0
 80034a2:	f7fd fb3b 	bl	8000b1c <__aeabi_dcmpeq>
 80034a6:	2800      	cmp	r0, #0
 80034a8:	d033      	beq.n	8003512 <_printf_float+0x26a>
 80034aa:	4a36      	ldr	r2, [pc, #216]	; (8003584 <_printf_float+0x2dc>)
 80034ac:	2301      	movs	r3, #1
 80034ae:	4631      	mov	r1, r6
 80034b0:	4628      	mov	r0, r5
 80034b2:	47b8      	blx	r7
 80034b4:	3001      	adds	r0, #1
 80034b6:	f43f af52 	beq.w	800335e <_printf_float+0xb6>
 80034ba:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 80034be:	429a      	cmp	r2, r3
 80034c0:	db02      	blt.n	80034c8 <_printf_float+0x220>
 80034c2:	6823      	ldr	r3, [r4, #0]
 80034c4:	07d8      	lsls	r0, r3, #31
 80034c6:	d50f      	bpl.n	80034e8 <_printf_float+0x240>
 80034c8:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80034cc:	4631      	mov	r1, r6
 80034ce:	4628      	mov	r0, r5
 80034d0:	47b8      	blx	r7
 80034d2:	3001      	adds	r0, #1
 80034d4:	f43f af43 	beq.w	800335e <_printf_float+0xb6>
 80034d8:	f04f 0800 	mov.w	r8, #0
 80034dc:	f104 091a 	add.w	r9, r4, #26
 80034e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80034e2:	3b01      	subs	r3, #1
 80034e4:	4543      	cmp	r3, r8
 80034e6:	dc09      	bgt.n	80034fc <_printf_float+0x254>
 80034e8:	6823      	ldr	r3, [r4, #0]
 80034ea:	079b      	lsls	r3, r3, #30
 80034ec:	f100 8101 	bmi.w	80036f2 <_printf_float+0x44a>
 80034f0:	68e0      	ldr	r0, [r4, #12]
 80034f2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80034f4:	4298      	cmp	r0, r3
 80034f6:	bfb8      	it	lt
 80034f8:	4618      	movlt	r0, r3
 80034fa:	e732      	b.n	8003362 <_printf_float+0xba>
 80034fc:	2301      	movs	r3, #1
 80034fe:	464a      	mov	r2, r9
 8003500:	4631      	mov	r1, r6
 8003502:	4628      	mov	r0, r5
 8003504:	47b8      	blx	r7
 8003506:	3001      	adds	r0, #1
 8003508:	f43f af29 	beq.w	800335e <_printf_float+0xb6>
 800350c:	f108 0801 	add.w	r8, r8, #1
 8003510:	e7e6      	b.n	80034e0 <_printf_float+0x238>
 8003512:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003514:	2b00      	cmp	r3, #0
 8003516:	dc37      	bgt.n	8003588 <_printf_float+0x2e0>
 8003518:	4a1a      	ldr	r2, [pc, #104]	; (8003584 <_printf_float+0x2dc>)
 800351a:	2301      	movs	r3, #1
 800351c:	4631      	mov	r1, r6
 800351e:	4628      	mov	r0, r5
 8003520:	47b8      	blx	r7
 8003522:	3001      	adds	r0, #1
 8003524:	f43f af1b 	beq.w	800335e <_printf_float+0xb6>
 8003528:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800352c:	4313      	orrs	r3, r2
 800352e:	d102      	bne.n	8003536 <_printf_float+0x28e>
 8003530:	6823      	ldr	r3, [r4, #0]
 8003532:	07d9      	lsls	r1, r3, #31
 8003534:	d5d8      	bpl.n	80034e8 <_printf_float+0x240>
 8003536:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800353a:	4631      	mov	r1, r6
 800353c:	4628      	mov	r0, r5
 800353e:	47b8      	blx	r7
 8003540:	3001      	adds	r0, #1
 8003542:	f43f af0c 	beq.w	800335e <_printf_float+0xb6>
 8003546:	f04f 0900 	mov.w	r9, #0
 800354a:	f104 0a1a 	add.w	sl, r4, #26
 800354e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003550:	425b      	negs	r3, r3
 8003552:	454b      	cmp	r3, r9
 8003554:	dc01      	bgt.n	800355a <_printf_float+0x2b2>
 8003556:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003558:	e794      	b.n	8003484 <_printf_float+0x1dc>
 800355a:	2301      	movs	r3, #1
 800355c:	4652      	mov	r2, sl
 800355e:	4631      	mov	r1, r6
 8003560:	4628      	mov	r0, r5
 8003562:	47b8      	blx	r7
 8003564:	3001      	adds	r0, #1
 8003566:	f43f aefa 	beq.w	800335e <_printf_float+0xb6>
 800356a:	f109 0901 	add.w	r9, r9, #1
 800356e:	e7ee      	b.n	800354e <_printf_float+0x2a6>
 8003570:	7fefffff 	.word	0x7fefffff
 8003574:	08009fa8 	.word	0x08009fa8
 8003578:	08009fac 	.word	0x08009fac
 800357c:	08009fb4 	.word	0x08009fb4
 8003580:	08009fb0 	.word	0x08009fb0
 8003584:	0800a451 	.word	0x0800a451
 8003588:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800358a:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800358c:	429a      	cmp	r2, r3
 800358e:	bfa8      	it	ge
 8003590:	461a      	movge	r2, r3
 8003592:	2a00      	cmp	r2, #0
 8003594:	4691      	mov	r9, r2
 8003596:	dc37      	bgt.n	8003608 <_printf_float+0x360>
 8003598:	f04f 0b00 	mov.w	fp, #0
 800359c:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80035a0:	f104 021a 	add.w	r2, r4, #26
 80035a4:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
 80035a8:	ebaa 0309 	sub.w	r3, sl, r9
 80035ac:	455b      	cmp	r3, fp
 80035ae:	dc33      	bgt.n	8003618 <_printf_float+0x370>
 80035b0:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 80035b4:	429a      	cmp	r2, r3
 80035b6:	db3b      	blt.n	8003630 <_printf_float+0x388>
 80035b8:	6823      	ldr	r3, [r4, #0]
 80035ba:	07da      	lsls	r2, r3, #31
 80035bc:	d438      	bmi.n	8003630 <_printf_float+0x388>
 80035be:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80035c0:	990d      	ldr	r1, [sp, #52]	; 0x34
 80035c2:	eba2 030a 	sub.w	r3, r2, sl
 80035c6:	eba2 0901 	sub.w	r9, r2, r1
 80035ca:	4599      	cmp	r9, r3
 80035cc:	bfa8      	it	ge
 80035ce:	4699      	movge	r9, r3
 80035d0:	f1b9 0f00 	cmp.w	r9, #0
 80035d4:	dc34      	bgt.n	8003640 <_printf_float+0x398>
 80035d6:	f04f 0800 	mov.w	r8, #0
 80035da:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80035de:	f104 0a1a 	add.w	sl, r4, #26
 80035e2:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 80035e6:	1a9b      	subs	r3, r3, r2
 80035e8:	eba3 0309 	sub.w	r3, r3, r9
 80035ec:	4543      	cmp	r3, r8
 80035ee:	f77f af7b 	ble.w	80034e8 <_printf_float+0x240>
 80035f2:	2301      	movs	r3, #1
 80035f4:	4652      	mov	r2, sl
 80035f6:	4631      	mov	r1, r6
 80035f8:	4628      	mov	r0, r5
 80035fa:	47b8      	blx	r7
 80035fc:	3001      	adds	r0, #1
 80035fe:	f43f aeae 	beq.w	800335e <_printf_float+0xb6>
 8003602:	f108 0801 	add.w	r8, r8, #1
 8003606:	e7ec      	b.n	80035e2 <_printf_float+0x33a>
 8003608:	4613      	mov	r3, r2
 800360a:	4631      	mov	r1, r6
 800360c:	4642      	mov	r2, r8
 800360e:	4628      	mov	r0, r5
 8003610:	47b8      	blx	r7
 8003612:	3001      	adds	r0, #1
 8003614:	d1c0      	bne.n	8003598 <_printf_float+0x2f0>
 8003616:	e6a2      	b.n	800335e <_printf_float+0xb6>
 8003618:	2301      	movs	r3, #1
 800361a:	4631      	mov	r1, r6
 800361c:	4628      	mov	r0, r5
 800361e:	920b      	str	r2, [sp, #44]	; 0x2c
 8003620:	47b8      	blx	r7
 8003622:	3001      	adds	r0, #1
 8003624:	f43f ae9b 	beq.w	800335e <_printf_float+0xb6>
 8003628:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800362a:	f10b 0b01 	add.w	fp, fp, #1
 800362e:	e7b9      	b.n	80035a4 <_printf_float+0x2fc>
 8003630:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8003634:	4631      	mov	r1, r6
 8003636:	4628      	mov	r0, r5
 8003638:	47b8      	blx	r7
 800363a:	3001      	adds	r0, #1
 800363c:	d1bf      	bne.n	80035be <_printf_float+0x316>
 800363e:	e68e      	b.n	800335e <_printf_float+0xb6>
 8003640:	464b      	mov	r3, r9
 8003642:	eb08 020a 	add.w	r2, r8, sl
 8003646:	4631      	mov	r1, r6
 8003648:	4628      	mov	r0, r5
 800364a:	47b8      	blx	r7
 800364c:	3001      	adds	r0, #1
 800364e:	d1c2      	bne.n	80035d6 <_printf_float+0x32e>
 8003650:	e685      	b.n	800335e <_printf_float+0xb6>
 8003652:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8003654:	2a01      	cmp	r2, #1
 8003656:	dc01      	bgt.n	800365c <_printf_float+0x3b4>
 8003658:	07db      	lsls	r3, r3, #31
 800365a:	d537      	bpl.n	80036cc <_printf_float+0x424>
 800365c:	2301      	movs	r3, #1
 800365e:	4642      	mov	r2, r8
 8003660:	4631      	mov	r1, r6
 8003662:	4628      	mov	r0, r5
 8003664:	47b8      	blx	r7
 8003666:	3001      	adds	r0, #1
 8003668:	f43f ae79 	beq.w	800335e <_printf_float+0xb6>
 800366c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8003670:	4631      	mov	r1, r6
 8003672:	4628      	mov	r0, r5
 8003674:	47b8      	blx	r7
 8003676:	3001      	adds	r0, #1
 8003678:	f43f ae71 	beq.w	800335e <_printf_float+0xb6>
 800367c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8003680:	2200      	movs	r2, #0
 8003682:	2300      	movs	r3, #0
 8003684:	f7fd fa4a 	bl	8000b1c <__aeabi_dcmpeq>
 8003688:	b9d8      	cbnz	r0, 80036c2 <_printf_float+0x41a>
 800368a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800368c:	f108 0201 	add.w	r2, r8, #1
 8003690:	3b01      	subs	r3, #1
 8003692:	4631      	mov	r1, r6
 8003694:	4628      	mov	r0, r5
 8003696:	47b8      	blx	r7
 8003698:	3001      	adds	r0, #1
 800369a:	d10e      	bne.n	80036ba <_printf_float+0x412>
 800369c:	e65f      	b.n	800335e <_printf_float+0xb6>
 800369e:	2301      	movs	r3, #1
 80036a0:	464a      	mov	r2, r9
 80036a2:	4631      	mov	r1, r6
 80036a4:	4628      	mov	r0, r5
 80036a6:	47b8      	blx	r7
 80036a8:	3001      	adds	r0, #1
 80036aa:	f43f ae58 	beq.w	800335e <_printf_float+0xb6>
 80036ae:	f108 0801 	add.w	r8, r8, #1
 80036b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80036b4:	3b01      	subs	r3, #1
 80036b6:	4543      	cmp	r3, r8
 80036b8:	dcf1      	bgt.n	800369e <_printf_float+0x3f6>
 80036ba:	4653      	mov	r3, sl
 80036bc:	f104 0250 	add.w	r2, r4, #80	; 0x50
 80036c0:	e6e1      	b.n	8003486 <_printf_float+0x1de>
 80036c2:	f04f 0800 	mov.w	r8, #0
 80036c6:	f104 091a 	add.w	r9, r4, #26
 80036ca:	e7f2      	b.n	80036b2 <_printf_float+0x40a>
 80036cc:	2301      	movs	r3, #1
 80036ce:	4642      	mov	r2, r8
 80036d0:	e7df      	b.n	8003692 <_printf_float+0x3ea>
 80036d2:	2301      	movs	r3, #1
 80036d4:	464a      	mov	r2, r9
 80036d6:	4631      	mov	r1, r6
 80036d8:	4628      	mov	r0, r5
 80036da:	47b8      	blx	r7
 80036dc:	3001      	adds	r0, #1
 80036de:	f43f ae3e 	beq.w	800335e <_printf_float+0xb6>
 80036e2:	f108 0801 	add.w	r8, r8, #1
 80036e6:	68e3      	ldr	r3, [r4, #12]
 80036e8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80036ea:	1a5b      	subs	r3, r3, r1
 80036ec:	4543      	cmp	r3, r8
 80036ee:	dcf0      	bgt.n	80036d2 <_printf_float+0x42a>
 80036f0:	e6fe      	b.n	80034f0 <_printf_float+0x248>
 80036f2:	f04f 0800 	mov.w	r8, #0
 80036f6:	f104 0919 	add.w	r9, r4, #25
 80036fa:	e7f4      	b.n	80036e6 <_printf_float+0x43e>

080036fc <_printf_common>:
 80036fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003700:	4616      	mov	r6, r2
 8003702:	4699      	mov	r9, r3
 8003704:	688a      	ldr	r2, [r1, #8]
 8003706:	690b      	ldr	r3, [r1, #16]
 8003708:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800370c:	4293      	cmp	r3, r2
 800370e:	bfb8      	it	lt
 8003710:	4613      	movlt	r3, r2
 8003712:	6033      	str	r3, [r6, #0]
 8003714:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8003718:	4607      	mov	r7, r0
 800371a:	460c      	mov	r4, r1
 800371c:	b10a      	cbz	r2, 8003722 <_printf_common+0x26>
 800371e:	3301      	adds	r3, #1
 8003720:	6033      	str	r3, [r6, #0]
 8003722:	6823      	ldr	r3, [r4, #0]
 8003724:	0699      	lsls	r1, r3, #26
 8003726:	bf42      	ittt	mi
 8003728:	6833      	ldrmi	r3, [r6, #0]
 800372a:	3302      	addmi	r3, #2
 800372c:	6033      	strmi	r3, [r6, #0]
 800372e:	6825      	ldr	r5, [r4, #0]
 8003730:	f015 0506 	ands.w	r5, r5, #6
 8003734:	d106      	bne.n	8003744 <_printf_common+0x48>
 8003736:	f104 0a19 	add.w	sl, r4, #25
 800373a:	68e3      	ldr	r3, [r4, #12]
 800373c:	6832      	ldr	r2, [r6, #0]
 800373e:	1a9b      	subs	r3, r3, r2
 8003740:	42ab      	cmp	r3, r5
 8003742:	dc26      	bgt.n	8003792 <_printf_common+0x96>
 8003744:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8003748:	1e13      	subs	r3, r2, #0
 800374a:	6822      	ldr	r2, [r4, #0]
 800374c:	bf18      	it	ne
 800374e:	2301      	movne	r3, #1
 8003750:	0692      	lsls	r2, r2, #26
 8003752:	d42b      	bmi.n	80037ac <_printf_common+0xb0>
 8003754:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8003758:	4649      	mov	r1, r9
 800375a:	4638      	mov	r0, r7
 800375c:	47c0      	blx	r8
 800375e:	3001      	adds	r0, #1
 8003760:	d01e      	beq.n	80037a0 <_printf_common+0xa4>
 8003762:	6823      	ldr	r3, [r4, #0]
 8003764:	68e5      	ldr	r5, [r4, #12]
 8003766:	6832      	ldr	r2, [r6, #0]
 8003768:	f003 0306 	and.w	r3, r3, #6
 800376c:	2b04      	cmp	r3, #4
 800376e:	bf08      	it	eq
 8003770:	1aad      	subeq	r5, r5, r2
 8003772:	68a3      	ldr	r3, [r4, #8]
 8003774:	6922      	ldr	r2, [r4, #16]
 8003776:	bf0c      	ite	eq
 8003778:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800377c:	2500      	movne	r5, #0
 800377e:	4293      	cmp	r3, r2
 8003780:	bfc4      	itt	gt
 8003782:	1a9b      	subgt	r3, r3, r2
 8003784:	18ed      	addgt	r5, r5, r3
 8003786:	2600      	movs	r6, #0
 8003788:	341a      	adds	r4, #26
 800378a:	42b5      	cmp	r5, r6
 800378c:	d11a      	bne.n	80037c4 <_printf_common+0xc8>
 800378e:	2000      	movs	r0, #0
 8003790:	e008      	b.n	80037a4 <_printf_common+0xa8>
 8003792:	2301      	movs	r3, #1
 8003794:	4652      	mov	r2, sl
 8003796:	4649      	mov	r1, r9
 8003798:	4638      	mov	r0, r7
 800379a:	47c0      	blx	r8
 800379c:	3001      	adds	r0, #1
 800379e:	d103      	bne.n	80037a8 <_printf_common+0xac>
 80037a0:	f04f 30ff 	mov.w	r0, #4294967295
 80037a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80037a8:	3501      	adds	r5, #1
 80037aa:	e7c6      	b.n	800373a <_printf_common+0x3e>
 80037ac:	18e1      	adds	r1, r4, r3
 80037ae:	1c5a      	adds	r2, r3, #1
 80037b0:	2030      	movs	r0, #48	; 0x30
 80037b2:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80037b6:	4422      	add	r2, r4
 80037b8:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80037bc:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80037c0:	3302      	adds	r3, #2
 80037c2:	e7c7      	b.n	8003754 <_printf_common+0x58>
 80037c4:	2301      	movs	r3, #1
 80037c6:	4622      	mov	r2, r4
 80037c8:	4649      	mov	r1, r9
 80037ca:	4638      	mov	r0, r7
 80037cc:	47c0      	blx	r8
 80037ce:	3001      	adds	r0, #1
 80037d0:	d0e6      	beq.n	80037a0 <_printf_common+0xa4>
 80037d2:	3601      	adds	r6, #1
 80037d4:	e7d9      	b.n	800378a <_printf_common+0x8e>
	...

080037d8 <_printf_i>:
 80037d8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80037dc:	460c      	mov	r4, r1
 80037de:	4691      	mov	r9, r2
 80037e0:	7e27      	ldrb	r7, [r4, #24]
 80037e2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80037e4:	2f78      	cmp	r7, #120	; 0x78
 80037e6:	4680      	mov	r8, r0
 80037e8:	469a      	mov	sl, r3
 80037ea:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80037ee:	d807      	bhi.n	8003800 <_printf_i+0x28>
 80037f0:	2f62      	cmp	r7, #98	; 0x62
 80037f2:	d80a      	bhi.n	800380a <_printf_i+0x32>
 80037f4:	2f00      	cmp	r7, #0
 80037f6:	f000 80d8 	beq.w	80039aa <_printf_i+0x1d2>
 80037fa:	2f58      	cmp	r7, #88	; 0x58
 80037fc:	f000 80a3 	beq.w	8003946 <_printf_i+0x16e>
 8003800:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8003804:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8003808:	e03a      	b.n	8003880 <_printf_i+0xa8>
 800380a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800380e:	2b15      	cmp	r3, #21
 8003810:	d8f6      	bhi.n	8003800 <_printf_i+0x28>
 8003812:	a001      	add	r0, pc, #4	; (adr r0, 8003818 <_printf_i+0x40>)
 8003814:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8003818:	08003871 	.word	0x08003871
 800381c:	08003885 	.word	0x08003885
 8003820:	08003801 	.word	0x08003801
 8003824:	08003801 	.word	0x08003801
 8003828:	08003801 	.word	0x08003801
 800382c:	08003801 	.word	0x08003801
 8003830:	08003885 	.word	0x08003885
 8003834:	08003801 	.word	0x08003801
 8003838:	08003801 	.word	0x08003801
 800383c:	08003801 	.word	0x08003801
 8003840:	08003801 	.word	0x08003801
 8003844:	08003991 	.word	0x08003991
 8003848:	080038b5 	.word	0x080038b5
 800384c:	08003973 	.word	0x08003973
 8003850:	08003801 	.word	0x08003801
 8003854:	08003801 	.word	0x08003801
 8003858:	080039b3 	.word	0x080039b3
 800385c:	08003801 	.word	0x08003801
 8003860:	080038b5 	.word	0x080038b5
 8003864:	08003801 	.word	0x08003801
 8003868:	08003801 	.word	0x08003801
 800386c:	0800397b 	.word	0x0800397b
 8003870:	680b      	ldr	r3, [r1, #0]
 8003872:	1d1a      	adds	r2, r3, #4
 8003874:	681b      	ldr	r3, [r3, #0]
 8003876:	600a      	str	r2, [r1, #0]
 8003878:	f104 0642 	add.w	r6, r4, #66	; 0x42
 800387c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8003880:	2301      	movs	r3, #1
 8003882:	e0a3      	b.n	80039cc <_printf_i+0x1f4>
 8003884:	6825      	ldr	r5, [r4, #0]
 8003886:	6808      	ldr	r0, [r1, #0]
 8003888:	062e      	lsls	r6, r5, #24
 800388a:	f100 0304 	add.w	r3, r0, #4
 800388e:	d50a      	bpl.n	80038a6 <_printf_i+0xce>
 8003890:	6805      	ldr	r5, [r0, #0]
 8003892:	600b      	str	r3, [r1, #0]
 8003894:	2d00      	cmp	r5, #0
 8003896:	da03      	bge.n	80038a0 <_printf_i+0xc8>
 8003898:	232d      	movs	r3, #45	; 0x2d
 800389a:	426d      	negs	r5, r5
 800389c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80038a0:	485e      	ldr	r0, [pc, #376]	; (8003a1c <_printf_i+0x244>)
 80038a2:	230a      	movs	r3, #10
 80038a4:	e019      	b.n	80038da <_printf_i+0x102>
 80038a6:	f015 0f40 	tst.w	r5, #64	; 0x40
 80038aa:	6805      	ldr	r5, [r0, #0]
 80038ac:	600b      	str	r3, [r1, #0]
 80038ae:	bf18      	it	ne
 80038b0:	b22d      	sxthne	r5, r5
 80038b2:	e7ef      	b.n	8003894 <_printf_i+0xbc>
 80038b4:	680b      	ldr	r3, [r1, #0]
 80038b6:	6825      	ldr	r5, [r4, #0]
 80038b8:	1d18      	adds	r0, r3, #4
 80038ba:	6008      	str	r0, [r1, #0]
 80038bc:	0628      	lsls	r0, r5, #24
 80038be:	d501      	bpl.n	80038c4 <_printf_i+0xec>
 80038c0:	681d      	ldr	r5, [r3, #0]
 80038c2:	e002      	b.n	80038ca <_printf_i+0xf2>
 80038c4:	0669      	lsls	r1, r5, #25
 80038c6:	d5fb      	bpl.n	80038c0 <_printf_i+0xe8>
 80038c8:	881d      	ldrh	r5, [r3, #0]
 80038ca:	4854      	ldr	r0, [pc, #336]	; (8003a1c <_printf_i+0x244>)
 80038cc:	2f6f      	cmp	r7, #111	; 0x6f
 80038ce:	bf0c      	ite	eq
 80038d0:	2308      	moveq	r3, #8
 80038d2:	230a      	movne	r3, #10
 80038d4:	2100      	movs	r1, #0
 80038d6:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80038da:	6866      	ldr	r6, [r4, #4]
 80038dc:	60a6      	str	r6, [r4, #8]
 80038de:	2e00      	cmp	r6, #0
 80038e0:	bfa2      	ittt	ge
 80038e2:	6821      	ldrge	r1, [r4, #0]
 80038e4:	f021 0104 	bicge.w	r1, r1, #4
 80038e8:	6021      	strge	r1, [r4, #0]
 80038ea:	b90d      	cbnz	r5, 80038f0 <_printf_i+0x118>
 80038ec:	2e00      	cmp	r6, #0
 80038ee:	d04d      	beq.n	800398c <_printf_i+0x1b4>
 80038f0:	4616      	mov	r6, r2
 80038f2:	fbb5 f1f3 	udiv	r1, r5, r3
 80038f6:	fb03 5711 	mls	r7, r3, r1, r5
 80038fa:	5dc7      	ldrb	r7, [r0, r7]
 80038fc:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8003900:	462f      	mov	r7, r5
 8003902:	42bb      	cmp	r3, r7
 8003904:	460d      	mov	r5, r1
 8003906:	d9f4      	bls.n	80038f2 <_printf_i+0x11a>
 8003908:	2b08      	cmp	r3, #8
 800390a:	d10b      	bne.n	8003924 <_printf_i+0x14c>
 800390c:	6823      	ldr	r3, [r4, #0]
 800390e:	07df      	lsls	r7, r3, #31
 8003910:	d508      	bpl.n	8003924 <_printf_i+0x14c>
 8003912:	6923      	ldr	r3, [r4, #16]
 8003914:	6861      	ldr	r1, [r4, #4]
 8003916:	4299      	cmp	r1, r3
 8003918:	bfde      	ittt	le
 800391a:	2330      	movle	r3, #48	; 0x30
 800391c:	f806 3c01 	strble.w	r3, [r6, #-1]
 8003920:	f106 36ff 	addle.w	r6, r6, #4294967295
 8003924:	1b92      	subs	r2, r2, r6
 8003926:	6122      	str	r2, [r4, #16]
 8003928:	f8cd a000 	str.w	sl, [sp]
 800392c:	464b      	mov	r3, r9
 800392e:	aa03      	add	r2, sp, #12
 8003930:	4621      	mov	r1, r4
 8003932:	4640      	mov	r0, r8
 8003934:	f7ff fee2 	bl	80036fc <_printf_common>
 8003938:	3001      	adds	r0, #1
 800393a:	d14c      	bne.n	80039d6 <_printf_i+0x1fe>
 800393c:	f04f 30ff 	mov.w	r0, #4294967295
 8003940:	b004      	add	sp, #16
 8003942:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003946:	4835      	ldr	r0, [pc, #212]	; (8003a1c <_printf_i+0x244>)
 8003948:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 800394c:	6823      	ldr	r3, [r4, #0]
 800394e:	680e      	ldr	r6, [r1, #0]
 8003950:	061f      	lsls	r7, r3, #24
 8003952:	f856 5b04 	ldr.w	r5, [r6], #4
 8003956:	600e      	str	r6, [r1, #0]
 8003958:	d514      	bpl.n	8003984 <_printf_i+0x1ac>
 800395a:	07d9      	lsls	r1, r3, #31
 800395c:	bf44      	itt	mi
 800395e:	f043 0320 	orrmi.w	r3, r3, #32
 8003962:	6023      	strmi	r3, [r4, #0]
 8003964:	b91d      	cbnz	r5, 800396e <_printf_i+0x196>
 8003966:	6823      	ldr	r3, [r4, #0]
 8003968:	f023 0320 	bic.w	r3, r3, #32
 800396c:	6023      	str	r3, [r4, #0]
 800396e:	2310      	movs	r3, #16
 8003970:	e7b0      	b.n	80038d4 <_printf_i+0xfc>
 8003972:	6823      	ldr	r3, [r4, #0]
 8003974:	f043 0320 	orr.w	r3, r3, #32
 8003978:	6023      	str	r3, [r4, #0]
 800397a:	2378      	movs	r3, #120	; 0x78
 800397c:	4828      	ldr	r0, [pc, #160]	; (8003a20 <_printf_i+0x248>)
 800397e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8003982:	e7e3      	b.n	800394c <_printf_i+0x174>
 8003984:	065e      	lsls	r6, r3, #25
 8003986:	bf48      	it	mi
 8003988:	b2ad      	uxthmi	r5, r5
 800398a:	e7e6      	b.n	800395a <_printf_i+0x182>
 800398c:	4616      	mov	r6, r2
 800398e:	e7bb      	b.n	8003908 <_printf_i+0x130>
 8003990:	680b      	ldr	r3, [r1, #0]
 8003992:	6826      	ldr	r6, [r4, #0]
 8003994:	6960      	ldr	r0, [r4, #20]
 8003996:	1d1d      	adds	r5, r3, #4
 8003998:	600d      	str	r5, [r1, #0]
 800399a:	0635      	lsls	r5, r6, #24
 800399c:	681b      	ldr	r3, [r3, #0]
 800399e:	d501      	bpl.n	80039a4 <_printf_i+0x1cc>
 80039a0:	6018      	str	r0, [r3, #0]
 80039a2:	e002      	b.n	80039aa <_printf_i+0x1d2>
 80039a4:	0671      	lsls	r1, r6, #25
 80039a6:	d5fb      	bpl.n	80039a0 <_printf_i+0x1c8>
 80039a8:	8018      	strh	r0, [r3, #0]
 80039aa:	2300      	movs	r3, #0
 80039ac:	6123      	str	r3, [r4, #16]
 80039ae:	4616      	mov	r6, r2
 80039b0:	e7ba      	b.n	8003928 <_printf_i+0x150>
 80039b2:	680b      	ldr	r3, [r1, #0]
 80039b4:	1d1a      	adds	r2, r3, #4
 80039b6:	600a      	str	r2, [r1, #0]
 80039b8:	681e      	ldr	r6, [r3, #0]
 80039ba:	6862      	ldr	r2, [r4, #4]
 80039bc:	2100      	movs	r1, #0
 80039be:	4630      	mov	r0, r6
 80039c0:	f7fc fc26 	bl	8000210 <memchr>
 80039c4:	b108      	cbz	r0, 80039ca <_printf_i+0x1f2>
 80039c6:	1b80      	subs	r0, r0, r6
 80039c8:	6060      	str	r0, [r4, #4]
 80039ca:	6863      	ldr	r3, [r4, #4]
 80039cc:	6123      	str	r3, [r4, #16]
 80039ce:	2300      	movs	r3, #0
 80039d0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80039d4:	e7a8      	b.n	8003928 <_printf_i+0x150>
 80039d6:	6923      	ldr	r3, [r4, #16]
 80039d8:	4632      	mov	r2, r6
 80039da:	4649      	mov	r1, r9
 80039dc:	4640      	mov	r0, r8
 80039de:	47d0      	blx	sl
 80039e0:	3001      	adds	r0, #1
 80039e2:	d0ab      	beq.n	800393c <_printf_i+0x164>
 80039e4:	6823      	ldr	r3, [r4, #0]
 80039e6:	079b      	lsls	r3, r3, #30
 80039e8:	d413      	bmi.n	8003a12 <_printf_i+0x23a>
 80039ea:	68e0      	ldr	r0, [r4, #12]
 80039ec:	9b03      	ldr	r3, [sp, #12]
 80039ee:	4298      	cmp	r0, r3
 80039f0:	bfb8      	it	lt
 80039f2:	4618      	movlt	r0, r3
 80039f4:	e7a4      	b.n	8003940 <_printf_i+0x168>
 80039f6:	2301      	movs	r3, #1
 80039f8:	4632      	mov	r2, r6
 80039fa:	4649      	mov	r1, r9
 80039fc:	4640      	mov	r0, r8
 80039fe:	47d0      	blx	sl
 8003a00:	3001      	adds	r0, #1
 8003a02:	d09b      	beq.n	800393c <_printf_i+0x164>
 8003a04:	3501      	adds	r5, #1
 8003a06:	68e3      	ldr	r3, [r4, #12]
 8003a08:	9903      	ldr	r1, [sp, #12]
 8003a0a:	1a5b      	subs	r3, r3, r1
 8003a0c:	42ab      	cmp	r3, r5
 8003a0e:	dcf2      	bgt.n	80039f6 <_printf_i+0x21e>
 8003a10:	e7eb      	b.n	80039ea <_printf_i+0x212>
 8003a12:	2500      	movs	r5, #0
 8003a14:	f104 0619 	add.w	r6, r4, #25
 8003a18:	e7f5      	b.n	8003a06 <_printf_i+0x22e>
 8003a1a:	bf00      	nop
 8003a1c:	08009fb8 	.word	0x08009fb8
 8003a20:	08009fc9 	.word	0x08009fc9

08003a24 <_scanf_float>:
 8003a24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003a28:	b087      	sub	sp, #28
 8003a2a:	4617      	mov	r7, r2
 8003a2c:	9303      	str	r3, [sp, #12]
 8003a2e:	688b      	ldr	r3, [r1, #8]
 8003a30:	1e5a      	subs	r2, r3, #1
 8003a32:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 8003a36:	bf83      	ittte	hi
 8003a38:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 8003a3c:	195b      	addhi	r3, r3, r5
 8003a3e:	9302      	strhi	r3, [sp, #8]
 8003a40:	2300      	movls	r3, #0
 8003a42:	bf86      	itte	hi
 8003a44:	f240 135d 	movwhi	r3, #349	; 0x15d
 8003a48:	608b      	strhi	r3, [r1, #8]
 8003a4a:	9302      	strls	r3, [sp, #8]
 8003a4c:	680b      	ldr	r3, [r1, #0]
 8003a4e:	468b      	mov	fp, r1
 8003a50:	2500      	movs	r5, #0
 8003a52:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 8003a56:	f84b 3b1c 	str.w	r3, [fp], #28
 8003a5a:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8003a5e:	4680      	mov	r8, r0
 8003a60:	460c      	mov	r4, r1
 8003a62:	465e      	mov	r6, fp
 8003a64:	46aa      	mov	sl, r5
 8003a66:	46a9      	mov	r9, r5
 8003a68:	9501      	str	r5, [sp, #4]
 8003a6a:	68a2      	ldr	r2, [r4, #8]
 8003a6c:	b152      	cbz	r2, 8003a84 <_scanf_float+0x60>
 8003a6e:	683b      	ldr	r3, [r7, #0]
 8003a70:	781b      	ldrb	r3, [r3, #0]
 8003a72:	2b4e      	cmp	r3, #78	; 0x4e
 8003a74:	d864      	bhi.n	8003b40 <_scanf_float+0x11c>
 8003a76:	2b40      	cmp	r3, #64	; 0x40
 8003a78:	d83c      	bhi.n	8003af4 <_scanf_float+0xd0>
 8003a7a:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 8003a7e:	b2c8      	uxtb	r0, r1
 8003a80:	280e      	cmp	r0, #14
 8003a82:	d93a      	bls.n	8003afa <_scanf_float+0xd6>
 8003a84:	f1b9 0f00 	cmp.w	r9, #0
 8003a88:	d003      	beq.n	8003a92 <_scanf_float+0x6e>
 8003a8a:	6823      	ldr	r3, [r4, #0]
 8003a8c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8003a90:	6023      	str	r3, [r4, #0]
 8003a92:	f10a 3aff 	add.w	sl, sl, #4294967295
 8003a96:	f1ba 0f01 	cmp.w	sl, #1
 8003a9a:	f200 8113 	bhi.w	8003cc4 <_scanf_float+0x2a0>
 8003a9e:	455e      	cmp	r6, fp
 8003aa0:	f200 8105 	bhi.w	8003cae <_scanf_float+0x28a>
 8003aa4:	2501      	movs	r5, #1
 8003aa6:	4628      	mov	r0, r5
 8003aa8:	b007      	add	sp, #28
 8003aaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003aae:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 8003ab2:	2a0d      	cmp	r2, #13
 8003ab4:	d8e6      	bhi.n	8003a84 <_scanf_float+0x60>
 8003ab6:	a101      	add	r1, pc, #4	; (adr r1, 8003abc <_scanf_float+0x98>)
 8003ab8:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8003abc:	08003bfb 	.word	0x08003bfb
 8003ac0:	08003a85 	.word	0x08003a85
 8003ac4:	08003a85 	.word	0x08003a85
 8003ac8:	08003a85 	.word	0x08003a85
 8003acc:	08003c5b 	.word	0x08003c5b
 8003ad0:	08003c33 	.word	0x08003c33
 8003ad4:	08003a85 	.word	0x08003a85
 8003ad8:	08003a85 	.word	0x08003a85
 8003adc:	08003c09 	.word	0x08003c09
 8003ae0:	08003a85 	.word	0x08003a85
 8003ae4:	08003a85 	.word	0x08003a85
 8003ae8:	08003a85 	.word	0x08003a85
 8003aec:	08003a85 	.word	0x08003a85
 8003af0:	08003bc1 	.word	0x08003bc1
 8003af4:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003af8:	e7db      	b.n	8003ab2 <_scanf_float+0x8e>
 8003afa:	290e      	cmp	r1, #14
 8003afc:	d8c2      	bhi.n	8003a84 <_scanf_float+0x60>
 8003afe:	a001      	add	r0, pc, #4	; (adr r0, 8003b04 <_scanf_float+0xe0>)
 8003b00:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8003b04:	08003bb3 	.word	0x08003bb3
 8003b08:	08003a85 	.word	0x08003a85
 8003b0c:	08003bb3 	.word	0x08003bb3
 8003b10:	08003c47 	.word	0x08003c47
 8003b14:	08003a85 	.word	0x08003a85
 8003b18:	08003b61 	.word	0x08003b61
 8003b1c:	08003b9d 	.word	0x08003b9d
 8003b20:	08003b9d 	.word	0x08003b9d
 8003b24:	08003b9d 	.word	0x08003b9d
 8003b28:	08003b9d 	.word	0x08003b9d
 8003b2c:	08003b9d 	.word	0x08003b9d
 8003b30:	08003b9d 	.word	0x08003b9d
 8003b34:	08003b9d 	.word	0x08003b9d
 8003b38:	08003b9d 	.word	0x08003b9d
 8003b3c:	08003b9d 	.word	0x08003b9d
 8003b40:	2b6e      	cmp	r3, #110	; 0x6e
 8003b42:	d809      	bhi.n	8003b58 <_scanf_float+0x134>
 8003b44:	2b60      	cmp	r3, #96	; 0x60
 8003b46:	d8b2      	bhi.n	8003aae <_scanf_float+0x8a>
 8003b48:	2b54      	cmp	r3, #84	; 0x54
 8003b4a:	d077      	beq.n	8003c3c <_scanf_float+0x218>
 8003b4c:	2b59      	cmp	r3, #89	; 0x59
 8003b4e:	d199      	bne.n	8003a84 <_scanf_float+0x60>
 8003b50:	2d07      	cmp	r5, #7
 8003b52:	d197      	bne.n	8003a84 <_scanf_float+0x60>
 8003b54:	2508      	movs	r5, #8
 8003b56:	e029      	b.n	8003bac <_scanf_float+0x188>
 8003b58:	2b74      	cmp	r3, #116	; 0x74
 8003b5a:	d06f      	beq.n	8003c3c <_scanf_float+0x218>
 8003b5c:	2b79      	cmp	r3, #121	; 0x79
 8003b5e:	e7f6      	b.n	8003b4e <_scanf_float+0x12a>
 8003b60:	6821      	ldr	r1, [r4, #0]
 8003b62:	05c8      	lsls	r0, r1, #23
 8003b64:	d51a      	bpl.n	8003b9c <_scanf_float+0x178>
 8003b66:	9b02      	ldr	r3, [sp, #8]
 8003b68:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8003b6c:	6021      	str	r1, [r4, #0]
 8003b6e:	f109 0901 	add.w	r9, r9, #1
 8003b72:	b11b      	cbz	r3, 8003b7c <_scanf_float+0x158>
 8003b74:	3b01      	subs	r3, #1
 8003b76:	3201      	adds	r2, #1
 8003b78:	9302      	str	r3, [sp, #8]
 8003b7a:	60a2      	str	r2, [r4, #8]
 8003b7c:	68a3      	ldr	r3, [r4, #8]
 8003b7e:	3b01      	subs	r3, #1
 8003b80:	60a3      	str	r3, [r4, #8]
 8003b82:	6923      	ldr	r3, [r4, #16]
 8003b84:	3301      	adds	r3, #1
 8003b86:	6123      	str	r3, [r4, #16]
 8003b88:	687b      	ldr	r3, [r7, #4]
 8003b8a:	3b01      	subs	r3, #1
 8003b8c:	2b00      	cmp	r3, #0
 8003b8e:	607b      	str	r3, [r7, #4]
 8003b90:	f340 8084 	ble.w	8003c9c <_scanf_float+0x278>
 8003b94:	683b      	ldr	r3, [r7, #0]
 8003b96:	3301      	adds	r3, #1
 8003b98:	603b      	str	r3, [r7, #0]
 8003b9a:	e766      	b.n	8003a6a <_scanf_float+0x46>
 8003b9c:	eb1a 0f05 	cmn.w	sl, r5
 8003ba0:	f47f af70 	bne.w	8003a84 <_scanf_float+0x60>
 8003ba4:	6822      	ldr	r2, [r4, #0]
 8003ba6:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 8003baa:	6022      	str	r2, [r4, #0]
 8003bac:	f806 3b01 	strb.w	r3, [r6], #1
 8003bb0:	e7e4      	b.n	8003b7c <_scanf_float+0x158>
 8003bb2:	6822      	ldr	r2, [r4, #0]
 8003bb4:	0610      	lsls	r0, r2, #24
 8003bb6:	f57f af65 	bpl.w	8003a84 <_scanf_float+0x60>
 8003bba:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003bbe:	e7f4      	b.n	8003baa <_scanf_float+0x186>
 8003bc0:	f1ba 0f00 	cmp.w	sl, #0
 8003bc4:	d10e      	bne.n	8003be4 <_scanf_float+0x1c0>
 8003bc6:	f1b9 0f00 	cmp.w	r9, #0
 8003bca:	d10e      	bne.n	8003bea <_scanf_float+0x1c6>
 8003bcc:	6822      	ldr	r2, [r4, #0]
 8003bce:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8003bd2:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8003bd6:	d108      	bne.n	8003bea <_scanf_float+0x1c6>
 8003bd8:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8003bdc:	6022      	str	r2, [r4, #0]
 8003bde:	f04f 0a01 	mov.w	sl, #1
 8003be2:	e7e3      	b.n	8003bac <_scanf_float+0x188>
 8003be4:	f1ba 0f02 	cmp.w	sl, #2
 8003be8:	d055      	beq.n	8003c96 <_scanf_float+0x272>
 8003bea:	2d01      	cmp	r5, #1
 8003bec:	d002      	beq.n	8003bf4 <_scanf_float+0x1d0>
 8003bee:	2d04      	cmp	r5, #4
 8003bf0:	f47f af48 	bne.w	8003a84 <_scanf_float+0x60>
 8003bf4:	3501      	adds	r5, #1
 8003bf6:	b2ed      	uxtb	r5, r5
 8003bf8:	e7d8      	b.n	8003bac <_scanf_float+0x188>
 8003bfa:	f1ba 0f01 	cmp.w	sl, #1
 8003bfe:	f47f af41 	bne.w	8003a84 <_scanf_float+0x60>
 8003c02:	f04f 0a02 	mov.w	sl, #2
 8003c06:	e7d1      	b.n	8003bac <_scanf_float+0x188>
 8003c08:	b97d      	cbnz	r5, 8003c2a <_scanf_float+0x206>
 8003c0a:	f1b9 0f00 	cmp.w	r9, #0
 8003c0e:	f47f af3c 	bne.w	8003a8a <_scanf_float+0x66>
 8003c12:	6822      	ldr	r2, [r4, #0]
 8003c14:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8003c18:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8003c1c:	f47f af39 	bne.w	8003a92 <_scanf_float+0x6e>
 8003c20:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8003c24:	6022      	str	r2, [r4, #0]
 8003c26:	2501      	movs	r5, #1
 8003c28:	e7c0      	b.n	8003bac <_scanf_float+0x188>
 8003c2a:	2d03      	cmp	r5, #3
 8003c2c:	d0e2      	beq.n	8003bf4 <_scanf_float+0x1d0>
 8003c2e:	2d05      	cmp	r5, #5
 8003c30:	e7de      	b.n	8003bf0 <_scanf_float+0x1cc>
 8003c32:	2d02      	cmp	r5, #2
 8003c34:	f47f af26 	bne.w	8003a84 <_scanf_float+0x60>
 8003c38:	2503      	movs	r5, #3
 8003c3a:	e7b7      	b.n	8003bac <_scanf_float+0x188>
 8003c3c:	2d06      	cmp	r5, #6
 8003c3e:	f47f af21 	bne.w	8003a84 <_scanf_float+0x60>
 8003c42:	2507      	movs	r5, #7
 8003c44:	e7b2      	b.n	8003bac <_scanf_float+0x188>
 8003c46:	6822      	ldr	r2, [r4, #0]
 8003c48:	0591      	lsls	r1, r2, #22
 8003c4a:	f57f af1b 	bpl.w	8003a84 <_scanf_float+0x60>
 8003c4e:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 8003c52:	6022      	str	r2, [r4, #0]
 8003c54:	f8cd 9004 	str.w	r9, [sp, #4]
 8003c58:	e7a8      	b.n	8003bac <_scanf_float+0x188>
 8003c5a:	6822      	ldr	r2, [r4, #0]
 8003c5c:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 8003c60:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 8003c64:	d006      	beq.n	8003c74 <_scanf_float+0x250>
 8003c66:	0550      	lsls	r0, r2, #21
 8003c68:	f57f af0c 	bpl.w	8003a84 <_scanf_float+0x60>
 8003c6c:	f1b9 0f00 	cmp.w	r9, #0
 8003c70:	f43f af0f 	beq.w	8003a92 <_scanf_float+0x6e>
 8003c74:	0591      	lsls	r1, r2, #22
 8003c76:	bf58      	it	pl
 8003c78:	9901      	ldrpl	r1, [sp, #4]
 8003c7a:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8003c7e:	bf58      	it	pl
 8003c80:	eba9 0101 	subpl.w	r1, r9, r1
 8003c84:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 8003c88:	bf58      	it	pl
 8003c8a:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 8003c8e:	6022      	str	r2, [r4, #0]
 8003c90:	f04f 0900 	mov.w	r9, #0
 8003c94:	e78a      	b.n	8003bac <_scanf_float+0x188>
 8003c96:	f04f 0a03 	mov.w	sl, #3
 8003c9a:	e787      	b.n	8003bac <_scanf_float+0x188>
 8003c9c:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8003ca0:	4639      	mov	r1, r7
 8003ca2:	4640      	mov	r0, r8
 8003ca4:	4798      	blx	r3
 8003ca6:	2800      	cmp	r0, #0
 8003ca8:	f43f aedf 	beq.w	8003a6a <_scanf_float+0x46>
 8003cac:	e6ea      	b.n	8003a84 <_scanf_float+0x60>
 8003cae:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003cb2:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8003cb6:	463a      	mov	r2, r7
 8003cb8:	4640      	mov	r0, r8
 8003cba:	4798      	blx	r3
 8003cbc:	6923      	ldr	r3, [r4, #16]
 8003cbe:	3b01      	subs	r3, #1
 8003cc0:	6123      	str	r3, [r4, #16]
 8003cc2:	e6ec      	b.n	8003a9e <_scanf_float+0x7a>
 8003cc4:	1e6b      	subs	r3, r5, #1
 8003cc6:	2b06      	cmp	r3, #6
 8003cc8:	d825      	bhi.n	8003d16 <_scanf_float+0x2f2>
 8003cca:	2d02      	cmp	r5, #2
 8003ccc:	d836      	bhi.n	8003d3c <_scanf_float+0x318>
 8003cce:	455e      	cmp	r6, fp
 8003cd0:	f67f aee8 	bls.w	8003aa4 <_scanf_float+0x80>
 8003cd4:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003cd8:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8003cdc:	463a      	mov	r2, r7
 8003cde:	4640      	mov	r0, r8
 8003ce0:	4798      	blx	r3
 8003ce2:	6923      	ldr	r3, [r4, #16]
 8003ce4:	3b01      	subs	r3, #1
 8003ce6:	6123      	str	r3, [r4, #16]
 8003ce8:	e7f1      	b.n	8003cce <_scanf_float+0x2aa>
 8003cea:	9802      	ldr	r0, [sp, #8]
 8003cec:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003cf0:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 8003cf4:	9002      	str	r0, [sp, #8]
 8003cf6:	463a      	mov	r2, r7
 8003cf8:	4640      	mov	r0, r8
 8003cfa:	4798      	blx	r3
 8003cfc:	6923      	ldr	r3, [r4, #16]
 8003cfe:	3b01      	subs	r3, #1
 8003d00:	6123      	str	r3, [r4, #16]
 8003d02:	f10a 3aff 	add.w	sl, sl, #4294967295
 8003d06:	fa5f fa8a 	uxtb.w	sl, sl
 8003d0a:	f1ba 0f02 	cmp.w	sl, #2
 8003d0e:	d1ec      	bne.n	8003cea <_scanf_float+0x2c6>
 8003d10:	3d03      	subs	r5, #3
 8003d12:	b2ed      	uxtb	r5, r5
 8003d14:	1b76      	subs	r6, r6, r5
 8003d16:	6823      	ldr	r3, [r4, #0]
 8003d18:	05da      	lsls	r2, r3, #23
 8003d1a:	d52f      	bpl.n	8003d7c <_scanf_float+0x358>
 8003d1c:	055b      	lsls	r3, r3, #21
 8003d1e:	d510      	bpl.n	8003d42 <_scanf_float+0x31e>
 8003d20:	455e      	cmp	r6, fp
 8003d22:	f67f aebf 	bls.w	8003aa4 <_scanf_float+0x80>
 8003d26:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003d2a:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8003d2e:	463a      	mov	r2, r7
 8003d30:	4640      	mov	r0, r8
 8003d32:	4798      	blx	r3
 8003d34:	6923      	ldr	r3, [r4, #16]
 8003d36:	3b01      	subs	r3, #1
 8003d38:	6123      	str	r3, [r4, #16]
 8003d3a:	e7f1      	b.n	8003d20 <_scanf_float+0x2fc>
 8003d3c:	46aa      	mov	sl, r5
 8003d3e:	9602      	str	r6, [sp, #8]
 8003d40:	e7df      	b.n	8003d02 <_scanf_float+0x2de>
 8003d42:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 8003d46:	6923      	ldr	r3, [r4, #16]
 8003d48:	2965      	cmp	r1, #101	; 0x65
 8003d4a:	f103 33ff 	add.w	r3, r3, #4294967295
 8003d4e:	f106 35ff 	add.w	r5, r6, #4294967295
 8003d52:	6123      	str	r3, [r4, #16]
 8003d54:	d00c      	beq.n	8003d70 <_scanf_float+0x34c>
 8003d56:	2945      	cmp	r1, #69	; 0x45
 8003d58:	d00a      	beq.n	8003d70 <_scanf_float+0x34c>
 8003d5a:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003d5e:	463a      	mov	r2, r7
 8003d60:	4640      	mov	r0, r8
 8003d62:	4798      	blx	r3
 8003d64:	6923      	ldr	r3, [r4, #16]
 8003d66:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 8003d6a:	3b01      	subs	r3, #1
 8003d6c:	1eb5      	subs	r5, r6, #2
 8003d6e:	6123      	str	r3, [r4, #16]
 8003d70:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003d74:	463a      	mov	r2, r7
 8003d76:	4640      	mov	r0, r8
 8003d78:	4798      	blx	r3
 8003d7a:	462e      	mov	r6, r5
 8003d7c:	6825      	ldr	r5, [r4, #0]
 8003d7e:	f015 0510 	ands.w	r5, r5, #16
 8003d82:	d159      	bne.n	8003e38 <_scanf_float+0x414>
 8003d84:	7035      	strb	r5, [r6, #0]
 8003d86:	6823      	ldr	r3, [r4, #0]
 8003d88:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8003d8c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8003d90:	d11c      	bne.n	8003dcc <_scanf_float+0x3a8>
 8003d92:	9b01      	ldr	r3, [sp, #4]
 8003d94:	454b      	cmp	r3, r9
 8003d96:	eba3 0209 	sub.w	r2, r3, r9
 8003d9a:	d124      	bne.n	8003de6 <_scanf_float+0x3c2>
 8003d9c:	2200      	movs	r2, #0
 8003d9e:	4659      	mov	r1, fp
 8003da0:	4640      	mov	r0, r8
 8003da2:	f001 f90d 	bl	8004fc0 <_strtod_r>
 8003da6:	f8d4 c000 	ldr.w	ip, [r4]
 8003daa:	9b03      	ldr	r3, [sp, #12]
 8003dac:	f01c 0f02 	tst.w	ip, #2
 8003db0:	681b      	ldr	r3, [r3, #0]
 8003db2:	4606      	mov	r6, r0
 8003db4:	460f      	mov	r7, r1
 8003db6:	d021      	beq.n	8003dfc <_scanf_float+0x3d8>
 8003db8:	9903      	ldr	r1, [sp, #12]
 8003dba:	1d1a      	adds	r2, r3, #4
 8003dbc:	600a      	str	r2, [r1, #0]
 8003dbe:	681b      	ldr	r3, [r3, #0]
 8003dc0:	e9c3 6700 	strd	r6, r7, [r3]
 8003dc4:	68e3      	ldr	r3, [r4, #12]
 8003dc6:	3301      	adds	r3, #1
 8003dc8:	60e3      	str	r3, [r4, #12]
 8003dca:	e66c      	b.n	8003aa6 <_scanf_float+0x82>
 8003dcc:	9b04      	ldr	r3, [sp, #16]
 8003dce:	2b00      	cmp	r3, #0
 8003dd0:	d0e4      	beq.n	8003d9c <_scanf_float+0x378>
 8003dd2:	9905      	ldr	r1, [sp, #20]
 8003dd4:	230a      	movs	r3, #10
 8003dd6:	462a      	mov	r2, r5
 8003dd8:	3101      	adds	r1, #1
 8003dda:	4640      	mov	r0, r8
 8003ddc:	f001 f9d8 	bl	8005190 <_strtol_r>
 8003de0:	9b04      	ldr	r3, [sp, #16]
 8003de2:	9e05      	ldr	r6, [sp, #20]
 8003de4:	1ac2      	subs	r2, r0, r3
 8003de6:	f204 136f 	addw	r3, r4, #367	; 0x16f
 8003dea:	429e      	cmp	r6, r3
 8003dec:	bf28      	it	cs
 8003dee:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 8003df2:	4912      	ldr	r1, [pc, #72]	; (8003e3c <_scanf_float+0x418>)
 8003df4:	4630      	mov	r0, r6
 8003df6:	f000 fa21 	bl	800423c <siprintf>
 8003dfa:	e7cf      	b.n	8003d9c <_scanf_float+0x378>
 8003dfc:	f01c 0f04 	tst.w	ip, #4
 8003e00:	f103 0e04 	add.w	lr, r3, #4
 8003e04:	d003      	beq.n	8003e0e <_scanf_float+0x3ea>
 8003e06:	9903      	ldr	r1, [sp, #12]
 8003e08:	f8c1 e000 	str.w	lr, [r1]
 8003e0c:	e7d7      	b.n	8003dbe <_scanf_float+0x39a>
 8003e0e:	9a03      	ldr	r2, [sp, #12]
 8003e10:	f8c2 e000 	str.w	lr, [r2]
 8003e14:	f8d3 8000 	ldr.w	r8, [r3]
 8003e18:	4602      	mov	r2, r0
 8003e1a:	460b      	mov	r3, r1
 8003e1c:	f7fc feb0 	bl	8000b80 <__aeabi_dcmpun>
 8003e20:	b128      	cbz	r0, 8003e2e <_scanf_float+0x40a>
 8003e22:	4807      	ldr	r0, [pc, #28]	; (8003e40 <_scanf_float+0x41c>)
 8003e24:	f000 fa06 	bl	8004234 <nanf>
 8003e28:	f8c8 0000 	str.w	r0, [r8]
 8003e2c:	e7ca      	b.n	8003dc4 <_scanf_float+0x3a0>
 8003e2e:	4630      	mov	r0, r6
 8003e30:	4639      	mov	r1, r7
 8003e32:	f7fc ff03 	bl	8000c3c <__aeabi_d2f>
 8003e36:	e7f7      	b.n	8003e28 <_scanf_float+0x404>
 8003e38:	2500      	movs	r5, #0
 8003e3a:	e634      	b.n	8003aa6 <_scanf_float+0x82>
 8003e3c:	08009fda 	.word	0x08009fda
 8003e40:	0800a0e3 	.word	0x0800a0e3

08003e44 <iprintf>:
 8003e44:	b40f      	push	{r0, r1, r2, r3}
 8003e46:	4b0a      	ldr	r3, [pc, #40]	; (8003e70 <iprintf+0x2c>)
 8003e48:	b513      	push	{r0, r1, r4, lr}
 8003e4a:	681c      	ldr	r4, [r3, #0]
 8003e4c:	b124      	cbz	r4, 8003e58 <iprintf+0x14>
 8003e4e:	69a3      	ldr	r3, [r4, #24]
 8003e50:	b913      	cbnz	r3, 8003e58 <iprintf+0x14>
 8003e52:	4620      	mov	r0, r4
 8003e54:	f7fe ffda 	bl	8002e0c <__sinit>
 8003e58:	ab05      	add	r3, sp, #20
 8003e5a:	9a04      	ldr	r2, [sp, #16]
 8003e5c:	68a1      	ldr	r1, [r4, #8]
 8003e5e:	9301      	str	r3, [sp, #4]
 8003e60:	4620      	mov	r0, r4
 8003e62:	f003 fe0d 	bl	8007a80 <_vfiprintf_r>
 8003e66:	b002      	add	sp, #8
 8003e68:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003e6c:	b004      	add	sp, #16
 8003e6e:	4770      	bx	lr
 8003e70:	20000b10 	.word	0x20000b10

08003e74 <_puts_r>:
 8003e74:	b570      	push	{r4, r5, r6, lr}
 8003e76:	460e      	mov	r6, r1
 8003e78:	4605      	mov	r5, r0
 8003e7a:	b118      	cbz	r0, 8003e84 <_puts_r+0x10>
 8003e7c:	6983      	ldr	r3, [r0, #24]
 8003e7e:	b90b      	cbnz	r3, 8003e84 <_puts_r+0x10>
 8003e80:	f7fe ffc4 	bl	8002e0c <__sinit>
 8003e84:	69ab      	ldr	r3, [r5, #24]
 8003e86:	68ac      	ldr	r4, [r5, #8]
 8003e88:	b913      	cbnz	r3, 8003e90 <_puts_r+0x1c>
 8003e8a:	4628      	mov	r0, r5
 8003e8c:	f7fe ffbe 	bl	8002e0c <__sinit>
 8003e90:	4b2c      	ldr	r3, [pc, #176]	; (8003f44 <_puts_r+0xd0>)
 8003e92:	429c      	cmp	r4, r3
 8003e94:	d120      	bne.n	8003ed8 <_puts_r+0x64>
 8003e96:	686c      	ldr	r4, [r5, #4]
 8003e98:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8003e9a:	07db      	lsls	r3, r3, #31
 8003e9c:	d405      	bmi.n	8003eaa <_puts_r+0x36>
 8003e9e:	89a3      	ldrh	r3, [r4, #12]
 8003ea0:	0598      	lsls	r0, r3, #22
 8003ea2:	d402      	bmi.n	8003eaa <_puts_r+0x36>
 8003ea4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003ea6:	f7ff f890 	bl	8002fca <__retarget_lock_acquire_recursive>
 8003eaa:	89a3      	ldrh	r3, [r4, #12]
 8003eac:	0719      	lsls	r1, r3, #28
 8003eae:	d51d      	bpl.n	8003eec <_puts_r+0x78>
 8003eb0:	6923      	ldr	r3, [r4, #16]
 8003eb2:	b1db      	cbz	r3, 8003eec <_puts_r+0x78>
 8003eb4:	3e01      	subs	r6, #1
 8003eb6:	68a3      	ldr	r3, [r4, #8]
 8003eb8:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8003ebc:	3b01      	subs	r3, #1
 8003ebe:	60a3      	str	r3, [r4, #8]
 8003ec0:	bb39      	cbnz	r1, 8003f12 <_puts_r+0x9e>
 8003ec2:	2b00      	cmp	r3, #0
 8003ec4:	da38      	bge.n	8003f38 <_puts_r+0xc4>
 8003ec6:	4622      	mov	r2, r4
 8003ec8:	210a      	movs	r1, #10
 8003eca:	4628      	mov	r0, r5
 8003ecc:	f001 f962 	bl	8005194 <__swbuf_r>
 8003ed0:	3001      	adds	r0, #1
 8003ed2:	d011      	beq.n	8003ef8 <_puts_r+0x84>
 8003ed4:	250a      	movs	r5, #10
 8003ed6:	e011      	b.n	8003efc <_puts_r+0x88>
 8003ed8:	4b1b      	ldr	r3, [pc, #108]	; (8003f48 <_puts_r+0xd4>)
 8003eda:	429c      	cmp	r4, r3
 8003edc:	d101      	bne.n	8003ee2 <_puts_r+0x6e>
 8003ede:	68ac      	ldr	r4, [r5, #8]
 8003ee0:	e7da      	b.n	8003e98 <_puts_r+0x24>
 8003ee2:	4b1a      	ldr	r3, [pc, #104]	; (8003f4c <_puts_r+0xd8>)
 8003ee4:	429c      	cmp	r4, r3
 8003ee6:	bf08      	it	eq
 8003ee8:	68ec      	ldreq	r4, [r5, #12]
 8003eea:	e7d5      	b.n	8003e98 <_puts_r+0x24>
 8003eec:	4621      	mov	r1, r4
 8003eee:	4628      	mov	r0, r5
 8003ef0:	f001 f9b4 	bl	800525c <__swsetup_r>
 8003ef4:	2800      	cmp	r0, #0
 8003ef6:	d0dd      	beq.n	8003eb4 <_puts_r+0x40>
 8003ef8:	f04f 35ff 	mov.w	r5, #4294967295
 8003efc:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8003efe:	07da      	lsls	r2, r3, #31
 8003f00:	d405      	bmi.n	8003f0e <_puts_r+0x9a>
 8003f02:	89a3      	ldrh	r3, [r4, #12]
 8003f04:	059b      	lsls	r3, r3, #22
 8003f06:	d402      	bmi.n	8003f0e <_puts_r+0x9a>
 8003f08:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003f0a:	f7ff f85f 	bl	8002fcc <__retarget_lock_release_recursive>
 8003f0e:	4628      	mov	r0, r5
 8003f10:	bd70      	pop	{r4, r5, r6, pc}
 8003f12:	2b00      	cmp	r3, #0
 8003f14:	da04      	bge.n	8003f20 <_puts_r+0xac>
 8003f16:	69a2      	ldr	r2, [r4, #24]
 8003f18:	429a      	cmp	r2, r3
 8003f1a:	dc06      	bgt.n	8003f2a <_puts_r+0xb6>
 8003f1c:	290a      	cmp	r1, #10
 8003f1e:	d004      	beq.n	8003f2a <_puts_r+0xb6>
 8003f20:	6823      	ldr	r3, [r4, #0]
 8003f22:	1c5a      	adds	r2, r3, #1
 8003f24:	6022      	str	r2, [r4, #0]
 8003f26:	7019      	strb	r1, [r3, #0]
 8003f28:	e7c5      	b.n	8003eb6 <_puts_r+0x42>
 8003f2a:	4622      	mov	r2, r4
 8003f2c:	4628      	mov	r0, r5
 8003f2e:	f001 f931 	bl	8005194 <__swbuf_r>
 8003f32:	3001      	adds	r0, #1
 8003f34:	d1bf      	bne.n	8003eb6 <_puts_r+0x42>
 8003f36:	e7df      	b.n	8003ef8 <_puts_r+0x84>
 8003f38:	6823      	ldr	r3, [r4, #0]
 8003f3a:	250a      	movs	r5, #10
 8003f3c:	1c5a      	adds	r2, r3, #1
 8003f3e:	6022      	str	r2, [r4, #0]
 8003f40:	701d      	strb	r5, [r3, #0]
 8003f42:	e7db      	b.n	8003efc <_puts_r+0x88>
 8003f44:	08009f64 	.word	0x08009f64
 8003f48:	08009f84 	.word	0x08009f84
 8003f4c:	08009f44 	.word	0x08009f44

08003f50 <puts>:
 8003f50:	4b02      	ldr	r3, [pc, #8]	; (8003f5c <puts+0xc>)
 8003f52:	4601      	mov	r1, r0
 8003f54:	6818      	ldr	r0, [r3, #0]
 8003f56:	f7ff bf8d 	b.w	8003e74 <_puts_r>
 8003f5a:	bf00      	nop
 8003f5c:	20000b10 	.word	0x20000b10

08003f60 <lflush>:
 8003f60:	8983      	ldrh	r3, [r0, #12]
 8003f62:	f003 0309 	and.w	r3, r3, #9
 8003f66:	2b09      	cmp	r3, #9
 8003f68:	d101      	bne.n	8003f6e <lflush+0xe>
 8003f6a:	f002 b951 	b.w	8006210 <fflush>
 8003f6e:	2000      	movs	r0, #0
 8003f70:	4770      	bx	lr
	...

08003f74 <__srefill_r>:
 8003f74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003f76:	460c      	mov	r4, r1
 8003f78:	4605      	mov	r5, r0
 8003f7a:	b118      	cbz	r0, 8003f84 <__srefill_r+0x10>
 8003f7c:	6983      	ldr	r3, [r0, #24]
 8003f7e:	b90b      	cbnz	r3, 8003f84 <__srefill_r+0x10>
 8003f80:	f7fe ff44 	bl	8002e0c <__sinit>
 8003f84:	4b3b      	ldr	r3, [pc, #236]	; (8004074 <__srefill_r+0x100>)
 8003f86:	429c      	cmp	r4, r3
 8003f88:	d10a      	bne.n	8003fa0 <__srefill_r+0x2c>
 8003f8a:	686c      	ldr	r4, [r5, #4]
 8003f8c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003f90:	2300      	movs	r3, #0
 8003f92:	6063      	str	r3, [r4, #4]
 8003f94:	89a3      	ldrh	r3, [r4, #12]
 8003f96:	069e      	lsls	r6, r3, #26
 8003f98:	d50c      	bpl.n	8003fb4 <__srefill_r+0x40>
 8003f9a:	f04f 30ff 	mov.w	r0, #4294967295
 8003f9e:	e066      	b.n	800406e <__srefill_r+0xfa>
 8003fa0:	4b35      	ldr	r3, [pc, #212]	; (8004078 <__srefill_r+0x104>)
 8003fa2:	429c      	cmp	r4, r3
 8003fa4:	d101      	bne.n	8003faa <__srefill_r+0x36>
 8003fa6:	68ac      	ldr	r4, [r5, #8]
 8003fa8:	e7f0      	b.n	8003f8c <__srefill_r+0x18>
 8003faa:	4b34      	ldr	r3, [pc, #208]	; (800407c <__srefill_r+0x108>)
 8003fac:	429c      	cmp	r4, r3
 8003fae:	bf08      	it	eq
 8003fb0:	68ec      	ldreq	r4, [r5, #12]
 8003fb2:	e7eb      	b.n	8003f8c <__srefill_r+0x18>
 8003fb4:	0758      	lsls	r0, r3, #29
 8003fb6:	d448      	bmi.n	800404a <__srefill_r+0xd6>
 8003fb8:	06d9      	lsls	r1, r3, #27
 8003fba:	d405      	bmi.n	8003fc8 <__srefill_r+0x54>
 8003fbc:	2309      	movs	r3, #9
 8003fbe:	602b      	str	r3, [r5, #0]
 8003fc0:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8003fc4:	81a3      	strh	r3, [r4, #12]
 8003fc6:	e7e8      	b.n	8003f9a <__srefill_r+0x26>
 8003fc8:	071a      	lsls	r2, r3, #28
 8003fca:	d50b      	bpl.n	8003fe4 <__srefill_r+0x70>
 8003fcc:	4621      	mov	r1, r4
 8003fce:	4628      	mov	r0, r5
 8003fd0:	f002 f8e2 	bl	8006198 <_fflush_r>
 8003fd4:	2800      	cmp	r0, #0
 8003fd6:	d1e0      	bne.n	8003f9a <__srefill_r+0x26>
 8003fd8:	89a3      	ldrh	r3, [r4, #12]
 8003fda:	60a0      	str	r0, [r4, #8]
 8003fdc:	f023 0308 	bic.w	r3, r3, #8
 8003fe0:	81a3      	strh	r3, [r4, #12]
 8003fe2:	61a0      	str	r0, [r4, #24]
 8003fe4:	89a3      	ldrh	r3, [r4, #12]
 8003fe6:	f043 0304 	orr.w	r3, r3, #4
 8003fea:	81a3      	strh	r3, [r4, #12]
 8003fec:	6923      	ldr	r3, [r4, #16]
 8003fee:	b91b      	cbnz	r3, 8003ff8 <__srefill_r+0x84>
 8003ff0:	4621      	mov	r1, r4
 8003ff2:	4628      	mov	r0, r5
 8003ff4:	f002 fcce 	bl	8006994 <__smakebuf_r>
 8003ff8:	89a6      	ldrh	r6, [r4, #12]
 8003ffa:	f9b4 700c 	ldrsh.w	r7, [r4, #12]
 8003ffe:	07b3      	lsls	r3, r6, #30
 8004000:	d00f      	beq.n	8004022 <__srefill_r+0xae>
 8004002:	2301      	movs	r3, #1
 8004004:	81a3      	strh	r3, [r4, #12]
 8004006:	4b1e      	ldr	r3, [pc, #120]	; (8004080 <__srefill_r+0x10c>)
 8004008:	491e      	ldr	r1, [pc, #120]	; (8004084 <__srefill_r+0x110>)
 800400a:	6818      	ldr	r0, [r3, #0]
 800400c:	f006 0609 	and.w	r6, r6, #9
 8004010:	f7fe ff7a 	bl	8002f08 <_fwalk>
 8004014:	2e09      	cmp	r6, #9
 8004016:	81a7      	strh	r7, [r4, #12]
 8004018:	d103      	bne.n	8004022 <__srefill_r+0xae>
 800401a:	4621      	mov	r1, r4
 800401c:	4628      	mov	r0, r5
 800401e:	f002 f835 	bl	800608c <__sflush_r>
 8004022:	6922      	ldr	r2, [r4, #16]
 8004024:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8004026:	6963      	ldr	r3, [r4, #20]
 8004028:	6a21      	ldr	r1, [r4, #32]
 800402a:	6022      	str	r2, [r4, #0]
 800402c:	4628      	mov	r0, r5
 800402e:	47b0      	blx	r6
 8004030:	2800      	cmp	r0, #0
 8004032:	6060      	str	r0, [r4, #4]
 8004034:	dc1c      	bgt.n	8004070 <__srefill_r+0xfc>
 8004036:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800403a:	bf17      	itett	ne
 800403c:	2200      	movne	r2, #0
 800403e:	f043 0320 	orreq.w	r3, r3, #32
 8004042:	6062      	strne	r2, [r4, #4]
 8004044:	f043 0340 	orrne.w	r3, r3, #64	; 0x40
 8004048:	e7bc      	b.n	8003fc4 <__srefill_r+0x50>
 800404a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800404c:	2900      	cmp	r1, #0
 800404e:	d0cd      	beq.n	8003fec <__srefill_r+0x78>
 8004050:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8004054:	4299      	cmp	r1, r3
 8004056:	d002      	beq.n	800405e <__srefill_r+0xea>
 8004058:	4628      	mov	r0, r5
 800405a:	f7fe ffdf 	bl	800301c <_free_r>
 800405e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004060:	6063      	str	r3, [r4, #4]
 8004062:	2000      	movs	r0, #0
 8004064:	6360      	str	r0, [r4, #52]	; 0x34
 8004066:	2b00      	cmp	r3, #0
 8004068:	d0c0      	beq.n	8003fec <__srefill_r+0x78>
 800406a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800406c:	6023      	str	r3, [r4, #0]
 800406e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004070:	2000      	movs	r0, #0
 8004072:	e7fc      	b.n	800406e <__srefill_r+0xfa>
 8004074:	08009f64 	.word	0x08009f64
 8004078:	08009f84 	.word	0x08009f84
 800407c:	08009f44 	.word	0x08009f44
 8004080:	08009fa4 	.word	0x08009fa4
 8004084:	08003f61 	.word	0x08003f61

08004088 <_sbrk_r>:
 8004088:	b538      	push	{r3, r4, r5, lr}
 800408a:	4d06      	ldr	r5, [pc, #24]	; (80040a4 <_sbrk_r+0x1c>)
 800408c:	2300      	movs	r3, #0
 800408e:	4604      	mov	r4, r0
 8004090:	4608      	mov	r0, r1
 8004092:	602b      	str	r3, [r5, #0]
 8004094:	f7fe f9e6 	bl	8002464 <_sbrk>
 8004098:	1c43      	adds	r3, r0, #1
 800409a:	d102      	bne.n	80040a2 <_sbrk_r+0x1a>
 800409c:	682b      	ldr	r3, [r5, #0]
 800409e:	b103      	cbz	r3, 80040a2 <_sbrk_r+0x1a>
 80040a0:	6023      	str	r3, [r4, #0]
 80040a2:	bd38      	pop	{r3, r4, r5, pc}
 80040a4:	20000d4c 	.word	0x20000d4c

080040a8 <setvbuf>:
 80040a8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80040ac:	461d      	mov	r5, r3
 80040ae:	4b5d      	ldr	r3, [pc, #372]	; (8004224 <setvbuf+0x17c>)
 80040b0:	681f      	ldr	r7, [r3, #0]
 80040b2:	4604      	mov	r4, r0
 80040b4:	460e      	mov	r6, r1
 80040b6:	4690      	mov	r8, r2
 80040b8:	b127      	cbz	r7, 80040c4 <setvbuf+0x1c>
 80040ba:	69bb      	ldr	r3, [r7, #24]
 80040bc:	b913      	cbnz	r3, 80040c4 <setvbuf+0x1c>
 80040be:	4638      	mov	r0, r7
 80040c0:	f7fe fea4 	bl	8002e0c <__sinit>
 80040c4:	4b58      	ldr	r3, [pc, #352]	; (8004228 <setvbuf+0x180>)
 80040c6:	429c      	cmp	r4, r3
 80040c8:	d167      	bne.n	800419a <setvbuf+0xf2>
 80040ca:	687c      	ldr	r4, [r7, #4]
 80040cc:	f1b8 0f02 	cmp.w	r8, #2
 80040d0:	d006      	beq.n	80040e0 <setvbuf+0x38>
 80040d2:	f1b8 0f01 	cmp.w	r8, #1
 80040d6:	f200 809f 	bhi.w	8004218 <setvbuf+0x170>
 80040da:	2d00      	cmp	r5, #0
 80040dc:	f2c0 809c 	blt.w	8004218 <setvbuf+0x170>
 80040e0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80040e2:	07db      	lsls	r3, r3, #31
 80040e4:	d405      	bmi.n	80040f2 <setvbuf+0x4a>
 80040e6:	89a3      	ldrh	r3, [r4, #12]
 80040e8:	0598      	lsls	r0, r3, #22
 80040ea:	d402      	bmi.n	80040f2 <setvbuf+0x4a>
 80040ec:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80040ee:	f7fe ff6c 	bl	8002fca <__retarget_lock_acquire_recursive>
 80040f2:	4621      	mov	r1, r4
 80040f4:	4638      	mov	r0, r7
 80040f6:	f002 f84f 	bl	8006198 <_fflush_r>
 80040fa:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80040fc:	b141      	cbz	r1, 8004110 <setvbuf+0x68>
 80040fe:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8004102:	4299      	cmp	r1, r3
 8004104:	d002      	beq.n	800410c <setvbuf+0x64>
 8004106:	4638      	mov	r0, r7
 8004108:	f7fe ff88 	bl	800301c <_free_r>
 800410c:	2300      	movs	r3, #0
 800410e:	6363      	str	r3, [r4, #52]	; 0x34
 8004110:	2300      	movs	r3, #0
 8004112:	61a3      	str	r3, [r4, #24]
 8004114:	6063      	str	r3, [r4, #4]
 8004116:	89a3      	ldrh	r3, [r4, #12]
 8004118:	0619      	lsls	r1, r3, #24
 800411a:	d503      	bpl.n	8004124 <setvbuf+0x7c>
 800411c:	6921      	ldr	r1, [r4, #16]
 800411e:	4638      	mov	r0, r7
 8004120:	f7fe ff7c 	bl	800301c <_free_r>
 8004124:	89a3      	ldrh	r3, [r4, #12]
 8004126:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
 800412a:	f023 0303 	bic.w	r3, r3, #3
 800412e:	f1b8 0f02 	cmp.w	r8, #2
 8004132:	81a3      	strh	r3, [r4, #12]
 8004134:	d06c      	beq.n	8004210 <setvbuf+0x168>
 8004136:	ab01      	add	r3, sp, #4
 8004138:	466a      	mov	r2, sp
 800413a:	4621      	mov	r1, r4
 800413c:	4638      	mov	r0, r7
 800413e:	f002 fc05 	bl	800694c <__swhatbuf_r>
 8004142:	89a3      	ldrh	r3, [r4, #12]
 8004144:	4318      	orrs	r0, r3
 8004146:	81a0      	strh	r0, [r4, #12]
 8004148:	2d00      	cmp	r5, #0
 800414a:	d130      	bne.n	80041ae <setvbuf+0x106>
 800414c:	9d00      	ldr	r5, [sp, #0]
 800414e:	4628      	mov	r0, r5
 8004150:	f7fe ff3e 	bl	8002fd0 <malloc>
 8004154:	4606      	mov	r6, r0
 8004156:	2800      	cmp	r0, #0
 8004158:	d155      	bne.n	8004206 <setvbuf+0x15e>
 800415a:	f8dd 9000 	ldr.w	r9, [sp]
 800415e:	45a9      	cmp	r9, r5
 8004160:	d14a      	bne.n	80041f8 <setvbuf+0x150>
 8004162:	f04f 35ff 	mov.w	r5, #4294967295
 8004166:	2200      	movs	r2, #0
 8004168:	60a2      	str	r2, [r4, #8]
 800416a:	f104 0247 	add.w	r2, r4, #71	; 0x47
 800416e:	6022      	str	r2, [r4, #0]
 8004170:	6122      	str	r2, [r4, #16]
 8004172:	2201      	movs	r2, #1
 8004174:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004178:	6162      	str	r2, [r4, #20]
 800417a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800417c:	f043 0302 	orr.w	r3, r3, #2
 8004180:	07d2      	lsls	r2, r2, #31
 8004182:	81a3      	strh	r3, [r4, #12]
 8004184:	d405      	bmi.n	8004192 <setvbuf+0xea>
 8004186:	f413 7f00 	tst.w	r3, #512	; 0x200
 800418a:	d102      	bne.n	8004192 <setvbuf+0xea>
 800418c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800418e:	f7fe ff1d 	bl	8002fcc <__retarget_lock_release_recursive>
 8004192:	4628      	mov	r0, r5
 8004194:	b003      	add	sp, #12
 8004196:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800419a:	4b24      	ldr	r3, [pc, #144]	; (800422c <setvbuf+0x184>)
 800419c:	429c      	cmp	r4, r3
 800419e:	d101      	bne.n	80041a4 <setvbuf+0xfc>
 80041a0:	68bc      	ldr	r4, [r7, #8]
 80041a2:	e793      	b.n	80040cc <setvbuf+0x24>
 80041a4:	4b22      	ldr	r3, [pc, #136]	; (8004230 <setvbuf+0x188>)
 80041a6:	429c      	cmp	r4, r3
 80041a8:	bf08      	it	eq
 80041aa:	68fc      	ldreq	r4, [r7, #12]
 80041ac:	e78e      	b.n	80040cc <setvbuf+0x24>
 80041ae:	2e00      	cmp	r6, #0
 80041b0:	d0cd      	beq.n	800414e <setvbuf+0xa6>
 80041b2:	69bb      	ldr	r3, [r7, #24]
 80041b4:	b913      	cbnz	r3, 80041bc <setvbuf+0x114>
 80041b6:	4638      	mov	r0, r7
 80041b8:	f7fe fe28 	bl	8002e0c <__sinit>
 80041bc:	f1b8 0f01 	cmp.w	r8, #1
 80041c0:	bf08      	it	eq
 80041c2:	89a3      	ldrheq	r3, [r4, #12]
 80041c4:	6026      	str	r6, [r4, #0]
 80041c6:	bf04      	itt	eq
 80041c8:	f043 0301 	orreq.w	r3, r3, #1
 80041cc:	81a3      	strheq	r3, [r4, #12]
 80041ce:	89a2      	ldrh	r2, [r4, #12]
 80041d0:	f012 0308 	ands.w	r3, r2, #8
 80041d4:	e9c4 6504 	strd	r6, r5, [r4, #16]
 80041d8:	d01c      	beq.n	8004214 <setvbuf+0x16c>
 80041da:	07d3      	lsls	r3, r2, #31
 80041dc:	bf41      	itttt	mi
 80041de:	2300      	movmi	r3, #0
 80041e0:	426d      	negmi	r5, r5
 80041e2:	60a3      	strmi	r3, [r4, #8]
 80041e4:	61a5      	strmi	r5, [r4, #24]
 80041e6:	bf58      	it	pl
 80041e8:	60a5      	strpl	r5, [r4, #8]
 80041ea:	6e65      	ldr	r5, [r4, #100]	; 0x64
 80041ec:	f015 0501 	ands.w	r5, r5, #1
 80041f0:	d115      	bne.n	800421e <setvbuf+0x176>
 80041f2:	f412 7f00 	tst.w	r2, #512	; 0x200
 80041f6:	e7c8      	b.n	800418a <setvbuf+0xe2>
 80041f8:	4648      	mov	r0, r9
 80041fa:	f7fe fee9 	bl	8002fd0 <malloc>
 80041fe:	4606      	mov	r6, r0
 8004200:	2800      	cmp	r0, #0
 8004202:	d0ae      	beq.n	8004162 <setvbuf+0xba>
 8004204:	464d      	mov	r5, r9
 8004206:	89a3      	ldrh	r3, [r4, #12]
 8004208:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800420c:	81a3      	strh	r3, [r4, #12]
 800420e:	e7d0      	b.n	80041b2 <setvbuf+0x10a>
 8004210:	2500      	movs	r5, #0
 8004212:	e7a8      	b.n	8004166 <setvbuf+0xbe>
 8004214:	60a3      	str	r3, [r4, #8]
 8004216:	e7e8      	b.n	80041ea <setvbuf+0x142>
 8004218:	f04f 35ff 	mov.w	r5, #4294967295
 800421c:	e7b9      	b.n	8004192 <setvbuf+0xea>
 800421e:	2500      	movs	r5, #0
 8004220:	e7b7      	b.n	8004192 <setvbuf+0xea>
 8004222:	bf00      	nop
 8004224:	20000b10 	.word	0x20000b10
 8004228:	08009f64 	.word	0x08009f64
 800422c:	08009f84 	.word	0x08009f84
 8004230:	08009f44 	.word	0x08009f44

08004234 <nanf>:
 8004234:	4800      	ldr	r0, [pc, #0]	; (8004238 <nanf+0x4>)
 8004236:	4770      	bx	lr
 8004238:	7fc00000 	.word	0x7fc00000

0800423c <siprintf>:
 800423c:	b40e      	push	{r1, r2, r3}
 800423e:	b500      	push	{lr}
 8004240:	b09c      	sub	sp, #112	; 0x70
 8004242:	ab1d      	add	r3, sp, #116	; 0x74
 8004244:	9002      	str	r0, [sp, #8]
 8004246:	9006      	str	r0, [sp, #24]
 8004248:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800424c:	4809      	ldr	r0, [pc, #36]	; (8004274 <siprintf+0x38>)
 800424e:	9107      	str	r1, [sp, #28]
 8004250:	9104      	str	r1, [sp, #16]
 8004252:	4909      	ldr	r1, [pc, #36]	; (8004278 <siprintf+0x3c>)
 8004254:	f853 2b04 	ldr.w	r2, [r3], #4
 8004258:	9105      	str	r1, [sp, #20]
 800425a:	6800      	ldr	r0, [r0, #0]
 800425c:	9301      	str	r3, [sp, #4]
 800425e:	a902      	add	r1, sp, #8
 8004260:	f003 f914 	bl	800748c <_svfiprintf_r>
 8004264:	9b02      	ldr	r3, [sp, #8]
 8004266:	2200      	movs	r2, #0
 8004268:	701a      	strb	r2, [r3, #0]
 800426a:	b01c      	add	sp, #112	; 0x70
 800426c:	f85d eb04 	ldr.w	lr, [sp], #4
 8004270:	b003      	add	sp, #12
 8004272:	4770      	bx	lr
 8004274:	20000b10 	.word	0x20000b10
 8004278:	ffff0208 	.word	0xffff0208

0800427c <siscanf>:
 800427c:	b40e      	push	{r1, r2, r3}
 800427e:	b530      	push	{r4, r5, lr}
 8004280:	b09c      	sub	sp, #112	; 0x70
 8004282:	ac1f      	add	r4, sp, #124	; 0x7c
 8004284:	f44f 7201 	mov.w	r2, #516	; 0x204
 8004288:	f854 5b04 	ldr.w	r5, [r4], #4
 800428c:	f8ad 2014 	strh.w	r2, [sp, #20]
 8004290:	9002      	str	r0, [sp, #8]
 8004292:	9006      	str	r0, [sp, #24]
 8004294:	f7fc f816 	bl	80002c4 <strlen>
 8004298:	4b0b      	ldr	r3, [pc, #44]	; (80042c8 <siscanf+0x4c>)
 800429a:	9003      	str	r0, [sp, #12]
 800429c:	9007      	str	r0, [sp, #28]
 800429e:	930b      	str	r3, [sp, #44]	; 0x2c
 80042a0:	480a      	ldr	r0, [pc, #40]	; (80042cc <siscanf+0x50>)
 80042a2:	9401      	str	r4, [sp, #4]
 80042a4:	2300      	movs	r3, #0
 80042a6:	930f      	str	r3, [sp, #60]	; 0x3c
 80042a8:	9314      	str	r3, [sp, #80]	; 0x50
 80042aa:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80042ae:	f8ad 3016 	strh.w	r3, [sp, #22]
 80042b2:	462a      	mov	r2, r5
 80042b4:	4623      	mov	r3, r4
 80042b6:	a902      	add	r1, sp, #8
 80042b8:	6800      	ldr	r0, [r0, #0]
 80042ba:	f003 fa41 	bl	8007740 <__ssvfiscanf_r>
 80042be:	b01c      	add	sp, #112	; 0x70
 80042c0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80042c4:	b003      	add	sp, #12
 80042c6:	4770      	bx	lr
 80042c8:	080042f3 	.word	0x080042f3
 80042cc:	20000b10 	.word	0x20000b10

080042d0 <__sread>:
 80042d0:	b510      	push	{r4, lr}
 80042d2:	460c      	mov	r4, r1
 80042d4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80042d8:	f003 fe4e 	bl	8007f78 <_read_r>
 80042dc:	2800      	cmp	r0, #0
 80042de:	bfab      	itete	ge
 80042e0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80042e2:	89a3      	ldrhlt	r3, [r4, #12]
 80042e4:	181b      	addge	r3, r3, r0
 80042e6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80042ea:	bfac      	ite	ge
 80042ec:	6563      	strge	r3, [r4, #84]	; 0x54
 80042ee:	81a3      	strhlt	r3, [r4, #12]
 80042f0:	bd10      	pop	{r4, pc}

080042f2 <__seofread>:
 80042f2:	2000      	movs	r0, #0
 80042f4:	4770      	bx	lr

080042f6 <__swrite>:
 80042f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80042fa:	461f      	mov	r7, r3
 80042fc:	898b      	ldrh	r3, [r1, #12]
 80042fe:	05db      	lsls	r3, r3, #23
 8004300:	4605      	mov	r5, r0
 8004302:	460c      	mov	r4, r1
 8004304:	4616      	mov	r6, r2
 8004306:	d505      	bpl.n	8004314 <__swrite+0x1e>
 8004308:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800430c:	2302      	movs	r3, #2
 800430e:	2200      	movs	r2, #0
 8004310:	f002 fb0a 	bl	8006928 <_lseek_r>
 8004314:	89a3      	ldrh	r3, [r4, #12]
 8004316:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800431a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800431e:	81a3      	strh	r3, [r4, #12]
 8004320:	4632      	mov	r2, r6
 8004322:	463b      	mov	r3, r7
 8004324:	4628      	mov	r0, r5
 8004326:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800432a:	f000 bf85 	b.w	8005238 <_write_r>

0800432e <__sseek>:
 800432e:	b510      	push	{r4, lr}
 8004330:	460c      	mov	r4, r1
 8004332:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004336:	f002 faf7 	bl	8006928 <_lseek_r>
 800433a:	1c43      	adds	r3, r0, #1
 800433c:	89a3      	ldrh	r3, [r4, #12]
 800433e:	bf15      	itete	ne
 8004340:	6560      	strne	r0, [r4, #84]	; 0x54
 8004342:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8004346:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800434a:	81a3      	strheq	r3, [r4, #12]
 800434c:	bf18      	it	ne
 800434e:	81a3      	strhne	r3, [r4, #12]
 8004350:	bd10      	pop	{r4, pc}

08004352 <__sclose>:
 8004352:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004356:	f001 b80d 	b.w	8005374 <_close_r>

0800435a <strcat>:
 800435a:	b510      	push	{r4, lr}
 800435c:	4602      	mov	r2, r0
 800435e:	7814      	ldrb	r4, [r2, #0]
 8004360:	4613      	mov	r3, r2
 8004362:	3201      	adds	r2, #1
 8004364:	2c00      	cmp	r4, #0
 8004366:	d1fa      	bne.n	800435e <strcat+0x4>
 8004368:	3b01      	subs	r3, #1
 800436a:	f811 2b01 	ldrb.w	r2, [r1], #1
 800436e:	f803 2f01 	strb.w	r2, [r3, #1]!
 8004372:	2a00      	cmp	r2, #0
 8004374:	d1f9      	bne.n	800436a <strcat+0x10>
 8004376:	bd10      	pop	{r4, pc}

08004378 <strnlen>:
 8004378:	b510      	push	{r4, lr}
 800437a:	4602      	mov	r2, r0
 800437c:	4401      	add	r1, r0
 800437e:	428a      	cmp	r2, r1
 8004380:	4613      	mov	r3, r2
 8004382:	d101      	bne.n	8004388 <strnlen+0x10>
 8004384:	1a18      	subs	r0, r3, r0
 8004386:	bd10      	pop	{r4, pc}
 8004388:	781c      	ldrb	r4, [r3, #0]
 800438a:	3201      	adds	r2, #1
 800438c:	2c00      	cmp	r4, #0
 800438e:	d1f6      	bne.n	800437e <strnlen+0x6>
 8004390:	e7f8      	b.n	8004384 <strnlen+0xc>

08004392 <sulp>:
 8004392:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004396:	460f      	mov	r7, r1
 8004398:	4690      	mov	r8, r2
 800439a:	f002 fec5 	bl	8007128 <__ulp>
 800439e:	4604      	mov	r4, r0
 80043a0:	460d      	mov	r5, r1
 80043a2:	f1b8 0f00 	cmp.w	r8, #0
 80043a6:	d011      	beq.n	80043cc <sulp+0x3a>
 80043a8:	f3c7 530a 	ubfx	r3, r7, #20, #11
 80043ac:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 80043b0:	2b00      	cmp	r3, #0
 80043b2:	dd0b      	ble.n	80043cc <sulp+0x3a>
 80043b4:	051b      	lsls	r3, r3, #20
 80043b6:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 80043ba:	2400      	movs	r4, #0
 80043bc:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 80043c0:	4622      	mov	r2, r4
 80043c2:	462b      	mov	r3, r5
 80043c4:	f7fc f942 	bl	800064c <__aeabi_dmul>
 80043c8:	4604      	mov	r4, r0
 80043ca:	460d      	mov	r5, r1
 80043cc:	4620      	mov	r0, r4
 80043ce:	4629      	mov	r1, r5
 80043d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80043d4:	0000      	movs	r0, r0
	...

080043d8 <_strtod_l>:
 80043d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80043dc:	b0a1      	sub	sp, #132	; 0x84
 80043de:	469b      	mov	fp, r3
 80043e0:	2300      	movs	r3, #0
 80043e2:	931c      	str	r3, [sp, #112]	; 0x70
 80043e4:	4ba1      	ldr	r3, [pc, #644]	; (800466c <_strtod_l+0x294>)
 80043e6:	9217      	str	r2, [sp, #92]	; 0x5c
 80043e8:	681f      	ldr	r7, [r3, #0]
 80043ea:	4682      	mov	sl, r0
 80043ec:	4638      	mov	r0, r7
 80043ee:	460e      	mov	r6, r1
 80043f0:	f7fb ff68 	bl	80002c4 <strlen>
 80043f4:	f04f 0800 	mov.w	r8, #0
 80043f8:	4604      	mov	r4, r0
 80043fa:	f04f 0900 	mov.w	r9, #0
 80043fe:	961b      	str	r6, [sp, #108]	; 0x6c
 8004400:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8004402:	781a      	ldrb	r2, [r3, #0]
 8004404:	2a2b      	cmp	r2, #43	; 0x2b
 8004406:	d04c      	beq.n	80044a2 <_strtod_l+0xca>
 8004408:	d83a      	bhi.n	8004480 <_strtod_l+0xa8>
 800440a:	2a0d      	cmp	r2, #13
 800440c:	d833      	bhi.n	8004476 <_strtod_l+0x9e>
 800440e:	2a08      	cmp	r2, #8
 8004410:	d833      	bhi.n	800447a <_strtod_l+0xa2>
 8004412:	2a00      	cmp	r2, #0
 8004414:	d03d      	beq.n	8004492 <_strtod_l+0xba>
 8004416:	2300      	movs	r3, #0
 8004418:	930c      	str	r3, [sp, #48]	; 0x30
 800441a:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 800441c:	782b      	ldrb	r3, [r5, #0]
 800441e:	2b30      	cmp	r3, #48	; 0x30
 8004420:	f040 80af 	bne.w	8004582 <_strtod_l+0x1aa>
 8004424:	786b      	ldrb	r3, [r5, #1]
 8004426:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 800442a:	2b58      	cmp	r3, #88	; 0x58
 800442c:	d16c      	bne.n	8004508 <_strtod_l+0x130>
 800442e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004430:	9301      	str	r3, [sp, #4]
 8004432:	ab1c      	add	r3, sp, #112	; 0x70
 8004434:	9300      	str	r3, [sp, #0]
 8004436:	4a8e      	ldr	r2, [pc, #568]	; (8004670 <_strtod_l+0x298>)
 8004438:	f8cd b008 	str.w	fp, [sp, #8]
 800443c:	ab1d      	add	r3, sp, #116	; 0x74
 800443e:	a91b      	add	r1, sp, #108	; 0x6c
 8004440:	4650      	mov	r0, sl
 8004442:	f001 ff71 	bl	8006328 <__gethex>
 8004446:	f010 0607 	ands.w	r6, r0, #7
 800444a:	4604      	mov	r4, r0
 800444c:	d005      	beq.n	800445a <_strtod_l+0x82>
 800444e:	2e06      	cmp	r6, #6
 8004450:	d129      	bne.n	80044a6 <_strtod_l+0xce>
 8004452:	3501      	adds	r5, #1
 8004454:	2300      	movs	r3, #0
 8004456:	951b      	str	r5, [sp, #108]	; 0x6c
 8004458:	930c      	str	r3, [sp, #48]	; 0x30
 800445a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800445c:	2b00      	cmp	r3, #0
 800445e:	f040 8596 	bne.w	8004f8e <_strtod_l+0xbb6>
 8004462:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004464:	b1d3      	cbz	r3, 800449c <_strtod_l+0xc4>
 8004466:	4642      	mov	r2, r8
 8004468:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 800446c:	4610      	mov	r0, r2
 800446e:	4619      	mov	r1, r3
 8004470:	b021      	add	sp, #132	; 0x84
 8004472:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004476:	2a20      	cmp	r2, #32
 8004478:	d1cd      	bne.n	8004416 <_strtod_l+0x3e>
 800447a:	3301      	adds	r3, #1
 800447c:	931b      	str	r3, [sp, #108]	; 0x6c
 800447e:	e7bf      	b.n	8004400 <_strtod_l+0x28>
 8004480:	2a2d      	cmp	r2, #45	; 0x2d
 8004482:	d1c8      	bne.n	8004416 <_strtod_l+0x3e>
 8004484:	2201      	movs	r2, #1
 8004486:	920c      	str	r2, [sp, #48]	; 0x30
 8004488:	1c5a      	adds	r2, r3, #1
 800448a:	921b      	str	r2, [sp, #108]	; 0x6c
 800448c:	785b      	ldrb	r3, [r3, #1]
 800448e:	2b00      	cmp	r3, #0
 8004490:	d1c3      	bne.n	800441a <_strtod_l+0x42>
 8004492:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004494:	961b      	str	r6, [sp, #108]	; 0x6c
 8004496:	2b00      	cmp	r3, #0
 8004498:	f040 8577 	bne.w	8004f8a <_strtod_l+0xbb2>
 800449c:	4642      	mov	r2, r8
 800449e:	464b      	mov	r3, r9
 80044a0:	e7e4      	b.n	800446c <_strtod_l+0x94>
 80044a2:	2200      	movs	r2, #0
 80044a4:	e7ef      	b.n	8004486 <_strtod_l+0xae>
 80044a6:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80044a8:	b13a      	cbz	r2, 80044ba <_strtod_l+0xe2>
 80044aa:	2135      	movs	r1, #53	; 0x35
 80044ac:	a81e      	add	r0, sp, #120	; 0x78
 80044ae:	f002 ff3f 	bl	8007330 <__copybits>
 80044b2:	991c      	ldr	r1, [sp, #112]	; 0x70
 80044b4:	4650      	mov	r0, sl
 80044b6:	f002 fb0b 	bl	8006ad0 <_Bfree>
 80044ba:	3e01      	subs	r6, #1
 80044bc:	2e05      	cmp	r6, #5
 80044be:	d807      	bhi.n	80044d0 <_strtod_l+0xf8>
 80044c0:	e8df f006 	tbb	[pc, r6]
 80044c4:	1d180b0e 	.word	0x1d180b0e
 80044c8:	030e      	.short	0x030e
 80044ca:	f04f 0900 	mov.w	r9, #0
 80044ce:	46c8      	mov	r8, r9
 80044d0:	0721      	lsls	r1, r4, #28
 80044d2:	d5c2      	bpl.n	800445a <_strtod_l+0x82>
 80044d4:	f049 4900 	orr.w	r9, r9, #2147483648	; 0x80000000
 80044d8:	e7bf      	b.n	800445a <_strtod_l+0x82>
 80044da:	e9dd 891e 	ldrd	r8, r9, [sp, #120]	; 0x78
 80044de:	e7f7      	b.n	80044d0 <_strtod_l+0xf8>
 80044e0:	e9dd 831e 	ldrd	r8, r3, [sp, #120]	; 0x78
 80044e4:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80044e6:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 80044ea:	f202 4233 	addw	r2, r2, #1075	; 0x433
 80044ee:	ea43 5902 	orr.w	r9, r3, r2, lsl #20
 80044f2:	e7ed      	b.n	80044d0 <_strtod_l+0xf8>
 80044f4:	f8df 917c 	ldr.w	r9, [pc, #380]	; 8004674 <_strtod_l+0x29c>
 80044f8:	f04f 0800 	mov.w	r8, #0
 80044fc:	e7e8      	b.n	80044d0 <_strtod_l+0xf8>
 80044fe:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
 8004502:	f04f 38ff 	mov.w	r8, #4294967295
 8004506:	e7e3      	b.n	80044d0 <_strtod_l+0xf8>
 8004508:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800450a:	1c5a      	adds	r2, r3, #1
 800450c:	921b      	str	r2, [sp, #108]	; 0x6c
 800450e:	785b      	ldrb	r3, [r3, #1]
 8004510:	2b30      	cmp	r3, #48	; 0x30
 8004512:	d0f9      	beq.n	8004508 <_strtod_l+0x130>
 8004514:	2b00      	cmp	r3, #0
 8004516:	d0a0      	beq.n	800445a <_strtod_l+0x82>
 8004518:	2301      	movs	r3, #1
 800451a:	9307      	str	r3, [sp, #28]
 800451c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800451e:	9308      	str	r3, [sp, #32]
 8004520:	2300      	movs	r3, #0
 8004522:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8004526:	469b      	mov	fp, r3
 8004528:	220a      	movs	r2, #10
 800452a:	981b      	ldr	r0, [sp, #108]	; 0x6c
 800452c:	7805      	ldrb	r5, [r0, #0]
 800452e:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
 8004532:	b2d9      	uxtb	r1, r3
 8004534:	2909      	cmp	r1, #9
 8004536:	d926      	bls.n	8004586 <_strtod_l+0x1ae>
 8004538:	4622      	mov	r2, r4
 800453a:	4639      	mov	r1, r7
 800453c:	f003 fd6e 	bl	800801c <strncmp>
 8004540:	2800      	cmp	r0, #0
 8004542:	d032      	beq.n	80045aa <_strtod_l+0x1d2>
 8004544:	2000      	movs	r0, #0
 8004546:	462b      	mov	r3, r5
 8004548:	465c      	mov	r4, fp
 800454a:	9004      	str	r0, [sp, #16]
 800454c:	4602      	mov	r2, r0
 800454e:	2b65      	cmp	r3, #101	; 0x65
 8004550:	d001      	beq.n	8004556 <_strtod_l+0x17e>
 8004552:	2b45      	cmp	r3, #69	; 0x45
 8004554:	d113      	bne.n	800457e <_strtod_l+0x1a6>
 8004556:	b91c      	cbnz	r4, 8004560 <_strtod_l+0x188>
 8004558:	9b07      	ldr	r3, [sp, #28]
 800455a:	4303      	orrs	r3, r0
 800455c:	d099      	beq.n	8004492 <_strtod_l+0xba>
 800455e:	2400      	movs	r4, #0
 8004560:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
 8004562:	1c73      	adds	r3, r6, #1
 8004564:	931b      	str	r3, [sp, #108]	; 0x6c
 8004566:	7873      	ldrb	r3, [r6, #1]
 8004568:	2b2b      	cmp	r3, #43	; 0x2b
 800456a:	d078      	beq.n	800465e <_strtod_l+0x286>
 800456c:	2b2d      	cmp	r3, #45	; 0x2d
 800456e:	d07b      	beq.n	8004668 <_strtod_l+0x290>
 8004570:	2700      	movs	r7, #0
 8004572:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8004576:	2909      	cmp	r1, #9
 8004578:	f240 8082 	bls.w	8004680 <_strtod_l+0x2a8>
 800457c:	961b      	str	r6, [sp, #108]	; 0x6c
 800457e:	2500      	movs	r5, #0
 8004580:	e09e      	b.n	80046c0 <_strtod_l+0x2e8>
 8004582:	2300      	movs	r3, #0
 8004584:	e7c9      	b.n	800451a <_strtod_l+0x142>
 8004586:	f1bb 0f08 	cmp.w	fp, #8
 800458a:	bfd5      	itete	le
 800458c:	9906      	ldrle	r1, [sp, #24]
 800458e:	9905      	ldrgt	r1, [sp, #20]
 8004590:	fb02 3301 	mlale	r3, r2, r1, r3
 8004594:	fb02 3301 	mlagt	r3, r2, r1, r3
 8004598:	f100 0001 	add.w	r0, r0, #1
 800459c:	bfd4      	ite	le
 800459e:	9306      	strle	r3, [sp, #24]
 80045a0:	9305      	strgt	r3, [sp, #20]
 80045a2:	f10b 0b01 	add.w	fp, fp, #1
 80045a6:	901b      	str	r0, [sp, #108]	; 0x6c
 80045a8:	e7bf      	b.n	800452a <_strtod_l+0x152>
 80045aa:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80045ac:	191a      	adds	r2, r3, r4
 80045ae:	921b      	str	r2, [sp, #108]	; 0x6c
 80045b0:	5d1b      	ldrb	r3, [r3, r4]
 80045b2:	f1bb 0f00 	cmp.w	fp, #0
 80045b6:	d036      	beq.n	8004626 <_strtod_l+0x24e>
 80045b8:	9004      	str	r0, [sp, #16]
 80045ba:	465c      	mov	r4, fp
 80045bc:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 80045c0:	2a09      	cmp	r2, #9
 80045c2:	d912      	bls.n	80045ea <_strtod_l+0x212>
 80045c4:	2201      	movs	r2, #1
 80045c6:	e7c2      	b.n	800454e <_strtod_l+0x176>
 80045c8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80045ca:	1c5a      	adds	r2, r3, #1
 80045cc:	921b      	str	r2, [sp, #108]	; 0x6c
 80045ce:	785b      	ldrb	r3, [r3, #1]
 80045d0:	3001      	adds	r0, #1
 80045d2:	2b30      	cmp	r3, #48	; 0x30
 80045d4:	d0f8      	beq.n	80045c8 <_strtod_l+0x1f0>
 80045d6:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
 80045da:	2a08      	cmp	r2, #8
 80045dc:	f200 84dc 	bhi.w	8004f98 <_strtod_l+0xbc0>
 80045e0:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80045e2:	9004      	str	r0, [sp, #16]
 80045e4:	2000      	movs	r0, #0
 80045e6:	9208      	str	r2, [sp, #32]
 80045e8:	4604      	mov	r4, r0
 80045ea:	3b30      	subs	r3, #48	; 0x30
 80045ec:	f100 0201 	add.w	r2, r0, #1
 80045f0:	d013      	beq.n	800461a <_strtod_l+0x242>
 80045f2:	9904      	ldr	r1, [sp, #16]
 80045f4:	4411      	add	r1, r2
 80045f6:	9104      	str	r1, [sp, #16]
 80045f8:	4622      	mov	r2, r4
 80045fa:	1905      	adds	r5, r0, r4
 80045fc:	210a      	movs	r1, #10
 80045fe:	42aa      	cmp	r2, r5
 8004600:	d113      	bne.n	800462a <_strtod_l+0x252>
 8004602:	1822      	adds	r2, r4, r0
 8004604:	2a08      	cmp	r2, #8
 8004606:	f104 0401 	add.w	r4, r4, #1
 800460a:	4404      	add	r4, r0
 800460c:	dc1b      	bgt.n	8004646 <_strtod_l+0x26e>
 800460e:	9906      	ldr	r1, [sp, #24]
 8004610:	220a      	movs	r2, #10
 8004612:	fb02 3301 	mla	r3, r2, r1, r3
 8004616:	9306      	str	r3, [sp, #24]
 8004618:	2200      	movs	r2, #0
 800461a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800461c:	1c59      	adds	r1, r3, #1
 800461e:	911b      	str	r1, [sp, #108]	; 0x6c
 8004620:	785b      	ldrb	r3, [r3, #1]
 8004622:	4610      	mov	r0, r2
 8004624:	e7ca      	b.n	80045bc <_strtod_l+0x1e4>
 8004626:	4658      	mov	r0, fp
 8004628:	e7d3      	b.n	80045d2 <_strtod_l+0x1fa>
 800462a:	2a08      	cmp	r2, #8
 800462c:	dc04      	bgt.n	8004638 <_strtod_l+0x260>
 800462e:	9f06      	ldr	r7, [sp, #24]
 8004630:	434f      	muls	r7, r1
 8004632:	9706      	str	r7, [sp, #24]
 8004634:	3201      	adds	r2, #1
 8004636:	e7e2      	b.n	80045fe <_strtod_l+0x226>
 8004638:	1c57      	adds	r7, r2, #1
 800463a:	2f10      	cmp	r7, #16
 800463c:	bfde      	ittt	le
 800463e:	9f05      	ldrle	r7, [sp, #20]
 8004640:	434f      	mulle	r7, r1
 8004642:	9705      	strle	r7, [sp, #20]
 8004644:	e7f6      	b.n	8004634 <_strtod_l+0x25c>
 8004646:	2c10      	cmp	r4, #16
 8004648:	bfdf      	itttt	le
 800464a:	9905      	ldrle	r1, [sp, #20]
 800464c:	220a      	movle	r2, #10
 800464e:	fb02 3301 	mlale	r3, r2, r1, r3
 8004652:	9305      	strle	r3, [sp, #20]
 8004654:	e7e0      	b.n	8004618 <_strtod_l+0x240>
 8004656:	2300      	movs	r3, #0
 8004658:	9304      	str	r3, [sp, #16]
 800465a:	2201      	movs	r2, #1
 800465c:	e77c      	b.n	8004558 <_strtod_l+0x180>
 800465e:	2700      	movs	r7, #0
 8004660:	1cb3      	adds	r3, r6, #2
 8004662:	931b      	str	r3, [sp, #108]	; 0x6c
 8004664:	78b3      	ldrb	r3, [r6, #2]
 8004666:	e784      	b.n	8004572 <_strtod_l+0x19a>
 8004668:	2701      	movs	r7, #1
 800466a:	e7f9      	b.n	8004660 <_strtod_l+0x288>
 800466c:	0800a2cc 	.word	0x0800a2cc
 8004670:	08009fe0 	.word	0x08009fe0
 8004674:	7ff00000 	.word	0x7ff00000
 8004678:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800467a:	1c59      	adds	r1, r3, #1
 800467c:	911b      	str	r1, [sp, #108]	; 0x6c
 800467e:	785b      	ldrb	r3, [r3, #1]
 8004680:	2b30      	cmp	r3, #48	; 0x30
 8004682:	d0f9      	beq.n	8004678 <_strtod_l+0x2a0>
 8004684:	f1a3 0131 	sub.w	r1, r3, #49	; 0x31
 8004688:	2908      	cmp	r1, #8
 800468a:	f63f af78 	bhi.w	800457e <_strtod_l+0x1a6>
 800468e:	f1a3 0c30 	sub.w	ip, r3, #48	; 0x30
 8004692:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8004694:	9309      	str	r3, [sp, #36]	; 0x24
 8004696:	f04f 0e0a 	mov.w	lr, #10
 800469a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800469c:	1c59      	adds	r1, r3, #1
 800469e:	911b      	str	r1, [sp, #108]	; 0x6c
 80046a0:	785b      	ldrb	r3, [r3, #1]
 80046a2:	f1a3 0530 	sub.w	r5, r3, #48	; 0x30
 80046a6:	2d09      	cmp	r5, #9
 80046a8:	d935      	bls.n	8004716 <_strtod_l+0x33e>
 80046aa:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80046ac:	1b49      	subs	r1, r1, r5
 80046ae:	2908      	cmp	r1, #8
 80046b0:	f644 651f 	movw	r5, #19999	; 0x4e1f
 80046b4:	dc02      	bgt.n	80046bc <_strtod_l+0x2e4>
 80046b6:	4565      	cmp	r5, ip
 80046b8:	bfa8      	it	ge
 80046ba:	4665      	movge	r5, ip
 80046bc:	b107      	cbz	r7, 80046c0 <_strtod_l+0x2e8>
 80046be:	426d      	negs	r5, r5
 80046c0:	2c00      	cmp	r4, #0
 80046c2:	d14c      	bne.n	800475e <_strtod_l+0x386>
 80046c4:	9907      	ldr	r1, [sp, #28]
 80046c6:	4301      	orrs	r1, r0
 80046c8:	f47f aec7 	bne.w	800445a <_strtod_l+0x82>
 80046cc:	2a00      	cmp	r2, #0
 80046ce:	f47f aee0 	bne.w	8004492 <_strtod_l+0xba>
 80046d2:	2b69      	cmp	r3, #105	; 0x69
 80046d4:	d026      	beq.n	8004724 <_strtod_l+0x34c>
 80046d6:	dc23      	bgt.n	8004720 <_strtod_l+0x348>
 80046d8:	2b49      	cmp	r3, #73	; 0x49
 80046da:	d023      	beq.n	8004724 <_strtod_l+0x34c>
 80046dc:	2b4e      	cmp	r3, #78	; 0x4e
 80046de:	f47f aed8 	bne.w	8004492 <_strtod_l+0xba>
 80046e2:	499c      	ldr	r1, [pc, #624]	; (8004954 <_strtod_l+0x57c>)
 80046e4:	a81b      	add	r0, sp, #108	; 0x6c
 80046e6:	f002 f86b 	bl	80067c0 <__match>
 80046ea:	2800      	cmp	r0, #0
 80046ec:	f43f aed1 	beq.w	8004492 <_strtod_l+0xba>
 80046f0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80046f2:	781b      	ldrb	r3, [r3, #0]
 80046f4:	2b28      	cmp	r3, #40	; 0x28
 80046f6:	d12c      	bne.n	8004752 <_strtod_l+0x37a>
 80046f8:	4997      	ldr	r1, [pc, #604]	; (8004958 <_strtod_l+0x580>)
 80046fa:	aa1e      	add	r2, sp, #120	; 0x78
 80046fc:	a81b      	add	r0, sp, #108	; 0x6c
 80046fe:	f002 f873 	bl	80067e8 <__hexnan>
 8004702:	2805      	cmp	r0, #5
 8004704:	d125      	bne.n	8004752 <_strtod_l+0x37a>
 8004706:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8004708:	f8dd 8078 	ldr.w	r8, [sp, #120]	; 0x78
 800470c:	f043 49ff 	orr.w	r9, r3, #2139095040	; 0x7f800000
 8004710:	f449 09e0 	orr.w	r9, r9, #7340032	; 0x700000
 8004714:	e6a1      	b.n	800445a <_strtod_l+0x82>
 8004716:	fb0e 3c0c 	mla	ip, lr, ip, r3
 800471a:	f1ac 0c30 	sub.w	ip, ip, #48	; 0x30
 800471e:	e7bc      	b.n	800469a <_strtod_l+0x2c2>
 8004720:	2b6e      	cmp	r3, #110	; 0x6e
 8004722:	e7dc      	b.n	80046de <_strtod_l+0x306>
 8004724:	498d      	ldr	r1, [pc, #564]	; (800495c <_strtod_l+0x584>)
 8004726:	a81b      	add	r0, sp, #108	; 0x6c
 8004728:	f002 f84a 	bl	80067c0 <__match>
 800472c:	2800      	cmp	r0, #0
 800472e:	f43f aeb0 	beq.w	8004492 <_strtod_l+0xba>
 8004732:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8004734:	498a      	ldr	r1, [pc, #552]	; (8004960 <_strtod_l+0x588>)
 8004736:	3b01      	subs	r3, #1
 8004738:	a81b      	add	r0, sp, #108	; 0x6c
 800473a:	931b      	str	r3, [sp, #108]	; 0x6c
 800473c:	f002 f840 	bl	80067c0 <__match>
 8004740:	b910      	cbnz	r0, 8004748 <_strtod_l+0x370>
 8004742:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8004744:	3301      	adds	r3, #1
 8004746:	931b      	str	r3, [sp, #108]	; 0x6c
 8004748:	f8df 9224 	ldr.w	r9, [pc, #548]	; 8004970 <_strtod_l+0x598>
 800474c:	f04f 0800 	mov.w	r8, #0
 8004750:	e683      	b.n	800445a <_strtod_l+0x82>
 8004752:	4884      	ldr	r0, [pc, #528]	; (8004964 <_strtod_l+0x58c>)
 8004754:	f003 fc22 	bl	8007f9c <nan>
 8004758:	4680      	mov	r8, r0
 800475a:	4689      	mov	r9, r1
 800475c:	e67d      	b.n	800445a <_strtod_l+0x82>
 800475e:	9b04      	ldr	r3, [sp, #16]
 8004760:	9806      	ldr	r0, [sp, #24]
 8004762:	1aeb      	subs	r3, r5, r3
 8004764:	f1bb 0f00 	cmp.w	fp, #0
 8004768:	bf08      	it	eq
 800476a:	46a3      	moveq	fp, r4
 800476c:	2c10      	cmp	r4, #16
 800476e:	9307      	str	r3, [sp, #28]
 8004770:	4626      	mov	r6, r4
 8004772:	bfa8      	it	ge
 8004774:	2610      	movge	r6, #16
 8004776:	f7fb feef 	bl	8000558 <__aeabi_ui2d>
 800477a:	2c09      	cmp	r4, #9
 800477c:	4680      	mov	r8, r0
 800477e:	4689      	mov	r9, r1
 8004780:	dd13      	ble.n	80047aa <_strtod_l+0x3d2>
 8004782:	4b79      	ldr	r3, [pc, #484]	; (8004968 <_strtod_l+0x590>)
 8004784:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8004788:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 800478c:	f7fb ff5e 	bl	800064c <__aeabi_dmul>
 8004790:	4680      	mov	r8, r0
 8004792:	9805      	ldr	r0, [sp, #20]
 8004794:	4689      	mov	r9, r1
 8004796:	f7fb fedf 	bl	8000558 <__aeabi_ui2d>
 800479a:	4602      	mov	r2, r0
 800479c:	460b      	mov	r3, r1
 800479e:	4640      	mov	r0, r8
 80047a0:	4649      	mov	r1, r9
 80047a2:	f7fb fd9d 	bl	80002e0 <__adddf3>
 80047a6:	4680      	mov	r8, r0
 80047a8:	4689      	mov	r9, r1
 80047aa:	2c0f      	cmp	r4, #15
 80047ac:	dc36      	bgt.n	800481c <_strtod_l+0x444>
 80047ae:	9b07      	ldr	r3, [sp, #28]
 80047b0:	2b00      	cmp	r3, #0
 80047b2:	f43f ae52 	beq.w	800445a <_strtod_l+0x82>
 80047b6:	dd22      	ble.n	80047fe <_strtod_l+0x426>
 80047b8:	2b16      	cmp	r3, #22
 80047ba:	dc09      	bgt.n	80047d0 <_strtod_l+0x3f8>
 80047bc:	4c6a      	ldr	r4, [pc, #424]	; (8004968 <_strtod_l+0x590>)
 80047be:	eb04 04c3 	add.w	r4, r4, r3, lsl #3
 80047c2:	e9d4 0100 	ldrd	r0, r1, [r4]
 80047c6:	4642      	mov	r2, r8
 80047c8:	464b      	mov	r3, r9
 80047ca:	f7fb ff3f 	bl	800064c <__aeabi_dmul>
 80047ce:	e7c3      	b.n	8004758 <_strtod_l+0x380>
 80047d0:	9a07      	ldr	r2, [sp, #28]
 80047d2:	f1c4 0325 	rsb	r3, r4, #37	; 0x25
 80047d6:	4293      	cmp	r3, r2
 80047d8:	db20      	blt.n	800481c <_strtod_l+0x444>
 80047da:	4d63      	ldr	r5, [pc, #396]	; (8004968 <_strtod_l+0x590>)
 80047dc:	f1c4 040f 	rsb	r4, r4, #15
 80047e0:	eb05 01c4 	add.w	r1, r5, r4, lsl #3
 80047e4:	4642      	mov	r2, r8
 80047e6:	464b      	mov	r3, r9
 80047e8:	e9d1 0100 	ldrd	r0, r1, [r1]
 80047ec:	f7fb ff2e 	bl	800064c <__aeabi_dmul>
 80047f0:	9b07      	ldr	r3, [sp, #28]
 80047f2:	1b1c      	subs	r4, r3, r4
 80047f4:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
 80047f8:	e9d5 2300 	ldrd	r2, r3, [r5]
 80047fc:	e7e5      	b.n	80047ca <_strtod_l+0x3f2>
 80047fe:	9b07      	ldr	r3, [sp, #28]
 8004800:	3316      	adds	r3, #22
 8004802:	db0b      	blt.n	800481c <_strtod_l+0x444>
 8004804:	9b04      	ldr	r3, [sp, #16]
 8004806:	4a58      	ldr	r2, [pc, #352]	; (8004968 <_strtod_l+0x590>)
 8004808:	1b5d      	subs	r5, r3, r5
 800480a:	eb02 05c5 	add.w	r5, r2, r5, lsl #3
 800480e:	e9d5 2300 	ldrd	r2, r3, [r5]
 8004812:	4640      	mov	r0, r8
 8004814:	4649      	mov	r1, r9
 8004816:	f7fc f843 	bl	80008a0 <__aeabi_ddiv>
 800481a:	e79d      	b.n	8004758 <_strtod_l+0x380>
 800481c:	9b07      	ldr	r3, [sp, #28]
 800481e:	1ba6      	subs	r6, r4, r6
 8004820:	441e      	add	r6, r3
 8004822:	2e00      	cmp	r6, #0
 8004824:	dd71      	ble.n	800490a <_strtod_l+0x532>
 8004826:	f016 030f 	ands.w	r3, r6, #15
 800482a:	d00a      	beq.n	8004842 <_strtod_l+0x46a>
 800482c:	494e      	ldr	r1, [pc, #312]	; (8004968 <_strtod_l+0x590>)
 800482e:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8004832:	4642      	mov	r2, r8
 8004834:	464b      	mov	r3, r9
 8004836:	e9d1 0100 	ldrd	r0, r1, [r1]
 800483a:	f7fb ff07 	bl	800064c <__aeabi_dmul>
 800483e:	4680      	mov	r8, r0
 8004840:	4689      	mov	r9, r1
 8004842:	f036 060f 	bics.w	r6, r6, #15
 8004846:	d050      	beq.n	80048ea <_strtod_l+0x512>
 8004848:	f5b6 7f9a 	cmp.w	r6, #308	; 0x134
 800484c:	dd27      	ble.n	800489e <_strtod_l+0x4c6>
 800484e:	f04f 0b00 	mov.w	fp, #0
 8004852:	f8cd b010 	str.w	fp, [sp, #16]
 8004856:	f8cd b020 	str.w	fp, [sp, #32]
 800485a:	f8cd b018 	str.w	fp, [sp, #24]
 800485e:	2322      	movs	r3, #34	; 0x22
 8004860:	f8df 910c 	ldr.w	r9, [pc, #268]	; 8004970 <_strtod_l+0x598>
 8004864:	f8ca 3000 	str.w	r3, [sl]
 8004868:	f04f 0800 	mov.w	r8, #0
 800486c:	9b08      	ldr	r3, [sp, #32]
 800486e:	2b00      	cmp	r3, #0
 8004870:	f43f adf3 	beq.w	800445a <_strtod_l+0x82>
 8004874:	991c      	ldr	r1, [sp, #112]	; 0x70
 8004876:	4650      	mov	r0, sl
 8004878:	f002 f92a 	bl	8006ad0 <_Bfree>
 800487c:	9906      	ldr	r1, [sp, #24]
 800487e:	4650      	mov	r0, sl
 8004880:	f002 f926 	bl	8006ad0 <_Bfree>
 8004884:	9904      	ldr	r1, [sp, #16]
 8004886:	4650      	mov	r0, sl
 8004888:	f002 f922 	bl	8006ad0 <_Bfree>
 800488c:	9908      	ldr	r1, [sp, #32]
 800488e:	4650      	mov	r0, sl
 8004890:	f002 f91e 	bl	8006ad0 <_Bfree>
 8004894:	4659      	mov	r1, fp
 8004896:	4650      	mov	r0, sl
 8004898:	f002 f91a 	bl	8006ad0 <_Bfree>
 800489c:	e5dd      	b.n	800445a <_strtod_l+0x82>
 800489e:	2300      	movs	r3, #0
 80048a0:	1136      	asrs	r6, r6, #4
 80048a2:	4640      	mov	r0, r8
 80048a4:	4649      	mov	r1, r9
 80048a6:	461f      	mov	r7, r3
 80048a8:	2e01      	cmp	r6, #1
 80048aa:	dc21      	bgt.n	80048f0 <_strtod_l+0x518>
 80048ac:	b10b      	cbz	r3, 80048b2 <_strtod_l+0x4da>
 80048ae:	4680      	mov	r8, r0
 80048b0:	4689      	mov	r9, r1
 80048b2:	4b2e      	ldr	r3, [pc, #184]	; (800496c <_strtod_l+0x594>)
 80048b4:	f1a9 7954 	sub.w	r9, r9, #55574528	; 0x3500000
 80048b8:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 80048bc:	4642      	mov	r2, r8
 80048be:	464b      	mov	r3, r9
 80048c0:	e9d7 0100 	ldrd	r0, r1, [r7]
 80048c4:	f7fb fec2 	bl	800064c <__aeabi_dmul>
 80048c8:	4b29      	ldr	r3, [pc, #164]	; (8004970 <_strtod_l+0x598>)
 80048ca:	460a      	mov	r2, r1
 80048cc:	400b      	ands	r3, r1
 80048ce:	4929      	ldr	r1, [pc, #164]	; (8004974 <_strtod_l+0x59c>)
 80048d0:	428b      	cmp	r3, r1
 80048d2:	4680      	mov	r8, r0
 80048d4:	d8bb      	bhi.n	800484e <_strtod_l+0x476>
 80048d6:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 80048da:	428b      	cmp	r3, r1
 80048dc:	bf86      	itte	hi
 80048de:	f8df 9098 	ldrhi.w	r9, [pc, #152]	; 8004978 <_strtod_l+0x5a0>
 80048e2:	f04f 38ff 	movhi.w	r8, #4294967295
 80048e6:	f102 7954 	addls.w	r9, r2, #55574528	; 0x3500000
 80048ea:	2300      	movs	r3, #0
 80048ec:	9305      	str	r3, [sp, #20]
 80048ee:	e07e      	b.n	80049ee <_strtod_l+0x616>
 80048f0:	07f2      	lsls	r2, r6, #31
 80048f2:	d507      	bpl.n	8004904 <_strtod_l+0x52c>
 80048f4:	4b1d      	ldr	r3, [pc, #116]	; (800496c <_strtod_l+0x594>)
 80048f6:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80048fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80048fe:	f7fb fea5 	bl	800064c <__aeabi_dmul>
 8004902:	2301      	movs	r3, #1
 8004904:	3701      	adds	r7, #1
 8004906:	1076      	asrs	r6, r6, #1
 8004908:	e7ce      	b.n	80048a8 <_strtod_l+0x4d0>
 800490a:	d0ee      	beq.n	80048ea <_strtod_l+0x512>
 800490c:	4276      	negs	r6, r6
 800490e:	f016 020f 	ands.w	r2, r6, #15
 8004912:	d00a      	beq.n	800492a <_strtod_l+0x552>
 8004914:	4b14      	ldr	r3, [pc, #80]	; (8004968 <_strtod_l+0x590>)
 8004916:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800491a:	4640      	mov	r0, r8
 800491c:	4649      	mov	r1, r9
 800491e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004922:	f7fb ffbd 	bl	80008a0 <__aeabi_ddiv>
 8004926:	4680      	mov	r8, r0
 8004928:	4689      	mov	r9, r1
 800492a:	1136      	asrs	r6, r6, #4
 800492c:	d0dd      	beq.n	80048ea <_strtod_l+0x512>
 800492e:	2e1f      	cmp	r6, #31
 8004930:	dd24      	ble.n	800497c <_strtod_l+0x5a4>
 8004932:	f04f 0b00 	mov.w	fp, #0
 8004936:	f8cd b010 	str.w	fp, [sp, #16]
 800493a:	f8cd b020 	str.w	fp, [sp, #32]
 800493e:	f8cd b018 	str.w	fp, [sp, #24]
 8004942:	2322      	movs	r3, #34	; 0x22
 8004944:	f04f 0800 	mov.w	r8, #0
 8004948:	f04f 0900 	mov.w	r9, #0
 800494c:	f8ca 3000 	str.w	r3, [sl]
 8004950:	e78c      	b.n	800486c <_strtod_l+0x494>
 8004952:	bf00      	nop
 8004954:	08009fb5 	.word	0x08009fb5
 8004958:	08009ff4 	.word	0x08009ff4
 800495c:	08009fad 	.word	0x08009fad
 8004960:	0800a1e8 	.word	0x0800a1e8
 8004964:	0800a0e3 	.word	0x0800a0e3
 8004968:	0800a368 	.word	0x0800a368
 800496c:	0800a340 	.word	0x0800a340
 8004970:	7ff00000 	.word	0x7ff00000
 8004974:	7ca00000 	.word	0x7ca00000
 8004978:	7fefffff 	.word	0x7fefffff
 800497c:	f016 0310 	ands.w	r3, r6, #16
 8004980:	bf18      	it	ne
 8004982:	236a      	movne	r3, #106	; 0x6a
 8004984:	4fb3      	ldr	r7, [pc, #716]	; (8004c54 <_strtod_l+0x87c>)
 8004986:	9305      	str	r3, [sp, #20]
 8004988:	4640      	mov	r0, r8
 800498a:	4649      	mov	r1, r9
 800498c:	2300      	movs	r3, #0
 800498e:	07f2      	lsls	r2, r6, #31
 8004990:	d504      	bpl.n	800499c <_strtod_l+0x5c4>
 8004992:	e9d7 2300 	ldrd	r2, r3, [r7]
 8004996:	f7fb fe59 	bl	800064c <__aeabi_dmul>
 800499a:	2301      	movs	r3, #1
 800499c:	1076      	asrs	r6, r6, #1
 800499e:	f107 0708 	add.w	r7, r7, #8
 80049a2:	d1f4      	bne.n	800498e <_strtod_l+0x5b6>
 80049a4:	b10b      	cbz	r3, 80049aa <_strtod_l+0x5d2>
 80049a6:	4680      	mov	r8, r0
 80049a8:	4689      	mov	r9, r1
 80049aa:	9b05      	ldr	r3, [sp, #20]
 80049ac:	b1bb      	cbz	r3, 80049de <_strtod_l+0x606>
 80049ae:	f3c9 530a 	ubfx	r3, r9, #20, #11
 80049b2:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 80049b6:	2b00      	cmp	r3, #0
 80049b8:	4649      	mov	r1, r9
 80049ba:	dd10      	ble.n	80049de <_strtod_l+0x606>
 80049bc:	2b1f      	cmp	r3, #31
 80049be:	f340 8128 	ble.w	8004c12 <_strtod_l+0x83a>
 80049c2:	2b34      	cmp	r3, #52	; 0x34
 80049c4:	bfde      	ittt	le
 80049c6:	3b20      	suble	r3, #32
 80049c8:	f04f 32ff 	movle.w	r2, #4294967295
 80049cc:	fa02 f303 	lslle.w	r3, r2, r3
 80049d0:	f04f 0800 	mov.w	r8, #0
 80049d4:	bfcc      	ite	gt
 80049d6:	f04f 795c 	movgt.w	r9, #57671680	; 0x3700000
 80049da:	ea03 0901 	andle.w	r9, r3, r1
 80049de:	2200      	movs	r2, #0
 80049e0:	2300      	movs	r3, #0
 80049e2:	4640      	mov	r0, r8
 80049e4:	4649      	mov	r1, r9
 80049e6:	f7fc f899 	bl	8000b1c <__aeabi_dcmpeq>
 80049ea:	2800      	cmp	r0, #0
 80049ec:	d1a1      	bne.n	8004932 <_strtod_l+0x55a>
 80049ee:	9b06      	ldr	r3, [sp, #24]
 80049f0:	9300      	str	r3, [sp, #0]
 80049f2:	9908      	ldr	r1, [sp, #32]
 80049f4:	4623      	mov	r3, r4
 80049f6:	465a      	mov	r2, fp
 80049f8:	4650      	mov	r0, sl
 80049fa:	f002 f8d5 	bl	8006ba8 <__s2b>
 80049fe:	9008      	str	r0, [sp, #32]
 8004a00:	2800      	cmp	r0, #0
 8004a02:	f43f af24 	beq.w	800484e <_strtod_l+0x476>
 8004a06:	9b04      	ldr	r3, [sp, #16]
 8004a08:	1b5d      	subs	r5, r3, r5
 8004a0a:	9b07      	ldr	r3, [sp, #28]
 8004a0c:	2b00      	cmp	r3, #0
 8004a0e:	bfb4      	ite	lt
 8004a10:	462b      	movlt	r3, r5
 8004a12:	2300      	movge	r3, #0
 8004a14:	930e      	str	r3, [sp, #56]	; 0x38
 8004a16:	9b07      	ldr	r3, [sp, #28]
 8004a18:	f04f 0b00 	mov.w	fp, #0
 8004a1c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8004a20:	9316      	str	r3, [sp, #88]	; 0x58
 8004a22:	f8cd b010 	str.w	fp, [sp, #16]
 8004a26:	9b08      	ldr	r3, [sp, #32]
 8004a28:	4650      	mov	r0, sl
 8004a2a:	6859      	ldr	r1, [r3, #4]
 8004a2c:	f002 f810 	bl	8006a50 <_Balloc>
 8004a30:	9006      	str	r0, [sp, #24]
 8004a32:	2800      	cmp	r0, #0
 8004a34:	f43f af13 	beq.w	800485e <_strtod_l+0x486>
 8004a38:	9b08      	ldr	r3, [sp, #32]
 8004a3a:	691a      	ldr	r2, [r3, #16]
 8004a3c:	3202      	adds	r2, #2
 8004a3e:	f103 010c 	add.w	r1, r3, #12
 8004a42:	0092      	lsls	r2, r2, #2
 8004a44:	300c      	adds	r0, #12
 8004a46:	f7fe fad3 	bl	8002ff0 <memcpy>
 8004a4a:	ab1e      	add	r3, sp, #120	; 0x78
 8004a4c:	9301      	str	r3, [sp, #4]
 8004a4e:	ab1d      	add	r3, sp, #116	; 0x74
 8004a50:	9300      	str	r3, [sp, #0]
 8004a52:	4642      	mov	r2, r8
 8004a54:	464b      	mov	r3, r9
 8004a56:	4650      	mov	r0, sl
 8004a58:	e9cd 890a 	strd	r8, r9, [sp, #40]	; 0x28
 8004a5c:	f002 fbde 	bl	800721c <__d2b>
 8004a60:	901c      	str	r0, [sp, #112]	; 0x70
 8004a62:	2800      	cmp	r0, #0
 8004a64:	f43f aefb 	beq.w	800485e <_strtod_l+0x486>
 8004a68:	2101      	movs	r1, #1
 8004a6a:	4650      	mov	r0, sl
 8004a6c:	f002 f934 	bl	8006cd8 <__i2b>
 8004a70:	9004      	str	r0, [sp, #16]
 8004a72:	4603      	mov	r3, r0
 8004a74:	2800      	cmp	r0, #0
 8004a76:	f43f aef2 	beq.w	800485e <_strtod_l+0x486>
 8004a7a:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8004a7c:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8004a7e:	2d00      	cmp	r5, #0
 8004a80:	bfab      	itete	ge
 8004a82:	9b0e      	ldrge	r3, [sp, #56]	; 0x38
 8004a84:	9b16      	ldrlt	r3, [sp, #88]	; 0x58
 8004a86:	9c16      	ldrge	r4, [sp, #88]	; 0x58
 8004a88:	9e0e      	ldrlt	r6, [sp, #56]	; 0x38
 8004a8a:	bfac      	ite	ge
 8004a8c:	18ee      	addge	r6, r5, r3
 8004a8e:	1b5c      	sublt	r4, r3, r5
 8004a90:	9b05      	ldr	r3, [sp, #20]
 8004a92:	1aed      	subs	r5, r5, r3
 8004a94:	4415      	add	r5, r2
 8004a96:	4b70      	ldr	r3, [pc, #448]	; (8004c58 <_strtod_l+0x880>)
 8004a98:	3d01      	subs	r5, #1
 8004a9a:	429d      	cmp	r5, r3
 8004a9c:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 8004aa0:	f280 80c9 	bge.w	8004c36 <_strtod_l+0x85e>
 8004aa4:	1b5b      	subs	r3, r3, r5
 8004aa6:	2b1f      	cmp	r3, #31
 8004aa8:	eba2 0203 	sub.w	r2, r2, r3
 8004aac:	f04f 0701 	mov.w	r7, #1
 8004ab0:	f300 80b6 	bgt.w	8004c20 <_strtod_l+0x848>
 8004ab4:	fa07 f303 	lsl.w	r3, r7, r3
 8004ab8:	930f      	str	r3, [sp, #60]	; 0x3c
 8004aba:	2500      	movs	r5, #0
 8004abc:	18b7      	adds	r7, r6, r2
 8004abe:	9b05      	ldr	r3, [sp, #20]
 8004ac0:	42be      	cmp	r6, r7
 8004ac2:	4414      	add	r4, r2
 8004ac4:	441c      	add	r4, r3
 8004ac6:	4633      	mov	r3, r6
 8004ac8:	bfa8      	it	ge
 8004aca:	463b      	movge	r3, r7
 8004acc:	42a3      	cmp	r3, r4
 8004ace:	bfa8      	it	ge
 8004ad0:	4623      	movge	r3, r4
 8004ad2:	2b00      	cmp	r3, #0
 8004ad4:	bfc2      	ittt	gt
 8004ad6:	1aff      	subgt	r7, r7, r3
 8004ad8:	1ae4      	subgt	r4, r4, r3
 8004ada:	1af6      	subgt	r6, r6, r3
 8004adc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004ade:	2b00      	cmp	r3, #0
 8004ae0:	dd17      	ble.n	8004b12 <_strtod_l+0x73a>
 8004ae2:	9904      	ldr	r1, [sp, #16]
 8004ae4:	461a      	mov	r2, r3
 8004ae6:	4650      	mov	r0, sl
 8004ae8:	f002 f9b2 	bl	8006e50 <__pow5mult>
 8004aec:	9004      	str	r0, [sp, #16]
 8004aee:	2800      	cmp	r0, #0
 8004af0:	f43f aeb5 	beq.w	800485e <_strtod_l+0x486>
 8004af4:	4601      	mov	r1, r0
 8004af6:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8004af8:	4650      	mov	r0, sl
 8004afa:	f002 f903 	bl	8006d04 <__multiply>
 8004afe:	9009      	str	r0, [sp, #36]	; 0x24
 8004b00:	2800      	cmp	r0, #0
 8004b02:	f43f aeac 	beq.w	800485e <_strtod_l+0x486>
 8004b06:	991c      	ldr	r1, [sp, #112]	; 0x70
 8004b08:	4650      	mov	r0, sl
 8004b0a:	f001 ffe1 	bl	8006ad0 <_Bfree>
 8004b0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004b10:	931c      	str	r3, [sp, #112]	; 0x70
 8004b12:	2f00      	cmp	r7, #0
 8004b14:	f300 8093 	bgt.w	8004c3e <_strtod_l+0x866>
 8004b18:	9b07      	ldr	r3, [sp, #28]
 8004b1a:	2b00      	cmp	r3, #0
 8004b1c:	dd08      	ble.n	8004b30 <_strtod_l+0x758>
 8004b1e:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8004b20:	9906      	ldr	r1, [sp, #24]
 8004b22:	4650      	mov	r0, sl
 8004b24:	f002 f994 	bl	8006e50 <__pow5mult>
 8004b28:	9006      	str	r0, [sp, #24]
 8004b2a:	2800      	cmp	r0, #0
 8004b2c:	f43f ae97 	beq.w	800485e <_strtod_l+0x486>
 8004b30:	2c00      	cmp	r4, #0
 8004b32:	dd08      	ble.n	8004b46 <_strtod_l+0x76e>
 8004b34:	9906      	ldr	r1, [sp, #24]
 8004b36:	4622      	mov	r2, r4
 8004b38:	4650      	mov	r0, sl
 8004b3a:	f002 f9e3 	bl	8006f04 <__lshift>
 8004b3e:	9006      	str	r0, [sp, #24]
 8004b40:	2800      	cmp	r0, #0
 8004b42:	f43f ae8c 	beq.w	800485e <_strtod_l+0x486>
 8004b46:	2e00      	cmp	r6, #0
 8004b48:	dd08      	ble.n	8004b5c <_strtod_l+0x784>
 8004b4a:	9904      	ldr	r1, [sp, #16]
 8004b4c:	4632      	mov	r2, r6
 8004b4e:	4650      	mov	r0, sl
 8004b50:	f002 f9d8 	bl	8006f04 <__lshift>
 8004b54:	9004      	str	r0, [sp, #16]
 8004b56:	2800      	cmp	r0, #0
 8004b58:	f43f ae81 	beq.w	800485e <_strtod_l+0x486>
 8004b5c:	9a06      	ldr	r2, [sp, #24]
 8004b5e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8004b60:	4650      	mov	r0, sl
 8004b62:	f002 fa57 	bl	8007014 <__mdiff>
 8004b66:	4683      	mov	fp, r0
 8004b68:	2800      	cmp	r0, #0
 8004b6a:	f43f ae78 	beq.w	800485e <_strtod_l+0x486>
 8004b6e:	2400      	movs	r4, #0
 8004b70:	68c3      	ldr	r3, [r0, #12]
 8004b72:	9904      	ldr	r1, [sp, #16]
 8004b74:	60c4      	str	r4, [r0, #12]
 8004b76:	930d      	str	r3, [sp, #52]	; 0x34
 8004b78:	f002 fa30 	bl	8006fdc <__mcmp>
 8004b7c:	42a0      	cmp	r0, r4
 8004b7e:	da71      	bge.n	8004c64 <_strtod_l+0x88c>
 8004b80:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004b82:	ea53 0308 	orrs.w	r3, r3, r8
 8004b86:	f040 8097 	bne.w	8004cb8 <_strtod_l+0x8e0>
 8004b8a:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8004b8e:	2b00      	cmp	r3, #0
 8004b90:	f040 8092 	bne.w	8004cb8 <_strtod_l+0x8e0>
 8004b94:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8004b98:	0d1b      	lsrs	r3, r3, #20
 8004b9a:	051b      	lsls	r3, r3, #20
 8004b9c:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 8004ba0:	f240 808a 	bls.w	8004cb8 <_strtod_l+0x8e0>
 8004ba4:	f8db 3014 	ldr.w	r3, [fp, #20]
 8004ba8:	b923      	cbnz	r3, 8004bb4 <_strtod_l+0x7dc>
 8004baa:	f8db 3010 	ldr.w	r3, [fp, #16]
 8004bae:	2b01      	cmp	r3, #1
 8004bb0:	f340 8082 	ble.w	8004cb8 <_strtod_l+0x8e0>
 8004bb4:	4659      	mov	r1, fp
 8004bb6:	2201      	movs	r2, #1
 8004bb8:	4650      	mov	r0, sl
 8004bba:	f002 f9a3 	bl	8006f04 <__lshift>
 8004bbe:	9904      	ldr	r1, [sp, #16]
 8004bc0:	4683      	mov	fp, r0
 8004bc2:	f002 fa0b 	bl	8006fdc <__mcmp>
 8004bc6:	2800      	cmp	r0, #0
 8004bc8:	dd76      	ble.n	8004cb8 <_strtod_l+0x8e0>
 8004bca:	9905      	ldr	r1, [sp, #20]
 8004bcc:	4a23      	ldr	r2, [pc, #140]	; (8004c5c <_strtod_l+0x884>)
 8004bce:	464b      	mov	r3, r9
 8004bd0:	2900      	cmp	r1, #0
 8004bd2:	f000 8092 	beq.w	8004cfa <_strtod_l+0x922>
 8004bd6:	ea02 0109 	and.w	r1, r2, r9
 8004bda:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 8004bde:	f300 808c 	bgt.w	8004cfa <_strtod_l+0x922>
 8004be2:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 8004be6:	f77f aeac 	ble.w	8004942 <_strtod_l+0x56a>
 8004bea:	4a1d      	ldr	r2, [pc, #116]	; (8004c60 <_strtod_l+0x888>)
 8004bec:	2300      	movs	r3, #0
 8004bee:	e9cd 3214 	strd	r3, r2, [sp, #80]	; 0x50
 8004bf2:	4640      	mov	r0, r8
 8004bf4:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 8004bf8:	4649      	mov	r1, r9
 8004bfa:	f7fb fd27 	bl	800064c <__aeabi_dmul>
 8004bfe:	460b      	mov	r3, r1
 8004c00:	4303      	orrs	r3, r0
 8004c02:	bf08      	it	eq
 8004c04:	2322      	moveq	r3, #34	; 0x22
 8004c06:	4680      	mov	r8, r0
 8004c08:	4689      	mov	r9, r1
 8004c0a:	bf08      	it	eq
 8004c0c:	f8ca 3000 	streq.w	r3, [sl]
 8004c10:	e630      	b.n	8004874 <_strtod_l+0x49c>
 8004c12:	f04f 32ff 	mov.w	r2, #4294967295
 8004c16:	fa02 f303 	lsl.w	r3, r2, r3
 8004c1a:	ea03 0808 	and.w	r8, r3, r8
 8004c1e:	e6de      	b.n	80049de <_strtod_l+0x606>
 8004c20:	f1c5 457f 	rsb	r5, r5, #4278190080	; 0xff000000
 8004c24:	f505 057f 	add.w	r5, r5, #16711680	; 0xff0000
 8004c28:	f505 457b 	add.w	r5, r5, #64256	; 0xfb00
 8004c2c:	35e2      	adds	r5, #226	; 0xe2
 8004c2e:	fa07 f505 	lsl.w	r5, r7, r5
 8004c32:	970f      	str	r7, [sp, #60]	; 0x3c
 8004c34:	e742      	b.n	8004abc <_strtod_l+0x6e4>
 8004c36:	2301      	movs	r3, #1
 8004c38:	2500      	movs	r5, #0
 8004c3a:	930f      	str	r3, [sp, #60]	; 0x3c
 8004c3c:	e73e      	b.n	8004abc <_strtod_l+0x6e4>
 8004c3e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8004c40:	463a      	mov	r2, r7
 8004c42:	4650      	mov	r0, sl
 8004c44:	f002 f95e 	bl	8006f04 <__lshift>
 8004c48:	901c      	str	r0, [sp, #112]	; 0x70
 8004c4a:	2800      	cmp	r0, #0
 8004c4c:	f47f af64 	bne.w	8004b18 <_strtod_l+0x740>
 8004c50:	e605      	b.n	800485e <_strtod_l+0x486>
 8004c52:	bf00      	nop
 8004c54:	0800a008 	.word	0x0800a008
 8004c58:	fffffc02 	.word	0xfffffc02
 8004c5c:	7ff00000 	.word	0x7ff00000
 8004c60:	39500000 	.word	0x39500000
 8004c64:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 8004c68:	d166      	bne.n	8004d38 <_strtod_l+0x960>
 8004c6a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004c6c:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8004c70:	b35a      	cbz	r2, 8004cca <_strtod_l+0x8f2>
 8004c72:	4a9d      	ldr	r2, [pc, #628]	; (8004ee8 <_strtod_l+0xb10>)
 8004c74:	4293      	cmp	r3, r2
 8004c76:	d12c      	bne.n	8004cd2 <_strtod_l+0x8fa>
 8004c78:	9b05      	ldr	r3, [sp, #20]
 8004c7a:	4640      	mov	r0, r8
 8004c7c:	b303      	cbz	r3, 8004cc0 <_strtod_l+0x8e8>
 8004c7e:	4a9b      	ldr	r2, [pc, #620]	; (8004eec <_strtod_l+0xb14>)
 8004c80:	464b      	mov	r3, r9
 8004c82:	401a      	ands	r2, r3
 8004c84:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
 8004c88:	f04f 31ff 	mov.w	r1, #4294967295
 8004c8c:	d81b      	bhi.n	8004cc6 <_strtod_l+0x8ee>
 8004c8e:	0d12      	lsrs	r2, r2, #20
 8004c90:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 8004c94:	fa01 f303 	lsl.w	r3, r1, r3
 8004c98:	4298      	cmp	r0, r3
 8004c9a:	d11a      	bne.n	8004cd2 <_strtod_l+0x8fa>
 8004c9c:	4b94      	ldr	r3, [pc, #592]	; (8004ef0 <_strtod_l+0xb18>)
 8004c9e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004ca0:	429a      	cmp	r2, r3
 8004ca2:	d102      	bne.n	8004caa <_strtod_l+0x8d2>
 8004ca4:	3001      	adds	r0, #1
 8004ca6:	f43f adda 	beq.w	800485e <_strtod_l+0x486>
 8004caa:	4b90      	ldr	r3, [pc, #576]	; (8004eec <_strtod_l+0xb14>)
 8004cac:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004cae:	401a      	ands	r2, r3
 8004cb0:	f502 1980 	add.w	r9, r2, #1048576	; 0x100000
 8004cb4:	f04f 0800 	mov.w	r8, #0
 8004cb8:	9b05      	ldr	r3, [sp, #20]
 8004cba:	2b00      	cmp	r3, #0
 8004cbc:	d195      	bne.n	8004bea <_strtod_l+0x812>
 8004cbe:	e5d9      	b.n	8004874 <_strtod_l+0x49c>
 8004cc0:	f04f 33ff 	mov.w	r3, #4294967295
 8004cc4:	e7e8      	b.n	8004c98 <_strtod_l+0x8c0>
 8004cc6:	460b      	mov	r3, r1
 8004cc8:	e7e6      	b.n	8004c98 <_strtod_l+0x8c0>
 8004cca:	ea53 0308 	orrs.w	r3, r3, r8
 8004cce:	f43f af7c 	beq.w	8004bca <_strtod_l+0x7f2>
 8004cd2:	b1e5      	cbz	r5, 8004d0e <_strtod_l+0x936>
 8004cd4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004cd6:	421d      	tst	r5, r3
 8004cd8:	d0ee      	beq.n	8004cb8 <_strtod_l+0x8e0>
 8004cda:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004cdc:	9a05      	ldr	r2, [sp, #20]
 8004cde:	4640      	mov	r0, r8
 8004ce0:	4649      	mov	r1, r9
 8004ce2:	b1c3      	cbz	r3, 8004d16 <_strtod_l+0x93e>
 8004ce4:	f7ff fb55 	bl	8004392 <sulp>
 8004ce8:	4602      	mov	r2, r0
 8004cea:	460b      	mov	r3, r1
 8004cec:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8004cf0:	f7fb faf6 	bl	80002e0 <__adddf3>
 8004cf4:	4680      	mov	r8, r0
 8004cf6:	4689      	mov	r9, r1
 8004cf8:	e7de      	b.n	8004cb8 <_strtod_l+0x8e0>
 8004cfa:	4013      	ands	r3, r2
 8004cfc:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 8004d00:	ea6f 5913 	mvn.w	r9, r3, lsr #20
 8004d04:	ea6f 5909 	mvn.w	r9, r9, lsl #20
 8004d08:	f04f 38ff 	mov.w	r8, #4294967295
 8004d0c:	e7d4      	b.n	8004cb8 <_strtod_l+0x8e0>
 8004d0e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8004d10:	ea13 0f08 	tst.w	r3, r8
 8004d14:	e7e0      	b.n	8004cd8 <_strtod_l+0x900>
 8004d16:	f7ff fb3c 	bl	8004392 <sulp>
 8004d1a:	4602      	mov	r2, r0
 8004d1c:	460b      	mov	r3, r1
 8004d1e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8004d22:	f7fb fadb 	bl	80002dc <__aeabi_dsub>
 8004d26:	2200      	movs	r2, #0
 8004d28:	2300      	movs	r3, #0
 8004d2a:	4680      	mov	r8, r0
 8004d2c:	4689      	mov	r9, r1
 8004d2e:	f7fb fef5 	bl	8000b1c <__aeabi_dcmpeq>
 8004d32:	2800      	cmp	r0, #0
 8004d34:	d0c0      	beq.n	8004cb8 <_strtod_l+0x8e0>
 8004d36:	e604      	b.n	8004942 <_strtod_l+0x56a>
 8004d38:	9904      	ldr	r1, [sp, #16]
 8004d3a:	4658      	mov	r0, fp
 8004d3c:	f002 faca 	bl	80072d4 <__ratio>
 8004d40:	2200      	movs	r2, #0
 8004d42:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8004d46:	4606      	mov	r6, r0
 8004d48:	460f      	mov	r7, r1
 8004d4a:	f7fb fefb 	bl	8000b44 <__aeabi_dcmple>
 8004d4e:	2800      	cmp	r0, #0
 8004d50:	d075      	beq.n	8004e3e <_strtod_l+0xa66>
 8004d52:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004d54:	2b00      	cmp	r3, #0
 8004d56:	d047      	beq.n	8004de8 <_strtod_l+0xa10>
 8004d58:	4f66      	ldr	r7, [pc, #408]	; (8004ef4 <_strtod_l+0xb1c>)
 8004d5a:	2600      	movs	r6, #0
 8004d5c:	4d65      	ldr	r5, [pc, #404]	; (8004ef4 <_strtod_l+0xb1c>)
 8004d5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004d60:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8004d64:	0d1b      	lsrs	r3, r3, #20
 8004d66:	051b      	lsls	r3, r3, #20
 8004d68:	930f      	str	r3, [sp, #60]	; 0x3c
 8004d6a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8004d6c:	4b62      	ldr	r3, [pc, #392]	; (8004ef8 <_strtod_l+0xb20>)
 8004d6e:	429a      	cmp	r2, r3
 8004d70:	f040 80ca 	bne.w	8004f08 <_strtod_l+0xb30>
 8004d74:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8004d78:	e9cd 2314 	strd	r2, r3, [sp, #80]	; 0x50
 8004d7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004d7e:	f1a3 7954 	sub.w	r9, r3, #55574528	; 0x3500000
 8004d82:	4640      	mov	r0, r8
 8004d84:	4649      	mov	r1, r9
 8004d86:	f002 f9cf 	bl	8007128 <__ulp>
 8004d8a:	4602      	mov	r2, r0
 8004d8c:	460b      	mov	r3, r1
 8004d8e:	4630      	mov	r0, r6
 8004d90:	4639      	mov	r1, r7
 8004d92:	f7fb fc5b 	bl	800064c <__aeabi_dmul>
 8004d96:	4642      	mov	r2, r8
 8004d98:	464b      	mov	r3, r9
 8004d9a:	f7fb faa1 	bl	80002e0 <__adddf3>
 8004d9e:	460b      	mov	r3, r1
 8004da0:	4952      	ldr	r1, [pc, #328]	; (8004eec <_strtod_l+0xb14>)
 8004da2:	4a56      	ldr	r2, [pc, #344]	; (8004efc <_strtod_l+0xb24>)
 8004da4:	4019      	ands	r1, r3
 8004da6:	4291      	cmp	r1, r2
 8004da8:	4680      	mov	r8, r0
 8004daa:	d95e      	bls.n	8004e6a <_strtod_l+0xa92>
 8004dac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004dae:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 8004db2:	4293      	cmp	r3, r2
 8004db4:	d103      	bne.n	8004dbe <_strtod_l+0x9e6>
 8004db6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004db8:	3301      	adds	r3, #1
 8004dba:	f43f ad50 	beq.w	800485e <_strtod_l+0x486>
 8004dbe:	f8df 9130 	ldr.w	r9, [pc, #304]	; 8004ef0 <_strtod_l+0xb18>
 8004dc2:	f04f 38ff 	mov.w	r8, #4294967295
 8004dc6:	991c      	ldr	r1, [sp, #112]	; 0x70
 8004dc8:	4650      	mov	r0, sl
 8004dca:	f001 fe81 	bl	8006ad0 <_Bfree>
 8004dce:	9906      	ldr	r1, [sp, #24]
 8004dd0:	4650      	mov	r0, sl
 8004dd2:	f001 fe7d 	bl	8006ad0 <_Bfree>
 8004dd6:	9904      	ldr	r1, [sp, #16]
 8004dd8:	4650      	mov	r0, sl
 8004dda:	f001 fe79 	bl	8006ad0 <_Bfree>
 8004dde:	4659      	mov	r1, fp
 8004de0:	4650      	mov	r0, sl
 8004de2:	f001 fe75 	bl	8006ad0 <_Bfree>
 8004de6:	e61e      	b.n	8004a26 <_strtod_l+0x64e>
 8004de8:	f1b8 0f00 	cmp.w	r8, #0
 8004dec:	d119      	bne.n	8004e22 <_strtod_l+0xa4a>
 8004dee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004df0:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8004df4:	b9e3      	cbnz	r3, 8004e30 <_strtod_l+0xa58>
 8004df6:	4b3f      	ldr	r3, [pc, #252]	; (8004ef4 <_strtod_l+0xb1c>)
 8004df8:	2200      	movs	r2, #0
 8004dfa:	4630      	mov	r0, r6
 8004dfc:	4639      	mov	r1, r7
 8004dfe:	f7fb fe97 	bl	8000b30 <__aeabi_dcmplt>
 8004e02:	b9c8      	cbnz	r0, 8004e38 <_strtod_l+0xa60>
 8004e04:	4b3e      	ldr	r3, [pc, #248]	; (8004f00 <_strtod_l+0xb28>)
 8004e06:	2200      	movs	r2, #0
 8004e08:	4630      	mov	r0, r6
 8004e0a:	4639      	mov	r1, r7
 8004e0c:	f7fb fc1e 	bl	800064c <__aeabi_dmul>
 8004e10:	4604      	mov	r4, r0
 8004e12:	460d      	mov	r5, r1
 8004e14:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 8004e18:	9418      	str	r4, [sp, #96]	; 0x60
 8004e1a:	9319      	str	r3, [sp, #100]	; 0x64
 8004e1c:	e9dd 6718 	ldrd	r6, r7, [sp, #96]	; 0x60
 8004e20:	e79d      	b.n	8004d5e <_strtod_l+0x986>
 8004e22:	f1b8 0f01 	cmp.w	r8, #1
 8004e26:	d103      	bne.n	8004e30 <_strtod_l+0xa58>
 8004e28:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004e2a:	2b00      	cmp	r3, #0
 8004e2c:	f43f ad89 	beq.w	8004942 <_strtod_l+0x56a>
 8004e30:	4f34      	ldr	r7, [pc, #208]	; (8004f04 <_strtod_l+0xb2c>)
 8004e32:	2600      	movs	r6, #0
 8004e34:	2400      	movs	r4, #0
 8004e36:	e791      	b.n	8004d5c <_strtod_l+0x984>
 8004e38:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8004e3a:	4d31      	ldr	r5, [pc, #196]	; (8004f00 <_strtod_l+0xb28>)
 8004e3c:	e7ea      	b.n	8004e14 <_strtod_l+0xa3c>
 8004e3e:	4b30      	ldr	r3, [pc, #192]	; (8004f00 <_strtod_l+0xb28>)
 8004e40:	2200      	movs	r2, #0
 8004e42:	4630      	mov	r0, r6
 8004e44:	4639      	mov	r1, r7
 8004e46:	f7fb fc01 	bl	800064c <__aeabi_dmul>
 8004e4a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004e4c:	4604      	mov	r4, r0
 8004e4e:	460d      	mov	r5, r1
 8004e50:	b933      	cbnz	r3, 8004e60 <_strtod_l+0xa88>
 8004e52:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8004e56:	9010      	str	r0, [sp, #64]	; 0x40
 8004e58:	9311      	str	r3, [sp, #68]	; 0x44
 8004e5a:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 8004e5e:	e77e      	b.n	8004d5e <_strtod_l+0x986>
 8004e60:	4602      	mov	r2, r0
 8004e62:	460b      	mov	r3, r1
 8004e64:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 8004e68:	e7f7      	b.n	8004e5a <_strtod_l+0xa82>
 8004e6a:	f103 7954 	add.w	r9, r3, #55574528	; 0x3500000
 8004e6e:	9b05      	ldr	r3, [sp, #20]
 8004e70:	2b00      	cmp	r3, #0
 8004e72:	d1a8      	bne.n	8004dc6 <_strtod_l+0x9ee>
 8004e74:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8004e78:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8004e7a:	0d1b      	lsrs	r3, r3, #20
 8004e7c:	051b      	lsls	r3, r3, #20
 8004e7e:	429a      	cmp	r2, r3
 8004e80:	d1a1      	bne.n	8004dc6 <_strtod_l+0x9ee>
 8004e82:	4620      	mov	r0, r4
 8004e84:	4629      	mov	r1, r5
 8004e86:	f7fc fa59 	bl	800133c <__aeabi_d2lz>
 8004e8a:	f7fb fbb1 	bl	80005f0 <__aeabi_l2d>
 8004e8e:	4602      	mov	r2, r0
 8004e90:	460b      	mov	r3, r1
 8004e92:	4620      	mov	r0, r4
 8004e94:	4629      	mov	r1, r5
 8004e96:	f7fb fa21 	bl	80002dc <__aeabi_dsub>
 8004e9a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004e9c:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8004ea0:	ea43 0308 	orr.w	r3, r3, r8
 8004ea4:	4313      	orrs	r3, r2
 8004ea6:	4604      	mov	r4, r0
 8004ea8:	460d      	mov	r5, r1
 8004eaa:	d068      	beq.n	8004f7e <_strtod_l+0xba6>
 8004eac:	a30a      	add	r3, pc, #40	; (adr r3, 8004ed8 <_strtod_l+0xb00>)
 8004eae:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004eb2:	f7fb fe3d 	bl	8000b30 <__aeabi_dcmplt>
 8004eb6:	2800      	cmp	r0, #0
 8004eb8:	f47f acdc 	bne.w	8004874 <_strtod_l+0x49c>
 8004ebc:	a308      	add	r3, pc, #32	; (adr r3, 8004ee0 <_strtod_l+0xb08>)
 8004ebe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004ec2:	4620      	mov	r0, r4
 8004ec4:	4629      	mov	r1, r5
 8004ec6:	f7fb fe51 	bl	8000b6c <__aeabi_dcmpgt>
 8004eca:	2800      	cmp	r0, #0
 8004ecc:	f43f af7b 	beq.w	8004dc6 <_strtod_l+0x9ee>
 8004ed0:	e4d0      	b.n	8004874 <_strtod_l+0x49c>
 8004ed2:	bf00      	nop
 8004ed4:	f3af 8000 	nop.w
 8004ed8:	94a03595 	.word	0x94a03595
 8004edc:	3fdfffff 	.word	0x3fdfffff
 8004ee0:	35afe535 	.word	0x35afe535
 8004ee4:	3fe00000 	.word	0x3fe00000
 8004ee8:	000fffff 	.word	0x000fffff
 8004eec:	7ff00000 	.word	0x7ff00000
 8004ef0:	7fefffff 	.word	0x7fefffff
 8004ef4:	3ff00000 	.word	0x3ff00000
 8004ef8:	7fe00000 	.word	0x7fe00000
 8004efc:	7c9fffff 	.word	0x7c9fffff
 8004f00:	3fe00000 	.word	0x3fe00000
 8004f04:	bff00000 	.word	0xbff00000
 8004f08:	9b05      	ldr	r3, [sp, #20]
 8004f0a:	b313      	cbz	r3, 8004f52 <_strtod_l+0xb7a>
 8004f0c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8004f0e:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8004f12:	d81e      	bhi.n	8004f52 <_strtod_l+0xb7a>
 8004f14:	a326      	add	r3, pc, #152	; (adr r3, 8004fb0 <_strtod_l+0xbd8>)
 8004f16:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004f1a:	4620      	mov	r0, r4
 8004f1c:	4629      	mov	r1, r5
 8004f1e:	f7fb fe11 	bl	8000b44 <__aeabi_dcmple>
 8004f22:	b190      	cbz	r0, 8004f4a <_strtod_l+0xb72>
 8004f24:	4629      	mov	r1, r5
 8004f26:	4620      	mov	r0, r4
 8004f28:	f7fb fe68 	bl	8000bfc <__aeabi_d2uiz>
 8004f2c:	2801      	cmp	r0, #1
 8004f2e:	bf38      	it	cc
 8004f30:	2001      	movcc	r0, #1
 8004f32:	f7fb fb11 	bl	8000558 <__aeabi_ui2d>
 8004f36:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004f38:	4604      	mov	r4, r0
 8004f3a:	460d      	mov	r5, r1
 8004f3c:	b9d3      	cbnz	r3, 8004f74 <_strtod_l+0xb9c>
 8004f3e:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8004f42:	9012      	str	r0, [sp, #72]	; 0x48
 8004f44:	9313      	str	r3, [sp, #76]	; 0x4c
 8004f46:	e9dd 6712 	ldrd	r6, r7, [sp, #72]	; 0x48
 8004f4a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8004f4c:	f107 63d6 	add.w	r3, r7, #112197632	; 0x6b00000
 8004f50:	1a9f      	subs	r7, r3, r2
 8004f52:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8004f56:	f002 f8e7 	bl	8007128 <__ulp>
 8004f5a:	4602      	mov	r2, r0
 8004f5c:	460b      	mov	r3, r1
 8004f5e:	4630      	mov	r0, r6
 8004f60:	4639      	mov	r1, r7
 8004f62:	f7fb fb73 	bl	800064c <__aeabi_dmul>
 8004f66:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8004f6a:	f7fb f9b9 	bl	80002e0 <__adddf3>
 8004f6e:	4680      	mov	r8, r0
 8004f70:	4689      	mov	r9, r1
 8004f72:	e77c      	b.n	8004e6e <_strtod_l+0xa96>
 8004f74:	4602      	mov	r2, r0
 8004f76:	460b      	mov	r3, r1
 8004f78:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
 8004f7c:	e7e3      	b.n	8004f46 <_strtod_l+0xb6e>
 8004f7e:	a30e      	add	r3, pc, #56	; (adr r3, 8004fb8 <_strtod_l+0xbe0>)
 8004f80:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004f84:	f7fb fdd4 	bl	8000b30 <__aeabi_dcmplt>
 8004f88:	e79f      	b.n	8004eca <_strtod_l+0xaf2>
 8004f8a:	2300      	movs	r3, #0
 8004f8c:	930c      	str	r3, [sp, #48]	; 0x30
 8004f8e:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8004f90:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8004f92:	6013      	str	r3, [r2, #0]
 8004f94:	f7ff ba65 	b.w	8004462 <_strtod_l+0x8a>
 8004f98:	2b65      	cmp	r3, #101	; 0x65
 8004f9a:	f43f ab5c 	beq.w	8004656 <_strtod_l+0x27e>
 8004f9e:	2b45      	cmp	r3, #69	; 0x45
 8004fa0:	f43f ab59 	beq.w	8004656 <_strtod_l+0x27e>
 8004fa4:	2201      	movs	r2, #1
 8004fa6:	f7ff bb8d 	b.w	80046c4 <_strtod_l+0x2ec>
 8004faa:	bf00      	nop
 8004fac:	f3af 8000 	nop.w
 8004fb0:	ffc00000 	.word	0xffc00000
 8004fb4:	41dfffff 	.word	0x41dfffff
 8004fb8:	94a03595 	.word	0x94a03595
 8004fbc:	3fcfffff 	.word	0x3fcfffff

08004fc0 <_strtod_r>:
 8004fc0:	4b01      	ldr	r3, [pc, #4]	; (8004fc8 <_strtod_r+0x8>)
 8004fc2:	f7ff ba09 	b.w	80043d8 <_strtod_l>
 8004fc6:	bf00      	nop
 8004fc8:	20000b78 	.word	0x20000b78

08004fcc <strtok>:
 8004fcc:	4b16      	ldr	r3, [pc, #88]	; (8005028 <strtok+0x5c>)
 8004fce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004fd2:	681f      	ldr	r7, [r3, #0]
 8004fd4:	6dbc      	ldr	r4, [r7, #88]	; 0x58
 8004fd6:	4605      	mov	r5, r0
 8004fd8:	460e      	mov	r6, r1
 8004fda:	b9ec      	cbnz	r4, 8005018 <strtok+0x4c>
 8004fdc:	2050      	movs	r0, #80	; 0x50
 8004fde:	f7fd fff7 	bl	8002fd0 <malloc>
 8004fe2:	4602      	mov	r2, r0
 8004fe4:	65b8      	str	r0, [r7, #88]	; 0x58
 8004fe6:	b920      	cbnz	r0, 8004ff2 <strtok+0x26>
 8004fe8:	4b10      	ldr	r3, [pc, #64]	; (800502c <strtok+0x60>)
 8004fea:	4811      	ldr	r0, [pc, #68]	; (8005030 <strtok+0x64>)
 8004fec:	2157      	movs	r1, #87	; 0x57
 8004fee:	f000 f9a3 	bl	8005338 <__assert_func>
 8004ff2:	e9c0 4400 	strd	r4, r4, [r0]
 8004ff6:	e9c0 4402 	strd	r4, r4, [r0, #8]
 8004ffa:	e9c0 4404 	strd	r4, r4, [r0, #16]
 8004ffe:	e9c0 440a 	strd	r4, r4, [r0, #40]	; 0x28
 8005002:	e9c0 440c 	strd	r4, r4, [r0, #48]	; 0x30
 8005006:	e9c0 440e 	strd	r4, r4, [r0, #56]	; 0x38
 800500a:	e9c0 4410 	strd	r4, r4, [r0, #64]	; 0x40
 800500e:	e9c0 4412 	strd	r4, r4, [r0, #72]	; 0x48
 8005012:	6184      	str	r4, [r0, #24]
 8005014:	7704      	strb	r4, [r0, #28]
 8005016:	6244      	str	r4, [r0, #36]	; 0x24
 8005018:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800501a:	4631      	mov	r1, r6
 800501c:	4628      	mov	r0, r5
 800501e:	2301      	movs	r3, #1
 8005020:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005024:	f000 b806 	b.w	8005034 <__strtok_r>
 8005028:	20000b10 	.word	0x20000b10
 800502c:	0800a030 	.word	0x0800a030
 8005030:	0800a047 	.word	0x0800a047

08005034 <__strtok_r>:
 8005034:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005036:	b908      	cbnz	r0, 800503c <__strtok_r+0x8>
 8005038:	6810      	ldr	r0, [r2, #0]
 800503a:	b188      	cbz	r0, 8005060 <__strtok_r+0x2c>
 800503c:	4604      	mov	r4, r0
 800503e:	4620      	mov	r0, r4
 8005040:	f814 5b01 	ldrb.w	r5, [r4], #1
 8005044:	460f      	mov	r7, r1
 8005046:	f817 6b01 	ldrb.w	r6, [r7], #1
 800504a:	b91e      	cbnz	r6, 8005054 <__strtok_r+0x20>
 800504c:	b965      	cbnz	r5, 8005068 <__strtok_r+0x34>
 800504e:	6015      	str	r5, [r2, #0]
 8005050:	4628      	mov	r0, r5
 8005052:	e005      	b.n	8005060 <__strtok_r+0x2c>
 8005054:	42b5      	cmp	r5, r6
 8005056:	d1f6      	bne.n	8005046 <__strtok_r+0x12>
 8005058:	2b00      	cmp	r3, #0
 800505a:	d1f0      	bne.n	800503e <__strtok_r+0xa>
 800505c:	6014      	str	r4, [r2, #0]
 800505e:	7003      	strb	r3, [r0, #0]
 8005060:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005062:	461c      	mov	r4, r3
 8005064:	e00c      	b.n	8005080 <__strtok_r+0x4c>
 8005066:	b915      	cbnz	r5, 800506e <__strtok_r+0x3a>
 8005068:	f814 3b01 	ldrb.w	r3, [r4], #1
 800506c:	460e      	mov	r6, r1
 800506e:	f816 5b01 	ldrb.w	r5, [r6], #1
 8005072:	42ab      	cmp	r3, r5
 8005074:	d1f7      	bne.n	8005066 <__strtok_r+0x32>
 8005076:	2b00      	cmp	r3, #0
 8005078:	d0f3      	beq.n	8005062 <__strtok_r+0x2e>
 800507a:	2300      	movs	r3, #0
 800507c:	f804 3c01 	strb.w	r3, [r4, #-1]
 8005080:	6014      	str	r4, [r2, #0]
 8005082:	e7ed      	b.n	8005060 <__strtok_r+0x2c>

08005084 <_strtol_l.isra.0>:
 8005084:	2b01      	cmp	r3, #1
 8005086:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800508a:	4686      	mov	lr, r0
 800508c:	d001      	beq.n	8005092 <_strtol_l.isra.0+0xe>
 800508e:	2b24      	cmp	r3, #36	; 0x24
 8005090:	d906      	bls.n	80050a0 <_strtol_l.isra.0+0x1c>
 8005092:	f7fd fdd9 	bl	8002c48 <__errno>
 8005096:	2316      	movs	r3, #22
 8005098:	6003      	str	r3, [r0, #0]
 800509a:	2000      	movs	r0, #0
 800509c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80050a0:	4e3a      	ldr	r6, [pc, #232]	; (800518c <_strtol_l.isra.0+0x108>)
 80050a2:	468c      	mov	ip, r1
 80050a4:	4660      	mov	r0, ip
 80050a6:	f81c 4b01 	ldrb.w	r4, [ip], #1
 80050aa:	5da5      	ldrb	r5, [r4, r6]
 80050ac:	f015 0508 	ands.w	r5, r5, #8
 80050b0:	d1f8      	bne.n	80050a4 <_strtol_l.isra.0+0x20>
 80050b2:	2c2d      	cmp	r4, #45	; 0x2d
 80050b4:	d133      	bne.n	800511e <_strtol_l.isra.0+0x9a>
 80050b6:	f89c 4000 	ldrb.w	r4, [ip]
 80050ba:	f04f 0801 	mov.w	r8, #1
 80050be:	f100 0c02 	add.w	ip, r0, #2
 80050c2:	2b00      	cmp	r3, #0
 80050c4:	d05d      	beq.n	8005182 <_strtol_l.isra.0+0xfe>
 80050c6:	2b10      	cmp	r3, #16
 80050c8:	d10c      	bne.n	80050e4 <_strtol_l.isra.0+0x60>
 80050ca:	2c30      	cmp	r4, #48	; 0x30
 80050cc:	d10a      	bne.n	80050e4 <_strtol_l.isra.0+0x60>
 80050ce:	f89c 0000 	ldrb.w	r0, [ip]
 80050d2:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 80050d6:	2858      	cmp	r0, #88	; 0x58
 80050d8:	d14e      	bne.n	8005178 <_strtol_l.isra.0+0xf4>
 80050da:	f89c 4001 	ldrb.w	r4, [ip, #1]
 80050de:	2310      	movs	r3, #16
 80050e0:	f10c 0c02 	add.w	ip, ip, #2
 80050e4:	f108 4700 	add.w	r7, r8, #2147483648	; 0x80000000
 80050e8:	3f01      	subs	r7, #1
 80050ea:	2500      	movs	r5, #0
 80050ec:	fbb7 f9f3 	udiv	r9, r7, r3
 80050f0:	4628      	mov	r0, r5
 80050f2:	fb03 7a19 	mls	sl, r3, r9, r7
 80050f6:	f1a4 0630 	sub.w	r6, r4, #48	; 0x30
 80050fa:	2e09      	cmp	r6, #9
 80050fc:	d818      	bhi.n	8005130 <_strtol_l.isra.0+0xac>
 80050fe:	4634      	mov	r4, r6
 8005100:	42a3      	cmp	r3, r4
 8005102:	dd24      	ble.n	800514e <_strtol_l.isra.0+0xca>
 8005104:	2d00      	cmp	r5, #0
 8005106:	db1f      	blt.n	8005148 <_strtol_l.isra.0+0xc4>
 8005108:	4581      	cmp	r9, r0
 800510a:	d31d      	bcc.n	8005148 <_strtol_l.isra.0+0xc4>
 800510c:	d101      	bne.n	8005112 <_strtol_l.isra.0+0x8e>
 800510e:	45a2      	cmp	sl, r4
 8005110:	db1a      	blt.n	8005148 <_strtol_l.isra.0+0xc4>
 8005112:	fb00 4003 	mla	r0, r0, r3, r4
 8005116:	2501      	movs	r5, #1
 8005118:	f81c 4b01 	ldrb.w	r4, [ip], #1
 800511c:	e7eb      	b.n	80050f6 <_strtol_l.isra.0+0x72>
 800511e:	2c2b      	cmp	r4, #43	; 0x2b
 8005120:	bf08      	it	eq
 8005122:	f89c 4000 	ldrbeq.w	r4, [ip]
 8005126:	46a8      	mov	r8, r5
 8005128:	bf08      	it	eq
 800512a:	f100 0c02 	addeq.w	ip, r0, #2
 800512e:	e7c8      	b.n	80050c2 <_strtol_l.isra.0+0x3e>
 8005130:	f1a4 0641 	sub.w	r6, r4, #65	; 0x41
 8005134:	2e19      	cmp	r6, #25
 8005136:	d801      	bhi.n	800513c <_strtol_l.isra.0+0xb8>
 8005138:	3c37      	subs	r4, #55	; 0x37
 800513a:	e7e1      	b.n	8005100 <_strtol_l.isra.0+0x7c>
 800513c:	f1a4 0661 	sub.w	r6, r4, #97	; 0x61
 8005140:	2e19      	cmp	r6, #25
 8005142:	d804      	bhi.n	800514e <_strtol_l.isra.0+0xca>
 8005144:	3c57      	subs	r4, #87	; 0x57
 8005146:	e7db      	b.n	8005100 <_strtol_l.isra.0+0x7c>
 8005148:	f04f 35ff 	mov.w	r5, #4294967295
 800514c:	e7e4      	b.n	8005118 <_strtol_l.isra.0+0x94>
 800514e:	2d00      	cmp	r5, #0
 8005150:	da08      	bge.n	8005164 <_strtol_l.isra.0+0xe0>
 8005152:	2322      	movs	r3, #34	; 0x22
 8005154:	f8ce 3000 	str.w	r3, [lr]
 8005158:	4638      	mov	r0, r7
 800515a:	2a00      	cmp	r2, #0
 800515c:	d09e      	beq.n	800509c <_strtol_l.isra.0+0x18>
 800515e:	f10c 31ff 	add.w	r1, ip, #4294967295
 8005162:	e007      	b.n	8005174 <_strtol_l.isra.0+0xf0>
 8005164:	f1b8 0f00 	cmp.w	r8, #0
 8005168:	d000      	beq.n	800516c <_strtol_l.isra.0+0xe8>
 800516a:	4240      	negs	r0, r0
 800516c:	2a00      	cmp	r2, #0
 800516e:	d095      	beq.n	800509c <_strtol_l.isra.0+0x18>
 8005170:	2d00      	cmp	r5, #0
 8005172:	d1f4      	bne.n	800515e <_strtol_l.isra.0+0xda>
 8005174:	6011      	str	r1, [r2, #0]
 8005176:	e791      	b.n	800509c <_strtol_l.isra.0+0x18>
 8005178:	2430      	movs	r4, #48	; 0x30
 800517a:	2b00      	cmp	r3, #0
 800517c:	d1b2      	bne.n	80050e4 <_strtol_l.isra.0+0x60>
 800517e:	2308      	movs	r3, #8
 8005180:	e7b0      	b.n	80050e4 <_strtol_l.isra.0+0x60>
 8005182:	2c30      	cmp	r4, #48	; 0x30
 8005184:	d0a3      	beq.n	80050ce <_strtol_l.isra.0+0x4a>
 8005186:	230a      	movs	r3, #10
 8005188:	e7ac      	b.n	80050e4 <_strtol_l.isra.0+0x60>
 800518a:	bf00      	nop
 800518c:	0800a0e5 	.word	0x0800a0e5

08005190 <_strtol_r>:
 8005190:	f7ff bf78 	b.w	8005084 <_strtol_l.isra.0>

08005194 <__swbuf_r>:
 8005194:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005196:	460e      	mov	r6, r1
 8005198:	4614      	mov	r4, r2
 800519a:	4605      	mov	r5, r0
 800519c:	b118      	cbz	r0, 80051a6 <__swbuf_r+0x12>
 800519e:	6983      	ldr	r3, [r0, #24]
 80051a0:	b90b      	cbnz	r3, 80051a6 <__swbuf_r+0x12>
 80051a2:	f7fd fe33 	bl	8002e0c <__sinit>
 80051a6:	4b21      	ldr	r3, [pc, #132]	; (800522c <__swbuf_r+0x98>)
 80051a8:	429c      	cmp	r4, r3
 80051aa:	d12b      	bne.n	8005204 <__swbuf_r+0x70>
 80051ac:	686c      	ldr	r4, [r5, #4]
 80051ae:	69a3      	ldr	r3, [r4, #24]
 80051b0:	60a3      	str	r3, [r4, #8]
 80051b2:	89a3      	ldrh	r3, [r4, #12]
 80051b4:	071a      	lsls	r2, r3, #28
 80051b6:	d52f      	bpl.n	8005218 <__swbuf_r+0x84>
 80051b8:	6923      	ldr	r3, [r4, #16]
 80051ba:	b36b      	cbz	r3, 8005218 <__swbuf_r+0x84>
 80051bc:	6923      	ldr	r3, [r4, #16]
 80051be:	6820      	ldr	r0, [r4, #0]
 80051c0:	1ac0      	subs	r0, r0, r3
 80051c2:	6963      	ldr	r3, [r4, #20]
 80051c4:	b2f6      	uxtb	r6, r6
 80051c6:	4283      	cmp	r3, r0
 80051c8:	4637      	mov	r7, r6
 80051ca:	dc04      	bgt.n	80051d6 <__swbuf_r+0x42>
 80051cc:	4621      	mov	r1, r4
 80051ce:	4628      	mov	r0, r5
 80051d0:	f000 ffe2 	bl	8006198 <_fflush_r>
 80051d4:	bb30      	cbnz	r0, 8005224 <__swbuf_r+0x90>
 80051d6:	68a3      	ldr	r3, [r4, #8]
 80051d8:	3b01      	subs	r3, #1
 80051da:	60a3      	str	r3, [r4, #8]
 80051dc:	6823      	ldr	r3, [r4, #0]
 80051de:	1c5a      	adds	r2, r3, #1
 80051e0:	6022      	str	r2, [r4, #0]
 80051e2:	701e      	strb	r6, [r3, #0]
 80051e4:	6963      	ldr	r3, [r4, #20]
 80051e6:	3001      	adds	r0, #1
 80051e8:	4283      	cmp	r3, r0
 80051ea:	d004      	beq.n	80051f6 <__swbuf_r+0x62>
 80051ec:	89a3      	ldrh	r3, [r4, #12]
 80051ee:	07db      	lsls	r3, r3, #31
 80051f0:	d506      	bpl.n	8005200 <__swbuf_r+0x6c>
 80051f2:	2e0a      	cmp	r6, #10
 80051f4:	d104      	bne.n	8005200 <__swbuf_r+0x6c>
 80051f6:	4621      	mov	r1, r4
 80051f8:	4628      	mov	r0, r5
 80051fa:	f000 ffcd 	bl	8006198 <_fflush_r>
 80051fe:	b988      	cbnz	r0, 8005224 <__swbuf_r+0x90>
 8005200:	4638      	mov	r0, r7
 8005202:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005204:	4b0a      	ldr	r3, [pc, #40]	; (8005230 <__swbuf_r+0x9c>)
 8005206:	429c      	cmp	r4, r3
 8005208:	d101      	bne.n	800520e <__swbuf_r+0x7a>
 800520a:	68ac      	ldr	r4, [r5, #8]
 800520c:	e7cf      	b.n	80051ae <__swbuf_r+0x1a>
 800520e:	4b09      	ldr	r3, [pc, #36]	; (8005234 <__swbuf_r+0xa0>)
 8005210:	429c      	cmp	r4, r3
 8005212:	bf08      	it	eq
 8005214:	68ec      	ldreq	r4, [r5, #12]
 8005216:	e7ca      	b.n	80051ae <__swbuf_r+0x1a>
 8005218:	4621      	mov	r1, r4
 800521a:	4628      	mov	r0, r5
 800521c:	f000 f81e 	bl	800525c <__swsetup_r>
 8005220:	2800      	cmp	r0, #0
 8005222:	d0cb      	beq.n	80051bc <__swbuf_r+0x28>
 8005224:	f04f 37ff 	mov.w	r7, #4294967295
 8005228:	e7ea      	b.n	8005200 <__swbuf_r+0x6c>
 800522a:	bf00      	nop
 800522c:	08009f64 	.word	0x08009f64
 8005230:	08009f84 	.word	0x08009f84
 8005234:	08009f44 	.word	0x08009f44

08005238 <_write_r>:
 8005238:	b538      	push	{r3, r4, r5, lr}
 800523a:	4d07      	ldr	r5, [pc, #28]	; (8005258 <_write_r+0x20>)
 800523c:	4604      	mov	r4, r0
 800523e:	4608      	mov	r0, r1
 8005240:	4611      	mov	r1, r2
 8005242:	2200      	movs	r2, #0
 8005244:	602a      	str	r2, [r5, #0]
 8005246:	461a      	mov	r2, r3
 8005248:	f7fd f96b 	bl	8002522 <_write>
 800524c:	1c43      	adds	r3, r0, #1
 800524e:	d102      	bne.n	8005256 <_write_r+0x1e>
 8005250:	682b      	ldr	r3, [r5, #0]
 8005252:	b103      	cbz	r3, 8005256 <_write_r+0x1e>
 8005254:	6023      	str	r3, [r4, #0]
 8005256:	bd38      	pop	{r3, r4, r5, pc}
 8005258:	20000d4c 	.word	0x20000d4c

0800525c <__swsetup_r>:
 800525c:	4b32      	ldr	r3, [pc, #200]	; (8005328 <__swsetup_r+0xcc>)
 800525e:	b570      	push	{r4, r5, r6, lr}
 8005260:	681d      	ldr	r5, [r3, #0]
 8005262:	4606      	mov	r6, r0
 8005264:	460c      	mov	r4, r1
 8005266:	b125      	cbz	r5, 8005272 <__swsetup_r+0x16>
 8005268:	69ab      	ldr	r3, [r5, #24]
 800526a:	b913      	cbnz	r3, 8005272 <__swsetup_r+0x16>
 800526c:	4628      	mov	r0, r5
 800526e:	f7fd fdcd 	bl	8002e0c <__sinit>
 8005272:	4b2e      	ldr	r3, [pc, #184]	; (800532c <__swsetup_r+0xd0>)
 8005274:	429c      	cmp	r4, r3
 8005276:	d10f      	bne.n	8005298 <__swsetup_r+0x3c>
 8005278:	686c      	ldr	r4, [r5, #4]
 800527a:	89a3      	ldrh	r3, [r4, #12]
 800527c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8005280:	0719      	lsls	r1, r3, #28
 8005282:	d42c      	bmi.n	80052de <__swsetup_r+0x82>
 8005284:	06dd      	lsls	r5, r3, #27
 8005286:	d411      	bmi.n	80052ac <__swsetup_r+0x50>
 8005288:	2309      	movs	r3, #9
 800528a:	6033      	str	r3, [r6, #0]
 800528c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8005290:	81a3      	strh	r3, [r4, #12]
 8005292:	f04f 30ff 	mov.w	r0, #4294967295
 8005296:	e03e      	b.n	8005316 <__swsetup_r+0xba>
 8005298:	4b25      	ldr	r3, [pc, #148]	; (8005330 <__swsetup_r+0xd4>)
 800529a:	429c      	cmp	r4, r3
 800529c:	d101      	bne.n	80052a2 <__swsetup_r+0x46>
 800529e:	68ac      	ldr	r4, [r5, #8]
 80052a0:	e7eb      	b.n	800527a <__swsetup_r+0x1e>
 80052a2:	4b24      	ldr	r3, [pc, #144]	; (8005334 <__swsetup_r+0xd8>)
 80052a4:	429c      	cmp	r4, r3
 80052a6:	bf08      	it	eq
 80052a8:	68ec      	ldreq	r4, [r5, #12]
 80052aa:	e7e6      	b.n	800527a <__swsetup_r+0x1e>
 80052ac:	0758      	lsls	r0, r3, #29
 80052ae:	d512      	bpl.n	80052d6 <__swsetup_r+0x7a>
 80052b0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80052b2:	b141      	cbz	r1, 80052c6 <__swsetup_r+0x6a>
 80052b4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80052b8:	4299      	cmp	r1, r3
 80052ba:	d002      	beq.n	80052c2 <__swsetup_r+0x66>
 80052bc:	4630      	mov	r0, r6
 80052be:	f7fd fead 	bl	800301c <_free_r>
 80052c2:	2300      	movs	r3, #0
 80052c4:	6363      	str	r3, [r4, #52]	; 0x34
 80052c6:	89a3      	ldrh	r3, [r4, #12]
 80052c8:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80052cc:	81a3      	strh	r3, [r4, #12]
 80052ce:	2300      	movs	r3, #0
 80052d0:	6063      	str	r3, [r4, #4]
 80052d2:	6923      	ldr	r3, [r4, #16]
 80052d4:	6023      	str	r3, [r4, #0]
 80052d6:	89a3      	ldrh	r3, [r4, #12]
 80052d8:	f043 0308 	orr.w	r3, r3, #8
 80052dc:	81a3      	strh	r3, [r4, #12]
 80052de:	6923      	ldr	r3, [r4, #16]
 80052e0:	b94b      	cbnz	r3, 80052f6 <__swsetup_r+0x9a>
 80052e2:	89a3      	ldrh	r3, [r4, #12]
 80052e4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80052e8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80052ec:	d003      	beq.n	80052f6 <__swsetup_r+0x9a>
 80052ee:	4621      	mov	r1, r4
 80052f0:	4630      	mov	r0, r6
 80052f2:	f001 fb4f 	bl	8006994 <__smakebuf_r>
 80052f6:	89a0      	ldrh	r0, [r4, #12]
 80052f8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80052fc:	f010 0301 	ands.w	r3, r0, #1
 8005300:	d00a      	beq.n	8005318 <__swsetup_r+0xbc>
 8005302:	2300      	movs	r3, #0
 8005304:	60a3      	str	r3, [r4, #8]
 8005306:	6963      	ldr	r3, [r4, #20]
 8005308:	425b      	negs	r3, r3
 800530a:	61a3      	str	r3, [r4, #24]
 800530c:	6923      	ldr	r3, [r4, #16]
 800530e:	b943      	cbnz	r3, 8005322 <__swsetup_r+0xc6>
 8005310:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8005314:	d1ba      	bne.n	800528c <__swsetup_r+0x30>
 8005316:	bd70      	pop	{r4, r5, r6, pc}
 8005318:	0781      	lsls	r1, r0, #30
 800531a:	bf58      	it	pl
 800531c:	6963      	ldrpl	r3, [r4, #20]
 800531e:	60a3      	str	r3, [r4, #8]
 8005320:	e7f4      	b.n	800530c <__swsetup_r+0xb0>
 8005322:	2000      	movs	r0, #0
 8005324:	e7f7      	b.n	8005316 <__swsetup_r+0xba>
 8005326:	bf00      	nop
 8005328:	20000b10 	.word	0x20000b10
 800532c:	08009f64 	.word	0x08009f64
 8005330:	08009f84 	.word	0x08009f84
 8005334:	08009f44 	.word	0x08009f44

08005338 <__assert_func>:
 8005338:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800533a:	4614      	mov	r4, r2
 800533c:	461a      	mov	r2, r3
 800533e:	4b09      	ldr	r3, [pc, #36]	; (8005364 <__assert_func+0x2c>)
 8005340:	681b      	ldr	r3, [r3, #0]
 8005342:	4605      	mov	r5, r0
 8005344:	68d8      	ldr	r0, [r3, #12]
 8005346:	b14c      	cbz	r4, 800535c <__assert_func+0x24>
 8005348:	4b07      	ldr	r3, [pc, #28]	; (8005368 <__assert_func+0x30>)
 800534a:	9100      	str	r1, [sp, #0]
 800534c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8005350:	4906      	ldr	r1, [pc, #24]	; (800536c <__assert_func+0x34>)
 8005352:	462b      	mov	r3, r5
 8005354:	f000 ff6e 	bl	8006234 <fiprintf>
 8005358:	f002 ff37 	bl	80081ca <abort>
 800535c:	4b04      	ldr	r3, [pc, #16]	; (8005370 <__assert_func+0x38>)
 800535e:	461c      	mov	r4, r3
 8005360:	e7f3      	b.n	800534a <__assert_func+0x12>
 8005362:	bf00      	nop
 8005364:	20000b10 	.word	0x20000b10
 8005368:	0800a0a8 	.word	0x0800a0a8
 800536c:	0800a0b5 	.word	0x0800a0b5
 8005370:	0800a0e3 	.word	0x0800a0e3

08005374 <_close_r>:
 8005374:	b538      	push	{r3, r4, r5, lr}
 8005376:	4d06      	ldr	r5, [pc, #24]	; (8005390 <_close_r+0x1c>)
 8005378:	2300      	movs	r3, #0
 800537a:	4604      	mov	r4, r0
 800537c:	4608      	mov	r0, r1
 800537e:	602b      	str	r3, [r5, #0]
 8005380:	f7fd f83f 	bl	8002402 <_close>
 8005384:	1c43      	adds	r3, r0, #1
 8005386:	d102      	bne.n	800538e <_close_r+0x1a>
 8005388:	682b      	ldr	r3, [r5, #0]
 800538a:	b103      	cbz	r3, 800538e <_close_r+0x1a>
 800538c:	6023      	str	r3, [r4, #0]
 800538e:	bd38      	pop	{r3, r4, r5, pc}
 8005390:	20000d4c 	.word	0x20000d4c

08005394 <quorem>:
 8005394:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005398:	6903      	ldr	r3, [r0, #16]
 800539a:	690c      	ldr	r4, [r1, #16]
 800539c:	42a3      	cmp	r3, r4
 800539e:	4607      	mov	r7, r0
 80053a0:	f2c0 8081 	blt.w	80054a6 <quorem+0x112>
 80053a4:	3c01      	subs	r4, #1
 80053a6:	f101 0814 	add.w	r8, r1, #20
 80053aa:	f100 0514 	add.w	r5, r0, #20
 80053ae:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80053b2:	9301      	str	r3, [sp, #4]
 80053b4:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 80053b8:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80053bc:	3301      	adds	r3, #1
 80053be:	429a      	cmp	r2, r3
 80053c0:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 80053c4:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 80053c8:	fbb2 f6f3 	udiv	r6, r2, r3
 80053cc:	d331      	bcc.n	8005432 <quorem+0x9e>
 80053ce:	f04f 0e00 	mov.w	lr, #0
 80053d2:	4640      	mov	r0, r8
 80053d4:	46ac      	mov	ip, r5
 80053d6:	46f2      	mov	sl, lr
 80053d8:	f850 2b04 	ldr.w	r2, [r0], #4
 80053dc:	b293      	uxth	r3, r2
 80053de:	fb06 e303 	mla	r3, r6, r3, lr
 80053e2:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 80053e6:	b29b      	uxth	r3, r3
 80053e8:	ebaa 0303 	sub.w	r3, sl, r3
 80053ec:	0c12      	lsrs	r2, r2, #16
 80053ee:	f8dc a000 	ldr.w	sl, [ip]
 80053f2:	fb06 e202 	mla	r2, r6, r2, lr
 80053f6:	fa13 f38a 	uxtah	r3, r3, sl
 80053fa:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 80053fe:	fa1f fa82 	uxth.w	sl, r2
 8005402:	f8dc 2000 	ldr.w	r2, [ip]
 8005406:	ebca 4212 	rsb	r2, sl, r2, lsr #16
 800540a:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800540e:	b29b      	uxth	r3, r3
 8005410:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8005414:	4581      	cmp	r9, r0
 8005416:	f84c 3b04 	str.w	r3, [ip], #4
 800541a:	ea4f 4a22 	mov.w	sl, r2, asr #16
 800541e:	d2db      	bcs.n	80053d8 <quorem+0x44>
 8005420:	f855 300b 	ldr.w	r3, [r5, fp]
 8005424:	b92b      	cbnz	r3, 8005432 <quorem+0x9e>
 8005426:	9b01      	ldr	r3, [sp, #4]
 8005428:	3b04      	subs	r3, #4
 800542a:	429d      	cmp	r5, r3
 800542c:	461a      	mov	r2, r3
 800542e:	d32e      	bcc.n	800548e <quorem+0xfa>
 8005430:	613c      	str	r4, [r7, #16]
 8005432:	4638      	mov	r0, r7
 8005434:	f001 fdd2 	bl	8006fdc <__mcmp>
 8005438:	2800      	cmp	r0, #0
 800543a:	db24      	blt.n	8005486 <quorem+0xf2>
 800543c:	3601      	adds	r6, #1
 800543e:	4628      	mov	r0, r5
 8005440:	f04f 0c00 	mov.w	ip, #0
 8005444:	f858 2b04 	ldr.w	r2, [r8], #4
 8005448:	f8d0 e000 	ldr.w	lr, [r0]
 800544c:	b293      	uxth	r3, r2
 800544e:	ebac 0303 	sub.w	r3, ip, r3
 8005452:	0c12      	lsrs	r2, r2, #16
 8005454:	fa13 f38e 	uxtah	r3, r3, lr
 8005458:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 800545c:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8005460:	b29b      	uxth	r3, r3
 8005462:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8005466:	45c1      	cmp	r9, r8
 8005468:	f840 3b04 	str.w	r3, [r0], #4
 800546c:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8005470:	d2e8      	bcs.n	8005444 <quorem+0xb0>
 8005472:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8005476:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800547a:	b922      	cbnz	r2, 8005486 <quorem+0xf2>
 800547c:	3b04      	subs	r3, #4
 800547e:	429d      	cmp	r5, r3
 8005480:	461a      	mov	r2, r3
 8005482:	d30a      	bcc.n	800549a <quorem+0x106>
 8005484:	613c      	str	r4, [r7, #16]
 8005486:	4630      	mov	r0, r6
 8005488:	b003      	add	sp, #12
 800548a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800548e:	6812      	ldr	r2, [r2, #0]
 8005490:	3b04      	subs	r3, #4
 8005492:	2a00      	cmp	r2, #0
 8005494:	d1cc      	bne.n	8005430 <quorem+0x9c>
 8005496:	3c01      	subs	r4, #1
 8005498:	e7c7      	b.n	800542a <quorem+0x96>
 800549a:	6812      	ldr	r2, [r2, #0]
 800549c:	3b04      	subs	r3, #4
 800549e:	2a00      	cmp	r2, #0
 80054a0:	d1f0      	bne.n	8005484 <quorem+0xf0>
 80054a2:	3c01      	subs	r4, #1
 80054a4:	e7eb      	b.n	800547e <quorem+0xea>
 80054a6:	2000      	movs	r0, #0
 80054a8:	e7ee      	b.n	8005488 <quorem+0xf4>
 80054aa:	0000      	movs	r0, r0
 80054ac:	0000      	movs	r0, r0
	...

080054b0 <_dtoa_r>:
 80054b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80054b4:	6a44      	ldr	r4, [r0, #36]	; 0x24
 80054b6:	b099      	sub	sp, #100	; 0x64
 80054b8:	4616      	mov	r6, r2
 80054ba:	461f      	mov	r7, r3
 80054bc:	e9cd 6704 	strd	r6, r7, [sp, #16]
 80054c0:	f8dd 8094 	ldr.w	r8, [sp, #148]	; 0x94
 80054c4:	4605      	mov	r5, r0
 80054c6:	b974      	cbnz	r4, 80054e6 <_dtoa_r+0x36>
 80054c8:	2010      	movs	r0, #16
 80054ca:	f7fd fd81 	bl	8002fd0 <malloc>
 80054ce:	4602      	mov	r2, r0
 80054d0:	6268      	str	r0, [r5, #36]	; 0x24
 80054d2:	b920      	cbnz	r0, 80054de <_dtoa_r+0x2e>
 80054d4:	4ba8      	ldr	r3, [pc, #672]	; (8005778 <_dtoa_r+0x2c8>)
 80054d6:	21ea      	movs	r1, #234	; 0xea
 80054d8:	48a8      	ldr	r0, [pc, #672]	; (800577c <_dtoa_r+0x2cc>)
 80054da:	f7ff ff2d 	bl	8005338 <__assert_func>
 80054de:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80054e2:	6004      	str	r4, [r0, #0]
 80054e4:	60c4      	str	r4, [r0, #12]
 80054e6:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 80054e8:	6819      	ldr	r1, [r3, #0]
 80054ea:	b151      	cbz	r1, 8005502 <_dtoa_r+0x52>
 80054ec:	685a      	ldr	r2, [r3, #4]
 80054ee:	604a      	str	r2, [r1, #4]
 80054f0:	2301      	movs	r3, #1
 80054f2:	4093      	lsls	r3, r2
 80054f4:	608b      	str	r3, [r1, #8]
 80054f6:	4628      	mov	r0, r5
 80054f8:	f001 faea 	bl	8006ad0 <_Bfree>
 80054fc:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 80054fe:	2200      	movs	r2, #0
 8005500:	601a      	str	r2, [r3, #0]
 8005502:	1e3b      	subs	r3, r7, #0
 8005504:	bfb9      	ittee	lt
 8005506:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 800550a:	9305      	strlt	r3, [sp, #20]
 800550c:	2300      	movge	r3, #0
 800550e:	f8c8 3000 	strge.w	r3, [r8]
 8005512:	f8dd 9014 	ldr.w	r9, [sp, #20]
 8005516:	4b9a      	ldr	r3, [pc, #616]	; (8005780 <_dtoa_r+0x2d0>)
 8005518:	bfbc      	itt	lt
 800551a:	2201      	movlt	r2, #1
 800551c:	f8c8 2000 	strlt.w	r2, [r8]
 8005520:	ea33 0309 	bics.w	r3, r3, r9
 8005524:	d119      	bne.n	800555a <_dtoa_r+0xaa>
 8005526:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8005528:	f242 730f 	movw	r3, #9999	; 0x270f
 800552c:	6013      	str	r3, [r2, #0]
 800552e:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8005532:	4333      	orrs	r3, r6
 8005534:	f000 8581 	beq.w	800603a <_dtoa_r+0xb8a>
 8005538:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800553a:	b953      	cbnz	r3, 8005552 <_dtoa_r+0xa2>
 800553c:	4b91      	ldr	r3, [pc, #580]	; (8005784 <_dtoa_r+0x2d4>)
 800553e:	e022      	b.n	8005586 <_dtoa_r+0xd6>
 8005540:	4b91      	ldr	r3, [pc, #580]	; (8005788 <_dtoa_r+0x2d8>)
 8005542:	9308      	str	r3, [sp, #32]
 8005544:	3308      	adds	r3, #8
 8005546:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8005548:	6013      	str	r3, [r2, #0]
 800554a:	9808      	ldr	r0, [sp, #32]
 800554c:	b019      	add	sp, #100	; 0x64
 800554e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005552:	4b8c      	ldr	r3, [pc, #560]	; (8005784 <_dtoa_r+0x2d4>)
 8005554:	9308      	str	r3, [sp, #32]
 8005556:	3303      	adds	r3, #3
 8005558:	e7f5      	b.n	8005546 <_dtoa_r+0x96>
 800555a:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 800555e:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 8005562:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8005566:	2200      	movs	r2, #0
 8005568:	2300      	movs	r3, #0
 800556a:	f7fb fad7 	bl	8000b1c <__aeabi_dcmpeq>
 800556e:	4680      	mov	r8, r0
 8005570:	b158      	cbz	r0, 800558a <_dtoa_r+0xda>
 8005572:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8005574:	2301      	movs	r3, #1
 8005576:	6013      	str	r3, [r2, #0]
 8005578:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800557a:	2b00      	cmp	r3, #0
 800557c:	f000 855a 	beq.w	8006034 <_dtoa_r+0xb84>
 8005580:	4882      	ldr	r0, [pc, #520]	; (800578c <_dtoa_r+0x2dc>)
 8005582:	6018      	str	r0, [r3, #0]
 8005584:	1e43      	subs	r3, r0, #1
 8005586:	9308      	str	r3, [sp, #32]
 8005588:	e7df      	b.n	800554a <_dtoa_r+0x9a>
 800558a:	ab16      	add	r3, sp, #88	; 0x58
 800558c:	9301      	str	r3, [sp, #4]
 800558e:	ab17      	add	r3, sp, #92	; 0x5c
 8005590:	9300      	str	r3, [sp, #0]
 8005592:	4628      	mov	r0, r5
 8005594:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8005598:	f001 fe40 	bl	800721c <__d2b>
 800559c:	f3c9 540a 	ubfx	r4, r9, #20, #11
 80055a0:	4682      	mov	sl, r0
 80055a2:	2c00      	cmp	r4, #0
 80055a4:	d07e      	beq.n	80056a4 <_dtoa_r+0x1f4>
 80055a6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80055a8:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
 80055ac:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80055b0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80055b4:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
 80055b8:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 80055bc:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
 80055c0:	4b73      	ldr	r3, [pc, #460]	; (8005790 <_dtoa_r+0x2e0>)
 80055c2:	2200      	movs	r2, #0
 80055c4:	f7fa fe8a 	bl	80002dc <__aeabi_dsub>
 80055c8:	a365      	add	r3, pc, #404	; (adr r3, 8005760 <_dtoa_r+0x2b0>)
 80055ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 80055ce:	f7fb f83d 	bl	800064c <__aeabi_dmul>
 80055d2:	a365      	add	r3, pc, #404	; (adr r3, 8005768 <_dtoa_r+0x2b8>)
 80055d4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80055d8:	f7fa fe82 	bl	80002e0 <__adddf3>
 80055dc:	4606      	mov	r6, r0
 80055de:	4620      	mov	r0, r4
 80055e0:	460f      	mov	r7, r1
 80055e2:	f7fa ffc9 	bl	8000578 <__aeabi_i2d>
 80055e6:	a362      	add	r3, pc, #392	; (adr r3, 8005770 <_dtoa_r+0x2c0>)
 80055e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80055ec:	f7fb f82e 	bl	800064c <__aeabi_dmul>
 80055f0:	4602      	mov	r2, r0
 80055f2:	460b      	mov	r3, r1
 80055f4:	4630      	mov	r0, r6
 80055f6:	4639      	mov	r1, r7
 80055f8:	f7fa fe72 	bl	80002e0 <__adddf3>
 80055fc:	4606      	mov	r6, r0
 80055fe:	460f      	mov	r7, r1
 8005600:	f7fb fad4 	bl	8000bac <__aeabi_d2iz>
 8005604:	2200      	movs	r2, #0
 8005606:	4681      	mov	r9, r0
 8005608:	2300      	movs	r3, #0
 800560a:	4630      	mov	r0, r6
 800560c:	4639      	mov	r1, r7
 800560e:	f7fb fa8f 	bl	8000b30 <__aeabi_dcmplt>
 8005612:	b148      	cbz	r0, 8005628 <_dtoa_r+0x178>
 8005614:	4648      	mov	r0, r9
 8005616:	f7fa ffaf 	bl	8000578 <__aeabi_i2d>
 800561a:	4632      	mov	r2, r6
 800561c:	463b      	mov	r3, r7
 800561e:	f7fb fa7d 	bl	8000b1c <__aeabi_dcmpeq>
 8005622:	b908      	cbnz	r0, 8005628 <_dtoa_r+0x178>
 8005624:	f109 39ff 	add.w	r9, r9, #4294967295
 8005628:	f1b9 0f16 	cmp.w	r9, #22
 800562c:	d857      	bhi.n	80056de <_dtoa_r+0x22e>
 800562e:	4b59      	ldr	r3, [pc, #356]	; (8005794 <_dtoa_r+0x2e4>)
 8005630:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
 8005634:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005638:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800563c:	f7fb fa78 	bl	8000b30 <__aeabi_dcmplt>
 8005640:	2800      	cmp	r0, #0
 8005642:	d04e      	beq.n	80056e2 <_dtoa_r+0x232>
 8005644:	f109 39ff 	add.w	r9, r9, #4294967295
 8005648:	2300      	movs	r3, #0
 800564a:	930f      	str	r3, [sp, #60]	; 0x3c
 800564c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800564e:	1b1c      	subs	r4, r3, r4
 8005650:	1e63      	subs	r3, r4, #1
 8005652:	9309      	str	r3, [sp, #36]	; 0x24
 8005654:	bf45      	ittet	mi
 8005656:	f1c4 0301 	rsbmi	r3, r4, #1
 800565a:	9306      	strmi	r3, [sp, #24]
 800565c:	2300      	movpl	r3, #0
 800565e:	2300      	movmi	r3, #0
 8005660:	bf4c      	ite	mi
 8005662:	9309      	strmi	r3, [sp, #36]	; 0x24
 8005664:	9306      	strpl	r3, [sp, #24]
 8005666:	f1b9 0f00 	cmp.w	r9, #0
 800566a:	db3c      	blt.n	80056e6 <_dtoa_r+0x236>
 800566c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800566e:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8005672:	444b      	add	r3, r9
 8005674:	9309      	str	r3, [sp, #36]	; 0x24
 8005676:	2300      	movs	r3, #0
 8005678:	930a      	str	r3, [sp, #40]	; 0x28
 800567a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800567c:	2b09      	cmp	r3, #9
 800567e:	f200 808d 	bhi.w	800579c <_dtoa_r+0x2ec>
 8005682:	2b05      	cmp	r3, #5
 8005684:	bfc4      	itt	gt
 8005686:	3b04      	subgt	r3, #4
 8005688:	9322      	strgt	r3, [sp, #136]	; 0x88
 800568a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800568c:	f1a3 0302 	sub.w	r3, r3, #2
 8005690:	bfcc      	ite	gt
 8005692:	2400      	movgt	r4, #0
 8005694:	2401      	movle	r4, #1
 8005696:	2b03      	cmp	r3, #3
 8005698:	f200 808c 	bhi.w	80057b4 <_dtoa_r+0x304>
 800569c:	e8df f003 	tbb	[pc, r3]
 80056a0:	5b4d4f2d 	.word	0x5b4d4f2d
 80056a4:	e9dd 4316 	ldrd	r4, r3, [sp, #88]	; 0x58
 80056a8:	441c      	add	r4, r3
 80056aa:	f204 4332 	addw	r3, r4, #1074	; 0x432
 80056ae:	2b20      	cmp	r3, #32
 80056b0:	bfc3      	ittte	gt
 80056b2:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 80056b6:	f204 4012 	addwgt	r0, r4, #1042	; 0x412
 80056ba:	fa09 f303 	lslgt.w	r3, r9, r3
 80056be:	f1c3 0320 	rsble	r3, r3, #32
 80056c2:	bfc6      	itte	gt
 80056c4:	fa26 f000 	lsrgt.w	r0, r6, r0
 80056c8:	4318      	orrgt	r0, r3
 80056ca:	fa06 f003 	lslle.w	r0, r6, r3
 80056ce:	f7fa ff43 	bl	8000558 <__aeabi_ui2d>
 80056d2:	2301      	movs	r3, #1
 80056d4:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 80056d8:	3c01      	subs	r4, #1
 80056da:	9313      	str	r3, [sp, #76]	; 0x4c
 80056dc:	e770      	b.n	80055c0 <_dtoa_r+0x110>
 80056de:	2301      	movs	r3, #1
 80056e0:	e7b3      	b.n	800564a <_dtoa_r+0x19a>
 80056e2:	900f      	str	r0, [sp, #60]	; 0x3c
 80056e4:	e7b2      	b.n	800564c <_dtoa_r+0x19c>
 80056e6:	9b06      	ldr	r3, [sp, #24]
 80056e8:	eba3 0309 	sub.w	r3, r3, r9
 80056ec:	9306      	str	r3, [sp, #24]
 80056ee:	f1c9 0300 	rsb	r3, r9, #0
 80056f2:	930a      	str	r3, [sp, #40]	; 0x28
 80056f4:	2300      	movs	r3, #0
 80056f6:	930e      	str	r3, [sp, #56]	; 0x38
 80056f8:	e7bf      	b.n	800567a <_dtoa_r+0x1ca>
 80056fa:	2300      	movs	r3, #0
 80056fc:	930b      	str	r3, [sp, #44]	; 0x2c
 80056fe:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8005700:	2b00      	cmp	r3, #0
 8005702:	dc5a      	bgt.n	80057ba <_dtoa_r+0x30a>
 8005704:	f04f 0b01 	mov.w	fp, #1
 8005708:	f8cd b008 	str.w	fp, [sp, #8]
 800570c:	465b      	mov	r3, fp
 800570e:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 8005712:	6a68      	ldr	r0, [r5, #36]	; 0x24
 8005714:	2200      	movs	r2, #0
 8005716:	6042      	str	r2, [r0, #4]
 8005718:	2204      	movs	r2, #4
 800571a:	f102 0614 	add.w	r6, r2, #20
 800571e:	429e      	cmp	r6, r3
 8005720:	6841      	ldr	r1, [r0, #4]
 8005722:	d950      	bls.n	80057c6 <_dtoa_r+0x316>
 8005724:	4628      	mov	r0, r5
 8005726:	f001 f993 	bl	8006a50 <_Balloc>
 800572a:	9008      	str	r0, [sp, #32]
 800572c:	2800      	cmp	r0, #0
 800572e:	d14e      	bne.n	80057ce <_dtoa_r+0x31e>
 8005730:	4b19      	ldr	r3, [pc, #100]	; (8005798 <_dtoa_r+0x2e8>)
 8005732:	4602      	mov	r2, r0
 8005734:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 8005738:	e6ce      	b.n	80054d8 <_dtoa_r+0x28>
 800573a:	2301      	movs	r3, #1
 800573c:	e7de      	b.n	80056fc <_dtoa_r+0x24c>
 800573e:	2300      	movs	r3, #0
 8005740:	930b      	str	r3, [sp, #44]	; 0x2c
 8005742:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8005744:	eb09 0b03 	add.w	fp, r9, r3
 8005748:	f10b 0301 	add.w	r3, fp, #1
 800574c:	2b01      	cmp	r3, #1
 800574e:	9302      	str	r3, [sp, #8]
 8005750:	bfb8      	it	lt
 8005752:	2301      	movlt	r3, #1
 8005754:	e7dd      	b.n	8005712 <_dtoa_r+0x262>
 8005756:	2301      	movs	r3, #1
 8005758:	e7f2      	b.n	8005740 <_dtoa_r+0x290>
 800575a:	bf00      	nop
 800575c:	f3af 8000 	nop.w
 8005760:	636f4361 	.word	0x636f4361
 8005764:	3fd287a7 	.word	0x3fd287a7
 8005768:	8b60c8b3 	.word	0x8b60c8b3
 800576c:	3fc68a28 	.word	0x3fc68a28
 8005770:	509f79fb 	.word	0x509f79fb
 8005774:	3fd34413 	.word	0x3fd34413
 8005778:	0800a030 	.word	0x0800a030
 800577c:	0800a1f2 	.word	0x0800a1f2
 8005780:	7ff00000 	.word	0x7ff00000
 8005784:	0800a1ee 	.word	0x0800a1ee
 8005788:	0800a1e5 	.word	0x0800a1e5
 800578c:	0800a452 	.word	0x0800a452
 8005790:	3ff80000 	.word	0x3ff80000
 8005794:	0800a368 	.word	0x0800a368
 8005798:	0800a251 	.word	0x0800a251
 800579c:	2401      	movs	r4, #1
 800579e:	2300      	movs	r3, #0
 80057a0:	9322      	str	r3, [sp, #136]	; 0x88
 80057a2:	940b      	str	r4, [sp, #44]	; 0x2c
 80057a4:	f04f 3bff 	mov.w	fp, #4294967295
 80057a8:	2200      	movs	r2, #0
 80057aa:	f8cd b008 	str.w	fp, [sp, #8]
 80057ae:	2312      	movs	r3, #18
 80057b0:	9223      	str	r2, [sp, #140]	; 0x8c
 80057b2:	e7ae      	b.n	8005712 <_dtoa_r+0x262>
 80057b4:	2301      	movs	r3, #1
 80057b6:	930b      	str	r3, [sp, #44]	; 0x2c
 80057b8:	e7f4      	b.n	80057a4 <_dtoa_r+0x2f4>
 80057ba:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 80057be:	f8cd b008 	str.w	fp, [sp, #8]
 80057c2:	465b      	mov	r3, fp
 80057c4:	e7a5      	b.n	8005712 <_dtoa_r+0x262>
 80057c6:	3101      	adds	r1, #1
 80057c8:	6041      	str	r1, [r0, #4]
 80057ca:	0052      	lsls	r2, r2, #1
 80057cc:	e7a5      	b.n	800571a <_dtoa_r+0x26a>
 80057ce:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 80057d0:	9a08      	ldr	r2, [sp, #32]
 80057d2:	601a      	str	r2, [r3, #0]
 80057d4:	9b02      	ldr	r3, [sp, #8]
 80057d6:	2b0e      	cmp	r3, #14
 80057d8:	f200 80a8 	bhi.w	800592c <_dtoa_r+0x47c>
 80057dc:	2c00      	cmp	r4, #0
 80057de:	f000 80a5 	beq.w	800592c <_dtoa_r+0x47c>
 80057e2:	f1b9 0f00 	cmp.w	r9, #0
 80057e6:	dd34      	ble.n	8005852 <_dtoa_r+0x3a2>
 80057e8:	4a9a      	ldr	r2, [pc, #616]	; (8005a54 <_dtoa_r+0x5a4>)
 80057ea:	f009 030f 	and.w	r3, r9, #15
 80057ee:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 80057f2:	e9d3 3400 	ldrd	r3, r4, [r3]
 80057f6:	f419 7f80 	tst.w	r9, #256	; 0x100
 80057fa:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 80057fe:	ea4f 1429 	mov.w	r4, r9, asr #4
 8005802:	d016      	beq.n	8005832 <_dtoa_r+0x382>
 8005804:	4b94      	ldr	r3, [pc, #592]	; (8005a58 <_dtoa_r+0x5a8>)
 8005806:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800580a:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800580e:	f7fb f847 	bl	80008a0 <__aeabi_ddiv>
 8005812:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8005816:	f004 040f 	and.w	r4, r4, #15
 800581a:	2703      	movs	r7, #3
 800581c:	4e8e      	ldr	r6, [pc, #568]	; (8005a58 <_dtoa_r+0x5a8>)
 800581e:	b954      	cbnz	r4, 8005836 <_dtoa_r+0x386>
 8005820:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8005824:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8005828:	f7fb f83a 	bl	80008a0 <__aeabi_ddiv>
 800582c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8005830:	e029      	b.n	8005886 <_dtoa_r+0x3d6>
 8005832:	2702      	movs	r7, #2
 8005834:	e7f2      	b.n	800581c <_dtoa_r+0x36c>
 8005836:	07e1      	lsls	r1, r4, #31
 8005838:	d508      	bpl.n	800584c <_dtoa_r+0x39c>
 800583a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800583e:	e9d6 2300 	ldrd	r2, r3, [r6]
 8005842:	f7fa ff03 	bl	800064c <__aeabi_dmul>
 8005846:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800584a:	3701      	adds	r7, #1
 800584c:	1064      	asrs	r4, r4, #1
 800584e:	3608      	adds	r6, #8
 8005850:	e7e5      	b.n	800581e <_dtoa_r+0x36e>
 8005852:	f000 80a5 	beq.w	80059a0 <_dtoa_r+0x4f0>
 8005856:	f1c9 0400 	rsb	r4, r9, #0
 800585a:	4b7e      	ldr	r3, [pc, #504]	; (8005a54 <_dtoa_r+0x5a4>)
 800585c:	4e7e      	ldr	r6, [pc, #504]	; (8005a58 <_dtoa_r+0x5a8>)
 800585e:	f004 020f 	and.w	r2, r4, #15
 8005862:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8005866:	e9d3 2300 	ldrd	r2, r3, [r3]
 800586a:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800586e:	f7fa feed 	bl	800064c <__aeabi_dmul>
 8005872:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8005876:	1124      	asrs	r4, r4, #4
 8005878:	2300      	movs	r3, #0
 800587a:	2702      	movs	r7, #2
 800587c:	2c00      	cmp	r4, #0
 800587e:	f040 8084 	bne.w	800598a <_dtoa_r+0x4da>
 8005882:	2b00      	cmp	r3, #0
 8005884:	d1d2      	bne.n	800582c <_dtoa_r+0x37c>
 8005886:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005888:	2b00      	cmp	r3, #0
 800588a:	f000 808b 	beq.w	80059a4 <_dtoa_r+0x4f4>
 800588e:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 8005892:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 8005896:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800589a:	4b70      	ldr	r3, [pc, #448]	; (8005a5c <_dtoa_r+0x5ac>)
 800589c:	2200      	movs	r2, #0
 800589e:	f7fb f947 	bl	8000b30 <__aeabi_dcmplt>
 80058a2:	2800      	cmp	r0, #0
 80058a4:	d07e      	beq.n	80059a4 <_dtoa_r+0x4f4>
 80058a6:	9b02      	ldr	r3, [sp, #8]
 80058a8:	2b00      	cmp	r3, #0
 80058aa:	d07b      	beq.n	80059a4 <_dtoa_r+0x4f4>
 80058ac:	f1bb 0f00 	cmp.w	fp, #0
 80058b0:	dd38      	ble.n	8005924 <_dtoa_r+0x474>
 80058b2:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80058b6:	4b6a      	ldr	r3, [pc, #424]	; (8005a60 <_dtoa_r+0x5b0>)
 80058b8:	2200      	movs	r2, #0
 80058ba:	f7fa fec7 	bl	800064c <__aeabi_dmul>
 80058be:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80058c2:	f109 38ff 	add.w	r8, r9, #4294967295
 80058c6:	3701      	adds	r7, #1
 80058c8:	465c      	mov	r4, fp
 80058ca:	4638      	mov	r0, r7
 80058cc:	f7fa fe54 	bl	8000578 <__aeabi_i2d>
 80058d0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80058d4:	f7fa feba 	bl	800064c <__aeabi_dmul>
 80058d8:	4b62      	ldr	r3, [pc, #392]	; (8005a64 <_dtoa_r+0x5b4>)
 80058da:	2200      	movs	r2, #0
 80058dc:	f7fa fd00 	bl	80002e0 <__adddf3>
 80058e0:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 80058e4:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 80058e8:	9611      	str	r6, [sp, #68]	; 0x44
 80058ea:	2c00      	cmp	r4, #0
 80058ec:	d15d      	bne.n	80059aa <_dtoa_r+0x4fa>
 80058ee:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80058f2:	4b5d      	ldr	r3, [pc, #372]	; (8005a68 <_dtoa_r+0x5b8>)
 80058f4:	2200      	movs	r2, #0
 80058f6:	f7fa fcf1 	bl	80002dc <__aeabi_dsub>
 80058fa:	4602      	mov	r2, r0
 80058fc:	460b      	mov	r3, r1
 80058fe:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8005902:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8005904:	4633      	mov	r3, r6
 8005906:	f7fb f931 	bl	8000b6c <__aeabi_dcmpgt>
 800590a:	2800      	cmp	r0, #0
 800590c:	f040 829e 	bne.w	8005e4c <_dtoa_r+0x99c>
 8005910:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8005914:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8005916:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 800591a:	f7fb f909 	bl	8000b30 <__aeabi_dcmplt>
 800591e:	2800      	cmp	r0, #0
 8005920:	f040 8292 	bne.w	8005e48 <_dtoa_r+0x998>
 8005924:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	; 0x30
 8005928:	e9cd 3404 	strd	r3, r4, [sp, #16]
 800592c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800592e:	2b00      	cmp	r3, #0
 8005930:	f2c0 8153 	blt.w	8005bda <_dtoa_r+0x72a>
 8005934:	f1b9 0f0e 	cmp.w	r9, #14
 8005938:	f300 814f 	bgt.w	8005bda <_dtoa_r+0x72a>
 800593c:	4b45      	ldr	r3, [pc, #276]	; (8005a54 <_dtoa_r+0x5a4>)
 800593e:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
 8005942:	e9d3 3400 	ldrd	r3, r4, [r3]
 8005946:	e9cd 3406 	strd	r3, r4, [sp, #24]
 800594a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800594c:	2b00      	cmp	r3, #0
 800594e:	f280 80db 	bge.w	8005b08 <_dtoa_r+0x658>
 8005952:	9b02      	ldr	r3, [sp, #8]
 8005954:	2b00      	cmp	r3, #0
 8005956:	f300 80d7 	bgt.w	8005b08 <_dtoa_r+0x658>
 800595a:	f040 8274 	bne.w	8005e46 <_dtoa_r+0x996>
 800595e:	4b42      	ldr	r3, [pc, #264]	; (8005a68 <_dtoa_r+0x5b8>)
 8005960:	2200      	movs	r2, #0
 8005962:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8005966:	f7fa fe71 	bl	800064c <__aeabi_dmul>
 800596a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800596e:	f7fb f8f3 	bl	8000b58 <__aeabi_dcmpge>
 8005972:	9c02      	ldr	r4, [sp, #8]
 8005974:	4626      	mov	r6, r4
 8005976:	2800      	cmp	r0, #0
 8005978:	f040 824a 	bne.w	8005e10 <_dtoa_r+0x960>
 800597c:	9f08      	ldr	r7, [sp, #32]
 800597e:	2331      	movs	r3, #49	; 0x31
 8005980:	f807 3b01 	strb.w	r3, [r7], #1
 8005984:	f109 0901 	add.w	r9, r9, #1
 8005988:	e246      	b.n	8005e18 <_dtoa_r+0x968>
 800598a:	07e2      	lsls	r2, r4, #31
 800598c:	d505      	bpl.n	800599a <_dtoa_r+0x4ea>
 800598e:	e9d6 2300 	ldrd	r2, r3, [r6]
 8005992:	f7fa fe5b 	bl	800064c <__aeabi_dmul>
 8005996:	3701      	adds	r7, #1
 8005998:	2301      	movs	r3, #1
 800599a:	1064      	asrs	r4, r4, #1
 800599c:	3608      	adds	r6, #8
 800599e:	e76d      	b.n	800587c <_dtoa_r+0x3cc>
 80059a0:	2702      	movs	r7, #2
 80059a2:	e770      	b.n	8005886 <_dtoa_r+0x3d6>
 80059a4:	9c02      	ldr	r4, [sp, #8]
 80059a6:	46c8      	mov	r8, r9
 80059a8:	e78f      	b.n	80058ca <_dtoa_r+0x41a>
 80059aa:	9908      	ldr	r1, [sp, #32]
 80059ac:	4b29      	ldr	r3, [pc, #164]	; (8005a54 <_dtoa_r+0x5a4>)
 80059ae:	4421      	add	r1, r4
 80059b0:	9112      	str	r1, [sp, #72]	; 0x48
 80059b2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80059b4:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80059b8:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 80059bc:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 80059c0:	2900      	cmp	r1, #0
 80059c2:	d055      	beq.n	8005a70 <_dtoa_r+0x5c0>
 80059c4:	4929      	ldr	r1, [pc, #164]	; (8005a6c <_dtoa_r+0x5bc>)
 80059c6:	2000      	movs	r0, #0
 80059c8:	f7fa ff6a 	bl	80008a0 <__aeabi_ddiv>
 80059cc:	463b      	mov	r3, r7
 80059ce:	4632      	mov	r2, r6
 80059d0:	f7fa fc84 	bl	80002dc <__aeabi_dsub>
 80059d4:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 80059d8:	9f08      	ldr	r7, [sp, #32]
 80059da:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80059de:	f7fb f8e5 	bl	8000bac <__aeabi_d2iz>
 80059e2:	4604      	mov	r4, r0
 80059e4:	f7fa fdc8 	bl	8000578 <__aeabi_i2d>
 80059e8:	4602      	mov	r2, r0
 80059ea:	460b      	mov	r3, r1
 80059ec:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80059f0:	f7fa fc74 	bl	80002dc <__aeabi_dsub>
 80059f4:	3430      	adds	r4, #48	; 0x30
 80059f6:	4602      	mov	r2, r0
 80059f8:	460b      	mov	r3, r1
 80059fa:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80059fe:	f807 4b01 	strb.w	r4, [r7], #1
 8005a02:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8005a06:	f7fb f893 	bl	8000b30 <__aeabi_dcmplt>
 8005a0a:	2800      	cmp	r0, #0
 8005a0c:	d174      	bne.n	8005af8 <_dtoa_r+0x648>
 8005a0e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8005a12:	4912      	ldr	r1, [pc, #72]	; (8005a5c <_dtoa_r+0x5ac>)
 8005a14:	2000      	movs	r0, #0
 8005a16:	f7fa fc61 	bl	80002dc <__aeabi_dsub>
 8005a1a:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8005a1e:	f7fb f887 	bl	8000b30 <__aeabi_dcmplt>
 8005a22:	2800      	cmp	r0, #0
 8005a24:	f040 80b6 	bne.w	8005b94 <_dtoa_r+0x6e4>
 8005a28:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005a2a:	429f      	cmp	r7, r3
 8005a2c:	f43f af7a 	beq.w	8005924 <_dtoa_r+0x474>
 8005a30:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8005a34:	4b0a      	ldr	r3, [pc, #40]	; (8005a60 <_dtoa_r+0x5b0>)
 8005a36:	2200      	movs	r2, #0
 8005a38:	f7fa fe08 	bl	800064c <__aeabi_dmul>
 8005a3c:	4b08      	ldr	r3, [pc, #32]	; (8005a60 <_dtoa_r+0x5b0>)
 8005a3e:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8005a42:	2200      	movs	r2, #0
 8005a44:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8005a48:	f7fa fe00 	bl	800064c <__aeabi_dmul>
 8005a4c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8005a50:	e7c3      	b.n	80059da <_dtoa_r+0x52a>
 8005a52:	bf00      	nop
 8005a54:	0800a368 	.word	0x0800a368
 8005a58:	0800a340 	.word	0x0800a340
 8005a5c:	3ff00000 	.word	0x3ff00000
 8005a60:	40240000 	.word	0x40240000
 8005a64:	401c0000 	.word	0x401c0000
 8005a68:	40140000 	.word	0x40140000
 8005a6c:	3fe00000 	.word	0x3fe00000
 8005a70:	4630      	mov	r0, r6
 8005a72:	4639      	mov	r1, r7
 8005a74:	f7fa fdea 	bl	800064c <__aeabi_dmul>
 8005a78:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8005a7c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005a7e:	9c08      	ldr	r4, [sp, #32]
 8005a80:	9314      	str	r3, [sp, #80]	; 0x50
 8005a82:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8005a86:	f7fb f891 	bl	8000bac <__aeabi_d2iz>
 8005a8a:	9015      	str	r0, [sp, #84]	; 0x54
 8005a8c:	f7fa fd74 	bl	8000578 <__aeabi_i2d>
 8005a90:	4602      	mov	r2, r0
 8005a92:	460b      	mov	r3, r1
 8005a94:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8005a98:	f7fa fc20 	bl	80002dc <__aeabi_dsub>
 8005a9c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005a9e:	3330      	adds	r3, #48	; 0x30
 8005aa0:	f804 3b01 	strb.w	r3, [r4], #1
 8005aa4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005aa6:	429c      	cmp	r4, r3
 8005aa8:	4606      	mov	r6, r0
 8005aaa:	460f      	mov	r7, r1
 8005aac:	f04f 0200 	mov.w	r2, #0
 8005ab0:	d124      	bne.n	8005afc <_dtoa_r+0x64c>
 8005ab2:	4bb2      	ldr	r3, [pc, #712]	; (8005d7c <_dtoa_r+0x8cc>)
 8005ab4:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8005ab8:	f7fa fc12 	bl	80002e0 <__adddf3>
 8005abc:	4602      	mov	r2, r0
 8005abe:	460b      	mov	r3, r1
 8005ac0:	4630      	mov	r0, r6
 8005ac2:	4639      	mov	r1, r7
 8005ac4:	f7fb f852 	bl	8000b6c <__aeabi_dcmpgt>
 8005ac8:	2800      	cmp	r0, #0
 8005aca:	d162      	bne.n	8005b92 <_dtoa_r+0x6e2>
 8005acc:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8005ad0:	49aa      	ldr	r1, [pc, #680]	; (8005d7c <_dtoa_r+0x8cc>)
 8005ad2:	2000      	movs	r0, #0
 8005ad4:	f7fa fc02 	bl	80002dc <__aeabi_dsub>
 8005ad8:	4602      	mov	r2, r0
 8005ada:	460b      	mov	r3, r1
 8005adc:	4630      	mov	r0, r6
 8005ade:	4639      	mov	r1, r7
 8005ae0:	f7fb f826 	bl	8000b30 <__aeabi_dcmplt>
 8005ae4:	2800      	cmp	r0, #0
 8005ae6:	f43f af1d 	beq.w	8005924 <_dtoa_r+0x474>
 8005aea:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8005aec:	1e7b      	subs	r3, r7, #1
 8005aee:	9314      	str	r3, [sp, #80]	; 0x50
 8005af0:	f817 3c01 	ldrb.w	r3, [r7, #-1]
 8005af4:	2b30      	cmp	r3, #48	; 0x30
 8005af6:	d0f8      	beq.n	8005aea <_dtoa_r+0x63a>
 8005af8:	46c1      	mov	r9, r8
 8005afa:	e03a      	b.n	8005b72 <_dtoa_r+0x6c2>
 8005afc:	4ba0      	ldr	r3, [pc, #640]	; (8005d80 <_dtoa_r+0x8d0>)
 8005afe:	f7fa fda5 	bl	800064c <__aeabi_dmul>
 8005b02:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8005b06:	e7bc      	b.n	8005a82 <_dtoa_r+0x5d2>
 8005b08:	9f08      	ldr	r7, [sp, #32]
 8005b0a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8005b0e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8005b12:	f7fa fec5 	bl	80008a0 <__aeabi_ddiv>
 8005b16:	f7fb f849 	bl	8000bac <__aeabi_d2iz>
 8005b1a:	4604      	mov	r4, r0
 8005b1c:	f7fa fd2c 	bl	8000578 <__aeabi_i2d>
 8005b20:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8005b24:	f7fa fd92 	bl	800064c <__aeabi_dmul>
 8005b28:	f104 0630 	add.w	r6, r4, #48	; 0x30
 8005b2c:	460b      	mov	r3, r1
 8005b2e:	4602      	mov	r2, r0
 8005b30:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8005b34:	f7fa fbd2 	bl	80002dc <__aeabi_dsub>
 8005b38:	f807 6b01 	strb.w	r6, [r7], #1
 8005b3c:	9e08      	ldr	r6, [sp, #32]
 8005b3e:	9b02      	ldr	r3, [sp, #8]
 8005b40:	1bbe      	subs	r6, r7, r6
 8005b42:	42b3      	cmp	r3, r6
 8005b44:	d13a      	bne.n	8005bbc <_dtoa_r+0x70c>
 8005b46:	4602      	mov	r2, r0
 8005b48:	460b      	mov	r3, r1
 8005b4a:	f7fa fbc9 	bl	80002e0 <__adddf3>
 8005b4e:	4602      	mov	r2, r0
 8005b50:	460b      	mov	r3, r1
 8005b52:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8005b56:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8005b5a:	f7fb f807 	bl	8000b6c <__aeabi_dcmpgt>
 8005b5e:	bb58      	cbnz	r0, 8005bb8 <_dtoa_r+0x708>
 8005b60:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8005b64:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8005b68:	f7fa ffd8 	bl	8000b1c <__aeabi_dcmpeq>
 8005b6c:	b108      	cbz	r0, 8005b72 <_dtoa_r+0x6c2>
 8005b6e:	07e1      	lsls	r1, r4, #31
 8005b70:	d422      	bmi.n	8005bb8 <_dtoa_r+0x708>
 8005b72:	4628      	mov	r0, r5
 8005b74:	4651      	mov	r1, sl
 8005b76:	f000 ffab 	bl	8006ad0 <_Bfree>
 8005b7a:	2300      	movs	r3, #0
 8005b7c:	703b      	strb	r3, [r7, #0]
 8005b7e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8005b80:	f109 0001 	add.w	r0, r9, #1
 8005b84:	6018      	str	r0, [r3, #0]
 8005b86:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8005b88:	2b00      	cmp	r3, #0
 8005b8a:	f43f acde 	beq.w	800554a <_dtoa_r+0x9a>
 8005b8e:	601f      	str	r7, [r3, #0]
 8005b90:	e4db      	b.n	800554a <_dtoa_r+0x9a>
 8005b92:	4627      	mov	r7, r4
 8005b94:	463b      	mov	r3, r7
 8005b96:	461f      	mov	r7, r3
 8005b98:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8005b9c:	2a39      	cmp	r2, #57	; 0x39
 8005b9e:	d107      	bne.n	8005bb0 <_dtoa_r+0x700>
 8005ba0:	9a08      	ldr	r2, [sp, #32]
 8005ba2:	429a      	cmp	r2, r3
 8005ba4:	d1f7      	bne.n	8005b96 <_dtoa_r+0x6e6>
 8005ba6:	9908      	ldr	r1, [sp, #32]
 8005ba8:	2230      	movs	r2, #48	; 0x30
 8005baa:	f108 0801 	add.w	r8, r8, #1
 8005bae:	700a      	strb	r2, [r1, #0]
 8005bb0:	781a      	ldrb	r2, [r3, #0]
 8005bb2:	3201      	adds	r2, #1
 8005bb4:	701a      	strb	r2, [r3, #0]
 8005bb6:	e79f      	b.n	8005af8 <_dtoa_r+0x648>
 8005bb8:	46c8      	mov	r8, r9
 8005bba:	e7eb      	b.n	8005b94 <_dtoa_r+0x6e4>
 8005bbc:	4b70      	ldr	r3, [pc, #448]	; (8005d80 <_dtoa_r+0x8d0>)
 8005bbe:	2200      	movs	r2, #0
 8005bc0:	f7fa fd44 	bl	800064c <__aeabi_dmul>
 8005bc4:	4602      	mov	r2, r0
 8005bc6:	460b      	mov	r3, r1
 8005bc8:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8005bcc:	2200      	movs	r2, #0
 8005bce:	2300      	movs	r3, #0
 8005bd0:	f7fa ffa4 	bl	8000b1c <__aeabi_dcmpeq>
 8005bd4:	2800      	cmp	r0, #0
 8005bd6:	d098      	beq.n	8005b0a <_dtoa_r+0x65a>
 8005bd8:	e7cb      	b.n	8005b72 <_dtoa_r+0x6c2>
 8005bda:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8005bdc:	2a00      	cmp	r2, #0
 8005bde:	f000 80d1 	beq.w	8005d84 <_dtoa_r+0x8d4>
 8005be2:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8005be4:	2a01      	cmp	r2, #1
 8005be6:	f300 80af 	bgt.w	8005d48 <_dtoa_r+0x898>
 8005bea:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8005bec:	2a00      	cmp	r2, #0
 8005bee:	f000 80a7 	beq.w	8005d40 <_dtoa_r+0x890>
 8005bf2:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8005bf6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8005bf8:	9f06      	ldr	r7, [sp, #24]
 8005bfa:	9a06      	ldr	r2, [sp, #24]
 8005bfc:	441a      	add	r2, r3
 8005bfe:	9206      	str	r2, [sp, #24]
 8005c00:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005c02:	2101      	movs	r1, #1
 8005c04:	441a      	add	r2, r3
 8005c06:	4628      	mov	r0, r5
 8005c08:	9209      	str	r2, [sp, #36]	; 0x24
 8005c0a:	f001 f865 	bl	8006cd8 <__i2b>
 8005c0e:	4606      	mov	r6, r0
 8005c10:	2f00      	cmp	r7, #0
 8005c12:	dd0c      	ble.n	8005c2e <_dtoa_r+0x77e>
 8005c14:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005c16:	2b00      	cmp	r3, #0
 8005c18:	dd09      	ble.n	8005c2e <_dtoa_r+0x77e>
 8005c1a:	42bb      	cmp	r3, r7
 8005c1c:	9a06      	ldr	r2, [sp, #24]
 8005c1e:	bfa8      	it	ge
 8005c20:	463b      	movge	r3, r7
 8005c22:	1ad2      	subs	r2, r2, r3
 8005c24:	9206      	str	r2, [sp, #24]
 8005c26:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005c28:	1aff      	subs	r7, r7, r3
 8005c2a:	1ad3      	subs	r3, r2, r3
 8005c2c:	9309      	str	r3, [sp, #36]	; 0x24
 8005c2e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005c30:	b1f3      	cbz	r3, 8005c70 <_dtoa_r+0x7c0>
 8005c32:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005c34:	2b00      	cmp	r3, #0
 8005c36:	f000 80a9 	beq.w	8005d8c <_dtoa_r+0x8dc>
 8005c3a:	2c00      	cmp	r4, #0
 8005c3c:	dd10      	ble.n	8005c60 <_dtoa_r+0x7b0>
 8005c3e:	4631      	mov	r1, r6
 8005c40:	4622      	mov	r2, r4
 8005c42:	4628      	mov	r0, r5
 8005c44:	f001 f904 	bl	8006e50 <__pow5mult>
 8005c48:	4652      	mov	r2, sl
 8005c4a:	4601      	mov	r1, r0
 8005c4c:	4606      	mov	r6, r0
 8005c4e:	4628      	mov	r0, r5
 8005c50:	f001 f858 	bl	8006d04 <__multiply>
 8005c54:	4651      	mov	r1, sl
 8005c56:	4680      	mov	r8, r0
 8005c58:	4628      	mov	r0, r5
 8005c5a:	f000 ff39 	bl	8006ad0 <_Bfree>
 8005c5e:	46c2      	mov	sl, r8
 8005c60:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005c62:	1b1a      	subs	r2, r3, r4
 8005c64:	d004      	beq.n	8005c70 <_dtoa_r+0x7c0>
 8005c66:	4651      	mov	r1, sl
 8005c68:	4628      	mov	r0, r5
 8005c6a:	f001 f8f1 	bl	8006e50 <__pow5mult>
 8005c6e:	4682      	mov	sl, r0
 8005c70:	2101      	movs	r1, #1
 8005c72:	4628      	mov	r0, r5
 8005c74:	f001 f830 	bl	8006cd8 <__i2b>
 8005c78:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005c7a:	2b00      	cmp	r3, #0
 8005c7c:	4604      	mov	r4, r0
 8005c7e:	f340 8087 	ble.w	8005d90 <_dtoa_r+0x8e0>
 8005c82:	461a      	mov	r2, r3
 8005c84:	4601      	mov	r1, r0
 8005c86:	4628      	mov	r0, r5
 8005c88:	f001 f8e2 	bl	8006e50 <__pow5mult>
 8005c8c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005c8e:	2b01      	cmp	r3, #1
 8005c90:	4604      	mov	r4, r0
 8005c92:	f340 8080 	ble.w	8005d96 <_dtoa_r+0x8e6>
 8005c96:	f04f 0800 	mov.w	r8, #0
 8005c9a:	6923      	ldr	r3, [r4, #16]
 8005c9c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8005ca0:	6918      	ldr	r0, [r3, #16]
 8005ca2:	f000 ffcb 	bl	8006c3c <__hi0bits>
 8005ca6:	f1c0 0020 	rsb	r0, r0, #32
 8005caa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005cac:	4418      	add	r0, r3
 8005cae:	f010 001f 	ands.w	r0, r0, #31
 8005cb2:	f000 8092 	beq.w	8005dda <_dtoa_r+0x92a>
 8005cb6:	f1c0 0320 	rsb	r3, r0, #32
 8005cba:	2b04      	cmp	r3, #4
 8005cbc:	f340 808a 	ble.w	8005dd4 <_dtoa_r+0x924>
 8005cc0:	f1c0 001c 	rsb	r0, r0, #28
 8005cc4:	9b06      	ldr	r3, [sp, #24]
 8005cc6:	4403      	add	r3, r0
 8005cc8:	9306      	str	r3, [sp, #24]
 8005cca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005ccc:	4403      	add	r3, r0
 8005cce:	4407      	add	r7, r0
 8005cd0:	9309      	str	r3, [sp, #36]	; 0x24
 8005cd2:	9b06      	ldr	r3, [sp, #24]
 8005cd4:	2b00      	cmp	r3, #0
 8005cd6:	dd05      	ble.n	8005ce4 <_dtoa_r+0x834>
 8005cd8:	4651      	mov	r1, sl
 8005cda:	461a      	mov	r2, r3
 8005cdc:	4628      	mov	r0, r5
 8005cde:	f001 f911 	bl	8006f04 <__lshift>
 8005ce2:	4682      	mov	sl, r0
 8005ce4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005ce6:	2b00      	cmp	r3, #0
 8005ce8:	dd05      	ble.n	8005cf6 <_dtoa_r+0x846>
 8005cea:	4621      	mov	r1, r4
 8005cec:	461a      	mov	r2, r3
 8005cee:	4628      	mov	r0, r5
 8005cf0:	f001 f908 	bl	8006f04 <__lshift>
 8005cf4:	4604      	mov	r4, r0
 8005cf6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005cf8:	2b00      	cmp	r3, #0
 8005cfa:	d070      	beq.n	8005dde <_dtoa_r+0x92e>
 8005cfc:	4621      	mov	r1, r4
 8005cfe:	4650      	mov	r0, sl
 8005d00:	f001 f96c 	bl	8006fdc <__mcmp>
 8005d04:	2800      	cmp	r0, #0
 8005d06:	da6a      	bge.n	8005dde <_dtoa_r+0x92e>
 8005d08:	2300      	movs	r3, #0
 8005d0a:	4651      	mov	r1, sl
 8005d0c:	220a      	movs	r2, #10
 8005d0e:	4628      	mov	r0, r5
 8005d10:	f000 ff00 	bl	8006b14 <__multadd>
 8005d14:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005d16:	f109 39ff 	add.w	r9, r9, #4294967295
 8005d1a:	4682      	mov	sl, r0
 8005d1c:	2b00      	cmp	r3, #0
 8005d1e:	f000 8193 	beq.w	8006048 <_dtoa_r+0xb98>
 8005d22:	4631      	mov	r1, r6
 8005d24:	2300      	movs	r3, #0
 8005d26:	220a      	movs	r2, #10
 8005d28:	4628      	mov	r0, r5
 8005d2a:	f000 fef3 	bl	8006b14 <__multadd>
 8005d2e:	f1bb 0f00 	cmp.w	fp, #0
 8005d32:	4606      	mov	r6, r0
 8005d34:	f300 8093 	bgt.w	8005e5e <_dtoa_r+0x9ae>
 8005d38:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005d3a:	2b02      	cmp	r3, #2
 8005d3c:	dc57      	bgt.n	8005dee <_dtoa_r+0x93e>
 8005d3e:	e08e      	b.n	8005e5e <_dtoa_r+0x9ae>
 8005d40:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8005d42:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8005d46:	e756      	b.n	8005bf6 <_dtoa_r+0x746>
 8005d48:	9b02      	ldr	r3, [sp, #8]
 8005d4a:	1e5c      	subs	r4, r3, #1
 8005d4c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005d4e:	42a3      	cmp	r3, r4
 8005d50:	bfbf      	itttt	lt
 8005d52:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 8005d54:	940a      	strlt	r4, [sp, #40]	; 0x28
 8005d56:	1ae2      	sublt	r2, r4, r3
 8005d58:	9b0e      	ldrlt	r3, [sp, #56]	; 0x38
 8005d5a:	bfb6      	itet	lt
 8005d5c:	189b      	addlt	r3, r3, r2
 8005d5e:	1b1c      	subge	r4, r3, r4
 8005d60:	930e      	strlt	r3, [sp, #56]	; 0x38
 8005d62:	9b02      	ldr	r3, [sp, #8]
 8005d64:	bfb8      	it	lt
 8005d66:	2400      	movlt	r4, #0
 8005d68:	2b00      	cmp	r3, #0
 8005d6a:	bfb9      	ittee	lt
 8005d6c:	9b06      	ldrlt	r3, [sp, #24]
 8005d6e:	9a02      	ldrlt	r2, [sp, #8]
 8005d70:	9f06      	ldrge	r7, [sp, #24]
 8005d72:	9b02      	ldrge	r3, [sp, #8]
 8005d74:	bfbc      	itt	lt
 8005d76:	1a9f      	sublt	r7, r3, r2
 8005d78:	2300      	movlt	r3, #0
 8005d7a:	e73e      	b.n	8005bfa <_dtoa_r+0x74a>
 8005d7c:	3fe00000 	.word	0x3fe00000
 8005d80:	40240000 	.word	0x40240000
 8005d84:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8005d86:	9f06      	ldr	r7, [sp, #24]
 8005d88:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8005d8a:	e741      	b.n	8005c10 <_dtoa_r+0x760>
 8005d8c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005d8e:	e76a      	b.n	8005c66 <_dtoa_r+0x7b6>
 8005d90:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005d92:	2b01      	cmp	r3, #1
 8005d94:	dc19      	bgt.n	8005dca <_dtoa_r+0x91a>
 8005d96:	9b04      	ldr	r3, [sp, #16]
 8005d98:	b9bb      	cbnz	r3, 8005dca <_dtoa_r+0x91a>
 8005d9a:	9b05      	ldr	r3, [sp, #20]
 8005d9c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8005da0:	b99b      	cbnz	r3, 8005dca <_dtoa_r+0x91a>
 8005da2:	9b05      	ldr	r3, [sp, #20]
 8005da4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8005da8:	0d1b      	lsrs	r3, r3, #20
 8005daa:	051b      	lsls	r3, r3, #20
 8005dac:	b183      	cbz	r3, 8005dd0 <_dtoa_r+0x920>
 8005dae:	9b06      	ldr	r3, [sp, #24]
 8005db0:	3301      	adds	r3, #1
 8005db2:	9306      	str	r3, [sp, #24]
 8005db4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005db6:	3301      	adds	r3, #1
 8005db8:	9309      	str	r3, [sp, #36]	; 0x24
 8005dba:	f04f 0801 	mov.w	r8, #1
 8005dbe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005dc0:	2b00      	cmp	r3, #0
 8005dc2:	f47f af6a 	bne.w	8005c9a <_dtoa_r+0x7ea>
 8005dc6:	2001      	movs	r0, #1
 8005dc8:	e76f      	b.n	8005caa <_dtoa_r+0x7fa>
 8005dca:	f04f 0800 	mov.w	r8, #0
 8005dce:	e7f6      	b.n	8005dbe <_dtoa_r+0x90e>
 8005dd0:	4698      	mov	r8, r3
 8005dd2:	e7f4      	b.n	8005dbe <_dtoa_r+0x90e>
 8005dd4:	f43f af7d 	beq.w	8005cd2 <_dtoa_r+0x822>
 8005dd8:	4618      	mov	r0, r3
 8005dda:	301c      	adds	r0, #28
 8005ddc:	e772      	b.n	8005cc4 <_dtoa_r+0x814>
 8005dde:	9b02      	ldr	r3, [sp, #8]
 8005de0:	2b00      	cmp	r3, #0
 8005de2:	dc36      	bgt.n	8005e52 <_dtoa_r+0x9a2>
 8005de4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005de6:	2b02      	cmp	r3, #2
 8005de8:	dd33      	ble.n	8005e52 <_dtoa_r+0x9a2>
 8005dea:	f8dd b008 	ldr.w	fp, [sp, #8]
 8005dee:	f1bb 0f00 	cmp.w	fp, #0
 8005df2:	d10d      	bne.n	8005e10 <_dtoa_r+0x960>
 8005df4:	4621      	mov	r1, r4
 8005df6:	465b      	mov	r3, fp
 8005df8:	2205      	movs	r2, #5
 8005dfa:	4628      	mov	r0, r5
 8005dfc:	f000 fe8a 	bl	8006b14 <__multadd>
 8005e00:	4601      	mov	r1, r0
 8005e02:	4604      	mov	r4, r0
 8005e04:	4650      	mov	r0, sl
 8005e06:	f001 f8e9 	bl	8006fdc <__mcmp>
 8005e0a:	2800      	cmp	r0, #0
 8005e0c:	f73f adb6 	bgt.w	800597c <_dtoa_r+0x4cc>
 8005e10:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8005e12:	9f08      	ldr	r7, [sp, #32]
 8005e14:	ea6f 0903 	mvn.w	r9, r3
 8005e18:	f04f 0800 	mov.w	r8, #0
 8005e1c:	4621      	mov	r1, r4
 8005e1e:	4628      	mov	r0, r5
 8005e20:	f000 fe56 	bl	8006ad0 <_Bfree>
 8005e24:	2e00      	cmp	r6, #0
 8005e26:	f43f aea4 	beq.w	8005b72 <_dtoa_r+0x6c2>
 8005e2a:	f1b8 0f00 	cmp.w	r8, #0
 8005e2e:	d005      	beq.n	8005e3c <_dtoa_r+0x98c>
 8005e30:	45b0      	cmp	r8, r6
 8005e32:	d003      	beq.n	8005e3c <_dtoa_r+0x98c>
 8005e34:	4641      	mov	r1, r8
 8005e36:	4628      	mov	r0, r5
 8005e38:	f000 fe4a 	bl	8006ad0 <_Bfree>
 8005e3c:	4631      	mov	r1, r6
 8005e3e:	4628      	mov	r0, r5
 8005e40:	f000 fe46 	bl	8006ad0 <_Bfree>
 8005e44:	e695      	b.n	8005b72 <_dtoa_r+0x6c2>
 8005e46:	2400      	movs	r4, #0
 8005e48:	4626      	mov	r6, r4
 8005e4a:	e7e1      	b.n	8005e10 <_dtoa_r+0x960>
 8005e4c:	46c1      	mov	r9, r8
 8005e4e:	4626      	mov	r6, r4
 8005e50:	e594      	b.n	800597c <_dtoa_r+0x4cc>
 8005e52:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005e54:	f8dd b008 	ldr.w	fp, [sp, #8]
 8005e58:	2b00      	cmp	r3, #0
 8005e5a:	f000 80fc 	beq.w	8006056 <_dtoa_r+0xba6>
 8005e5e:	2f00      	cmp	r7, #0
 8005e60:	dd05      	ble.n	8005e6e <_dtoa_r+0x9be>
 8005e62:	4631      	mov	r1, r6
 8005e64:	463a      	mov	r2, r7
 8005e66:	4628      	mov	r0, r5
 8005e68:	f001 f84c 	bl	8006f04 <__lshift>
 8005e6c:	4606      	mov	r6, r0
 8005e6e:	f1b8 0f00 	cmp.w	r8, #0
 8005e72:	d05c      	beq.n	8005f2e <_dtoa_r+0xa7e>
 8005e74:	6871      	ldr	r1, [r6, #4]
 8005e76:	4628      	mov	r0, r5
 8005e78:	f000 fdea 	bl	8006a50 <_Balloc>
 8005e7c:	4607      	mov	r7, r0
 8005e7e:	b928      	cbnz	r0, 8005e8c <_dtoa_r+0x9dc>
 8005e80:	4b7f      	ldr	r3, [pc, #508]	; (8006080 <_dtoa_r+0xbd0>)
 8005e82:	4602      	mov	r2, r0
 8005e84:	f240 21ea 	movw	r1, #746	; 0x2ea
 8005e88:	f7ff bb26 	b.w	80054d8 <_dtoa_r+0x28>
 8005e8c:	6932      	ldr	r2, [r6, #16]
 8005e8e:	3202      	adds	r2, #2
 8005e90:	0092      	lsls	r2, r2, #2
 8005e92:	f106 010c 	add.w	r1, r6, #12
 8005e96:	300c      	adds	r0, #12
 8005e98:	f7fd f8aa 	bl	8002ff0 <memcpy>
 8005e9c:	2201      	movs	r2, #1
 8005e9e:	4639      	mov	r1, r7
 8005ea0:	4628      	mov	r0, r5
 8005ea2:	f001 f82f 	bl	8006f04 <__lshift>
 8005ea6:	9b08      	ldr	r3, [sp, #32]
 8005ea8:	3301      	adds	r3, #1
 8005eaa:	9302      	str	r3, [sp, #8]
 8005eac:	9b08      	ldr	r3, [sp, #32]
 8005eae:	445b      	add	r3, fp
 8005eb0:	930a      	str	r3, [sp, #40]	; 0x28
 8005eb2:	9b04      	ldr	r3, [sp, #16]
 8005eb4:	f003 0301 	and.w	r3, r3, #1
 8005eb8:	46b0      	mov	r8, r6
 8005eba:	9309      	str	r3, [sp, #36]	; 0x24
 8005ebc:	4606      	mov	r6, r0
 8005ebe:	9b02      	ldr	r3, [sp, #8]
 8005ec0:	4621      	mov	r1, r4
 8005ec2:	4650      	mov	r0, sl
 8005ec4:	f103 3bff 	add.w	fp, r3, #4294967295
 8005ec8:	f7ff fa64 	bl	8005394 <quorem>
 8005ecc:	4603      	mov	r3, r0
 8005ece:	3330      	adds	r3, #48	; 0x30
 8005ed0:	9004      	str	r0, [sp, #16]
 8005ed2:	4641      	mov	r1, r8
 8005ed4:	4650      	mov	r0, sl
 8005ed6:	930b      	str	r3, [sp, #44]	; 0x2c
 8005ed8:	f001 f880 	bl	8006fdc <__mcmp>
 8005edc:	4632      	mov	r2, r6
 8005ede:	9006      	str	r0, [sp, #24]
 8005ee0:	4621      	mov	r1, r4
 8005ee2:	4628      	mov	r0, r5
 8005ee4:	f001 f896 	bl	8007014 <__mdiff>
 8005ee8:	68c2      	ldr	r2, [r0, #12]
 8005eea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005eec:	4607      	mov	r7, r0
 8005eee:	bb02      	cbnz	r2, 8005f32 <_dtoa_r+0xa82>
 8005ef0:	4601      	mov	r1, r0
 8005ef2:	4650      	mov	r0, sl
 8005ef4:	f001 f872 	bl	8006fdc <__mcmp>
 8005ef8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005efa:	4602      	mov	r2, r0
 8005efc:	4639      	mov	r1, r7
 8005efe:	4628      	mov	r0, r5
 8005f00:	e9cd 320b 	strd	r3, r2, [sp, #44]	; 0x2c
 8005f04:	f000 fde4 	bl	8006ad0 <_Bfree>
 8005f08:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005f0a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005f0c:	9f02      	ldr	r7, [sp, #8]
 8005f0e:	ea43 0102 	orr.w	r1, r3, r2
 8005f12:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005f14:	430b      	orrs	r3, r1
 8005f16:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005f18:	d10d      	bne.n	8005f36 <_dtoa_r+0xa86>
 8005f1a:	2b39      	cmp	r3, #57	; 0x39
 8005f1c:	d027      	beq.n	8005f6e <_dtoa_r+0xabe>
 8005f1e:	9a06      	ldr	r2, [sp, #24]
 8005f20:	2a00      	cmp	r2, #0
 8005f22:	dd01      	ble.n	8005f28 <_dtoa_r+0xa78>
 8005f24:	9b04      	ldr	r3, [sp, #16]
 8005f26:	3331      	adds	r3, #49	; 0x31
 8005f28:	f88b 3000 	strb.w	r3, [fp]
 8005f2c:	e776      	b.n	8005e1c <_dtoa_r+0x96c>
 8005f2e:	4630      	mov	r0, r6
 8005f30:	e7b9      	b.n	8005ea6 <_dtoa_r+0x9f6>
 8005f32:	2201      	movs	r2, #1
 8005f34:	e7e2      	b.n	8005efc <_dtoa_r+0xa4c>
 8005f36:	9906      	ldr	r1, [sp, #24]
 8005f38:	2900      	cmp	r1, #0
 8005f3a:	db04      	blt.n	8005f46 <_dtoa_r+0xa96>
 8005f3c:	9822      	ldr	r0, [sp, #136]	; 0x88
 8005f3e:	4301      	orrs	r1, r0
 8005f40:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005f42:	4301      	orrs	r1, r0
 8005f44:	d120      	bne.n	8005f88 <_dtoa_r+0xad8>
 8005f46:	2a00      	cmp	r2, #0
 8005f48:	ddee      	ble.n	8005f28 <_dtoa_r+0xa78>
 8005f4a:	4651      	mov	r1, sl
 8005f4c:	2201      	movs	r2, #1
 8005f4e:	4628      	mov	r0, r5
 8005f50:	9302      	str	r3, [sp, #8]
 8005f52:	f000 ffd7 	bl	8006f04 <__lshift>
 8005f56:	4621      	mov	r1, r4
 8005f58:	4682      	mov	sl, r0
 8005f5a:	f001 f83f 	bl	8006fdc <__mcmp>
 8005f5e:	2800      	cmp	r0, #0
 8005f60:	9b02      	ldr	r3, [sp, #8]
 8005f62:	dc02      	bgt.n	8005f6a <_dtoa_r+0xaba>
 8005f64:	d1e0      	bne.n	8005f28 <_dtoa_r+0xa78>
 8005f66:	07da      	lsls	r2, r3, #31
 8005f68:	d5de      	bpl.n	8005f28 <_dtoa_r+0xa78>
 8005f6a:	2b39      	cmp	r3, #57	; 0x39
 8005f6c:	d1da      	bne.n	8005f24 <_dtoa_r+0xa74>
 8005f6e:	2339      	movs	r3, #57	; 0x39
 8005f70:	f88b 3000 	strb.w	r3, [fp]
 8005f74:	463b      	mov	r3, r7
 8005f76:	461f      	mov	r7, r3
 8005f78:	3b01      	subs	r3, #1
 8005f7a:	f817 2c01 	ldrb.w	r2, [r7, #-1]
 8005f7e:	2a39      	cmp	r2, #57	; 0x39
 8005f80:	d050      	beq.n	8006024 <_dtoa_r+0xb74>
 8005f82:	3201      	adds	r2, #1
 8005f84:	701a      	strb	r2, [r3, #0]
 8005f86:	e749      	b.n	8005e1c <_dtoa_r+0x96c>
 8005f88:	2a00      	cmp	r2, #0
 8005f8a:	dd03      	ble.n	8005f94 <_dtoa_r+0xae4>
 8005f8c:	2b39      	cmp	r3, #57	; 0x39
 8005f8e:	d0ee      	beq.n	8005f6e <_dtoa_r+0xabe>
 8005f90:	3301      	adds	r3, #1
 8005f92:	e7c9      	b.n	8005f28 <_dtoa_r+0xa78>
 8005f94:	9a02      	ldr	r2, [sp, #8]
 8005f96:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005f98:	f802 3c01 	strb.w	r3, [r2, #-1]
 8005f9c:	428a      	cmp	r2, r1
 8005f9e:	d02a      	beq.n	8005ff6 <_dtoa_r+0xb46>
 8005fa0:	4651      	mov	r1, sl
 8005fa2:	2300      	movs	r3, #0
 8005fa4:	220a      	movs	r2, #10
 8005fa6:	4628      	mov	r0, r5
 8005fa8:	f000 fdb4 	bl	8006b14 <__multadd>
 8005fac:	45b0      	cmp	r8, r6
 8005fae:	4682      	mov	sl, r0
 8005fb0:	f04f 0300 	mov.w	r3, #0
 8005fb4:	f04f 020a 	mov.w	r2, #10
 8005fb8:	4641      	mov	r1, r8
 8005fba:	4628      	mov	r0, r5
 8005fbc:	d107      	bne.n	8005fce <_dtoa_r+0xb1e>
 8005fbe:	f000 fda9 	bl	8006b14 <__multadd>
 8005fc2:	4680      	mov	r8, r0
 8005fc4:	4606      	mov	r6, r0
 8005fc6:	9b02      	ldr	r3, [sp, #8]
 8005fc8:	3301      	adds	r3, #1
 8005fca:	9302      	str	r3, [sp, #8]
 8005fcc:	e777      	b.n	8005ebe <_dtoa_r+0xa0e>
 8005fce:	f000 fda1 	bl	8006b14 <__multadd>
 8005fd2:	4631      	mov	r1, r6
 8005fd4:	4680      	mov	r8, r0
 8005fd6:	2300      	movs	r3, #0
 8005fd8:	220a      	movs	r2, #10
 8005fda:	4628      	mov	r0, r5
 8005fdc:	f000 fd9a 	bl	8006b14 <__multadd>
 8005fe0:	4606      	mov	r6, r0
 8005fe2:	e7f0      	b.n	8005fc6 <_dtoa_r+0xb16>
 8005fe4:	f1bb 0f00 	cmp.w	fp, #0
 8005fe8:	9a08      	ldr	r2, [sp, #32]
 8005fea:	bfcc      	ite	gt
 8005fec:	465f      	movgt	r7, fp
 8005fee:	2701      	movle	r7, #1
 8005ff0:	4417      	add	r7, r2
 8005ff2:	f04f 0800 	mov.w	r8, #0
 8005ff6:	4651      	mov	r1, sl
 8005ff8:	2201      	movs	r2, #1
 8005ffa:	4628      	mov	r0, r5
 8005ffc:	9302      	str	r3, [sp, #8]
 8005ffe:	f000 ff81 	bl	8006f04 <__lshift>
 8006002:	4621      	mov	r1, r4
 8006004:	4682      	mov	sl, r0
 8006006:	f000 ffe9 	bl	8006fdc <__mcmp>
 800600a:	2800      	cmp	r0, #0
 800600c:	dcb2      	bgt.n	8005f74 <_dtoa_r+0xac4>
 800600e:	d102      	bne.n	8006016 <_dtoa_r+0xb66>
 8006010:	9b02      	ldr	r3, [sp, #8]
 8006012:	07db      	lsls	r3, r3, #31
 8006014:	d4ae      	bmi.n	8005f74 <_dtoa_r+0xac4>
 8006016:	463b      	mov	r3, r7
 8006018:	461f      	mov	r7, r3
 800601a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800601e:	2a30      	cmp	r2, #48	; 0x30
 8006020:	d0fa      	beq.n	8006018 <_dtoa_r+0xb68>
 8006022:	e6fb      	b.n	8005e1c <_dtoa_r+0x96c>
 8006024:	9a08      	ldr	r2, [sp, #32]
 8006026:	429a      	cmp	r2, r3
 8006028:	d1a5      	bne.n	8005f76 <_dtoa_r+0xac6>
 800602a:	2331      	movs	r3, #49	; 0x31
 800602c:	f109 0901 	add.w	r9, r9, #1
 8006030:	7013      	strb	r3, [r2, #0]
 8006032:	e6f3      	b.n	8005e1c <_dtoa_r+0x96c>
 8006034:	4b13      	ldr	r3, [pc, #76]	; (8006084 <_dtoa_r+0xbd4>)
 8006036:	f7ff baa6 	b.w	8005586 <_dtoa_r+0xd6>
 800603a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800603c:	2b00      	cmp	r3, #0
 800603e:	f47f aa7f 	bne.w	8005540 <_dtoa_r+0x90>
 8006042:	4b11      	ldr	r3, [pc, #68]	; (8006088 <_dtoa_r+0xbd8>)
 8006044:	f7ff ba9f 	b.w	8005586 <_dtoa_r+0xd6>
 8006048:	f1bb 0f00 	cmp.w	fp, #0
 800604c:	dc03      	bgt.n	8006056 <_dtoa_r+0xba6>
 800604e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006050:	2b02      	cmp	r3, #2
 8006052:	f73f aecc 	bgt.w	8005dee <_dtoa_r+0x93e>
 8006056:	9f08      	ldr	r7, [sp, #32]
 8006058:	4621      	mov	r1, r4
 800605a:	4650      	mov	r0, sl
 800605c:	f7ff f99a 	bl	8005394 <quorem>
 8006060:	f100 0330 	add.w	r3, r0, #48	; 0x30
 8006064:	f807 3b01 	strb.w	r3, [r7], #1
 8006068:	9a08      	ldr	r2, [sp, #32]
 800606a:	1aba      	subs	r2, r7, r2
 800606c:	4593      	cmp	fp, r2
 800606e:	ddb9      	ble.n	8005fe4 <_dtoa_r+0xb34>
 8006070:	4651      	mov	r1, sl
 8006072:	2300      	movs	r3, #0
 8006074:	220a      	movs	r2, #10
 8006076:	4628      	mov	r0, r5
 8006078:	f000 fd4c 	bl	8006b14 <__multadd>
 800607c:	4682      	mov	sl, r0
 800607e:	e7eb      	b.n	8006058 <_dtoa_r+0xba8>
 8006080:	0800a251 	.word	0x0800a251
 8006084:	0800a451 	.word	0x0800a451
 8006088:	0800a1e5 	.word	0x0800a1e5

0800608c <__sflush_r>:
 800608c:	898a      	ldrh	r2, [r1, #12]
 800608e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006092:	4605      	mov	r5, r0
 8006094:	0710      	lsls	r0, r2, #28
 8006096:	460c      	mov	r4, r1
 8006098:	d458      	bmi.n	800614c <__sflush_r+0xc0>
 800609a:	684b      	ldr	r3, [r1, #4]
 800609c:	2b00      	cmp	r3, #0
 800609e:	dc05      	bgt.n	80060ac <__sflush_r+0x20>
 80060a0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80060a2:	2b00      	cmp	r3, #0
 80060a4:	dc02      	bgt.n	80060ac <__sflush_r+0x20>
 80060a6:	2000      	movs	r0, #0
 80060a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80060ac:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80060ae:	2e00      	cmp	r6, #0
 80060b0:	d0f9      	beq.n	80060a6 <__sflush_r+0x1a>
 80060b2:	2300      	movs	r3, #0
 80060b4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80060b8:	682f      	ldr	r7, [r5, #0]
 80060ba:	602b      	str	r3, [r5, #0]
 80060bc:	d032      	beq.n	8006124 <__sflush_r+0x98>
 80060be:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80060c0:	89a3      	ldrh	r3, [r4, #12]
 80060c2:	075a      	lsls	r2, r3, #29
 80060c4:	d505      	bpl.n	80060d2 <__sflush_r+0x46>
 80060c6:	6863      	ldr	r3, [r4, #4]
 80060c8:	1ac0      	subs	r0, r0, r3
 80060ca:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80060cc:	b10b      	cbz	r3, 80060d2 <__sflush_r+0x46>
 80060ce:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80060d0:	1ac0      	subs	r0, r0, r3
 80060d2:	2300      	movs	r3, #0
 80060d4:	4602      	mov	r2, r0
 80060d6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80060d8:	6a21      	ldr	r1, [r4, #32]
 80060da:	4628      	mov	r0, r5
 80060dc:	47b0      	blx	r6
 80060de:	1c43      	adds	r3, r0, #1
 80060e0:	89a3      	ldrh	r3, [r4, #12]
 80060e2:	d106      	bne.n	80060f2 <__sflush_r+0x66>
 80060e4:	6829      	ldr	r1, [r5, #0]
 80060e6:	291d      	cmp	r1, #29
 80060e8:	d82c      	bhi.n	8006144 <__sflush_r+0xb8>
 80060ea:	4a2a      	ldr	r2, [pc, #168]	; (8006194 <__sflush_r+0x108>)
 80060ec:	40ca      	lsrs	r2, r1
 80060ee:	07d6      	lsls	r6, r2, #31
 80060f0:	d528      	bpl.n	8006144 <__sflush_r+0xb8>
 80060f2:	2200      	movs	r2, #0
 80060f4:	6062      	str	r2, [r4, #4]
 80060f6:	04d9      	lsls	r1, r3, #19
 80060f8:	6922      	ldr	r2, [r4, #16]
 80060fa:	6022      	str	r2, [r4, #0]
 80060fc:	d504      	bpl.n	8006108 <__sflush_r+0x7c>
 80060fe:	1c42      	adds	r2, r0, #1
 8006100:	d101      	bne.n	8006106 <__sflush_r+0x7a>
 8006102:	682b      	ldr	r3, [r5, #0]
 8006104:	b903      	cbnz	r3, 8006108 <__sflush_r+0x7c>
 8006106:	6560      	str	r0, [r4, #84]	; 0x54
 8006108:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800610a:	602f      	str	r7, [r5, #0]
 800610c:	2900      	cmp	r1, #0
 800610e:	d0ca      	beq.n	80060a6 <__sflush_r+0x1a>
 8006110:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8006114:	4299      	cmp	r1, r3
 8006116:	d002      	beq.n	800611e <__sflush_r+0x92>
 8006118:	4628      	mov	r0, r5
 800611a:	f7fc ff7f 	bl	800301c <_free_r>
 800611e:	2000      	movs	r0, #0
 8006120:	6360      	str	r0, [r4, #52]	; 0x34
 8006122:	e7c1      	b.n	80060a8 <__sflush_r+0x1c>
 8006124:	6a21      	ldr	r1, [r4, #32]
 8006126:	2301      	movs	r3, #1
 8006128:	4628      	mov	r0, r5
 800612a:	47b0      	blx	r6
 800612c:	1c41      	adds	r1, r0, #1
 800612e:	d1c7      	bne.n	80060c0 <__sflush_r+0x34>
 8006130:	682b      	ldr	r3, [r5, #0]
 8006132:	2b00      	cmp	r3, #0
 8006134:	d0c4      	beq.n	80060c0 <__sflush_r+0x34>
 8006136:	2b1d      	cmp	r3, #29
 8006138:	d001      	beq.n	800613e <__sflush_r+0xb2>
 800613a:	2b16      	cmp	r3, #22
 800613c:	d101      	bne.n	8006142 <__sflush_r+0xb6>
 800613e:	602f      	str	r7, [r5, #0]
 8006140:	e7b1      	b.n	80060a6 <__sflush_r+0x1a>
 8006142:	89a3      	ldrh	r3, [r4, #12]
 8006144:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006148:	81a3      	strh	r3, [r4, #12]
 800614a:	e7ad      	b.n	80060a8 <__sflush_r+0x1c>
 800614c:	690f      	ldr	r7, [r1, #16]
 800614e:	2f00      	cmp	r7, #0
 8006150:	d0a9      	beq.n	80060a6 <__sflush_r+0x1a>
 8006152:	0793      	lsls	r3, r2, #30
 8006154:	680e      	ldr	r6, [r1, #0]
 8006156:	bf08      	it	eq
 8006158:	694b      	ldreq	r3, [r1, #20]
 800615a:	600f      	str	r7, [r1, #0]
 800615c:	bf18      	it	ne
 800615e:	2300      	movne	r3, #0
 8006160:	eba6 0807 	sub.w	r8, r6, r7
 8006164:	608b      	str	r3, [r1, #8]
 8006166:	f1b8 0f00 	cmp.w	r8, #0
 800616a:	dd9c      	ble.n	80060a6 <__sflush_r+0x1a>
 800616c:	6a21      	ldr	r1, [r4, #32]
 800616e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8006170:	4643      	mov	r3, r8
 8006172:	463a      	mov	r2, r7
 8006174:	4628      	mov	r0, r5
 8006176:	47b0      	blx	r6
 8006178:	2800      	cmp	r0, #0
 800617a:	dc06      	bgt.n	800618a <__sflush_r+0xfe>
 800617c:	89a3      	ldrh	r3, [r4, #12]
 800617e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006182:	81a3      	strh	r3, [r4, #12]
 8006184:	f04f 30ff 	mov.w	r0, #4294967295
 8006188:	e78e      	b.n	80060a8 <__sflush_r+0x1c>
 800618a:	4407      	add	r7, r0
 800618c:	eba8 0800 	sub.w	r8, r8, r0
 8006190:	e7e9      	b.n	8006166 <__sflush_r+0xda>
 8006192:	bf00      	nop
 8006194:	20400001 	.word	0x20400001

08006198 <_fflush_r>:
 8006198:	b538      	push	{r3, r4, r5, lr}
 800619a:	690b      	ldr	r3, [r1, #16]
 800619c:	4605      	mov	r5, r0
 800619e:	460c      	mov	r4, r1
 80061a0:	b913      	cbnz	r3, 80061a8 <_fflush_r+0x10>
 80061a2:	2500      	movs	r5, #0
 80061a4:	4628      	mov	r0, r5
 80061a6:	bd38      	pop	{r3, r4, r5, pc}
 80061a8:	b118      	cbz	r0, 80061b2 <_fflush_r+0x1a>
 80061aa:	6983      	ldr	r3, [r0, #24]
 80061ac:	b90b      	cbnz	r3, 80061b2 <_fflush_r+0x1a>
 80061ae:	f7fc fe2d 	bl	8002e0c <__sinit>
 80061b2:	4b14      	ldr	r3, [pc, #80]	; (8006204 <_fflush_r+0x6c>)
 80061b4:	429c      	cmp	r4, r3
 80061b6:	d11b      	bne.n	80061f0 <_fflush_r+0x58>
 80061b8:	686c      	ldr	r4, [r5, #4]
 80061ba:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80061be:	2b00      	cmp	r3, #0
 80061c0:	d0ef      	beq.n	80061a2 <_fflush_r+0xa>
 80061c2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80061c4:	07d0      	lsls	r0, r2, #31
 80061c6:	d404      	bmi.n	80061d2 <_fflush_r+0x3a>
 80061c8:	0599      	lsls	r1, r3, #22
 80061ca:	d402      	bmi.n	80061d2 <_fflush_r+0x3a>
 80061cc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80061ce:	f7fc fefc 	bl	8002fca <__retarget_lock_acquire_recursive>
 80061d2:	4628      	mov	r0, r5
 80061d4:	4621      	mov	r1, r4
 80061d6:	f7ff ff59 	bl	800608c <__sflush_r>
 80061da:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80061dc:	07da      	lsls	r2, r3, #31
 80061de:	4605      	mov	r5, r0
 80061e0:	d4e0      	bmi.n	80061a4 <_fflush_r+0xc>
 80061e2:	89a3      	ldrh	r3, [r4, #12]
 80061e4:	059b      	lsls	r3, r3, #22
 80061e6:	d4dd      	bmi.n	80061a4 <_fflush_r+0xc>
 80061e8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80061ea:	f7fc feef 	bl	8002fcc <__retarget_lock_release_recursive>
 80061ee:	e7d9      	b.n	80061a4 <_fflush_r+0xc>
 80061f0:	4b05      	ldr	r3, [pc, #20]	; (8006208 <_fflush_r+0x70>)
 80061f2:	429c      	cmp	r4, r3
 80061f4:	d101      	bne.n	80061fa <_fflush_r+0x62>
 80061f6:	68ac      	ldr	r4, [r5, #8]
 80061f8:	e7df      	b.n	80061ba <_fflush_r+0x22>
 80061fa:	4b04      	ldr	r3, [pc, #16]	; (800620c <_fflush_r+0x74>)
 80061fc:	429c      	cmp	r4, r3
 80061fe:	bf08      	it	eq
 8006200:	68ec      	ldreq	r4, [r5, #12]
 8006202:	e7da      	b.n	80061ba <_fflush_r+0x22>
 8006204:	08009f64 	.word	0x08009f64
 8006208:	08009f84 	.word	0x08009f84
 800620c:	08009f44 	.word	0x08009f44

08006210 <fflush>:
 8006210:	4601      	mov	r1, r0
 8006212:	b920      	cbnz	r0, 800621e <fflush+0xe>
 8006214:	4b04      	ldr	r3, [pc, #16]	; (8006228 <fflush+0x18>)
 8006216:	4905      	ldr	r1, [pc, #20]	; (800622c <fflush+0x1c>)
 8006218:	6818      	ldr	r0, [r3, #0]
 800621a:	f7fc be92 	b.w	8002f42 <_fwalk_reent>
 800621e:	4b04      	ldr	r3, [pc, #16]	; (8006230 <fflush+0x20>)
 8006220:	6818      	ldr	r0, [r3, #0]
 8006222:	f7ff bfb9 	b.w	8006198 <_fflush_r>
 8006226:	bf00      	nop
 8006228:	08009fa4 	.word	0x08009fa4
 800622c:	08006199 	.word	0x08006199
 8006230:	20000b10 	.word	0x20000b10

08006234 <fiprintf>:
 8006234:	b40e      	push	{r1, r2, r3}
 8006236:	b503      	push	{r0, r1, lr}
 8006238:	4601      	mov	r1, r0
 800623a:	ab03      	add	r3, sp, #12
 800623c:	4805      	ldr	r0, [pc, #20]	; (8006254 <fiprintf+0x20>)
 800623e:	f853 2b04 	ldr.w	r2, [r3], #4
 8006242:	6800      	ldr	r0, [r0, #0]
 8006244:	9301      	str	r3, [sp, #4]
 8006246:	f001 fc1b 	bl	8007a80 <_vfiprintf_r>
 800624a:	b002      	add	sp, #8
 800624c:	f85d eb04 	ldr.w	lr, [sp], #4
 8006250:	b003      	add	sp, #12
 8006252:	4770      	bx	lr
 8006254:	20000b10 	.word	0x20000b10

08006258 <rshift>:
 8006258:	6903      	ldr	r3, [r0, #16]
 800625a:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 800625e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006262:	ea4f 1261 	mov.w	r2, r1, asr #5
 8006266:	f100 0414 	add.w	r4, r0, #20
 800626a:	dd45      	ble.n	80062f8 <rshift+0xa0>
 800626c:	f011 011f 	ands.w	r1, r1, #31
 8006270:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8006274:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8006278:	d10c      	bne.n	8006294 <rshift+0x3c>
 800627a:	f100 0710 	add.w	r7, r0, #16
 800627e:	4629      	mov	r1, r5
 8006280:	42b1      	cmp	r1, r6
 8006282:	d334      	bcc.n	80062ee <rshift+0x96>
 8006284:	1a9b      	subs	r3, r3, r2
 8006286:	009b      	lsls	r3, r3, #2
 8006288:	1eea      	subs	r2, r5, #3
 800628a:	4296      	cmp	r6, r2
 800628c:	bf38      	it	cc
 800628e:	2300      	movcc	r3, #0
 8006290:	4423      	add	r3, r4
 8006292:	e015      	b.n	80062c0 <rshift+0x68>
 8006294:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 8006298:	f1c1 0820 	rsb	r8, r1, #32
 800629c:	40cf      	lsrs	r7, r1
 800629e:	f105 0e04 	add.w	lr, r5, #4
 80062a2:	46a1      	mov	r9, r4
 80062a4:	4576      	cmp	r6, lr
 80062a6:	46f4      	mov	ip, lr
 80062a8:	d815      	bhi.n	80062d6 <rshift+0x7e>
 80062aa:	1a9b      	subs	r3, r3, r2
 80062ac:	009a      	lsls	r2, r3, #2
 80062ae:	3a04      	subs	r2, #4
 80062b0:	3501      	adds	r5, #1
 80062b2:	42ae      	cmp	r6, r5
 80062b4:	bf38      	it	cc
 80062b6:	2200      	movcc	r2, #0
 80062b8:	18a3      	adds	r3, r4, r2
 80062ba:	50a7      	str	r7, [r4, r2]
 80062bc:	b107      	cbz	r7, 80062c0 <rshift+0x68>
 80062be:	3304      	adds	r3, #4
 80062c0:	1b1a      	subs	r2, r3, r4
 80062c2:	42a3      	cmp	r3, r4
 80062c4:	ea4f 02a2 	mov.w	r2, r2, asr #2
 80062c8:	bf08      	it	eq
 80062ca:	2300      	moveq	r3, #0
 80062cc:	6102      	str	r2, [r0, #16]
 80062ce:	bf08      	it	eq
 80062d0:	6143      	streq	r3, [r0, #20]
 80062d2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80062d6:	f8dc c000 	ldr.w	ip, [ip]
 80062da:	fa0c fc08 	lsl.w	ip, ip, r8
 80062de:	ea4c 0707 	orr.w	r7, ip, r7
 80062e2:	f849 7b04 	str.w	r7, [r9], #4
 80062e6:	f85e 7b04 	ldr.w	r7, [lr], #4
 80062ea:	40cf      	lsrs	r7, r1
 80062ec:	e7da      	b.n	80062a4 <rshift+0x4c>
 80062ee:	f851 cb04 	ldr.w	ip, [r1], #4
 80062f2:	f847 cf04 	str.w	ip, [r7, #4]!
 80062f6:	e7c3      	b.n	8006280 <rshift+0x28>
 80062f8:	4623      	mov	r3, r4
 80062fa:	e7e1      	b.n	80062c0 <rshift+0x68>

080062fc <__hexdig_fun>:
 80062fc:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 8006300:	2b09      	cmp	r3, #9
 8006302:	d802      	bhi.n	800630a <__hexdig_fun+0xe>
 8006304:	3820      	subs	r0, #32
 8006306:	b2c0      	uxtb	r0, r0
 8006308:	4770      	bx	lr
 800630a:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 800630e:	2b05      	cmp	r3, #5
 8006310:	d801      	bhi.n	8006316 <__hexdig_fun+0x1a>
 8006312:	3847      	subs	r0, #71	; 0x47
 8006314:	e7f7      	b.n	8006306 <__hexdig_fun+0xa>
 8006316:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800631a:	2b05      	cmp	r3, #5
 800631c:	d801      	bhi.n	8006322 <__hexdig_fun+0x26>
 800631e:	3827      	subs	r0, #39	; 0x27
 8006320:	e7f1      	b.n	8006306 <__hexdig_fun+0xa>
 8006322:	2000      	movs	r0, #0
 8006324:	4770      	bx	lr
	...

08006328 <__gethex>:
 8006328:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800632c:	b08b      	sub	sp, #44	; 0x2c
 800632e:	468b      	mov	fp, r1
 8006330:	9306      	str	r3, [sp, #24]
 8006332:	4bb9      	ldr	r3, [pc, #740]	; (8006618 <__gethex+0x2f0>)
 8006334:	9002      	str	r0, [sp, #8]
 8006336:	681b      	ldr	r3, [r3, #0]
 8006338:	9303      	str	r3, [sp, #12]
 800633a:	4618      	mov	r0, r3
 800633c:	4690      	mov	r8, r2
 800633e:	f7f9 ffc1 	bl	80002c4 <strlen>
 8006342:	9b03      	ldr	r3, [sp, #12]
 8006344:	f8db 2000 	ldr.w	r2, [fp]
 8006348:	4403      	add	r3, r0
 800634a:	4682      	mov	sl, r0
 800634c:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 8006350:	9307      	str	r3, [sp, #28]
 8006352:	1c93      	adds	r3, r2, #2
 8006354:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 8006358:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 800635c:	32fe      	adds	r2, #254	; 0xfe
 800635e:	18d1      	adds	r1, r2, r3
 8006360:	461f      	mov	r7, r3
 8006362:	f813 0b01 	ldrb.w	r0, [r3], #1
 8006366:	9101      	str	r1, [sp, #4]
 8006368:	2830      	cmp	r0, #48	; 0x30
 800636a:	d0f8      	beq.n	800635e <__gethex+0x36>
 800636c:	f7ff ffc6 	bl	80062fc <__hexdig_fun>
 8006370:	4604      	mov	r4, r0
 8006372:	2800      	cmp	r0, #0
 8006374:	d13a      	bne.n	80063ec <__gethex+0xc4>
 8006376:	9903      	ldr	r1, [sp, #12]
 8006378:	4652      	mov	r2, sl
 800637a:	4638      	mov	r0, r7
 800637c:	f001 fe4e 	bl	800801c <strncmp>
 8006380:	4605      	mov	r5, r0
 8006382:	2800      	cmp	r0, #0
 8006384:	d166      	bne.n	8006454 <__gethex+0x12c>
 8006386:	f817 000a 	ldrb.w	r0, [r7, sl]
 800638a:	eb07 060a 	add.w	r6, r7, sl
 800638e:	f7ff ffb5 	bl	80062fc <__hexdig_fun>
 8006392:	2800      	cmp	r0, #0
 8006394:	d060      	beq.n	8006458 <__gethex+0x130>
 8006396:	4633      	mov	r3, r6
 8006398:	7818      	ldrb	r0, [r3, #0]
 800639a:	2830      	cmp	r0, #48	; 0x30
 800639c:	461f      	mov	r7, r3
 800639e:	f103 0301 	add.w	r3, r3, #1
 80063a2:	d0f9      	beq.n	8006398 <__gethex+0x70>
 80063a4:	f7ff ffaa 	bl	80062fc <__hexdig_fun>
 80063a8:	2301      	movs	r3, #1
 80063aa:	fab0 f480 	clz	r4, r0
 80063ae:	0964      	lsrs	r4, r4, #5
 80063b0:	4635      	mov	r5, r6
 80063b2:	9301      	str	r3, [sp, #4]
 80063b4:	463a      	mov	r2, r7
 80063b6:	4616      	mov	r6, r2
 80063b8:	3201      	adds	r2, #1
 80063ba:	7830      	ldrb	r0, [r6, #0]
 80063bc:	f7ff ff9e 	bl	80062fc <__hexdig_fun>
 80063c0:	2800      	cmp	r0, #0
 80063c2:	d1f8      	bne.n	80063b6 <__gethex+0x8e>
 80063c4:	9903      	ldr	r1, [sp, #12]
 80063c6:	4652      	mov	r2, sl
 80063c8:	4630      	mov	r0, r6
 80063ca:	f001 fe27 	bl	800801c <strncmp>
 80063ce:	b980      	cbnz	r0, 80063f2 <__gethex+0xca>
 80063d0:	b94d      	cbnz	r5, 80063e6 <__gethex+0xbe>
 80063d2:	eb06 050a 	add.w	r5, r6, sl
 80063d6:	462a      	mov	r2, r5
 80063d8:	4616      	mov	r6, r2
 80063da:	3201      	adds	r2, #1
 80063dc:	7830      	ldrb	r0, [r6, #0]
 80063de:	f7ff ff8d 	bl	80062fc <__hexdig_fun>
 80063e2:	2800      	cmp	r0, #0
 80063e4:	d1f8      	bne.n	80063d8 <__gethex+0xb0>
 80063e6:	1bad      	subs	r5, r5, r6
 80063e8:	00ad      	lsls	r5, r5, #2
 80063ea:	e004      	b.n	80063f6 <__gethex+0xce>
 80063ec:	2400      	movs	r4, #0
 80063ee:	4625      	mov	r5, r4
 80063f0:	e7e0      	b.n	80063b4 <__gethex+0x8c>
 80063f2:	2d00      	cmp	r5, #0
 80063f4:	d1f7      	bne.n	80063e6 <__gethex+0xbe>
 80063f6:	7833      	ldrb	r3, [r6, #0]
 80063f8:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 80063fc:	2b50      	cmp	r3, #80	; 0x50
 80063fe:	d139      	bne.n	8006474 <__gethex+0x14c>
 8006400:	7873      	ldrb	r3, [r6, #1]
 8006402:	2b2b      	cmp	r3, #43	; 0x2b
 8006404:	d02a      	beq.n	800645c <__gethex+0x134>
 8006406:	2b2d      	cmp	r3, #45	; 0x2d
 8006408:	d02c      	beq.n	8006464 <__gethex+0x13c>
 800640a:	1c71      	adds	r1, r6, #1
 800640c:	f04f 0900 	mov.w	r9, #0
 8006410:	7808      	ldrb	r0, [r1, #0]
 8006412:	f7ff ff73 	bl	80062fc <__hexdig_fun>
 8006416:	1e43      	subs	r3, r0, #1
 8006418:	b2db      	uxtb	r3, r3
 800641a:	2b18      	cmp	r3, #24
 800641c:	d82a      	bhi.n	8006474 <__gethex+0x14c>
 800641e:	f1a0 0210 	sub.w	r2, r0, #16
 8006422:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8006426:	f7ff ff69 	bl	80062fc <__hexdig_fun>
 800642a:	1e43      	subs	r3, r0, #1
 800642c:	b2db      	uxtb	r3, r3
 800642e:	2b18      	cmp	r3, #24
 8006430:	d91b      	bls.n	800646a <__gethex+0x142>
 8006432:	f1b9 0f00 	cmp.w	r9, #0
 8006436:	d000      	beq.n	800643a <__gethex+0x112>
 8006438:	4252      	negs	r2, r2
 800643a:	4415      	add	r5, r2
 800643c:	f8cb 1000 	str.w	r1, [fp]
 8006440:	b1d4      	cbz	r4, 8006478 <__gethex+0x150>
 8006442:	9b01      	ldr	r3, [sp, #4]
 8006444:	2b00      	cmp	r3, #0
 8006446:	bf14      	ite	ne
 8006448:	2700      	movne	r7, #0
 800644a:	2706      	moveq	r7, #6
 800644c:	4638      	mov	r0, r7
 800644e:	b00b      	add	sp, #44	; 0x2c
 8006450:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006454:	463e      	mov	r6, r7
 8006456:	4625      	mov	r5, r4
 8006458:	2401      	movs	r4, #1
 800645a:	e7cc      	b.n	80063f6 <__gethex+0xce>
 800645c:	f04f 0900 	mov.w	r9, #0
 8006460:	1cb1      	adds	r1, r6, #2
 8006462:	e7d5      	b.n	8006410 <__gethex+0xe8>
 8006464:	f04f 0901 	mov.w	r9, #1
 8006468:	e7fa      	b.n	8006460 <__gethex+0x138>
 800646a:	230a      	movs	r3, #10
 800646c:	fb03 0202 	mla	r2, r3, r2, r0
 8006470:	3a10      	subs	r2, #16
 8006472:	e7d6      	b.n	8006422 <__gethex+0xfa>
 8006474:	4631      	mov	r1, r6
 8006476:	e7e1      	b.n	800643c <__gethex+0x114>
 8006478:	1bf3      	subs	r3, r6, r7
 800647a:	3b01      	subs	r3, #1
 800647c:	4621      	mov	r1, r4
 800647e:	2b07      	cmp	r3, #7
 8006480:	dc0a      	bgt.n	8006498 <__gethex+0x170>
 8006482:	9802      	ldr	r0, [sp, #8]
 8006484:	f000 fae4 	bl	8006a50 <_Balloc>
 8006488:	4604      	mov	r4, r0
 800648a:	b940      	cbnz	r0, 800649e <__gethex+0x176>
 800648c:	4b63      	ldr	r3, [pc, #396]	; (800661c <__gethex+0x2f4>)
 800648e:	4602      	mov	r2, r0
 8006490:	21de      	movs	r1, #222	; 0xde
 8006492:	4863      	ldr	r0, [pc, #396]	; (8006620 <__gethex+0x2f8>)
 8006494:	f7fe ff50 	bl	8005338 <__assert_func>
 8006498:	3101      	adds	r1, #1
 800649a:	105b      	asrs	r3, r3, #1
 800649c:	e7ef      	b.n	800647e <__gethex+0x156>
 800649e:	f100 0914 	add.w	r9, r0, #20
 80064a2:	f04f 0b00 	mov.w	fp, #0
 80064a6:	f1ca 0301 	rsb	r3, sl, #1
 80064aa:	f8cd 9010 	str.w	r9, [sp, #16]
 80064ae:	f8cd b004 	str.w	fp, [sp, #4]
 80064b2:	9308      	str	r3, [sp, #32]
 80064b4:	42b7      	cmp	r7, r6
 80064b6:	d33f      	bcc.n	8006538 <__gethex+0x210>
 80064b8:	9f04      	ldr	r7, [sp, #16]
 80064ba:	9b01      	ldr	r3, [sp, #4]
 80064bc:	f847 3b04 	str.w	r3, [r7], #4
 80064c0:	eba7 0709 	sub.w	r7, r7, r9
 80064c4:	10bf      	asrs	r7, r7, #2
 80064c6:	6127      	str	r7, [r4, #16]
 80064c8:	4618      	mov	r0, r3
 80064ca:	f000 fbb7 	bl	8006c3c <__hi0bits>
 80064ce:	017f      	lsls	r7, r7, #5
 80064d0:	f8d8 6000 	ldr.w	r6, [r8]
 80064d4:	1a3f      	subs	r7, r7, r0
 80064d6:	42b7      	cmp	r7, r6
 80064d8:	dd62      	ble.n	80065a0 <__gethex+0x278>
 80064da:	1bbf      	subs	r7, r7, r6
 80064dc:	4639      	mov	r1, r7
 80064de:	4620      	mov	r0, r4
 80064e0:	f000 ff49 	bl	8007376 <__any_on>
 80064e4:	4682      	mov	sl, r0
 80064e6:	b1a8      	cbz	r0, 8006514 <__gethex+0x1ec>
 80064e8:	1e7b      	subs	r3, r7, #1
 80064ea:	1159      	asrs	r1, r3, #5
 80064ec:	f003 021f 	and.w	r2, r3, #31
 80064f0:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 80064f4:	f04f 0a01 	mov.w	sl, #1
 80064f8:	fa0a f202 	lsl.w	r2, sl, r2
 80064fc:	420a      	tst	r2, r1
 80064fe:	d009      	beq.n	8006514 <__gethex+0x1ec>
 8006500:	4553      	cmp	r3, sl
 8006502:	dd05      	ble.n	8006510 <__gethex+0x1e8>
 8006504:	1eb9      	subs	r1, r7, #2
 8006506:	4620      	mov	r0, r4
 8006508:	f000 ff35 	bl	8007376 <__any_on>
 800650c:	2800      	cmp	r0, #0
 800650e:	d144      	bne.n	800659a <__gethex+0x272>
 8006510:	f04f 0a02 	mov.w	sl, #2
 8006514:	4639      	mov	r1, r7
 8006516:	4620      	mov	r0, r4
 8006518:	f7ff fe9e 	bl	8006258 <rshift>
 800651c:	443d      	add	r5, r7
 800651e:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8006522:	42ab      	cmp	r3, r5
 8006524:	da4a      	bge.n	80065bc <__gethex+0x294>
 8006526:	9802      	ldr	r0, [sp, #8]
 8006528:	4621      	mov	r1, r4
 800652a:	f000 fad1 	bl	8006ad0 <_Bfree>
 800652e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8006530:	2300      	movs	r3, #0
 8006532:	6013      	str	r3, [r2, #0]
 8006534:	27a3      	movs	r7, #163	; 0xa3
 8006536:	e789      	b.n	800644c <__gethex+0x124>
 8006538:	1e73      	subs	r3, r6, #1
 800653a:	9a07      	ldr	r2, [sp, #28]
 800653c:	9305      	str	r3, [sp, #20]
 800653e:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8006542:	4293      	cmp	r3, r2
 8006544:	d019      	beq.n	800657a <__gethex+0x252>
 8006546:	f1bb 0f20 	cmp.w	fp, #32
 800654a:	d107      	bne.n	800655c <__gethex+0x234>
 800654c:	9b04      	ldr	r3, [sp, #16]
 800654e:	9a01      	ldr	r2, [sp, #4]
 8006550:	f843 2b04 	str.w	r2, [r3], #4
 8006554:	9304      	str	r3, [sp, #16]
 8006556:	2300      	movs	r3, #0
 8006558:	9301      	str	r3, [sp, #4]
 800655a:	469b      	mov	fp, r3
 800655c:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 8006560:	f7ff fecc 	bl	80062fc <__hexdig_fun>
 8006564:	9b01      	ldr	r3, [sp, #4]
 8006566:	f000 000f 	and.w	r0, r0, #15
 800656a:	fa00 f00b 	lsl.w	r0, r0, fp
 800656e:	4303      	orrs	r3, r0
 8006570:	9301      	str	r3, [sp, #4]
 8006572:	f10b 0b04 	add.w	fp, fp, #4
 8006576:	9b05      	ldr	r3, [sp, #20]
 8006578:	e00d      	b.n	8006596 <__gethex+0x26e>
 800657a:	9b05      	ldr	r3, [sp, #20]
 800657c:	9a08      	ldr	r2, [sp, #32]
 800657e:	4413      	add	r3, r2
 8006580:	42bb      	cmp	r3, r7
 8006582:	d3e0      	bcc.n	8006546 <__gethex+0x21e>
 8006584:	4618      	mov	r0, r3
 8006586:	9903      	ldr	r1, [sp, #12]
 8006588:	9309      	str	r3, [sp, #36]	; 0x24
 800658a:	4652      	mov	r2, sl
 800658c:	f001 fd46 	bl	800801c <strncmp>
 8006590:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006592:	2800      	cmp	r0, #0
 8006594:	d1d7      	bne.n	8006546 <__gethex+0x21e>
 8006596:	461e      	mov	r6, r3
 8006598:	e78c      	b.n	80064b4 <__gethex+0x18c>
 800659a:	f04f 0a03 	mov.w	sl, #3
 800659e:	e7b9      	b.n	8006514 <__gethex+0x1ec>
 80065a0:	da09      	bge.n	80065b6 <__gethex+0x28e>
 80065a2:	1bf7      	subs	r7, r6, r7
 80065a4:	4621      	mov	r1, r4
 80065a6:	9802      	ldr	r0, [sp, #8]
 80065a8:	463a      	mov	r2, r7
 80065aa:	f000 fcab 	bl	8006f04 <__lshift>
 80065ae:	1bed      	subs	r5, r5, r7
 80065b0:	4604      	mov	r4, r0
 80065b2:	f100 0914 	add.w	r9, r0, #20
 80065b6:	f04f 0a00 	mov.w	sl, #0
 80065ba:	e7b0      	b.n	800651e <__gethex+0x1f6>
 80065bc:	f8d8 0004 	ldr.w	r0, [r8, #4]
 80065c0:	42a8      	cmp	r0, r5
 80065c2:	dd70      	ble.n	80066a6 <__gethex+0x37e>
 80065c4:	1b45      	subs	r5, r0, r5
 80065c6:	42ae      	cmp	r6, r5
 80065c8:	dc34      	bgt.n	8006634 <__gethex+0x30c>
 80065ca:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80065ce:	2b02      	cmp	r3, #2
 80065d0:	d028      	beq.n	8006624 <__gethex+0x2fc>
 80065d2:	2b03      	cmp	r3, #3
 80065d4:	d02a      	beq.n	800662c <__gethex+0x304>
 80065d6:	2b01      	cmp	r3, #1
 80065d8:	d115      	bne.n	8006606 <__gethex+0x2de>
 80065da:	42ae      	cmp	r6, r5
 80065dc:	d113      	bne.n	8006606 <__gethex+0x2de>
 80065de:	2e01      	cmp	r6, #1
 80065e0:	d10b      	bne.n	80065fa <__gethex+0x2d2>
 80065e2:	9a06      	ldr	r2, [sp, #24]
 80065e4:	f8d8 3004 	ldr.w	r3, [r8, #4]
 80065e8:	6013      	str	r3, [r2, #0]
 80065ea:	2301      	movs	r3, #1
 80065ec:	6123      	str	r3, [r4, #16]
 80065ee:	f8c9 3000 	str.w	r3, [r9]
 80065f2:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80065f4:	2762      	movs	r7, #98	; 0x62
 80065f6:	601c      	str	r4, [r3, #0]
 80065f8:	e728      	b.n	800644c <__gethex+0x124>
 80065fa:	1e71      	subs	r1, r6, #1
 80065fc:	4620      	mov	r0, r4
 80065fe:	f000 feba 	bl	8007376 <__any_on>
 8006602:	2800      	cmp	r0, #0
 8006604:	d1ed      	bne.n	80065e2 <__gethex+0x2ba>
 8006606:	9802      	ldr	r0, [sp, #8]
 8006608:	4621      	mov	r1, r4
 800660a:	f000 fa61 	bl	8006ad0 <_Bfree>
 800660e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8006610:	2300      	movs	r3, #0
 8006612:	6013      	str	r3, [r2, #0]
 8006614:	2750      	movs	r7, #80	; 0x50
 8006616:	e719      	b.n	800644c <__gethex+0x124>
 8006618:	0800a2cc 	.word	0x0800a2cc
 800661c:	0800a251 	.word	0x0800a251
 8006620:	0800a262 	.word	0x0800a262
 8006624:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006626:	2b00      	cmp	r3, #0
 8006628:	d1ed      	bne.n	8006606 <__gethex+0x2de>
 800662a:	e7da      	b.n	80065e2 <__gethex+0x2ba>
 800662c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800662e:	2b00      	cmp	r3, #0
 8006630:	d1d7      	bne.n	80065e2 <__gethex+0x2ba>
 8006632:	e7e8      	b.n	8006606 <__gethex+0x2de>
 8006634:	1e6f      	subs	r7, r5, #1
 8006636:	f1ba 0f00 	cmp.w	sl, #0
 800663a:	d131      	bne.n	80066a0 <__gethex+0x378>
 800663c:	b127      	cbz	r7, 8006648 <__gethex+0x320>
 800663e:	4639      	mov	r1, r7
 8006640:	4620      	mov	r0, r4
 8006642:	f000 fe98 	bl	8007376 <__any_on>
 8006646:	4682      	mov	sl, r0
 8006648:	117b      	asrs	r3, r7, #5
 800664a:	2101      	movs	r1, #1
 800664c:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 8006650:	f007 071f 	and.w	r7, r7, #31
 8006654:	fa01 f707 	lsl.w	r7, r1, r7
 8006658:	421f      	tst	r7, r3
 800665a:	4629      	mov	r1, r5
 800665c:	4620      	mov	r0, r4
 800665e:	bf18      	it	ne
 8006660:	f04a 0a02 	orrne.w	sl, sl, #2
 8006664:	1b76      	subs	r6, r6, r5
 8006666:	f7ff fdf7 	bl	8006258 <rshift>
 800666a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800666e:	2702      	movs	r7, #2
 8006670:	f1ba 0f00 	cmp.w	sl, #0
 8006674:	d048      	beq.n	8006708 <__gethex+0x3e0>
 8006676:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800667a:	2b02      	cmp	r3, #2
 800667c:	d015      	beq.n	80066aa <__gethex+0x382>
 800667e:	2b03      	cmp	r3, #3
 8006680:	d017      	beq.n	80066b2 <__gethex+0x38a>
 8006682:	2b01      	cmp	r3, #1
 8006684:	d109      	bne.n	800669a <__gethex+0x372>
 8006686:	f01a 0f02 	tst.w	sl, #2
 800668a:	d006      	beq.n	800669a <__gethex+0x372>
 800668c:	f8d9 0000 	ldr.w	r0, [r9]
 8006690:	ea4a 0a00 	orr.w	sl, sl, r0
 8006694:	f01a 0f01 	tst.w	sl, #1
 8006698:	d10e      	bne.n	80066b8 <__gethex+0x390>
 800669a:	f047 0710 	orr.w	r7, r7, #16
 800669e:	e033      	b.n	8006708 <__gethex+0x3e0>
 80066a0:	f04f 0a01 	mov.w	sl, #1
 80066a4:	e7d0      	b.n	8006648 <__gethex+0x320>
 80066a6:	2701      	movs	r7, #1
 80066a8:	e7e2      	b.n	8006670 <__gethex+0x348>
 80066aa:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80066ac:	f1c3 0301 	rsb	r3, r3, #1
 80066b0:	9315      	str	r3, [sp, #84]	; 0x54
 80066b2:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80066b4:	2b00      	cmp	r3, #0
 80066b6:	d0f0      	beq.n	800669a <__gethex+0x372>
 80066b8:	f8d4 b010 	ldr.w	fp, [r4, #16]
 80066bc:	f104 0314 	add.w	r3, r4, #20
 80066c0:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 80066c4:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 80066c8:	f04f 0c00 	mov.w	ip, #0
 80066cc:	4618      	mov	r0, r3
 80066ce:	f853 2b04 	ldr.w	r2, [r3], #4
 80066d2:	f1b2 3fff 	cmp.w	r2, #4294967295
 80066d6:	d01c      	beq.n	8006712 <__gethex+0x3ea>
 80066d8:	3201      	adds	r2, #1
 80066da:	6002      	str	r2, [r0, #0]
 80066dc:	2f02      	cmp	r7, #2
 80066de:	f104 0314 	add.w	r3, r4, #20
 80066e2:	d13d      	bne.n	8006760 <__gethex+0x438>
 80066e4:	f8d8 2000 	ldr.w	r2, [r8]
 80066e8:	3a01      	subs	r2, #1
 80066ea:	42b2      	cmp	r2, r6
 80066ec:	d10a      	bne.n	8006704 <__gethex+0x3dc>
 80066ee:	1171      	asrs	r1, r6, #5
 80066f0:	2201      	movs	r2, #1
 80066f2:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80066f6:	f006 061f 	and.w	r6, r6, #31
 80066fa:	fa02 f606 	lsl.w	r6, r2, r6
 80066fe:	421e      	tst	r6, r3
 8006700:	bf18      	it	ne
 8006702:	4617      	movne	r7, r2
 8006704:	f047 0720 	orr.w	r7, r7, #32
 8006708:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800670a:	601c      	str	r4, [r3, #0]
 800670c:	9b06      	ldr	r3, [sp, #24]
 800670e:	601d      	str	r5, [r3, #0]
 8006710:	e69c      	b.n	800644c <__gethex+0x124>
 8006712:	4299      	cmp	r1, r3
 8006714:	f843 cc04 	str.w	ip, [r3, #-4]
 8006718:	d8d8      	bhi.n	80066cc <__gethex+0x3a4>
 800671a:	68a3      	ldr	r3, [r4, #8]
 800671c:	459b      	cmp	fp, r3
 800671e:	db17      	blt.n	8006750 <__gethex+0x428>
 8006720:	6861      	ldr	r1, [r4, #4]
 8006722:	9802      	ldr	r0, [sp, #8]
 8006724:	3101      	adds	r1, #1
 8006726:	f000 f993 	bl	8006a50 <_Balloc>
 800672a:	4681      	mov	r9, r0
 800672c:	b918      	cbnz	r0, 8006736 <__gethex+0x40e>
 800672e:	4b1a      	ldr	r3, [pc, #104]	; (8006798 <__gethex+0x470>)
 8006730:	4602      	mov	r2, r0
 8006732:	2184      	movs	r1, #132	; 0x84
 8006734:	e6ad      	b.n	8006492 <__gethex+0x16a>
 8006736:	6922      	ldr	r2, [r4, #16]
 8006738:	3202      	adds	r2, #2
 800673a:	f104 010c 	add.w	r1, r4, #12
 800673e:	0092      	lsls	r2, r2, #2
 8006740:	300c      	adds	r0, #12
 8006742:	f7fc fc55 	bl	8002ff0 <memcpy>
 8006746:	4621      	mov	r1, r4
 8006748:	9802      	ldr	r0, [sp, #8]
 800674a:	f000 f9c1 	bl	8006ad0 <_Bfree>
 800674e:	464c      	mov	r4, r9
 8006750:	6923      	ldr	r3, [r4, #16]
 8006752:	1c5a      	adds	r2, r3, #1
 8006754:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8006758:	6122      	str	r2, [r4, #16]
 800675a:	2201      	movs	r2, #1
 800675c:	615a      	str	r2, [r3, #20]
 800675e:	e7bd      	b.n	80066dc <__gethex+0x3b4>
 8006760:	6922      	ldr	r2, [r4, #16]
 8006762:	455a      	cmp	r2, fp
 8006764:	dd0b      	ble.n	800677e <__gethex+0x456>
 8006766:	2101      	movs	r1, #1
 8006768:	4620      	mov	r0, r4
 800676a:	f7ff fd75 	bl	8006258 <rshift>
 800676e:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8006772:	3501      	adds	r5, #1
 8006774:	42ab      	cmp	r3, r5
 8006776:	f6ff aed6 	blt.w	8006526 <__gethex+0x1fe>
 800677a:	2701      	movs	r7, #1
 800677c:	e7c2      	b.n	8006704 <__gethex+0x3dc>
 800677e:	f016 061f 	ands.w	r6, r6, #31
 8006782:	d0fa      	beq.n	800677a <__gethex+0x452>
 8006784:	449a      	add	sl, r3
 8006786:	f1c6 0620 	rsb	r6, r6, #32
 800678a:	f85a 0c04 	ldr.w	r0, [sl, #-4]
 800678e:	f000 fa55 	bl	8006c3c <__hi0bits>
 8006792:	42b0      	cmp	r0, r6
 8006794:	dbe7      	blt.n	8006766 <__gethex+0x43e>
 8006796:	e7f0      	b.n	800677a <__gethex+0x452>
 8006798:	0800a251 	.word	0x0800a251

0800679c <L_shift>:
 800679c:	f1c2 0208 	rsb	r2, r2, #8
 80067a0:	0092      	lsls	r2, r2, #2
 80067a2:	b570      	push	{r4, r5, r6, lr}
 80067a4:	f1c2 0620 	rsb	r6, r2, #32
 80067a8:	6843      	ldr	r3, [r0, #4]
 80067aa:	6804      	ldr	r4, [r0, #0]
 80067ac:	fa03 f506 	lsl.w	r5, r3, r6
 80067b0:	432c      	orrs	r4, r5
 80067b2:	40d3      	lsrs	r3, r2
 80067b4:	6004      	str	r4, [r0, #0]
 80067b6:	f840 3f04 	str.w	r3, [r0, #4]!
 80067ba:	4288      	cmp	r0, r1
 80067bc:	d3f4      	bcc.n	80067a8 <L_shift+0xc>
 80067be:	bd70      	pop	{r4, r5, r6, pc}

080067c0 <__match>:
 80067c0:	b530      	push	{r4, r5, lr}
 80067c2:	6803      	ldr	r3, [r0, #0]
 80067c4:	3301      	adds	r3, #1
 80067c6:	f811 4b01 	ldrb.w	r4, [r1], #1
 80067ca:	b914      	cbnz	r4, 80067d2 <__match+0x12>
 80067cc:	6003      	str	r3, [r0, #0]
 80067ce:	2001      	movs	r0, #1
 80067d0:	bd30      	pop	{r4, r5, pc}
 80067d2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80067d6:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 80067da:	2d19      	cmp	r5, #25
 80067dc:	bf98      	it	ls
 80067de:	3220      	addls	r2, #32
 80067e0:	42a2      	cmp	r2, r4
 80067e2:	d0f0      	beq.n	80067c6 <__match+0x6>
 80067e4:	2000      	movs	r0, #0
 80067e6:	e7f3      	b.n	80067d0 <__match+0x10>

080067e8 <__hexnan>:
 80067e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80067ec:	680b      	ldr	r3, [r1, #0]
 80067ee:	6801      	ldr	r1, [r0, #0]
 80067f0:	115e      	asrs	r6, r3, #5
 80067f2:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 80067f6:	f013 031f 	ands.w	r3, r3, #31
 80067fa:	b087      	sub	sp, #28
 80067fc:	bf18      	it	ne
 80067fe:	3604      	addne	r6, #4
 8006800:	2500      	movs	r5, #0
 8006802:	1f37      	subs	r7, r6, #4
 8006804:	4682      	mov	sl, r0
 8006806:	4690      	mov	r8, r2
 8006808:	9301      	str	r3, [sp, #4]
 800680a:	f846 5c04 	str.w	r5, [r6, #-4]
 800680e:	46b9      	mov	r9, r7
 8006810:	463c      	mov	r4, r7
 8006812:	9502      	str	r5, [sp, #8]
 8006814:	46ab      	mov	fp, r5
 8006816:	784a      	ldrb	r2, [r1, #1]
 8006818:	1c4b      	adds	r3, r1, #1
 800681a:	9303      	str	r3, [sp, #12]
 800681c:	b342      	cbz	r2, 8006870 <__hexnan+0x88>
 800681e:	4610      	mov	r0, r2
 8006820:	9105      	str	r1, [sp, #20]
 8006822:	9204      	str	r2, [sp, #16]
 8006824:	f7ff fd6a 	bl	80062fc <__hexdig_fun>
 8006828:	2800      	cmp	r0, #0
 800682a:	d14f      	bne.n	80068cc <__hexnan+0xe4>
 800682c:	9a04      	ldr	r2, [sp, #16]
 800682e:	9905      	ldr	r1, [sp, #20]
 8006830:	2a20      	cmp	r2, #32
 8006832:	d818      	bhi.n	8006866 <__hexnan+0x7e>
 8006834:	9b02      	ldr	r3, [sp, #8]
 8006836:	459b      	cmp	fp, r3
 8006838:	dd13      	ble.n	8006862 <__hexnan+0x7a>
 800683a:	454c      	cmp	r4, r9
 800683c:	d206      	bcs.n	800684c <__hexnan+0x64>
 800683e:	2d07      	cmp	r5, #7
 8006840:	dc04      	bgt.n	800684c <__hexnan+0x64>
 8006842:	462a      	mov	r2, r5
 8006844:	4649      	mov	r1, r9
 8006846:	4620      	mov	r0, r4
 8006848:	f7ff ffa8 	bl	800679c <L_shift>
 800684c:	4544      	cmp	r4, r8
 800684e:	d950      	bls.n	80068f2 <__hexnan+0x10a>
 8006850:	2300      	movs	r3, #0
 8006852:	f1a4 0904 	sub.w	r9, r4, #4
 8006856:	f844 3c04 	str.w	r3, [r4, #-4]
 800685a:	f8cd b008 	str.w	fp, [sp, #8]
 800685e:	464c      	mov	r4, r9
 8006860:	461d      	mov	r5, r3
 8006862:	9903      	ldr	r1, [sp, #12]
 8006864:	e7d7      	b.n	8006816 <__hexnan+0x2e>
 8006866:	2a29      	cmp	r2, #41	; 0x29
 8006868:	d156      	bne.n	8006918 <__hexnan+0x130>
 800686a:	3102      	adds	r1, #2
 800686c:	f8ca 1000 	str.w	r1, [sl]
 8006870:	f1bb 0f00 	cmp.w	fp, #0
 8006874:	d050      	beq.n	8006918 <__hexnan+0x130>
 8006876:	454c      	cmp	r4, r9
 8006878:	d206      	bcs.n	8006888 <__hexnan+0xa0>
 800687a:	2d07      	cmp	r5, #7
 800687c:	dc04      	bgt.n	8006888 <__hexnan+0xa0>
 800687e:	462a      	mov	r2, r5
 8006880:	4649      	mov	r1, r9
 8006882:	4620      	mov	r0, r4
 8006884:	f7ff ff8a 	bl	800679c <L_shift>
 8006888:	4544      	cmp	r4, r8
 800688a:	d934      	bls.n	80068f6 <__hexnan+0x10e>
 800688c:	f1a8 0204 	sub.w	r2, r8, #4
 8006890:	4623      	mov	r3, r4
 8006892:	f853 1b04 	ldr.w	r1, [r3], #4
 8006896:	f842 1f04 	str.w	r1, [r2, #4]!
 800689a:	429f      	cmp	r7, r3
 800689c:	d2f9      	bcs.n	8006892 <__hexnan+0xaa>
 800689e:	1b3b      	subs	r3, r7, r4
 80068a0:	f023 0303 	bic.w	r3, r3, #3
 80068a4:	3304      	adds	r3, #4
 80068a6:	3401      	adds	r4, #1
 80068a8:	3e03      	subs	r6, #3
 80068aa:	42b4      	cmp	r4, r6
 80068ac:	bf88      	it	hi
 80068ae:	2304      	movhi	r3, #4
 80068b0:	4443      	add	r3, r8
 80068b2:	2200      	movs	r2, #0
 80068b4:	f843 2b04 	str.w	r2, [r3], #4
 80068b8:	429f      	cmp	r7, r3
 80068ba:	d2fb      	bcs.n	80068b4 <__hexnan+0xcc>
 80068bc:	683b      	ldr	r3, [r7, #0]
 80068be:	b91b      	cbnz	r3, 80068c8 <__hexnan+0xe0>
 80068c0:	4547      	cmp	r7, r8
 80068c2:	d127      	bne.n	8006914 <__hexnan+0x12c>
 80068c4:	2301      	movs	r3, #1
 80068c6:	603b      	str	r3, [r7, #0]
 80068c8:	2005      	movs	r0, #5
 80068ca:	e026      	b.n	800691a <__hexnan+0x132>
 80068cc:	3501      	adds	r5, #1
 80068ce:	2d08      	cmp	r5, #8
 80068d0:	f10b 0b01 	add.w	fp, fp, #1
 80068d4:	dd06      	ble.n	80068e4 <__hexnan+0xfc>
 80068d6:	4544      	cmp	r4, r8
 80068d8:	d9c3      	bls.n	8006862 <__hexnan+0x7a>
 80068da:	2300      	movs	r3, #0
 80068dc:	f844 3c04 	str.w	r3, [r4, #-4]
 80068e0:	2501      	movs	r5, #1
 80068e2:	3c04      	subs	r4, #4
 80068e4:	6822      	ldr	r2, [r4, #0]
 80068e6:	f000 000f 	and.w	r0, r0, #15
 80068ea:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 80068ee:	6022      	str	r2, [r4, #0]
 80068f0:	e7b7      	b.n	8006862 <__hexnan+0x7a>
 80068f2:	2508      	movs	r5, #8
 80068f4:	e7b5      	b.n	8006862 <__hexnan+0x7a>
 80068f6:	9b01      	ldr	r3, [sp, #4]
 80068f8:	2b00      	cmp	r3, #0
 80068fa:	d0df      	beq.n	80068bc <__hexnan+0xd4>
 80068fc:	f04f 32ff 	mov.w	r2, #4294967295
 8006900:	f1c3 0320 	rsb	r3, r3, #32
 8006904:	fa22 f303 	lsr.w	r3, r2, r3
 8006908:	f856 2c04 	ldr.w	r2, [r6, #-4]
 800690c:	401a      	ands	r2, r3
 800690e:	f846 2c04 	str.w	r2, [r6, #-4]
 8006912:	e7d3      	b.n	80068bc <__hexnan+0xd4>
 8006914:	3f04      	subs	r7, #4
 8006916:	e7d1      	b.n	80068bc <__hexnan+0xd4>
 8006918:	2004      	movs	r0, #4
 800691a:	b007      	add	sp, #28
 800691c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08006920 <_localeconv_r>:
 8006920:	4800      	ldr	r0, [pc, #0]	; (8006924 <_localeconv_r+0x4>)
 8006922:	4770      	bx	lr
 8006924:	20000c68 	.word	0x20000c68

08006928 <_lseek_r>:
 8006928:	b538      	push	{r3, r4, r5, lr}
 800692a:	4d07      	ldr	r5, [pc, #28]	; (8006948 <_lseek_r+0x20>)
 800692c:	4604      	mov	r4, r0
 800692e:	4608      	mov	r0, r1
 8006930:	4611      	mov	r1, r2
 8006932:	2200      	movs	r2, #0
 8006934:	602a      	str	r2, [r5, #0]
 8006936:	461a      	mov	r2, r3
 8006938:	f7fb fd87 	bl	800244a <_lseek>
 800693c:	1c43      	adds	r3, r0, #1
 800693e:	d102      	bne.n	8006946 <_lseek_r+0x1e>
 8006940:	682b      	ldr	r3, [r5, #0]
 8006942:	b103      	cbz	r3, 8006946 <_lseek_r+0x1e>
 8006944:	6023      	str	r3, [r4, #0]
 8006946:	bd38      	pop	{r3, r4, r5, pc}
 8006948:	20000d4c 	.word	0x20000d4c

0800694c <__swhatbuf_r>:
 800694c:	b570      	push	{r4, r5, r6, lr}
 800694e:	460e      	mov	r6, r1
 8006950:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006954:	2900      	cmp	r1, #0
 8006956:	b096      	sub	sp, #88	; 0x58
 8006958:	4614      	mov	r4, r2
 800695a:	461d      	mov	r5, r3
 800695c:	da07      	bge.n	800696e <__swhatbuf_r+0x22>
 800695e:	2300      	movs	r3, #0
 8006960:	602b      	str	r3, [r5, #0]
 8006962:	89b3      	ldrh	r3, [r6, #12]
 8006964:	061a      	lsls	r2, r3, #24
 8006966:	d410      	bmi.n	800698a <__swhatbuf_r+0x3e>
 8006968:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800696c:	e00e      	b.n	800698c <__swhatbuf_r+0x40>
 800696e:	466a      	mov	r2, sp
 8006970:	f001 fc32 	bl	80081d8 <_fstat_r>
 8006974:	2800      	cmp	r0, #0
 8006976:	dbf2      	blt.n	800695e <__swhatbuf_r+0x12>
 8006978:	9a01      	ldr	r2, [sp, #4]
 800697a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800697e:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8006982:	425a      	negs	r2, r3
 8006984:	415a      	adcs	r2, r3
 8006986:	602a      	str	r2, [r5, #0]
 8006988:	e7ee      	b.n	8006968 <__swhatbuf_r+0x1c>
 800698a:	2340      	movs	r3, #64	; 0x40
 800698c:	2000      	movs	r0, #0
 800698e:	6023      	str	r3, [r4, #0]
 8006990:	b016      	add	sp, #88	; 0x58
 8006992:	bd70      	pop	{r4, r5, r6, pc}

08006994 <__smakebuf_r>:
 8006994:	898b      	ldrh	r3, [r1, #12]
 8006996:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006998:	079d      	lsls	r5, r3, #30
 800699a:	4606      	mov	r6, r0
 800699c:	460c      	mov	r4, r1
 800699e:	d507      	bpl.n	80069b0 <__smakebuf_r+0x1c>
 80069a0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80069a4:	6023      	str	r3, [r4, #0]
 80069a6:	6123      	str	r3, [r4, #16]
 80069a8:	2301      	movs	r3, #1
 80069aa:	6163      	str	r3, [r4, #20]
 80069ac:	b002      	add	sp, #8
 80069ae:	bd70      	pop	{r4, r5, r6, pc}
 80069b0:	ab01      	add	r3, sp, #4
 80069b2:	466a      	mov	r2, sp
 80069b4:	f7ff ffca 	bl	800694c <__swhatbuf_r>
 80069b8:	9900      	ldr	r1, [sp, #0]
 80069ba:	4605      	mov	r5, r0
 80069bc:	4630      	mov	r0, r6
 80069be:	f7fc fb7b 	bl	80030b8 <_malloc_r>
 80069c2:	b948      	cbnz	r0, 80069d8 <__smakebuf_r+0x44>
 80069c4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80069c8:	059a      	lsls	r2, r3, #22
 80069ca:	d4ef      	bmi.n	80069ac <__smakebuf_r+0x18>
 80069cc:	f023 0303 	bic.w	r3, r3, #3
 80069d0:	f043 0302 	orr.w	r3, r3, #2
 80069d4:	81a3      	strh	r3, [r4, #12]
 80069d6:	e7e3      	b.n	80069a0 <__smakebuf_r+0xc>
 80069d8:	4b0d      	ldr	r3, [pc, #52]	; (8006a10 <__smakebuf_r+0x7c>)
 80069da:	62b3      	str	r3, [r6, #40]	; 0x28
 80069dc:	89a3      	ldrh	r3, [r4, #12]
 80069de:	6020      	str	r0, [r4, #0]
 80069e0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80069e4:	81a3      	strh	r3, [r4, #12]
 80069e6:	9b00      	ldr	r3, [sp, #0]
 80069e8:	6163      	str	r3, [r4, #20]
 80069ea:	9b01      	ldr	r3, [sp, #4]
 80069ec:	6120      	str	r0, [r4, #16]
 80069ee:	b15b      	cbz	r3, 8006a08 <__smakebuf_r+0x74>
 80069f0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80069f4:	4630      	mov	r0, r6
 80069f6:	f001 fc01 	bl	80081fc <_isatty_r>
 80069fa:	b128      	cbz	r0, 8006a08 <__smakebuf_r+0x74>
 80069fc:	89a3      	ldrh	r3, [r4, #12]
 80069fe:	f023 0303 	bic.w	r3, r3, #3
 8006a02:	f043 0301 	orr.w	r3, r3, #1
 8006a06:	81a3      	strh	r3, [r4, #12]
 8006a08:	89a0      	ldrh	r0, [r4, #12]
 8006a0a:	4305      	orrs	r5, r0
 8006a0c:	81a5      	strh	r5, [r4, #12]
 8006a0e:	e7cd      	b.n	80069ac <__smakebuf_r+0x18>
 8006a10:	08002da5 	.word	0x08002da5

08006a14 <__ascii_mbtowc>:
 8006a14:	b082      	sub	sp, #8
 8006a16:	b901      	cbnz	r1, 8006a1a <__ascii_mbtowc+0x6>
 8006a18:	a901      	add	r1, sp, #4
 8006a1a:	b142      	cbz	r2, 8006a2e <__ascii_mbtowc+0x1a>
 8006a1c:	b14b      	cbz	r3, 8006a32 <__ascii_mbtowc+0x1e>
 8006a1e:	7813      	ldrb	r3, [r2, #0]
 8006a20:	600b      	str	r3, [r1, #0]
 8006a22:	7812      	ldrb	r2, [r2, #0]
 8006a24:	1e10      	subs	r0, r2, #0
 8006a26:	bf18      	it	ne
 8006a28:	2001      	movne	r0, #1
 8006a2a:	b002      	add	sp, #8
 8006a2c:	4770      	bx	lr
 8006a2e:	4610      	mov	r0, r2
 8006a30:	e7fb      	b.n	8006a2a <__ascii_mbtowc+0x16>
 8006a32:	f06f 0001 	mvn.w	r0, #1
 8006a36:	e7f8      	b.n	8006a2a <__ascii_mbtowc+0x16>

08006a38 <__malloc_lock>:
 8006a38:	4801      	ldr	r0, [pc, #4]	; (8006a40 <__malloc_lock+0x8>)
 8006a3a:	f7fc bac6 	b.w	8002fca <__retarget_lock_acquire_recursive>
 8006a3e:	bf00      	nop
 8006a40:	20000d44 	.word	0x20000d44

08006a44 <__malloc_unlock>:
 8006a44:	4801      	ldr	r0, [pc, #4]	; (8006a4c <__malloc_unlock+0x8>)
 8006a46:	f7fc bac1 	b.w	8002fcc <__retarget_lock_release_recursive>
 8006a4a:	bf00      	nop
 8006a4c:	20000d44 	.word	0x20000d44

08006a50 <_Balloc>:
 8006a50:	b570      	push	{r4, r5, r6, lr}
 8006a52:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8006a54:	4604      	mov	r4, r0
 8006a56:	460d      	mov	r5, r1
 8006a58:	b976      	cbnz	r6, 8006a78 <_Balloc+0x28>
 8006a5a:	2010      	movs	r0, #16
 8006a5c:	f7fc fab8 	bl	8002fd0 <malloc>
 8006a60:	4602      	mov	r2, r0
 8006a62:	6260      	str	r0, [r4, #36]	; 0x24
 8006a64:	b920      	cbnz	r0, 8006a70 <_Balloc+0x20>
 8006a66:	4b18      	ldr	r3, [pc, #96]	; (8006ac8 <_Balloc+0x78>)
 8006a68:	4818      	ldr	r0, [pc, #96]	; (8006acc <_Balloc+0x7c>)
 8006a6a:	2166      	movs	r1, #102	; 0x66
 8006a6c:	f7fe fc64 	bl	8005338 <__assert_func>
 8006a70:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8006a74:	6006      	str	r6, [r0, #0]
 8006a76:	60c6      	str	r6, [r0, #12]
 8006a78:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8006a7a:	68f3      	ldr	r3, [r6, #12]
 8006a7c:	b183      	cbz	r3, 8006aa0 <_Balloc+0x50>
 8006a7e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006a80:	68db      	ldr	r3, [r3, #12]
 8006a82:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8006a86:	b9b8      	cbnz	r0, 8006ab8 <_Balloc+0x68>
 8006a88:	2101      	movs	r1, #1
 8006a8a:	fa01 f605 	lsl.w	r6, r1, r5
 8006a8e:	1d72      	adds	r2, r6, #5
 8006a90:	0092      	lsls	r2, r2, #2
 8006a92:	4620      	mov	r0, r4
 8006a94:	f000 fc90 	bl	80073b8 <_calloc_r>
 8006a98:	b160      	cbz	r0, 8006ab4 <_Balloc+0x64>
 8006a9a:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8006a9e:	e00e      	b.n	8006abe <_Balloc+0x6e>
 8006aa0:	2221      	movs	r2, #33	; 0x21
 8006aa2:	2104      	movs	r1, #4
 8006aa4:	4620      	mov	r0, r4
 8006aa6:	f000 fc87 	bl	80073b8 <_calloc_r>
 8006aaa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006aac:	60f0      	str	r0, [r6, #12]
 8006aae:	68db      	ldr	r3, [r3, #12]
 8006ab0:	2b00      	cmp	r3, #0
 8006ab2:	d1e4      	bne.n	8006a7e <_Balloc+0x2e>
 8006ab4:	2000      	movs	r0, #0
 8006ab6:	bd70      	pop	{r4, r5, r6, pc}
 8006ab8:	6802      	ldr	r2, [r0, #0]
 8006aba:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8006abe:	2300      	movs	r3, #0
 8006ac0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8006ac4:	e7f7      	b.n	8006ab6 <_Balloc+0x66>
 8006ac6:	bf00      	nop
 8006ac8:	0800a030 	.word	0x0800a030
 8006acc:	0800a2e0 	.word	0x0800a2e0

08006ad0 <_Bfree>:
 8006ad0:	b570      	push	{r4, r5, r6, lr}
 8006ad2:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8006ad4:	4605      	mov	r5, r0
 8006ad6:	460c      	mov	r4, r1
 8006ad8:	b976      	cbnz	r6, 8006af8 <_Bfree+0x28>
 8006ada:	2010      	movs	r0, #16
 8006adc:	f7fc fa78 	bl	8002fd0 <malloc>
 8006ae0:	4602      	mov	r2, r0
 8006ae2:	6268      	str	r0, [r5, #36]	; 0x24
 8006ae4:	b920      	cbnz	r0, 8006af0 <_Bfree+0x20>
 8006ae6:	4b09      	ldr	r3, [pc, #36]	; (8006b0c <_Bfree+0x3c>)
 8006ae8:	4809      	ldr	r0, [pc, #36]	; (8006b10 <_Bfree+0x40>)
 8006aea:	218a      	movs	r1, #138	; 0x8a
 8006aec:	f7fe fc24 	bl	8005338 <__assert_func>
 8006af0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8006af4:	6006      	str	r6, [r0, #0]
 8006af6:	60c6      	str	r6, [r0, #12]
 8006af8:	b13c      	cbz	r4, 8006b0a <_Bfree+0x3a>
 8006afa:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8006afc:	6862      	ldr	r2, [r4, #4]
 8006afe:	68db      	ldr	r3, [r3, #12]
 8006b00:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8006b04:	6021      	str	r1, [r4, #0]
 8006b06:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8006b0a:	bd70      	pop	{r4, r5, r6, pc}
 8006b0c:	0800a030 	.word	0x0800a030
 8006b10:	0800a2e0 	.word	0x0800a2e0

08006b14 <__multadd>:
 8006b14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006b18:	690e      	ldr	r6, [r1, #16]
 8006b1a:	4607      	mov	r7, r0
 8006b1c:	4698      	mov	r8, r3
 8006b1e:	460c      	mov	r4, r1
 8006b20:	f101 0014 	add.w	r0, r1, #20
 8006b24:	2300      	movs	r3, #0
 8006b26:	6805      	ldr	r5, [r0, #0]
 8006b28:	b2a9      	uxth	r1, r5
 8006b2a:	fb02 8101 	mla	r1, r2, r1, r8
 8006b2e:	ea4f 4c11 	mov.w	ip, r1, lsr #16
 8006b32:	0c2d      	lsrs	r5, r5, #16
 8006b34:	fb02 c505 	mla	r5, r2, r5, ip
 8006b38:	b289      	uxth	r1, r1
 8006b3a:	3301      	adds	r3, #1
 8006b3c:	eb01 4105 	add.w	r1, r1, r5, lsl #16
 8006b40:	429e      	cmp	r6, r3
 8006b42:	f840 1b04 	str.w	r1, [r0], #4
 8006b46:	ea4f 4815 	mov.w	r8, r5, lsr #16
 8006b4a:	dcec      	bgt.n	8006b26 <__multadd+0x12>
 8006b4c:	f1b8 0f00 	cmp.w	r8, #0
 8006b50:	d022      	beq.n	8006b98 <__multadd+0x84>
 8006b52:	68a3      	ldr	r3, [r4, #8]
 8006b54:	42b3      	cmp	r3, r6
 8006b56:	dc19      	bgt.n	8006b8c <__multadd+0x78>
 8006b58:	6861      	ldr	r1, [r4, #4]
 8006b5a:	4638      	mov	r0, r7
 8006b5c:	3101      	adds	r1, #1
 8006b5e:	f7ff ff77 	bl	8006a50 <_Balloc>
 8006b62:	4605      	mov	r5, r0
 8006b64:	b928      	cbnz	r0, 8006b72 <__multadd+0x5e>
 8006b66:	4602      	mov	r2, r0
 8006b68:	4b0d      	ldr	r3, [pc, #52]	; (8006ba0 <__multadd+0x8c>)
 8006b6a:	480e      	ldr	r0, [pc, #56]	; (8006ba4 <__multadd+0x90>)
 8006b6c:	21b5      	movs	r1, #181	; 0xb5
 8006b6e:	f7fe fbe3 	bl	8005338 <__assert_func>
 8006b72:	6922      	ldr	r2, [r4, #16]
 8006b74:	3202      	adds	r2, #2
 8006b76:	f104 010c 	add.w	r1, r4, #12
 8006b7a:	0092      	lsls	r2, r2, #2
 8006b7c:	300c      	adds	r0, #12
 8006b7e:	f7fc fa37 	bl	8002ff0 <memcpy>
 8006b82:	4621      	mov	r1, r4
 8006b84:	4638      	mov	r0, r7
 8006b86:	f7ff ffa3 	bl	8006ad0 <_Bfree>
 8006b8a:	462c      	mov	r4, r5
 8006b8c:	eb04 0386 	add.w	r3, r4, r6, lsl #2
 8006b90:	3601      	adds	r6, #1
 8006b92:	f8c3 8014 	str.w	r8, [r3, #20]
 8006b96:	6126      	str	r6, [r4, #16]
 8006b98:	4620      	mov	r0, r4
 8006b9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006b9e:	bf00      	nop
 8006ba0:	0800a251 	.word	0x0800a251
 8006ba4:	0800a2e0 	.word	0x0800a2e0

08006ba8 <__s2b>:
 8006ba8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006bac:	460c      	mov	r4, r1
 8006bae:	4615      	mov	r5, r2
 8006bb0:	461f      	mov	r7, r3
 8006bb2:	2209      	movs	r2, #9
 8006bb4:	3308      	adds	r3, #8
 8006bb6:	4606      	mov	r6, r0
 8006bb8:	fb93 f3f2 	sdiv	r3, r3, r2
 8006bbc:	2100      	movs	r1, #0
 8006bbe:	2201      	movs	r2, #1
 8006bc0:	429a      	cmp	r2, r3
 8006bc2:	db09      	blt.n	8006bd8 <__s2b+0x30>
 8006bc4:	4630      	mov	r0, r6
 8006bc6:	f7ff ff43 	bl	8006a50 <_Balloc>
 8006bca:	b940      	cbnz	r0, 8006bde <__s2b+0x36>
 8006bcc:	4602      	mov	r2, r0
 8006bce:	4b19      	ldr	r3, [pc, #100]	; (8006c34 <__s2b+0x8c>)
 8006bd0:	4819      	ldr	r0, [pc, #100]	; (8006c38 <__s2b+0x90>)
 8006bd2:	21ce      	movs	r1, #206	; 0xce
 8006bd4:	f7fe fbb0 	bl	8005338 <__assert_func>
 8006bd8:	0052      	lsls	r2, r2, #1
 8006bda:	3101      	adds	r1, #1
 8006bdc:	e7f0      	b.n	8006bc0 <__s2b+0x18>
 8006bde:	9b08      	ldr	r3, [sp, #32]
 8006be0:	6143      	str	r3, [r0, #20]
 8006be2:	2d09      	cmp	r5, #9
 8006be4:	f04f 0301 	mov.w	r3, #1
 8006be8:	6103      	str	r3, [r0, #16]
 8006bea:	dd16      	ble.n	8006c1a <__s2b+0x72>
 8006bec:	f104 0909 	add.w	r9, r4, #9
 8006bf0:	46c8      	mov	r8, r9
 8006bf2:	442c      	add	r4, r5
 8006bf4:	f818 3b01 	ldrb.w	r3, [r8], #1
 8006bf8:	4601      	mov	r1, r0
 8006bfa:	3b30      	subs	r3, #48	; 0x30
 8006bfc:	220a      	movs	r2, #10
 8006bfe:	4630      	mov	r0, r6
 8006c00:	f7ff ff88 	bl	8006b14 <__multadd>
 8006c04:	45a0      	cmp	r8, r4
 8006c06:	d1f5      	bne.n	8006bf4 <__s2b+0x4c>
 8006c08:	f1a5 0408 	sub.w	r4, r5, #8
 8006c0c:	444c      	add	r4, r9
 8006c0e:	1b2d      	subs	r5, r5, r4
 8006c10:	1963      	adds	r3, r4, r5
 8006c12:	42bb      	cmp	r3, r7
 8006c14:	db04      	blt.n	8006c20 <__s2b+0x78>
 8006c16:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006c1a:	340a      	adds	r4, #10
 8006c1c:	2509      	movs	r5, #9
 8006c1e:	e7f6      	b.n	8006c0e <__s2b+0x66>
 8006c20:	f814 3b01 	ldrb.w	r3, [r4], #1
 8006c24:	4601      	mov	r1, r0
 8006c26:	3b30      	subs	r3, #48	; 0x30
 8006c28:	220a      	movs	r2, #10
 8006c2a:	4630      	mov	r0, r6
 8006c2c:	f7ff ff72 	bl	8006b14 <__multadd>
 8006c30:	e7ee      	b.n	8006c10 <__s2b+0x68>
 8006c32:	bf00      	nop
 8006c34:	0800a251 	.word	0x0800a251
 8006c38:	0800a2e0 	.word	0x0800a2e0

08006c3c <__hi0bits>:
 8006c3c:	0c02      	lsrs	r2, r0, #16
 8006c3e:	0412      	lsls	r2, r2, #16
 8006c40:	4603      	mov	r3, r0
 8006c42:	b9ca      	cbnz	r2, 8006c78 <__hi0bits+0x3c>
 8006c44:	0403      	lsls	r3, r0, #16
 8006c46:	2010      	movs	r0, #16
 8006c48:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8006c4c:	bf04      	itt	eq
 8006c4e:	021b      	lsleq	r3, r3, #8
 8006c50:	3008      	addeq	r0, #8
 8006c52:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8006c56:	bf04      	itt	eq
 8006c58:	011b      	lsleq	r3, r3, #4
 8006c5a:	3004      	addeq	r0, #4
 8006c5c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8006c60:	bf04      	itt	eq
 8006c62:	009b      	lsleq	r3, r3, #2
 8006c64:	3002      	addeq	r0, #2
 8006c66:	2b00      	cmp	r3, #0
 8006c68:	db05      	blt.n	8006c76 <__hi0bits+0x3a>
 8006c6a:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
 8006c6e:	f100 0001 	add.w	r0, r0, #1
 8006c72:	bf08      	it	eq
 8006c74:	2020      	moveq	r0, #32
 8006c76:	4770      	bx	lr
 8006c78:	2000      	movs	r0, #0
 8006c7a:	e7e5      	b.n	8006c48 <__hi0bits+0xc>

08006c7c <__lo0bits>:
 8006c7c:	6803      	ldr	r3, [r0, #0]
 8006c7e:	4602      	mov	r2, r0
 8006c80:	f013 0007 	ands.w	r0, r3, #7
 8006c84:	d00b      	beq.n	8006c9e <__lo0bits+0x22>
 8006c86:	07d9      	lsls	r1, r3, #31
 8006c88:	d422      	bmi.n	8006cd0 <__lo0bits+0x54>
 8006c8a:	0798      	lsls	r0, r3, #30
 8006c8c:	bf49      	itett	mi
 8006c8e:	085b      	lsrmi	r3, r3, #1
 8006c90:	089b      	lsrpl	r3, r3, #2
 8006c92:	2001      	movmi	r0, #1
 8006c94:	6013      	strmi	r3, [r2, #0]
 8006c96:	bf5c      	itt	pl
 8006c98:	6013      	strpl	r3, [r2, #0]
 8006c9a:	2002      	movpl	r0, #2
 8006c9c:	4770      	bx	lr
 8006c9e:	b299      	uxth	r1, r3
 8006ca0:	b909      	cbnz	r1, 8006ca6 <__lo0bits+0x2a>
 8006ca2:	0c1b      	lsrs	r3, r3, #16
 8006ca4:	2010      	movs	r0, #16
 8006ca6:	f013 0fff 	tst.w	r3, #255	; 0xff
 8006caa:	bf04      	itt	eq
 8006cac:	0a1b      	lsreq	r3, r3, #8
 8006cae:	3008      	addeq	r0, #8
 8006cb0:	0719      	lsls	r1, r3, #28
 8006cb2:	bf04      	itt	eq
 8006cb4:	091b      	lsreq	r3, r3, #4
 8006cb6:	3004      	addeq	r0, #4
 8006cb8:	0799      	lsls	r1, r3, #30
 8006cba:	bf04      	itt	eq
 8006cbc:	089b      	lsreq	r3, r3, #2
 8006cbe:	3002      	addeq	r0, #2
 8006cc0:	07d9      	lsls	r1, r3, #31
 8006cc2:	d403      	bmi.n	8006ccc <__lo0bits+0x50>
 8006cc4:	085b      	lsrs	r3, r3, #1
 8006cc6:	f100 0001 	add.w	r0, r0, #1
 8006cca:	d003      	beq.n	8006cd4 <__lo0bits+0x58>
 8006ccc:	6013      	str	r3, [r2, #0]
 8006cce:	4770      	bx	lr
 8006cd0:	2000      	movs	r0, #0
 8006cd2:	4770      	bx	lr
 8006cd4:	2020      	movs	r0, #32
 8006cd6:	4770      	bx	lr

08006cd8 <__i2b>:
 8006cd8:	b510      	push	{r4, lr}
 8006cda:	460c      	mov	r4, r1
 8006cdc:	2101      	movs	r1, #1
 8006cde:	f7ff feb7 	bl	8006a50 <_Balloc>
 8006ce2:	4602      	mov	r2, r0
 8006ce4:	b928      	cbnz	r0, 8006cf2 <__i2b+0x1a>
 8006ce6:	4b05      	ldr	r3, [pc, #20]	; (8006cfc <__i2b+0x24>)
 8006ce8:	4805      	ldr	r0, [pc, #20]	; (8006d00 <__i2b+0x28>)
 8006cea:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8006cee:	f7fe fb23 	bl	8005338 <__assert_func>
 8006cf2:	2301      	movs	r3, #1
 8006cf4:	6144      	str	r4, [r0, #20]
 8006cf6:	6103      	str	r3, [r0, #16]
 8006cf8:	bd10      	pop	{r4, pc}
 8006cfa:	bf00      	nop
 8006cfc:	0800a251 	.word	0x0800a251
 8006d00:	0800a2e0 	.word	0x0800a2e0

08006d04 <__multiply>:
 8006d04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006d08:	4614      	mov	r4, r2
 8006d0a:	690a      	ldr	r2, [r1, #16]
 8006d0c:	6923      	ldr	r3, [r4, #16]
 8006d0e:	429a      	cmp	r2, r3
 8006d10:	bfb8      	it	lt
 8006d12:	460b      	movlt	r3, r1
 8006d14:	460d      	mov	r5, r1
 8006d16:	bfbc      	itt	lt
 8006d18:	4625      	movlt	r5, r4
 8006d1a:	461c      	movlt	r4, r3
 8006d1c:	f8d5 a010 	ldr.w	sl, [r5, #16]
 8006d20:	f8d4 9010 	ldr.w	r9, [r4, #16]
 8006d24:	68ab      	ldr	r3, [r5, #8]
 8006d26:	6869      	ldr	r1, [r5, #4]
 8006d28:	eb0a 0709 	add.w	r7, sl, r9
 8006d2c:	42bb      	cmp	r3, r7
 8006d2e:	b085      	sub	sp, #20
 8006d30:	bfb8      	it	lt
 8006d32:	3101      	addlt	r1, #1
 8006d34:	f7ff fe8c 	bl	8006a50 <_Balloc>
 8006d38:	b930      	cbnz	r0, 8006d48 <__multiply+0x44>
 8006d3a:	4602      	mov	r2, r0
 8006d3c:	4b42      	ldr	r3, [pc, #264]	; (8006e48 <__multiply+0x144>)
 8006d3e:	4843      	ldr	r0, [pc, #268]	; (8006e4c <__multiply+0x148>)
 8006d40:	f240 115d 	movw	r1, #349	; 0x15d
 8006d44:	f7fe faf8 	bl	8005338 <__assert_func>
 8006d48:	f100 0614 	add.w	r6, r0, #20
 8006d4c:	eb06 0887 	add.w	r8, r6, r7, lsl #2
 8006d50:	4633      	mov	r3, r6
 8006d52:	2200      	movs	r2, #0
 8006d54:	4543      	cmp	r3, r8
 8006d56:	d31e      	bcc.n	8006d96 <__multiply+0x92>
 8006d58:	f105 0c14 	add.w	ip, r5, #20
 8006d5c:	f104 0314 	add.w	r3, r4, #20
 8006d60:	eb0c 0c8a 	add.w	ip, ip, sl, lsl #2
 8006d64:	eb03 0289 	add.w	r2, r3, r9, lsl #2
 8006d68:	9202      	str	r2, [sp, #8]
 8006d6a:	ebac 0205 	sub.w	r2, ip, r5
 8006d6e:	3a15      	subs	r2, #21
 8006d70:	f022 0203 	bic.w	r2, r2, #3
 8006d74:	3204      	adds	r2, #4
 8006d76:	f105 0115 	add.w	r1, r5, #21
 8006d7a:	458c      	cmp	ip, r1
 8006d7c:	bf38      	it	cc
 8006d7e:	2204      	movcc	r2, #4
 8006d80:	9201      	str	r2, [sp, #4]
 8006d82:	9a02      	ldr	r2, [sp, #8]
 8006d84:	9303      	str	r3, [sp, #12]
 8006d86:	429a      	cmp	r2, r3
 8006d88:	d808      	bhi.n	8006d9c <__multiply+0x98>
 8006d8a:	2f00      	cmp	r7, #0
 8006d8c:	dc55      	bgt.n	8006e3a <__multiply+0x136>
 8006d8e:	6107      	str	r7, [r0, #16]
 8006d90:	b005      	add	sp, #20
 8006d92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006d96:	f843 2b04 	str.w	r2, [r3], #4
 8006d9a:	e7db      	b.n	8006d54 <__multiply+0x50>
 8006d9c:	f8b3 a000 	ldrh.w	sl, [r3]
 8006da0:	f1ba 0f00 	cmp.w	sl, #0
 8006da4:	d020      	beq.n	8006de8 <__multiply+0xe4>
 8006da6:	f105 0e14 	add.w	lr, r5, #20
 8006daa:	46b1      	mov	r9, r6
 8006dac:	2200      	movs	r2, #0
 8006dae:	f85e 4b04 	ldr.w	r4, [lr], #4
 8006db2:	f8d9 b000 	ldr.w	fp, [r9]
 8006db6:	b2a1      	uxth	r1, r4
 8006db8:	fa1f fb8b 	uxth.w	fp, fp
 8006dbc:	fb0a b101 	mla	r1, sl, r1, fp
 8006dc0:	4411      	add	r1, r2
 8006dc2:	f8d9 2000 	ldr.w	r2, [r9]
 8006dc6:	0c24      	lsrs	r4, r4, #16
 8006dc8:	0c12      	lsrs	r2, r2, #16
 8006dca:	fb0a 2404 	mla	r4, sl, r4, r2
 8006dce:	eb04 4411 	add.w	r4, r4, r1, lsr #16
 8006dd2:	b289      	uxth	r1, r1
 8006dd4:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 8006dd8:	45f4      	cmp	ip, lr
 8006dda:	f849 1b04 	str.w	r1, [r9], #4
 8006dde:	ea4f 4214 	mov.w	r2, r4, lsr #16
 8006de2:	d8e4      	bhi.n	8006dae <__multiply+0xaa>
 8006de4:	9901      	ldr	r1, [sp, #4]
 8006de6:	5072      	str	r2, [r6, r1]
 8006de8:	9a03      	ldr	r2, [sp, #12]
 8006dea:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8006dee:	3304      	adds	r3, #4
 8006df0:	f1b9 0f00 	cmp.w	r9, #0
 8006df4:	d01f      	beq.n	8006e36 <__multiply+0x132>
 8006df6:	6834      	ldr	r4, [r6, #0]
 8006df8:	f105 0114 	add.w	r1, r5, #20
 8006dfc:	46b6      	mov	lr, r6
 8006dfe:	f04f 0a00 	mov.w	sl, #0
 8006e02:	880a      	ldrh	r2, [r1, #0]
 8006e04:	f8be b002 	ldrh.w	fp, [lr, #2]
 8006e08:	fb09 b202 	mla	r2, r9, r2, fp
 8006e0c:	4492      	add	sl, r2
 8006e0e:	b2a4      	uxth	r4, r4
 8006e10:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 8006e14:	f84e 4b04 	str.w	r4, [lr], #4
 8006e18:	f851 4b04 	ldr.w	r4, [r1], #4
 8006e1c:	f8be 2000 	ldrh.w	r2, [lr]
 8006e20:	0c24      	lsrs	r4, r4, #16
 8006e22:	fb09 2404 	mla	r4, r9, r4, r2
 8006e26:	eb04 441a 	add.w	r4, r4, sl, lsr #16
 8006e2a:	458c      	cmp	ip, r1
 8006e2c:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 8006e30:	d8e7      	bhi.n	8006e02 <__multiply+0xfe>
 8006e32:	9a01      	ldr	r2, [sp, #4]
 8006e34:	50b4      	str	r4, [r6, r2]
 8006e36:	3604      	adds	r6, #4
 8006e38:	e7a3      	b.n	8006d82 <__multiply+0x7e>
 8006e3a:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8006e3e:	2b00      	cmp	r3, #0
 8006e40:	d1a5      	bne.n	8006d8e <__multiply+0x8a>
 8006e42:	3f01      	subs	r7, #1
 8006e44:	e7a1      	b.n	8006d8a <__multiply+0x86>
 8006e46:	bf00      	nop
 8006e48:	0800a251 	.word	0x0800a251
 8006e4c:	0800a2e0 	.word	0x0800a2e0

08006e50 <__pow5mult>:
 8006e50:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006e54:	4615      	mov	r5, r2
 8006e56:	f012 0203 	ands.w	r2, r2, #3
 8006e5a:	4606      	mov	r6, r0
 8006e5c:	460f      	mov	r7, r1
 8006e5e:	d007      	beq.n	8006e70 <__pow5mult+0x20>
 8006e60:	4c25      	ldr	r4, [pc, #148]	; (8006ef8 <__pow5mult+0xa8>)
 8006e62:	3a01      	subs	r2, #1
 8006e64:	2300      	movs	r3, #0
 8006e66:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8006e6a:	f7ff fe53 	bl	8006b14 <__multadd>
 8006e6e:	4607      	mov	r7, r0
 8006e70:	10ad      	asrs	r5, r5, #2
 8006e72:	d03d      	beq.n	8006ef0 <__pow5mult+0xa0>
 8006e74:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8006e76:	b97c      	cbnz	r4, 8006e98 <__pow5mult+0x48>
 8006e78:	2010      	movs	r0, #16
 8006e7a:	f7fc f8a9 	bl	8002fd0 <malloc>
 8006e7e:	4602      	mov	r2, r0
 8006e80:	6270      	str	r0, [r6, #36]	; 0x24
 8006e82:	b928      	cbnz	r0, 8006e90 <__pow5mult+0x40>
 8006e84:	4b1d      	ldr	r3, [pc, #116]	; (8006efc <__pow5mult+0xac>)
 8006e86:	481e      	ldr	r0, [pc, #120]	; (8006f00 <__pow5mult+0xb0>)
 8006e88:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 8006e8c:	f7fe fa54 	bl	8005338 <__assert_func>
 8006e90:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8006e94:	6004      	str	r4, [r0, #0]
 8006e96:	60c4      	str	r4, [r0, #12]
 8006e98:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8006e9c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8006ea0:	b94c      	cbnz	r4, 8006eb6 <__pow5mult+0x66>
 8006ea2:	f240 2171 	movw	r1, #625	; 0x271
 8006ea6:	4630      	mov	r0, r6
 8006ea8:	f7ff ff16 	bl	8006cd8 <__i2b>
 8006eac:	2300      	movs	r3, #0
 8006eae:	f8c8 0008 	str.w	r0, [r8, #8]
 8006eb2:	4604      	mov	r4, r0
 8006eb4:	6003      	str	r3, [r0, #0]
 8006eb6:	f04f 0900 	mov.w	r9, #0
 8006eba:	07eb      	lsls	r3, r5, #31
 8006ebc:	d50a      	bpl.n	8006ed4 <__pow5mult+0x84>
 8006ebe:	4639      	mov	r1, r7
 8006ec0:	4622      	mov	r2, r4
 8006ec2:	4630      	mov	r0, r6
 8006ec4:	f7ff ff1e 	bl	8006d04 <__multiply>
 8006ec8:	4639      	mov	r1, r7
 8006eca:	4680      	mov	r8, r0
 8006ecc:	4630      	mov	r0, r6
 8006ece:	f7ff fdff 	bl	8006ad0 <_Bfree>
 8006ed2:	4647      	mov	r7, r8
 8006ed4:	106d      	asrs	r5, r5, #1
 8006ed6:	d00b      	beq.n	8006ef0 <__pow5mult+0xa0>
 8006ed8:	6820      	ldr	r0, [r4, #0]
 8006eda:	b938      	cbnz	r0, 8006eec <__pow5mult+0x9c>
 8006edc:	4622      	mov	r2, r4
 8006ede:	4621      	mov	r1, r4
 8006ee0:	4630      	mov	r0, r6
 8006ee2:	f7ff ff0f 	bl	8006d04 <__multiply>
 8006ee6:	6020      	str	r0, [r4, #0]
 8006ee8:	f8c0 9000 	str.w	r9, [r0]
 8006eec:	4604      	mov	r4, r0
 8006eee:	e7e4      	b.n	8006eba <__pow5mult+0x6a>
 8006ef0:	4638      	mov	r0, r7
 8006ef2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006ef6:	bf00      	nop
 8006ef8:	0800a430 	.word	0x0800a430
 8006efc:	0800a030 	.word	0x0800a030
 8006f00:	0800a2e0 	.word	0x0800a2e0

08006f04 <__lshift>:
 8006f04:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006f08:	460c      	mov	r4, r1
 8006f0a:	6849      	ldr	r1, [r1, #4]
 8006f0c:	6923      	ldr	r3, [r4, #16]
 8006f0e:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8006f12:	68a3      	ldr	r3, [r4, #8]
 8006f14:	4607      	mov	r7, r0
 8006f16:	4691      	mov	r9, r2
 8006f18:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8006f1c:	f108 0601 	add.w	r6, r8, #1
 8006f20:	42b3      	cmp	r3, r6
 8006f22:	db0b      	blt.n	8006f3c <__lshift+0x38>
 8006f24:	4638      	mov	r0, r7
 8006f26:	f7ff fd93 	bl	8006a50 <_Balloc>
 8006f2a:	4605      	mov	r5, r0
 8006f2c:	b948      	cbnz	r0, 8006f42 <__lshift+0x3e>
 8006f2e:	4602      	mov	r2, r0
 8006f30:	4b28      	ldr	r3, [pc, #160]	; (8006fd4 <__lshift+0xd0>)
 8006f32:	4829      	ldr	r0, [pc, #164]	; (8006fd8 <__lshift+0xd4>)
 8006f34:	f240 11d9 	movw	r1, #473	; 0x1d9
 8006f38:	f7fe f9fe 	bl	8005338 <__assert_func>
 8006f3c:	3101      	adds	r1, #1
 8006f3e:	005b      	lsls	r3, r3, #1
 8006f40:	e7ee      	b.n	8006f20 <__lshift+0x1c>
 8006f42:	2300      	movs	r3, #0
 8006f44:	f100 0114 	add.w	r1, r0, #20
 8006f48:	f100 0210 	add.w	r2, r0, #16
 8006f4c:	4618      	mov	r0, r3
 8006f4e:	4553      	cmp	r3, sl
 8006f50:	db33      	blt.n	8006fba <__lshift+0xb6>
 8006f52:	6920      	ldr	r0, [r4, #16]
 8006f54:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8006f58:	f104 0314 	add.w	r3, r4, #20
 8006f5c:	f019 091f 	ands.w	r9, r9, #31
 8006f60:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8006f64:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8006f68:	d02b      	beq.n	8006fc2 <__lshift+0xbe>
 8006f6a:	f1c9 0e20 	rsb	lr, r9, #32
 8006f6e:	468a      	mov	sl, r1
 8006f70:	2200      	movs	r2, #0
 8006f72:	6818      	ldr	r0, [r3, #0]
 8006f74:	fa00 f009 	lsl.w	r0, r0, r9
 8006f78:	4302      	orrs	r2, r0
 8006f7a:	f84a 2b04 	str.w	r2, [sl], #4
 8006f7e:	f853 2b04 	ldr.w	r2, [r3], #4
 8006f82:	459c      	cmp	ip, r3
 8006f84:	fa22 f20e 	lsr.w	r2, r2, lr
 8006f88:	d8f3      	bhi.n	8006f72 <__lshift+0x6e>
 8006f8a:	ebac 0304 	sub.w	r3, ip, r4
 8006f8e:	3b15      	subs	r3, #21
 8006f90:	f023 0303 	bic.w	r3, r3, #3
 8006f94:	3304      	adds	r3, #4
 8006f96:	f104 0015 	add.w	r0, r4, #21
 8006f9a:	4584      	cmp	ip, r0
 8006f9c:	bf38      	it	cc
 8006f9e:	2304      	movcc	r3, #4
 8006fa0:	50ca      	str	r2, [r1, r3]
 8006fa2:	b10a      	cbz	r2, 8006fa8 <__lshift+0xa4>
 8006fa4:	f108 0602 	add.w	r6, r8, #2
 8006fa8:	3e01      	subs	r6, #1
 8006faa:	4638      	mov	r0, r7
 8006fac:	612e      	str	r6, [r5, #16]
 8006fae:	4621      	mov	r1, r4
 8006fb0:	f7ff fd8e 	bl	8006ad0 <_Bfree>
 8006fb4:	4628      	mov	r0, r5
 8006fb6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006fba:	f842 0f04 	str.w	r0, [r2, #4]!
 8006fbe:	3301      	adds	r3, #1
 8006fc0:	e7c5      	b.n	8006f4e <__lshift+0x4a>
 8006fc2:	3904      	subs	r1, #4
 8006fc4:	f853 2b04 	ldr.w	r2, [r3], #4
 8006fc8:	f841 2f04 	str.w	r2, [r1, #4]!
 8006fcc:	459c      	cmp	ip, r3
 8006fce:	d8f9      	bhi.n	8006fc4 <__lshift+0xc0>
 8006fd0:	e7ea      	b.n	8006fa8 <__lshift+0xa4>
 8006fd2:	bf00      	nop
 8006fd4:	0800a251 	.word	0x0800a251
 8006fd8:	0800a2e0 	.word	0x0800a2e0

08006fdc <__mcmp>:
 8006fdc:	690a      	ldr	r2, [r1, #16]
 8006fde:	4603      	mov	r3, r0
 8006fe0:	6900      	ldr	r0, [r0, #16]
 8006fe2:	1a80      	subs	r0, r0, r2
 8006fe4:	b530      	push	{r4, r5, lr}
 8006fe6:	d10d      	bne.n	8007004 <__mcmp+0x28>
 8006fe8:	3314      	adds	r3, #20
 8006fea:	3114      	adds	r1, #20
 8006fec:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8006ff0:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8006ff4:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8006ff8:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8006ffc:	4295      	cmp	r5, r2
 8006ffe:	d002      	beq.n	8007006 <__mcmp+0x2a>
 8007000:	d304      	bcc.n	800700c <__mcmp+0x30>
 8007002:	2001      	movs	r0, #1
 8007004:	bd30      	pop	{r4, r5, pc}
 8007006:	42a3      	cmp	r3, r4
 8007008:	d3f4      	bcc.n	8006ff4 <__mcmp+0x18>
 800700a:	e7fb      	b.n	8007004 <__mcmp+0x28>
 800700c:	f04f 30ff 	mov.w	r0, #4294967295
 8007010:	e7f8      	b.n	8007004 <__mcmp+0x28>
	...

08007014 <__mdiff>:
 8007014:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007018:	460c      	mov	r4, r1
 800701a:	4606      	mov	r6, r0
 800701c:	4611      	mov	r1, r2
 800701e:	4620      	mov	r0, r4
 8007020:	4617      	mov	r7, r2
 8007022:	f7ff ffdb 	bl	8006fdc <__mcmp>
 8007026:	1e05      	subs	r5, r0, #0
 8007028:	d111      	bne.n	800704e <__mdiff+0x3a>
 800702a:	4629      	mov	r1, r5
 800702c:	4630      	mov	r0, r6
 800702e:	f7ff fd0f 	bl	8006a50 <_Balloc>
 8007032:	4602      	mov	r2, r0
 8007034:	b928      	cbnz	r0, 8007042 <__mdiff+0x2e>
 8007036:	4b3a      	ldr	r3, [pc, #232]	; (8007120 <__mdiff+0x10c>)
 8007038:	f240 2132 	movw	r1, #562	; 0x232
 800703c:	4839      	ldr	r0, [pc, #228]	; (8007124 <__mdiff+0x110>)
 800703e:	f7fe f97b 	bl	8005338 <__assert_func>
 8007042:	2301      	movs	r3, #1
 8007044:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8007048:	4610      	mov	r0, r2
 800704a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800704e:	bfa4      	itt	ge
 8007050:	463b      	movge	r3, r7
 8007052:	4627      	movge	r7, r4
 8007054:	4630      	mov	r0, r6
 8007056:	6879      	ldr	r1, [r7, #4]
 8007058:	bfa6      	itte	ge
 800705a:	461c      	movge	r4, r3
 800705c:	2500      	movge	r5, #0
 800705e:	2501      	movlt	r5, #1
 8007060:	f7ff fcf6 	bl	8006a50 <_Balloc>
 8007064:	4602      	mov	r2, r0
 8007066:	b918      	cbnz	r0, 8007070 <__mdiff+0x5c>
 8007068:	4b2d      	ldr	r3, [pc, #180]	; (8007120 <__mdiff+0x10c>)
 800706a:	f44f 7110 	mov.w	r1, #576	; 0x240
 800706e:	e7e5      	b.n	800703c <__mdiff+0x28>
 8007070:	693e      	ldr	r6, [r7, #16]
 8007072:	60c5      	str	r5, [r0, #12]
 8007074:	6925      	ldr	r5, [r4, #16]
 8007076:	f107 0114 	add.w	r1, r7, #20
 800707a:	f100 0e14 	add.w	lr, r0, #20
 800707e:	f104 0914 	add.w	r9, r4, #20
 8007082:	f107 0010 	add.w	r0, r7, #16
 8007086:	eb01 0c86 	add.w	ip, r1, r6, lsl #2
 800708a:	eb09 0585 	add.w	r5, r9, r5, lsl #2
 800708e:	46f2      	mov	sl, lr
 8007090:	2700      	movs	r7, #0
 8007092:	f859 3b04 	ldr.w	r3, [r9], #4
 8007096:	f850 bf04 	ldr.w	fp, [r0, #4]!
 800709a:	fa1f f883 	uxth.w	r8, r3
 800709e:	fa17 f78b 	uxtah	r7, r7, fp
 80070a2:	0c1b      	lsrs	r3, r3, #16
 80070a4:	eba7 0808 	sub.w	r8, r7, r8
 80070a8:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 80070ac:	eb03 4328 	add.w	r3, r3, r8, asr #16
 80070b0:	fa1f f888 	uxth.w	r8, r8
 80070b4:	141f      	asrs	r7, r3, #16
 80070b6:	454d      	cmp	r5, r9
 80070b8:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 80070bc:	f84a 3b04 	str.w	r3, [sl], #4
 80070c0:	d8e7      	bhi.n	8007092 <__mdiff+0x7e>
 80070c2:	1b2b      	subs	r3, r5, r4
 80070c4:	3b15      	subs	r3, #21
 80070c6:	f023 0303 	bic.w	r3, r3, #3
 80070ca:	3304      	adds	r3, #4
 80070cc:	3415      	adds	r4, #21
 80070ce:	42a5      	cmp	r5, r4
 80070d0:	bf38      	it	cc
 80070d2:	2304      	movcc	r3, #4
 80070d4:	4419      	add	r1, r3
 80070d6:	4473      	add	r3, lr
 80070d8:	469e      	mov	lr, r3
 80070da:	460d      	mov	r5, r1
 80070dc:	4565      	cmp	r5, ip
 80070de:	d30e      	bcc.n	80070fe <__mdiff+0xea>
 80070e0:	f10c 0003 	add.w	r0, ip, #3
 80070e4:	1a40      	subs	r0, r0, r1
 80070e6:	f020 0003 	bic.w	r0, r0, #3
 80070ea:	3903      	subs	r1, #3
 80070ec:	458c      	cmp	ip, r1
 80070ee:	bf38      	it	cc
 80070f0:	2000      	movcc	r0, #0
 80070f2:	4418      	add	r0, r3
 80070f4:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 80070f8:	b17b      	cbz	r3, 800711a <__mdiff+0x106>
 80070fa:	6116      	str	r6, [r2, #16]
 80070fc:	e7a4      	b.n	8007048 <__mdiff+0x34>
 80070fe:	f855 8b04 	ldr.w	r8, [r5], #4
 8007102:	fa17 f488 	uxtah	r4, r7, r8
 8007106:	1420      	asrs	r0, r4, #16
 8007108:	eb00 4018 	add.w	r0, r0, r8, lsr #16
 800710c:	b2a4      	uxth	r4, r4
 800710e:	ea44 4400 	orr.w	r4, r4, r0, lsl #16
 8007112:	f84e 4b04 	str.w	r4, [lr], #4
 8007116:	1407      	asrs	r7, r0, #16
 8007118:	e7e0      	b.n	80070dc <__mdiff+0xc8>
 800711a:	3e01      	subs	r6, #1
 800711c:	e7ea      	b.n	80070f4 <__mdiff+0xe0>
 800711e:	bf00      	nop
 8007120:	0800a251 	.word	0x0800a251
 8007124:	0800a2e0 	.word	0x0800a2e0

08007128 <__ulp>:
 8007128:	4b11      	ldr	r3, [pc, #68]	; (8007170 <__ulp+0x48>)
 800712a:	400b      	ands	r3, r1
 800712c:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
 8007130:	2b00      	cmp	r3, #0
 8007132:	dd02      	ble.n	800713a <__ulp+0x12>
 8007134:	2000      	movs	r0, #0
 8007136:	4619      	mov	r1, r3
 8007138:	4770      	bx	lr
 800713a:	425b      	negs	r3, r3
 800713c:	f1b3 7fa0 	cmp.w	r3, #20971520	; 0x1400000
 8007140:	ea4f 5223 	mov.w	r2, r3, asr #20
 8007144:	f04f 0000 	mov.w	r0, #0
 8007148:	f04f 0100 	mov.w	r1, #0
 800714c:	da04      	bge.n	8007158 <__ulp+0x30>
 800714e:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 8007152:	fa43 f102 	asr.w	r1, r3, r2
 8007156:	4770      	bx	lr
 8007158:	f1a2 0314 	sub.w	r3, r2, #20
 800715c:	2b1e      	cmp	r3, #30
 800715e:	bfda      	itte	le
 8007160:	f04f 4200 	movle.w	r2, #2147483648	; 0x80000000
 8007164:	fa22 f303 	lsrle.w	r3, r2, r3
 8007168:	2301      	movgt	r3, #1
 800716a:	4618      	mov	r0, r3
 800716c:	4770      	bx	lr
 800716e:	bf00      	nop
 8007170:	7ff00000 	.word	0x7ff00000

08007174 <__b2d>:
 8007174:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007178:	6907      	ldr	r7, [r0, #16]
 800717a:	f100 0914 	add.w	r9, r0, #20
 800717e:	eb09 0787 	add.w	r7, r9, r7, lsl #2
 8007182:	f1a7 0804 	sub.w	r8, r7, #4
 8007186:	f857 6c04 	ldr.w	r6, [r7, #-4]
 800718a:	4630      	mov	r0, r6
 800718c:	f7ff fd56 	bl	8006c3c <__hi0bits>
 8007190:	f1c0 0320 	rsb	r3, r0, #32
 8007194:	280a      	cmp	r0, #10
 8007196:	600b      	str	r3, [r1, #0]
 8007198:	491f      	ldr	r1, [pc, #124]	; (8007218 <__b2d+0xa4>)
 800719a:	dc17      	bgt.n	80071cc <__b2d+0x58>
 800719c:	f1c0 0c0b 	rsb	ip, r0, #11
 80071a0:	45c1      	cmp	r9, r8
 80071a2:	fa26 f30c 	lsr.w	r3, r6, ip
 80071a6:	bf38      	it	cc
 80071a8:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 80071ac:	ea43 0501 	orr.w	r5, r3, r1
 80071b0:	bf28      	it	cs
 80071b2:	2200      	movcs	r2, #0
 80071b4:	f100 0315 	add.w	r3, r0, #21
 80071b8:	fa06 f303 	lsl.w	r3, r6, r3
 80071bc:	fa22 f20c 	lsr.w	r2, r2, ip
 80071c0:	ea43 0402 	orr.w	r4, r3, r2
 80071c4:	4620      	mov	r0, r4
 80071c6:	4629      	mov	r1, r5
 80071c8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80071cc:	45c1      	cmp	r9, r8
 80071ce:	bf3a      	itte	cc
 80071d0:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 80071d4:	f1a7 0808 	subcc.w	r8, r7, #8
 80071d8:	2200      	movcs	r2, #0
 80071da:	f1b0 030b 	subs.w	r3, r0, #11
 80071de:	d016      	beq.n	800720e <__b2d+0x9a>
 80071e0:	f1c3 0720 	rsb	r7, r3, #32
 80071e4:	fa22 f107 	lsr.w	r1, r2, r7
 80071e8:	45c8      	cmp	r8, r9
 80071ea:	fa06 f603 	lsl.w	r6, r6, r3
 80071ee:	ea46 0601 	orr.w	r6, r6, r1
 80071f2:	bf8c      	ite	hi
 80071f4:	f858 1c04 	ldrhi.w	r1, [r8, #-4]
 80071f8:	2100      	movls	r1, #0
 80071fa:	f046 557f 	orr.w	r5, r6, #1069547520	; 0x3fc00000
 80071fe:	fa02 f003 	lsl.w	r0, r2, r3
 8007202:	40f9      	lsrs	r1, r7
 8007204:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 8007208:	ea40 0401 	orr.w	r4, r0, r1
 800720c:	e7da      	b.n	80071c4 <__b2d+0x50>
 800720e:	ea46 0501 	orr.w	r5, r6, r1
 8007212:	4614      	mov	r4, r2
 8007214:	e7d6      	b.n	80071c4 <__b2d+0x50>
 8007216:	bf00      	nop
 8007218:	3ff00000 	.word	0x3ff00000

0800721c <__d2b>:
 800721c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007220:	2101      	movs	r1, #1
 8007222:	e9dd 7608 	ldrd	r7, r6, [sp, #32]
 8007226:	4690      	mov	r8, r2
 8007228:	461d      	mov	r5, r3
 800722a:	f7ff fc11 	bl	8006a50 <_Balloc>
 800722e:	4604      	mov	r4, r0
 8007230:	b930      	cbnz	r0, 8007240 <__d2b+0x24>
 8007232:	4602      	mov	r2, r0
 8007234:	4b25      	ldr	r3, [pc, #148]	; (80072cc <__d2b+0xb0>)
 8007236:	4826      	ldr	r0, [pc, #152]	; (80072d0 <__d2b+0xb4>)
 8007238:	f240 310a 	movw	r1, #778	; 0x30a
 800723c:	f7fe f87c 	bl	8005338 <__assert_func>
 8007240:	f3c5 0313 	ubfx	r3, r5, #0, #20
 8007244:	f3c5 550a 	ubfx	r5, r5, #20, #11
 8007248:	bb2d      	cbnz	r5, 8007296 <__d2b+0x7a>
 800724a:	9301      	str	r3, [sp, #4]
 800724c:	f1b8 0300 	subs.w	r3, r8, #0
 8007250:	d026      	beq.n	80072a0 <__d2b+0x84>
 8007252:	4668      	mov	r0, sp
 8007254:	9300      	str	r3, [sp, #0]
 8007256:	f7ff fd11 	bl	8006c7c <__lo0bits>
 800725a:	9900      	ldr	r1, [sp, #0]
 800725c:	b1f0      	cbz	r0, 800729c <__d2b+0x80>
 800725e:	9a01      	ldr	r2, [sp, #4]
 8007260:	f1c0 0320 	rsb	r3, r0, #32
 8007264:	fa02 f303 	lsl.w	r3, r2, r3
 8007268:	430b      	orrs	r3, r1
 800726a:	40c2      	lsrs	r2, r0
 800726c:	6163      	str	r3, [r4, #20]
 800726e:	9201      	str	r2, [sp, #4]
 8007270:	9b01      	ldr	r3, [sp, #4]
 8007272:	61a3      	str	r3, [r4, #24]
 8007274:	2b00      	cmp	r3, #0
 8007276:	bf14      	ite	ne
 8007278:	2102      	movne	r1, #2
 800727a:	2101      	moveq	r1, #1
 800727c:	6121      	str	r1, [r4, #16]
 800727e:	b1c5      	cbz	r5, 80072b2 <__d2b+0x96>
 8007280:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8007284:	4405      	add	r5, r0
 8007286:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800728a:	603d      	str	r5, [r7, #0]
 800728c:	6030      	str	r0, [r6, #0]
 800728e:	4620      	mov	r0, r4
 8007290:	b002      	add	sp, #8
 8007292:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007296:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800729a:	e7d6      	b.n	800724a <__d2b+0x2e>
 800729c:	6161      	str	r1, [r4, #20]
 800729e:	e7e7      	b.n	8007270 <__d2b+0x54>
 80072a0:	a801      	add	r0, sp, #4
 80072a2:	f7ff fceb 	bl	8006c7c <__lo0bits>
 80072a6:	9b01      	ldr	r3, [sp, #4]
 80072a8:	6163      	str	r3, [r4, #20]
 80072aa:	2101      	movs	r1, #1
 80072ac:	6121      	str	r1, [r4, #16]
 80072ae:	3020      	adds	r0, #32
 80072b0:	e7e5      	b.n	800727e <__d2b+0x62>
 80072b2:	eb04 0381 	add.w	r3, r4, r1, lsl #2
 80072b6:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 80072ba:	6038      	str	r0, [r7, #0]
 80072bc:	6918      	ldr	r0, [r3, #16]
 80072be:	f7ff fcbd 	bl	8006c3c <__hi0bits>
 80072c2:	ebc0 1141 	rsb	r1, r0, r1, lsl #5
 80072c6:	6031      	str	r1, [r6, #0]
 80072c8:	e7e1      	b.n	800728e <__d2b+0x72>
 80072ca:	bf00      	nop
 80072cc:	0800a251 	.word	0x0800a251
 80072d0:	0800a2e0 	.word	0x0800a2e0

080072d4 <__ratio>:
 80072d4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80072d8:	4688      	mov	r8, r1
 80072da:	4669      	mov	r1, sp
 80072dc:	4681      	mov	r9, r0
 80072de:	f7ff ff49 	bl	8007174 <__b2d>
 80072e2:	460f      	mov	r7, r1
 80072e4:	4604      	mov	r4, r0
 80072e6:	460d      	mov	r5, r1
 80072e8:	4640      	mov	r0, r8
 80072ea:	a901      	add	r1, sp, #4
 80072ec:	f7ff ff42 	bl	8007174 <__b2d>
 80072f0:	f8d9 3010 	ldr.w	r3, [r9, #16]
 80072f4:	f8d8 2010 	ldr.w	r2, [r8, #16]
 80072f8:	eba3 0c02 	sub.w	ip, r3, r2
 80072fc:	e9dd 3200 	ldrd	r3, r2, [sp]
 8007300:	1a9b      	subs	r3, r3, r2
 8007302:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 8007306:	2b00      	cmp	r3, #0
 8007308:	bfd5      	itete	le
 800730a:	460a      	movle	r2, r1
 800730c:	462a      	movgt	r2, r5
 800730e:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8007312:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 8007316:	468b      	mov	fp, r1
 8007318:	bfd8      	it	le
 800731a:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 800731e:	465b      	mov	r3, fp
 8007320:	4602      	mov	r2, r0
 8007322:	4639      	mov	r1, r7
 8007324:	4620      	mov	r0, r4
 8007326:	f7f9 fabb 	bl	80008a0 <__aeabi_ddiv>
 800732a:	b003      	add	sp, #12
 800732c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08007330 <__copybits>:
 8007330:	3901      	subs	r1, #1
 8007332:	b570      	push	{r4, r5, r6, lr}
 8007334:	1149      	asrs	r1, r1, #5
 8007336:	6914      	ldr	r4, [r2, #16]
 8007338:	3101      	adds	r1, #1
 800733a:	f102 0314 	add.w	r3, r2, #20
 800733e:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8007342:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8007346:	1f05      	subs	r5, r0, #4
 8007348:	42a3      	cmp	r3, r4
 800734a:	d30c      	bcc.n	8007366 <__copybits+0x36>
 800734c:	1aa3      	subs	r3, r4, r2
 800734e:	3b11      	subs	r3, #17
 8007350:	f023 0303 	bic.w	r3, r3, #3
 8007354:	3211      	adds	r2, #17
 8007356:	42a2      	cmp	r2, r4
 8007358:	bf88      	it	hi
 800735a:	2300      	movhi	r3, #0
 800735c:	4418      	add	r0, r3
 800735e:	2300      	movs	r3, #0
 8007360:	4288      	cmp	r0, r1
 8007362:	d305      	bcc.n	8007370 <__copybits+0x40>
 8007364:	bd70      	pop	{r4, r5, r6, pc}
 8007366:	f853 6b04 	ldr.w	r6, [r3], #4
 800736a:	f845 6f04 	str.w	r6, [r5, #4]!
 800736e:	e7eb      	b.n	8007348 <__copybits+0x18>
 8007370:	f840 3b04 	str.w	r3, [r0], #4
 8007374:	e7f4      	b.n	8007360 <__copybits+0x30>

08007376 <__any_on>:
 8007376:	f100 0214 	add.w	r2, r0, #20
 800737a:	6900      	ldr	r0, [r0, #16]
 800737c:	114b      	asrs	r3, r1, #5
 800737e:	4298      	cmp	r0, r3
 8007380:	b510      	push	{r4, lr}
 8007382:	db11      	blt.n	80073a8 <__any_on+0x32>
 8007384:	dd0a      	ble.n	800739c <__any_on+0x26>
 8007386:	f011 011f 	ands.w	r1, r1, #31
 800738a:	d007      	beq.n	800739c <__any_on+0x26>
 800738c:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8007390:	fa24 f001 	lsr.w	r0, r4, r1
 8007394:	fa00 f101 	lsl.w	r1, r0, r1
 8007398:	428c      	cmp	r4, r1
 800739a:	d10b      	bne.n	80073b4 <__any_on+0x3e>
 800739c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80073a0:	4293      	cmp	r3, r2
 80073a2:	d803      	bhi.n	80073ac <__any_on+0x36>
 80073a4:	2000      	movs	r0, #0
 80073a6:	bd10      	pop	{r4, pc}
 80073a8:	4603      	mov	r3, r0
 80073aa:	e7f7      	b.n	800739c <__any_on+0x26>
 80073ac:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80073b0:	2900      	cmp	r1, #0
 80073b2:	d0f5      	beq.n	80073a0 <__any_on+0x2a>
 80073b4:	2001      	movs	r0, #1
 80073b6:	e7f6      	b.n	80073a6 <__any_on+0x30>

080073b8 <_calloc_r>:
 80073b8:	b538      	push	{r3, r4, r5, lr}
 80073ba:	fb02 f501 	mul.w	r5, r2, r1
 80073be:	4629      	mov	r1, r5
 80073c0:	f7fb fe7a 	bl	80030b8 <_malloc_r>
 80073c4:	4604      	mov	r4, r0
 80073c6:	b118      	cbz	r0, 80073d0 <_calloc_r+0x18>
 80073c8:	462a      	mov	r2, r5
 80073ca:	2100      	movs	r1, #0
 80073cc:	f7fb fe1e 	bl	800300c <memset>
 80073d0:	4620      	mov	r0, r4
 80073d2:	bd38      	pop	{r3, r4, r5, pc}

080073d4 <__ssputs_r>:
 80073d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80073d8:	688e      	ldr	r6, [r1, #8]
 80073da:	429e      	cmp	r6, r3
 80073dc:	4682      	mov	sl, r0
 80073de:	460c      	mov	r4, r1
 80073e0:	4690      	mov	r8, r2
 80073e2:	461f      	mov	r7, r3
 80073e4:	d838      	bhi.n	8007458 <__ssputs_r+0x84>
 80073e6:	898a      	ldrh	r2, [r1, #12]
 80073e8:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80073ec:	d032      	beq.n	8007454 <__ssputs_r+0x80>
 80073ee:	6825      	ldr	r5, [r4, #0]
 80073f0:	6909      	ldr	r1, [r1, #16]
 80073f2:	eba5 0901 	sub.w	r9, r5, r1
 80073f6:	6965      	ldr	r5, [r4, #20]
 80073f8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80073fc:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8007400:	3301      	adds	r3, #1
 8007402:	444b      	add	r3, r9
 8007404:	106d      	asrs	r5, r5, #1
 8007406:	429d      	cmp	r5, r3
 8007408:	bf38      	it	cc
 800740a:	461d      	movcc	r5, r3
 800740c:	0553      	lsls	r3, r2, #21
 800740e:	d531      	bpl.n	8007474 <__ssputs_r+0xa0>
 8007410:	4629      	mov	r1, r5
 8007412:	f7fb fe51 	bl	80030b8 <_malloc_r>
 8007416:	4606      	mov	r6, r0
 8007418:	b950      	cbnz	r0, 8007430 <__ssputs_r+0x5c>
 800741a:	230c      	movs	r3, #12
 800741c:	f8ca 3000 	str.w	r3, [sl]
 8007420:	89a3      	ldrh	r3, [r4, #12]
 8007422:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8007426:	81a3      	strh	r3, [r4, #12]
 8007428:	f04f 30ff 	mov.w	r0, #4294967295
 800742c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007430:	6921      	ldr	r1, [r4, #16]
 8007432:	464a      	mov	r2, r9
 8007434:	f7fb fddc 	bl	8002ff0 <memcpy>
 8007438:	89a3      	ldrh	r3, [r4, #12]
 800743a:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800743e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8007442:	81a3      	strh	r3, [r4, #12]
 8007444:	6126      	str	r6, [r4, #16]
 8007446:	6165      	str	r5, [r4, #20]
 8007448:	444e      	add	r6, r9
 800744a:	eba5 0509 	sub.w	r5, r5, r9
 800744e:	6026      	str	r6, [r4, #0]
 8007450:	60a5      	str	r5, [r4, #8]
 8007452:	463e      	mov	r6, r7
 8007454:	42be      	cmp	r6, r7
 8007456:	d900      	bls.n	800745a <__ssputs_r+0x86>
 8007458:	463e      	mov	r6, r7
 800745a:	4632      	mov	r2, r6
 800745c:	6820      	ldr	r0, [r4, #0]
 800745e:	4641      	mov	r1, r8
 8007460:	f000 fedc 	bl	800821c <memmove>
 8007464:	68a3      	ldr	r3, [r4, #8]
 8007466:	6822      	ldr	r2, [r4, #0]
 8007468:	1b9b      	subs	r3, r3, r6
 800746a:	4432      	add	r2, r6
 800746c:	60a3      	str	r3, [r4, #8]
 800746e:	6022      	str	r2, [r4, #0]
 8007470:	2000      	movs	r0, #0
 8007472:	e7db      	b.n	800742c <__ssputs_r+0x58>
 8007474:	462a      	mov	r2, r5
 8007476:	f000 feeb 	bl	8008250 <_realloc_r>
 800747a:	4606      	mov	r6, r0
 800747c:	2800      	cmp	r0, #0
 800747e:	d1e1      	bne.n	8007444 <__ssputs_r+0x70>
 8007480:	6921      	ldr	r1, [r4, #16]
 8007482:	4650      	mov	r0, sl
 8007484:	f7fb fdca 	bl	800301c <_free_r>
 8007488:	e7c7      	b.n	800741a <__ssputs_r+0x46>
	...

0800748c <_svfiprintf_r>:
 800748c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007490:	4698      	mov	r8, r3
 8007492:	898b      	ldrh	r3, [r1, #12]
 8007494:	061b      	lsls	r3, r3, #24
 8007496:	b09d      	sub	sp, #116	; 0x74
 8007498:	4607      	mov	r7, r0
 800749a:	460d      	mov	r5, r1
 800749c:	4614      	mov	r4, r2
 800749e:	d50e      	bpl.n	80074be <_svfiprintf_r+0x32>
 80074a0:	690b      	ldr	r3, [r1, #16]
 80074a2:	b963      	cbnz	r3, 80074be <_svfiprintf_r+0x32>
 80074a4:	2140      	movs	r1, #64	; 0x40
 80074a6:	f7fb fe07 	bl	80030b8 <_malloc_r>
 80074aa:	6028      	str	r0, [r5, #0]
 80074ac:	6128      	str	r0, [r5, #16]
 80074ae:	b920      	cbnz	r0, 80074ba <_svfiprintf_r+0x2e>
 80074b0:	230c      	movs	r3, #12
 80074b2:	603b      	str	r3, [r7, #0]
 80074b4:	f04f 30ff 	mov.w	r0, #4294967295
 80074b8:	e0d1      	b.n	800765e <_svfiprintf_r+0x1d2>
 80074ba:	2340      	movs	r3, #64	; 0x40
 80074bc:	616b      	str	r3, [r5, #20]
 80074be:	2300      	movs	r3, #0
 80074c0:	9309      	str	r3, [sp, #36]	; 0x24
 80074c2:	2320      	movs	r3, #32
 80074c4:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80074c8:	f8cd 800c 	str.w	r8, [sp, #12]
 80074cc:	2330      	movs	r3, #48	; 0x30
 80074ce:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 8007678 <_svfiprintf_r+0x1ec>
 80074d2:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80074d6:	f04f 0901 	mov.w	r9, #1
 80074da:	4623      	mov	r3, r4
 80074dc:	469a      	mov	sl, r3
 80074de:	f813 2b01 	ldrb.w	r2, [r3], #1
 80074e2:	b10a      	cbz	r2, 80074e8 <_svfiprintf_r+0x5c>
 80074e4:	2a25      	cmp	r2, #37	; 0x25
 80074e6:	d1f9      	bne.n	80074dc <_svfiprintf_r+0x50>
 80074e8:	ebba 0b04 	subs.w	fp, sl, r4
 80074ec:	d00b      	beq.n	8007506 <_svfiprintf_r+0x7a>
 80074ee:	465b      	mov	r3, fp
 80074f0:	4622      	mov	r2, r4
 80074f2:	4629      	mov	r1, r5
 80074f4:	4638      	mov	r0, r7
 80074f6:	f7ff ff6d 	bl	80073d4 <__ssputs_r>
 80074fa:	3001      	adds	r0, #1
 80074fc:	f000 80aa 	beq.w	8007654 <_svfiprintf_r+0x1c8>
 8007500:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8007502:	445a      	add	r2, fp
 8007504:	9209      	str	r2, [sp, #36]	; 0x24
 8007506:	f89a 3000 	ldrb.w	r3, [sl]
 800750a:	2b00      	cmp	r3, #0
 800750c:	f000 80a2 	beq.w	8007654 <_svfiprintf_r+0x1c8>
 8007510:	2300      	movs	r3, #0
 8007512:	f04f 32ff 	mov.w	r2, #4294967295
 8007516:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800751a:	f10a 0a01 	add.w	sl, sl, #1
 800751e:	9304      	str	r3, [sp, #16]
 8007520:	9307      	str	r3, [sp, #28]
 8007522:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8007526:	931a      	str	r3, [sp, #104]	; 0x68
 8007528:	4654      	mov	r4, sl
 800752a:	2205      	movs	r2, #5
 800752c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007530:	4851      	ldr	r0, [pc, #324]	; (8007678 <_svfiprintf_r+0x1ec>)
 8007532:	f7f8 fe6d 	bl	8000210 <memchr>
 8007536:	9a04      	ldr	r2, [sp, #16]
 8007538:	b9d8      	cbnz	r0, 8007572 <_svfiprintf_r+0xe6>
 800753a:	06d0      	lsls	r0, r2, #27
 800753c:	bf44      	itt	mi
 800753e:	2320      	movmi	r3, #32
 8007540:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8007544:	0711      	lsls	r1, r2, #28
 8007546:	bf44      	itt	mi
 8007548:	232b      	movmi	r3, #43	; 0x2b
 800754a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800754e:	f89a 3000 	ldrb.w	r3, [sl]
 8007552:	2b2a      	cmp	r3, #42	; 0x2a
 8007554:	d015      	beq.n	8007582 <_svfiprintf_r+0xf6>
 8007556:	9a07      	ldr	r2, [sp, #28]
 8007558:	4654      	mov	r4, sl
 800755a:	2000      	movs	r0, #0
 800755c:	f04f 0c0a 	mov.w	ip, #10
 8007560:	4621      	mov	r1, r4
 8007562:	f811 3b01 	ldrb.w	r3, [r1], #1
 8007566:	3b30      	subs	r3, #48	; 0x30
 8007568:	2b09      	cmp	r3, #9
 800756a:	d94e      	bls.n	800760a <_svfiprintf_r+0x17e>
 800756c:	b1b0      	cbz	r0, 800759c <_svfiprintf_r+0x110>
 800756e:	9207      	str	r2, [sp, #28]
 8007570:	e014      	b.n	800759c <_svfiprintf_r+0x110>
 8007572:	eba0 0308 	sub.w	r3, r0, r8
 8007576:	fa09 f303 	lsl.w	r3, r9, r3
 800757a:	4313      	orrs	r3, r2
 800757c:	9304      	str	r3, [sp, #16]
 800757e:	46a2      	mov	sl, r4
 8007580:	e7d2      	b.n	8007528 <_svfiprintf_r+0x9c>
 8007582:	9b03      	ldr	r3, [sp, #12]
 8007584:	1d19      	adds	r1, r3, #4
 8007586:	681b      	ldr	r3, [r3, #0]
 8007588:	9103      	str	r1, [sp, #12]
 800758a:	2b00      	cmp	r3, #0
 800758c:	bfbb      	ittet	lt
 800758e:	425b      	neglt	r3, r3
 8007590:	f042 0202 	orrlt.w	r2, r2, #2
 8007594:	9307      	strge	r3, [sp, #28]
 8007596:	9307      	strlt	r3, [sp, #28]
 8007598:	bfb8      	it	lt
 800759a:	9204      	strlt	r2, [sp, #16]
 800759c:	7823      	ldrb	r3, [r4, #0]
 800759e:	2b2e      	cmp	r3, #46	; 0x2e
 80075a0:	d10c      	bne.n	80075bc <_svfiprintf_r+0x130>
 80075a2:	7863      	ldrb	r3, [r4, #1]
 80075a4:	2b2a      	cmp	r3, #42	; 0x2a
 80075a6:	d135      	bne.n	8007614 <_svfiprintf_r+0x188>
 80075a8:	9b03      	ldr	r3, [sp, #12]
 80075aa:	1d1a      	adds	r2, r3, #4
 80075ac:	681b      	ldr	r3, [r3, #0]
 80075ae:	9203      	str	r2, [sp, #12]
 80075b0:	2b00      	cmp	r3, #0
 80075b2:	bfb8      	it	lt
 80075b4:	f04f 33ff 	movlt.w	r3, #4294967295
 80075b8:	3402      	adds	r4, #2
 80075ba:	9305      	str	r3, [sp, #20]
 80075bc:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8007688 <_svfiprintf_r+0x1fc>
 80075c0:	7821      	ldrb	r1, [r4, #0]
 80075c2:	2203      	movs	r2, #3
 80075c4:	4650      	mov	r0, sl
 80075c6:	f7f8 fe23 	bl	8000210 <memchr>
 80075ca:	b140      	cbz	r0, 80075de <_svfiprintf_r+0x152>
 80075cc:	2340      	movs	r3, #64	; 0x40
 80075ce:	eba0 000a 	sub.w	r0, r0, sl
 80075d2:	fa03 f000 	lsl.w	r0, r3, r0
 80075d6:	9b04      	ldr	r3, [sp, #16]
 80075d8:	4303      	orrs	r3, r0
 80075da:	3401      	adds	r4, #1
 80075dc:	9304      	str	r3, [sp, #16]
 80075de:	f814 1b01 	ldrb.w	r1, [r4], #1
 80075e2:	4826      	ldr	r0, [pc, #152]	; (800767c <_svfiprintf_r+0x1f0>)
 80075e4:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80075e8:	2206      	movs	r2, #6
 80075ea:	f7f8 fe11 	bl	8000210 <memchr>
 80075ee:	2800      	cmp	r0, #0
 80075f0:	d038      	beq.n	8007664 <_svfiprintf_r+0x1d8>
 80075f2:	4b23      	ldr	r3, [pc, #140]	; (8007680 <_svfiprintf_r+0x1f4>)
 80075f4:	bb1b      	cbnz	r3, 800763e <_svfiprintf_r+0x1b2>
 80075f6:	9b03      	ldr	r3, [sp, #12]
 80075f8:	3307      	adds	r3, #7
 80075fa:	f023 0307 	bic.w	r3, r3, #7
 80075fe:	3308      	adds	r3, #8
 8007600:	9303      	str	r3, [sp, #12]
 8007602:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007604:	4433      	add	r3, r6
 8007606:	9309      	str	r3, [sp, #36]	; 0x24
 8007608:	e767      	b.n	80074da <_svfiprintf_r+0x4e>
 800760a:	fb0c 3202 	mla	r2, ip, r2, r3
 800760e:	460c      	mov	r4, r1
 8007610:	2001      	movs	r0, #1
 8007612:	e7a5      	b.n	8007560 <_svfiprintf_r+0xd4>
 8007614:	2300      	movs	r3, #0
 8007616:	3401      	adds	r4, #1
 8007618:	9305      	str	r3, [sp, #20]
 800761a:	4619      	mov	r1, r3
 800761c:	f04f 0c0a 	mov.w	ip, #10
 8007620:	4620      	mov	r0, r4
 8007622:	f810 2b01 	ldrb.w	r2, [r0], #1
 8007626:	3a30      	subs	r2, #48	; 0x30
 8007628:	2a09      	cmp	r2, #9
 800762a:	d903      	bls.n	8007634 <_svfiprintf_r+0x1a8>
 800762c:	2b00      	cmp	r3, #0
 800762e:	d0c5      	beq.n	80075bc <_svfiprintf_r+0x130>
 8007630:	9105      	str	r1, [sp, #20]
 8007632:	e7c3      	b.n	80075bc <_svfiprintf_r+0x130>
 8007634:	fb0c 2101 	mla	r1, ip, r1, r2
 8007638:	4604      	mov	r4, r0
 800763a:	2301      	movs	r3, #1
 800763c:	e7f0      	b.n	8007620 <_svfiprintf_r+0x194>
 800763e:	ab03      	add	r3, sp, #12
 8007640:	9300      	str	r3, [sp, #0]
 8007642:	462a      	mov	r2, r5
 8007644:	4b0f      	ldr	r3, [pc, #60]	; (8007684 <_svfiprintf_r+0x1f8>)
 8007646:	a904      	add	r1, sp, #16
 8007648:	4638      	mov	r0, r7
 800764a:	f7fb fe2d 	bl	80032a8 <_printf_float>
 800764e:	1c42      	adds	r2, r0, #1
 8007650:	4606      	mov	r6, r0
 8007652:	d1d6      	bne.n	8007602 <_svfiprintf_r+0x176>
 8007654:	89ab      	ldrh	r3, [r5, #12]
 8007656:	065b      	lsls	r3, r3, #25
 8007658:	f53f af2c 	bmi.w	80074b4 <_svfiprintf_r+0x28>
 800765c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800765e:	b01d      	add	sp, #116	; 0x74
 8007660:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007664:	ab03      	add	r3, sp, #12
 8007666:	9300      	str	r3, [sp, #0]
 8007668:	462a      	mov	r2, r5
 800766a:	4b06      	ldr	r3, [pc, #24]	; (8007684 <_svfiprintf_r+0x1f8>)
 800766c:	a904      	add	r1, sp, #16
 800766e:	4638      	mov	r0, r7
 8007670:	f7fc f8b2 	bl	80037d8 <_printf_i>
 8007674:	e7eb      	b.n	800764e <_svfiprintf_r+0x1c2>
 8007676:	bf00      	nop
 8007678:	0800a43c 	.word	0x0800a43c
 800767c:	0800a446 	.word	0x0800a446
 8007680:	080032a9 	.word	0x080032a9
 8007684:	080073d5 	.word	0x080073d5
 8007688:	0800a442 	.word	0x0800a442

0800768c <_sungetc_r>:
 800768c:	b538      	push	{r3, r4, r5, lr}
 800768e:	1c4b      	adds	r3, r1, #1
 8007690:	4614      	mov	r4, r2
 8007692:	d103      	bne.n	800769c <_sungetc_r+0x10>
 8007694:	f04f 35ff 	mov.w	r5, #4294967295
 8007698:	4628      	mov	r0, r5
 800769a:	bd38      	pop	{r3, r4, r5, pc}
 800769c:	8993      	ldrh	r3, [r2, #12]
 800769e:	f023 0320 	bic.w	r3, r3, #32
 80076a2:	8193      	strh	r3, [r2, #12]
 80076a4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80076a6:	6852      	ldr	r2, [r2, #4]
 80076a8:	b2cd      	uxtb	r5, r1
 80076aa:	b18b      	cbz	r3, 80076d0 <_sungetc_r+0x44>
 80076ac:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80076ae:	4293      	cmp	r3, r2
 80076b0:	dd08      	ble.n	80076c4 <_sungetc_r+0x38>
 80076b2:	6823      	ldr	r3, [r4, #0]
 80076b4:	1e5a      	subs	r2, r3, #1
 80076b6:	6022      	str	r2, [r4, #0]
 80076b8:	f803 5c01 	strb.w	r5, [r3, #-1]
 80076bc:	6863      	ldr	r3, [r4, #4]
 80076be:	3301      	adds	r3, #1
 80076c0:	6063      	str	r3, [r4, #4]
 80076c2:	e7e9      	b.n	8007698 <_sungetc_r+0xc>
 80076c4:	4621      	mov	r1, r4
 80076c6:	f000 fd39 	bl	800813c <__submore>
 80076ca:	2800      	cmp	r0, #0
 80076cc:	d0f1      	beq.n	80076b2 <_sungetc_r+0x26>
 80076ce:	e7e1      	b.n	8007694 <_sungetc_r+0x8>
 80076d0:	6921      	ldr	r1, [r4, #16]
 80076d2:	6823      	ldr	r3, [r4, #0]
 80076d4:	b151      	cbz	r1, 80076ec <_sungetc_r+0x60>
 80076d6:	4299      	cmp	r1, r3
 80076d8:	d208      	bcs.n	80076ec <_sungetc_r+0x60>
 80076da:	f813 1c01 	ldrb.w	r1, [r3, #-1]
 80076de:	42a9      	cmp	r1, r5
 80076e0:	d104      	bne.n	80076ec <_sungetc_r+0x60>
 80076e2:	3b01      	subs	r3, #1
 80076e4:	3201      	adds	r2, #1
 80076e6:	6023      	str	r3, [r4, #0]
 80076e8:	6062      	str	r2, [r4, #4]
 80076ea:	e7d5      	b.n	8007698 <_sungetc_r+0xc>
 80076ec:	e9c4 320f 	strd	r3, r2, [r4, #60]	; 0x3c
 80076f0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80076f4:	6363      	str	r3, [r4, #52]	; 0x34
 80076f6:	2303      	movs	r3, #3
 80076f8:	63a3      	str	r3, [r4, #56]	; 0x38
 80076fa:	4623      	mov	r3, r4
 80076fc:	f803 5f46 	strb.w	r5, [r3, #70]!
 8007700:	6023      	str	r3, [r4, #0]
 8007702:	2301      	movs	r3, #1
 8007704:	e7dc      	b.n	80076c0 <_sungetc_r+0x34>

08007706 <__ssrefill_r>:
 8007706:	b510      	push	{r4, lr}
 8007708:	460c      	mov	r4, r1
 800770a:	6b49      	ldr	r1, [r1, #52]	; 0x34
 800770c:	b169      	cbz	r1, 800772a <__ssrefill_r+0x24>
 800770e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8007712:	4299      	cmp	r1, r3
 8007714:	d001      	beq.n	800771a <__ssrefill_r+0x14>
 8007716:	f7fb fc81 	bl	800301c <_free_r>
 800771a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800771c:	6063      	str	r3, [r4, #4]
 800771e:	2000      	movs	r0, #0
 8007720:	6360      	str	r0, [r4, #52]	; 0x34
 8007722:	b113      	cbz	r3, 800772a <__ssrefill_r+0x24>
 8007724:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007726:	6023      	str	r3, [r4, #0]
 8007728:	bd10      	pop	{r4, pc}
 800772a:	6923      	ldr	r3, [r4, #16]
 800772c:	6023      	str	r3, [r4, #0]
 800772e:	2300      	movs	r3, #0
 8007730:	6063      	str	r3, [r4, #4]
 8007732:	89a3      	ldrh	r3, [r4, #12]
 8007734:	f043 0320 	orr.w	r3, r3, #32
 8007738:	81a3      	strh	r3, [r4, #12]
 800773a:	f04f 30ff 	mov.w	r0, #4294967295
 800773e:	e7f3      	b.n	8007728 <__ssrefill_r+0x22>

08007740 <__ssvfiscanf_r>:
 8007740:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007744:	460c      	mov	r4, r1
 8007746:	f5ad 7d23 	sub.w	sp, sp, #652	; 0x28c
 800774a:	2100      	movs	r1, #0
 800774c:	e9cd 1144 	strd	r1, r1, [sp, #272]	; 0x110
 8007750:	49b2      	ldr	r1, [pc, #712]	; (8007a1c <__ssvfiscanf_r+0x2dc>)
 8007752:	91a0      	str	r1, [sp, #640]	; 0x280
 8007754:	f10d 0804 	add.w	r8, sp, #4
 8007758:	49b1      	ldr	r1, [pc, #708]	; (8007a20 <__ssvfiscanf_r+0x2e0>)
 800775a:	4fb2      	ldr	r7, [pc, #712]	; (8007a24 <__ssvfiscanf_r+0x2e4>)
 800775c:	f8df 92c8 	ldr.w	r9, [pc, #712]	; 8007a28 <__ssvfiscanf_r+0x2e8>
 8007760:	f8cd 8118 	str.w	r8, [sp, #280]	; 0x118
 8007764:	4606      	mov	r6, r0
 8007766:	91a1      	str	r1, [sp, #644]	; 0x284
 8007768:	9300      	str	r3, [sp, #0]
 800776a:	f892 a000 	ldrb.w	sl, [r2]
 800776e:	f1ba 0f00 	cmp.w	sl, #0
 8007772:	f000 8151 	beq.w	8007a18 <__ssvfiscanf_r+0x2d8>
 8007776:	f81a 3007 	ldrb.w	r3, [sl, r7]
 800777a:	f013 0308 	ands.w	r3, r3, #8
 800777e:	f102 0501 	add.w	r5, r2, #1
 8007782:	d019      	beq.n	80077b8 <__ssvfiscanf_r+0x78>
 8007784:	6863      	ldr	r3, [r4, #4]
 8007786:	2b00      	cmp	r3, #0
 8007788:	dd0f      	ble.n	80077aa <__ssvfiscanf_r+0x6a>
 800778a:	6823      	ldr	r3, [r4, #0]
 800778c:	781a      	ldrb	r2, [r3, #0]
 800778e:	5cba      	ldrb	r2, [r7, r2]
 8007790:	0712      	lsls	r2, r2, #28
 8007792:	d401      	bmi.n	8007798 <__ssvfiscanf_r+0x58>
 8007794:	462a      	mov	r2, r5
 8007796:	e7e8      	b.n	800776a <__ssvfiscanf_r+0x2a>
 8007798:	9a45      	ldr	r2, [sp, #276]	; 0x114
 800779a:	3201      	adds	r2, #1
 800779c:	9245      	str	r2, [sp, #276]	; 0x114
 800779e:	6862      	ldr	r2, [r4, #4]
 80077a0:	3301      	adds	r3, #1
 80077a2:	3a01      	subs	r2, #1
 80077a4:	6062      	str	r2, [r4, #4]
 80077a6:	6023      	str	r3, [r4, #0]
 80077a8:	e7ec      	b.n	8007784 <__ssvfiscanf_r+0x44>
 80077aa:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 80077ac:	4621      	mov	r1, r4
 80077ae:	4630      	mov	r0, r6
 80077b0:	4798      	blx	r3
 80077b2:	2800      	cmp	r0, #0
 80077b4:	d0e9      	beq.n	800778a <__ssvfiscanf_r+0x4a>
 80077b6:	e7ed      	b.n	8007794 <__ssvfiscanf_r+0x54>
 80077b8:	f1ba 0f25 	cmp.w	sl, #37	; 0x25
 80077bc:	f040 8083 	bne.w	80078c6 <__ssvfiscanf_r+0x186>
 80077c0:	9341      	str	r3, [sp, #260]	; 0x104
 80077c2:	9343      	str	r3, [sp, #268]	; 0x10c
 80077c4:	7853      	ldrb	r3, [r2, #1]
 80077c6:	2b2a      	cmp	r3, #42	; 0x2a
 80077c8:	bf02      	ittt	eq
 80077ca:	2310      	moveq	r3, #16
 80077cc:	1c95      	addeq	r5, r2, #2
 80077ce:	9341      	streq	r3, [sp, #260]	; 0x104
 80077d0:	220a      	movs	r2, #10
 80077d2:	46ab      	mov	fp, r5
 80077d4:	f81b 1b01 	ldrb.w	r1, [fp], #1
 80077d8:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 80077dc:	2b09      	cmp	r3, #9
 80077de:	d91d      	bls.n	800781c <__ssvfiscanf_r+0xdc>
 80077e0:	4891      	ldr	r0, [pc, #580]	; (8007a28 <__ssvfiscanf_r+0x2e8>)
 80077e2:	2203      	movs	r2, #3
 80077e4:	f7f8 fd14 	bl	8000210 <memchr>
 80077e8:	b140      	cbz	r0, 80077fc <__ssvfiscanf_r+0xbc>
 80077ea:	2301      	movs	r3, #1
 80077ec:	eba0 0009 	sub.w	r0, r0, r9
 80077f0:	fa03 f000 	lsl.w	r0, r3, r0
 80077f4:	9b41      	ldr	r3, [sp, #260]	; 0x104
 80077f6:	4318      	orrs	r0, r3
 80077f8:	9041      	str	r0, [sp, #260]	; 0x104
 80077fa:	465d      	mov	r5, fp
 80077fc:	f815 3b01 	ldrb.w	r3, [r5], #1
 8007800:	2b78      	cmp	r3, #120	; 0x78
 8007802:	d806      	bhi.n	8007812 <__ssvfiscanf_r+0xd2>
 8007804:	2b57      	cmp	r3, #87	; 0x57
 8007806:	d810      	bhi.n	800782a <__ssvfiscanf_r+0xea>
 8007808:	2b25      	cmp	r3, #37	; 0x25
 800780a:	d05c      	beq.n	80078c6 <__ssvfiscanf_r+0x186>
 800780c:	d856      	bhi.n	80078bc <__ssvfiscanf_r+0x17c>
 800780e:	2b00      	cmp	r3, #0
 8007810:	d074      	beq.n	80078fc <__ssvfiscanf_r+0x1bc>
 8007812:	2303      	movs	r3, #3
 8007814:	9347      	str	r3, [sp, #284]	; 0x11c
 8007816:	230a      	movs	r3, #10
 8007818:	9342      	str	r3, [sp, #264]	; 0x108
 800781a:	e081      	b.n	8007920 <__ssvfiscanf_r+0x1e0>
 800781c:	9b43      	ldr	r3, [sp, #268]	; 0x10c
 800781e:	fb02 1303 	mla	r3, r2, r3, r1
 8007822:	3b30      	subs	r3, #48	; 0x30
 8007824:	9343      	str	r3, [sp, #268]	; 0x10c
 8007826:	465d      	mov	r5, fp
 8007828:	e7d3      	b.n	80077d2 <__ssvfiscanf_r+0x92>
 800782a:	f1a3 0258 	sub.w	r2, r3, #88	; 0x58
 800782e:	2a20      	cmp	r2, #32
 8007830:	d8ef      	bhi.n	8007812 <__ssvfiscanf_r+0xd2>
 8007832:	a101      	add	r1, pc, #4	; (adr r1, 8007838 <__ssvfiscanf_r+0xf8>)
 8007834:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8007838:	0800790b 	.word	0x0800790b
 800783c:	08007813 	.word	0x08007813
 8007840:	08007813 	.word	0x08007813
 8007844:	08007969 	.word	0x08007969
 8007848:	08007813 	.word	0x08007813
 800784c:	08007813 	.word	0x08007813
 8007850:	08007813 	.word	0x08007813
 8007854:	08007813 	.word	0x08007813
 8007858:	08007813 	.word	0x08007813
 800785c:	08007813 	.word	0x08007813
 8007860:	08007813 	.word	0x08007813
 8007864:	0800797f 	.word	0x0800797f
 8007868:	08007955 	.word	0x08007955
 800786c:	080078c3 	.word	0x080078c3
 8007870:	080078c3 	.word	0x080078c3
 8007874:	080078c3 	.word	0x080078c3
 8007878:	08007813 	.word	0x08007813
 800787c:	08007959 	.word	0x08007959
 8007880:	08007813 	.word	0x08007813
 8007884:	08007813 	.word	0x08007813
 8007888:	08007813 	.word	0x08007813
 800788c:	08007813 	.word	0x08007813
 8007890:	0800798f 	.word	0x0800798f
 8007894:	08007961 	.word	0x08007961
 8007898:	08007903 	.word	0x08007903
 800789c:	08007813 	.word	0x08007813
 80078a0:	08007813 	.word	0x08007813
 80078a4:	0800798b 	.word	0x0800798b
 80078a8:	08007813 	.word	0x08007813
 80078ac:	08007955 	.word	0x08007955
 80078b0:	08007813 	.word	0x08007813
 80078b4:	08007813 	.word	0x08007813
 80078b8:	0800790b 	.word	0x0800790b
 80078bc:	3b45      	subs	r3, #69	; 0x45
 80078be:	2b02      	cmp	r3, #2
 80078c0:	d8a7      	bhi.n	8007812 <__ssvfiscanf_r+0xd2>
 80078c2:	2305      	movs	r3, #5
 80078c4:	e02b      	b.n	800791e <__ssvfiscanf_r+0x1de>
 80078c6:	6863      	ldr	r3, [r4, #4]
 80078c8:	2b00      	cmp	r3, #0
 80078ca:	dd0d      	ble.n	80078e8 <__ssvfiscanf_r+0x1a8>
 80078cc:	6823      	ldr	r3, [r4, #0]
 80078ce:	781a      	ldrb	r2, [r3, #0]
 80078d0:	4552      	cmp	r2, sl
 80078d2:	f040 80a1 	bne.w	8007a18 <__ssvfiscanf_r+0x2d8>
 80078d6:	3301      	adds	r3, #1
 80078d8:	6862      	ldr	r2, [r4, #4]
 80078da:	6023      	str	r3, [r4, #0]
 80078dc:	9b45      	ldr	r3, [sp, #276]	; 0x114
 80078de:	3a01      	subs	r2, #1
 80078e0:	3301      	adds	r3, #1
 80078e2:	6062      	str	r2, [r4, #4]
 80078e4:	9345      	str	r3, [sp, #276]	; 0x114
 80078e6:	e755      	b.n	8007794 <__ssvfiscanf_r+0x54>
 80078e8:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 80078ea:	4621      	mov	r1, r4
 80078ec:	4630      	mov	r0, r6
 80078ee:	4798      	blx	r3
 80078f0:	2800      	cmp	r0, #0
 80078f2:	d0eb      	beq.n	80078cc <__ssvfiscanf_r+0x18c>
 80078f4:	9844      	ldr	r0, [sp, #272]	; 0x110
 80078f6:	2800      	cmp	r0, #0
 80078f8:	f040 8084 	bne.w	8007a04 <__ssvfiscanf_r+0x2c4>
 80078fc:	f04f 30ff 	mov.w	r0, #4294967295
 8007900:	e086      	b.n	8007a10 <__ssvfiscanf_r+0x2d0>
 8007902:	9a41      	ldr	r2, [sp, #260]	; 0x104
 8007904:	f042 0220 	orr.w	r2, r2, #32
 8007908:	9241      	str	r2, [sp, #260]	; 0x104
 800790a:	9a41      	ldr	r2, [sp, #260]	; 0x104
 800790c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007910:	9241      	str	r2, [sp, #260]	; 0x104
 8007912:	2210      	movs	r2, #16
 8007914:	2b6f      	cmp	r3, #111	; 0x6f
 8007916:	9242      	str	r2, [sp, #264]	; 0x108
 8007918:	bf34      	ite	cc
 800791a:	2303      	movcc	r3, #3
 800791c:	2304      	movcs	r3, #4
 800791e:	9347      	str	r3, [sp, #284]	; 0x11c
 8007920:	6863      	ldr	r3, [r4, #4]
 8007922:	2b00      	cmp	r3, #0
 8007924:	dd41      	ble.n	80079aa <__ssvfiscanf_r+0x26a>
 8007926:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8007928:	0659      	lsls	r1, r3, #25
 800792a:	d404      	bmi.n	8007936 <__ssvfiscanf_r+0x1f6>
 800792c:	6823      	ldr	r3, [r4, #0]
 800792e:	781a      	ldrb	r2, [r3, #0]
 8007930:	5cba      	ldrb	r2, [r7, r2]
 8007932:	0712      	lsls	r2, r2, #28
 8007934:	d440      	bmi.n	80079b8 <__ssvfiscanf_r+0x278>
 8007936:	9b47      	ldr	r3, [sp, #284]	; 0x11c
 8007938:	2b02      	cmp	r3, #2
 800793a:	dc4f      	bgt.n	80079dc <__ssvfiscanf_r+0x29c>
 800793c:	466b      	mov	r3, sp
 800793e:	4622      	mov	r2, r4
 8007940:	a941      	add	r1, sp, #260	; 0x104
 8007942:	4630      	mov	r0, r6
 8007944:	f000 f9cc 	bl	8007ce0 <_scanf_chars>
 8007948:	2801      	cmp	r0, #1
 800794a:	d065      	beq.n	8007a18 <__ssvfiscanf_r+0x2d8>
 800794c:	2802      	cmp	r0, #2
 800794e:	f47f af21 	bne.w	8007794 <__ssvfiscanf_r+0x54>
 8007952:	e7cf      	b.n	80078f4 <__ssvfiscanf_r+0x1b4>
 8007954:	220a      	movs	r2, #10
 8007956:	e7dd      	b.n	8007914 <__ssvfiscanf_r+0x1d4>
 8007958:	2300      	movs	r3, #0
 800795a:	9342      	str	r3, [sp, #264]	; 0x108
 800795c:	2303      	movs	r3, #3
 800795e:	e7de      	b.n	800791e <__ssvfiscanf_r+0x1de>
 8007960:	2308      	movs	r3, #8
 8007962:	9342      	str	r3, [sp, #264]	; 0x108
 8007964:	2304      	movs	r3, #4
 8007966:	e7da      	b.n	800791e <__ssvfiscanf_r+0x1de>
 8007968:	4629      	mov	r1, r5
 800796a:	4640      	mov	r0, r8
 800796c:	f000 fb1c 	bl	8007fa8 <__sccl>
 8007970:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8007972:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8007976:	9341      	str	r3, [sp, #260]	; 0x104
 8007978:	4605      	mov	r5, r0
 800797a:	2301      	movs	r3, #1
 800797c:	e7cf      	b.n	800791e <__ssvfiscanf_r+0x1de>
 800797e:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8007980:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8007984:	9341      	str	r3, [sp, #260]	; 0x104
 8007986:	2300      	movs	r3, #0
 8007988:	e7c9      	b.n	800791e <__ssvfiscanf_r+0x1de>
 800798a:	2302      	movs	r3, #2
 800798c:	e7c7      	b.n	800791e <__ssvfiscanf_r+0x1de>
 800798e:	9841      	ldr	r0, [sp, #260]	; 0x104
 8007990:	06c3      	lsls	r3, r0, #27
 8007992:	f53f aeff 	bmi.w	8007794 <__ssvfiscanf_r+0x54>
 8007996:	9b00      	ldr	r3, [sp, #0]
 8007998:	9a45      	ldr	r2, [sp, #276]	; 0x114
 800799a:	1d19      	adds	r1, r3, #4
 800799c:	9100      	str	r1, [sp, #0]
 800799e:	681b      	ldr	r3, [r3, #0]
 80079a0:	07c0      	lsls	r0, r0, #31
 80079a2:	bf4c      	ite	mi
 80079a4:	801a      	strhmi	r2, [r3, #0]
 80079a6:	601a      	strpl	r2, [r3, #0]
 80079a8:	e6f4      	b.n	8007794 <__ssvfiscanf_r+0x54>
 80079aa:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 80079ac:	4621      	mov	r1, r4
 80079ae:	4630      	mov	r0, r6
 80079b0:	4798      	blx	r3
 80079b2:	2800      	cmp	r0, #0
 80079b4:	d0b7      	beq.n	8007926 <__ssvfiscanf_r+0x1e6>
 80079b6:	e79d      	b.n	80078f4 <__ssvfiscanf_r+0x1b4>
 80079b8:	9a45      	ldr	r2, [sp, #276]	; 0x114
 80079ba:	3201      	adds	r2, #1
 80079bc:	9245      	str	r2, [sp, #276]	; 0x114
 80079be:	6862      	ldr	r2, [r4, #4]
 80079c0:	3a01      	subs	r2, #1
 80079c2:	2a00      	cmp	r2, #0
 80079c4:	6062      	str	r2, [r4, #4]
 80079c6:	dd02      	ble.n	80079ce <__ssvfiscanf_r+0x28e>
 80079c8:	3301      	adds	r3, #1
 80079ca:	6023      	str	r3, [r4, #0]
 80079cc:	e7ae      	b.n	800792c <__ssvfiscanf_r+0x1ec>
 80079ce:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 80079d0:	4621      	mov	r1, r4
 80079d2:	4630      	mov	r0, r6
 80079d4:	4798      	blx	r3
 80079d6:	2800      	cmp	r0, #0
 80079d8:	d0a8      	beq.n	800792c <__ssvfiscanf_r+0x1ec>
 80079da:	e78b      	b.n	80078f4 <__ssvfiscanf_r+0x1b4>
 80079dc:	2b04      	cmp	r3, #4
 80079de:	dc06      	bgt.n	80079ee <__ssvfiscanf_r+0x2ae>
 80079e0:	466b      	mov	r3, sp
 80079e2:	4622      	mov	r2, r4
 80079e4:	a941      	add	r1, sp, #260	; 0x104
 80079e6:	4630      	mov	r0, r6
 80079e8:	f000 f9d2 	bl	8007d90 <_scanf_i>
 80079ec:	e7ac      	b.n	8007948 <__ssvfiscanf_r+0x208>
 80079ee:	4b0f      	ldr	r3, [pc, #60]	; (8007a2c <__ssvfiscanf_r+0x2ec>)
 80079f0:	2b00      	cmp	r3, #0
 80079f2:	f43f aecf 	beq.w	8007794 <__ssvfiscanf_r+0x54>
 80079f6:	466b      	mov	r3, sp
 80079f8:	4622      	mov	r2, r4
 80079fa:	a941      	add	r1, sp, #260	; 0x104
 80079fc:	4630      	mov	r0, r6
 80079fe:	f7fc f811 	bl	8003a24 <_scanf_float>
 8007a02:	e7a1      	b.n	8007948 <__ssvfiscanf_r+0x208>
 8007a04:	89a3      	ldrh	r3, [r4, #12]
 8007a06:	f013 0f40 	tst.w	r3, #64	; 0x40
 8007a0a:	bf18      	it	ne
 8007a0c:	f04f 30ff 	movne.w	r0, #4294967295
 8007a10:	f50d 7d23 	add.w	sp, sp, #652	; 0x28c
 8007a14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007a18:	9844      	ldr	r0, [sp, #272]	; 0x110
 8007a1a:	e7f9      	b.n	8007a10 <__ssvfiscanf_r+0x2d0>
 8007a1c:	0800768d 	.word	0x0800768d
 8007a20:	08007707 	.word	0x08007707
 8007a24:	0800a0e5 	.word	0x0800a0e5
 8007a28:	0800a442 	.word	0x0800a442
 8007a2c:	08003a25 	.word	0x08003a25

08007a30 <__sfputc_r>:
 8007a30:	6893      	ldr	r3, [r2, #8]
 8007a32:	3b01      	subs	r3, #1
 8007a34:	2b00      	cmp	r3, #0
 8007a36:	b410      	push	{r4}
 8007a38:	6093      	str	r3, [r2, #8]
 8007a3a:	da07      	bge.n	8007a4c <__sfputc_r+0x1c>
 8007a3c:	6994      	ldr	r4, [r2, #24]
 8007a3e:	42a3      	cmp	r3, r4
 8007a40:	db01      	blt.n	8007a46 <__sfputc_r+0x16>
 8007a42:	290a      	cmp	r1, #10
 8007a44:	d102      	bne.n	8007a4c <__sfputc_r+0x1c>
 8007a46:	bc10      	pop	{r4}
 8007a48:	f7fd bba4 	b.w	8005194 <__swbuf_r>
 8007a4c:	6813      	ldr	r3, [r2, #0]
 8007a4e:	1c58      	adds	r0, r3, #1
 8007a50:	6010      	str	r0, [r2, #0]
 8007a52:	7019      	strb	r1, [r3, #0]
 8007a54:	4608      	mov	r0, r1
 8007a56:	bc10      	pop	{r4}
 8007a58:	4770      	bx	lr

08007a5a <__sfputs_r>:
 8007a5a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007a5c:	4606      	mov	r6, r0
 8007a5e:	460f      	mov	r7, r1
 8007a60:	4614      	mov	r4, r2
 8007a62:	18d5      	adds	r5, r2, r3
 8007a64:	42ac      	cmp	r4, r5
 8007a66:	d101      	bne.n	8007a6c <__sfputs_r+0x12>
 8007a68:	2000      	movs	r0, #0
 8007a6a:	e007      	b.n	8007a7c <__sfputs_r+0x22>
 8007a6c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007a70:	463a      	mov	r2, r7
 8007a72:	4630      	mov	r0, r6
 8007a74:	f7ff ffdc 	bl	8007a30 <__sfputc_r>
 8007a78:	1c43      	adds	r3, r0, #1
 8007a7a:	d1f3      	bne.n	8007a64 <__sfputs_r+0xa>
 8007a7c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08007a80 <_vfiprintf_r>:
 8007a80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007a84:	460d      	mov	r5, r1
 8007a86:	b09d      	sub	sp, #116	; 0x74
 8007a88:	4614      	mov	r4, r2
 8007a8a:	4698      	mov	r8, r3
 8007a8c:	4606      	mov	r6, r0
 8007a8e:	b118      	cbz	r0, 8007a98 <_vfiprintf_r+0x18>
 8007a90:	6983      	ldr	r3, [r0, #24]
 8007a92:	b90b      	cbnz	r3, 8007a98 <_vfiprintf_r+0x18>
 8007a94:	f7fb f9ba 	bl	8002e0c <__sinit>
 8007a98:	4b89      	ldr	r3, [pc, #548]	; (8007cc0 <_vfiprintf_r+0x240>)
 8007a9a:	429d      	cmp	r5, r3
 8007a9c:	d11b      	bne.n	8007ad6 <_vfiprintf_r+0x56>
 8007a9e:	6875      	ldr	r5, [r6, #4]
 8007aa0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8007aa2:	07d9      	lsls	r1, r3, #31
 8007aa4:	d405      	bmi.n	8007ab2 <_vfiprintf_r+0x32>
 8007aa6:	89ab      	ldrh	r3, [r5, #12]
 8007aa8:	059a      	lsls	r2, r3, #22
 8007aaa:	d402      	bmi.n	8007ab2 <_vfiprintf_r+0x32>
 8007aac:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8007aae:	f7fb fa8c 	bl	8002fca <__retarget_lock_acquire_recursive>
 8007ab2:	89ab      	ldrh	r3, [r5, #12]
 8007ab4:	071b      	lsls	r3, r3, #28
 8007ab6:	d501      	bpl.n	8007abc <_vfiprintf_r+0x3c>
 8007ab8:	692b      	ldr	r3, [r5, #16]
 8007aba:	b9eb      	cbnz	r3, 8007af8 <_vfiprintf_r+0x78>
 8007abc:	4629      	mov	r1, r5
 8007abe:	4630      	mov	r0, r6
 8007ac0:	f7fd fbcc 	bl	800525c <__swsetup_r>
 8007ac4:	b1c0      	cbz	r0, 8007af8 <_vfiprintf_r+0x78>
 8007ac6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8007ac8:	07dc      	lsls	r4, r3, #31
 8007aca:	d50e      	bpl.n	8007aea <_vfiprintf_r+0x6a>
 8007acc:	f04f 30ff 	mov.w	r0, #4294967295
 8007ad0:	b01d      	add	sp, #116	; 0x74
 8007ad2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007ad6:	4b7b      	ldr	r3, [pc, #492]	; (8007cc4 <_vfiprintf_r+0x244>)
 8007ad8:	429d      	cmp	r5, r3
 8007ada:	d101      	bne.n	8007ae0 <_vfiprintf_r+0x60>
 8007adc:	68b5      	ldr	r5, [r6, #8]
 8007ade:	e7df      	b.n	8007aa0 <_vfiprintf_r+0x20>
 8007ae0:	4b79      	ldr	r3, [pc, #484]	; (8007cc8 <_vfiprintf_r+0x248>)
 8007ae2:	429d      	cmp	r5, r3
 8007ae4:	bf08      	it	eq
 8007ae6:	68f5      	ldreq	r5, [r6, #12]
 8007ae8:	e7da      	b.n	8007aa0 <_vfiprintf_r+0x20>
 8007aea:	89ab      	ldrh	r3, [r5, #12]
 8007aec:	0598      	lsls	r0, r3, #22
 8007aee:	d4ed      	bmi.n	8007acc <_vfiprintf_r+0x4c>
 8007af0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8007af2:	f7fb fa6b 	bl	8002fcc <__retarget_lock_release_recursive>
 8007af6:	e7e9      	b.n	8007acc <_vfiprintf_r+0x4c>
 8007af8:	2300      	movs	r3, #0
 8007afa:	9309      	str	r3, [sp, #36]	; 0x24
 8007afc:	2320      	movs	r3, #32
 8007afe:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8007b02:	f8cd 800c 	str.w	r8, [sp, #12]
 8007b06:	2330      	movs	r3, #48	; 0x30
 8007b08:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8007ccc <_vfiprintf_r+0x24c>
 8007b0c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8007b10:	f04f 0901 	mov.w	r9, #1
 8007b14:	4623      	mov	r3, r4
 8007b16:	469a      	mov	sl, r3
 8007b18:	f813 2b01 	ldrb.w	r2, [r3], #1
 8007b1c:	b10a      	cbz	r2, 8007b22 <_vfiprintf_r+0xa2>
 8007b1e:	2a25      	cmp	r2, #37	; 0x25
 8007b20:	d1f9      	bne.n	8007b16 <_vfiprintf_r+0x96>
 8007b22:	ebba 0b04 	subs.w	fp, sl, r4
 8007b26:	d00b      	beq.n	8007b40 <_vfiprintf_r+0xc0>
 8007b28:	465b      	mov	r3, fp
 8007b2a:	4622      	mov	r2, r4
 8007b2c:	4629      	mov	r1, r5
 8007b2e:	4630      	mov	r0, r6
 8007b30:	f7ff ff93 	bl	8007a5a <__sfputs_r>
 8007b34:	3001      	adds	r0, #1
 8007b36:	f000 80aa 	beq.w	8007c8e <_vfiprintf_r+0x20e>
 8007b3a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8007b3c:	445a      	add	r2, fp
 8007b3e:	9209      	str	r2, [sp, #36]	; 0x24
 8007b40:	f89a 3000 	ldrb.w	r3, [sl]
 8007b44:	2b00      	cmp	r3, #0
 8007b46:	f000 80a2 	beq.w	8007c8e <_vfiprintf_r+0x20e>
 8007b4a:	2300      	movs	r3, #0
 8007b4c:	f04f 32ff 	mov.w	r2, #4294967295
 8007b50:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8007b54:	f10a 0a01 	add.w	sl, sl, #1
 8007b58:	9304      	str	r3, [sp, #16]
 8007b5a:	9307      	str	r3, [sp, #28]
 8007b5c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8007b60:	931a      	str	r3, [sp, #104]	; 0x68
 8007b62:	4654      	mov	r4, sl
 8007b64:	2205      	movs	r2, #5
 8007b66:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007b6a:	4858      	ldr	r0, [pc, #352]	; (8007ccc <_vfiprintf_r+0x24c>)
 8007b6c:	f7f8 fb50 	bl	8000210 <memchr>
 8007b70:	9a04      	ldr	r2, [sp, #16]
 8007b72:	b9d8      	cbnz	r0, 8007bac <_vfiprintf_r+0x12c>
 8007b74:	06d1      	lsls	r1, r2, #27
 8007b76:	bf44      	itt	mi
 8007b78:	2320      	movmi	r3, #32
 8007b7a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8007b7e:	0713      	lsls	r3, r2, #28
 8007b80:	bf44      	itt	mi
 8007b82:	232b      	movmi	r3, #43	; 0x2b
 8007b84:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8007b88:	f89a 3000 	ldrb.w	r3, [sl]
 8007b8c:	2b2a      	cmp	r3, #42	; 0x2a
 8007b8e:	d015      	beq.n	8007bbc <_vfiprintf_r+0x13c>
 8007b90:	9a07      	ldr	r2, [sp, #28]
 8007b92:	4654      	mov	r4, sl
 8007b94:	2000      	movs	r0, #0
 8007b96:	f04f 0c0a 	mov.w	ip, #10
 8007b9a:	4621      	mov	r1, r4
 8007b9c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8007ba0:	3b30      	subs	r3, #48	; 0x30
 8007ba2:	2b09      	cmp	r3, #9
 8007ba4:	d94e      	bls.n	8007c44 <_vfiprintf_r+0x1c4>
 8007ba6:	b1b0      	cbz	r0, 8007bd6 <_vfiprintf_r+0x156>
 8007ba8:	9207      	str	r2, [sp, #28]
 8007baa:	e014      	b.n	8007bd6 <_vfiprintf_r+0x156>
 8007bac:	eba0 0308 	sub.w	r3, r0, r8
 8007bb0:	fa09 f303 	lsl.w	r3, r9, r3
 8007bb4:	4313      	orrs	r3, r2
 8007bb6:	9304      	str	r3, [sp, #16]
 8007bb8:	46a2      	mov	sl, r4
 8007bba:	e7d2      	b.n	8007b62 <_vfiprintf_r+0xe2>
 8007bbc:	9b03      	ldr	r3, [sp, #12]
 8007bbe:	1d19      	adds	r1, r3, #4
 8007bc0:	681b      	ldr	r3, [r3, #0]
 8007bc2:	9103      	str	r1, [sp, #12]
 8007bc4:	2b00      	cmp	r3, #0
 8007bc6:	bfbb      	ittet	lt
 8007bc8:	425b      	neglt	r3, r3
 8007bca:	f042 0202 	orrlt.w	r2, r2, #2
 8007bce:	9307      	strge	r3, [sp, #28]
 8007bd0:	9307      	strlt	r3, [sp, #28]
 8007bd2:	bfb8      	it	lt
 8007bd4:	9204      	strlt	r2, [sp, #16]
 8007bd6:	7823      	ldrb	r3, [r4, #0]
 8007bd8:	2b2e      	cmp	r3, #46	; 0x2e
 8007bda:	d10c      	bne.n	8007bf6 <_vfiprintf_r+0x176>
 8007bdc:	7863      	ldrb	r3, [r4, #1]
 8007bde:	2b2a      	cmp	r3, #42	; 0x2a
 8007be0:	d135      	bne.n	8007c4e <_vfiprintf_r+0x1ce>
 8007be2:	9b03      	ldr	r3, [sp, #12]
 8007be4:	1d1a      	adds	r2, r3, #4
 8007be6:	681b      	ldr	r3, [r3, #0]
 8007be8:	9203      	str	r2, [sp, #12]
 8007bea:	2b00      	cmp	r3, #0
 8007bec:	bfb8      	it	lt
 8007bee:	f04f 33ff 	movlt.w	r3, #4294967295
 8007bf2:	3402      	adds	r4, #2
 8007bf4:	9305      	str	r3, [sp, #20]
 8007bf6:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8007cdc <_vfiprintf_r+0x25c>
 8007bfa:	7821      	ldrb	r1, [r4, #0]
 8007bfc:	2203      	movs	r2, #3
 8007bfe:	4650      	mov	r0, sl
 8007c00:	f7f8 fb06 	bl	8000210 <memchr>
 8007c04:	b140      	cbz	r0, 8007c18 <_vfiprintf_r+0x198>
 8007c06:	2340      	movs	r3, #64	; 0x40
 8007c08:	eba0 000a 	sub.w	r0, r0, sl
 8007c0c:	fa03 f000 	lsl.w	r0, r3, r0
 8007c10:	9b04      	ldr	r3, [sp, #16]
 8007c12:	4303      	orrs	r3, r0
 8007c14:	3401      	adds	r4, #1
 8007c16:	9304      	str	r3, [sp, #16]
 8007c18:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007c1c:	482c      	ldr	r0, [pc, #176]	; (8007cd0 <_vfiprintf_r+0x250>)
 8007c1e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8007c22:	2206      	movs	r2, #6
 8007c24:	f7f8 faf4 	bl	8000210 <memchr>
 8007c28:	2800      	cmp	r0, #0
 8007c2a:	d03f      	beq.n	8007cac <_vfiprintf_r+0x22c>
 8007c2c:	4b29      	ldr	r3, [pc, #164]	; (8007cd4 <_vfiprintf_r+0x254>)
 8007c2e:	bb1b      	cbnz	r3, 8007c78 <_vfiprintf_r+0x1f8>
 8007c30:	9b03      	ldr	r3, [sp, #12]
 8007c32:	3307      	adds	r3, #7
 8007c34:	f023 0307 	bic.w	r3, r3, #7
 8007c38:	3308      	adds	r3, #8
 8007c3a:	9303      	str	r3, [sp, #12]
 8007c3c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007c3e:	443b      	add	r3, r7
 8007c40:	9309      	str	r3, [sp, #36]	; 0x24
 8007c42:	e767      	b.n	8007b14 <_vfiprintf_r+0x94>
 8007c44:	fb0c 3202 	mla	r2, ip, r2, r3
 8007c48:	460c      	mov	r4, r1
 8007c4a:	2001      	movs	r0, #1
 8007c4c:	e7a5      	b.n	8007b9a <_vfiprintf_r+0x11a>
 8007c4e:	2300      	movs	r3, #0
 8007c50:	3401      	adds	r4, #1
 8007c52:	9305      	str	r3, [sp, #20]
 8007c54:	4619      	mov	r1, r3
 8007c56:	f04f 0c0a 	mov.w	ip, #10
 8007c5a:	4620      	mov	r0, r4
 8007c5c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8007c60:	3a30      	subs	r2, #48	; 0x30
 8007c62:	2a09      	cmp	r2, #9
 8007c64:	d903      	bls.n	8007c6e <_vfiprintf_r+0x1ee>
 8007c66:	2b00      	cmp	r3, #0
 8007c68:	d0c5      	beq.n	8007bf6 <_vfiprintf_r+0x176>
 8007c6a:	9105      	str	r1, [sp, #20]
 8007c6c:	e7c3      	b.n	8007bf6 <_vfiprintf_r+0x176>
 8007c6e:	fb0c 2101 	mla	r1, ip, r1, r2
 8007c72:	4604      	mov	r4, r0
 8007c74:	2301      	movs	r3, #1
 8007c76:	e7f0      	b.n	8007c5a <_vfiprintf_r+0x1da>
 8007c78:	ab03      	add	r3, sp, #12
 8007c7a:	9300      	str	r3, [sp, #0]
 8007c7c:	462a      	mov	r2, r5
 8007c7e:	4b16      	ldr	r3, [pc, #88]	; (8007cd8 <_vfiprintf_r+0x258>)
 8007c80:	a904      	add	r1, sp, #16
 8007c82:	4630      	mov	r0, r6
 8007c84:	f7fb fb10 	bl	80032a8 <_printf_float>
 8007c88:	4607      	mov	r7, r0
 8007c8a:	1c78      	adds	r0, r7, #1
 8007c8c:	d1d6      	bne.n	8007c3c <_vfiprintf_r+0x1bc>
 8007c8e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8007c90:	07d9      	lsls	r1, r3, #31
 8007c92:	d405      	bmi.n	8007ca0 <_vfiprintf_r+0x220>
 8007c94:	89ab      	ldrh	r3, [r5, #12]
 8007c96:	059a      	lsls	r2, r3, #22
 8007c98:	d402      	bmi.n	8007ca0 <_vfiprintf_r+0x220>
 8007c9a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8007c9c:	f7fb f996 	bl	8002fcc <__retarget_lock_release_recursive>
 8007ca0:	89ab      	ldrh	r3, [r5, #12]
 8007ca2:	065b      	lsls	r3, r3, #25
 8007ca4:	f53f af12 	bmi.w	8007acc <_vfiprintf_r+0x4c>
 8007ca8:	9809      	ldr	r0, [sp, #36]	; 0x24
 8007caa:	e711      	b.n	8007ad0 <_vfiprintf_r+0x50>
 8007cac:	ab03      	add	r3, sp, #12
 8007cae:	9300      	str	r3, [sp, #0]
 8007cb0:	462a      	mov	r2, r5
 8007cb2:	4b09      	ldr	r3, [pc, #36]	; (8007cd8 <_vfiprintf_r+0x258>)
 8007cb4:	a904      	add	r1, sp, #16
 8007cb6:	4630      	mov	r0, r6
 8007cb8:	f7fb fd8e 	bl	80037d8 <_printf_i>
 8007cbc:	e7e4      	b.n	8007c88 <_vfiprintf_r+0x208>
 8007cbe:	bf00      	nop
 8007cc0:	08009f64 	.word	0x08009f64
 8007cc4:	08009f84 	.word	0x08009f84
 8007cc8:	08009f44 	.word	0x08009f44
 8007ccc:	0800a43c 	.word	0x0800a43c
 8007cd0:	0800a446 	.word	0x0800a446
 8007cd4:	080032a9 	.word	0x080032a9
 8007cd8:	08007a5b 	.word	0x08007a5b
 8007cdc:	0800a442 	.word	0x0800a442

08007ce0 <_scanf_chars>:
 8007ce0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007ce4:	4615      	mov	r5, r2
 8007ce6:	688a      	ldr	r2, [r1, #8]
 8007ce8:	4680      	mov	r8, r0
 8007cea:	460c      	mov	r4, r1
 8007cec:	b932      	cbnz	r2, 8007cfc <_scanf_chars+0x1c>
 8007cee:	698a      	ldr	r2, [r1, #24]
 8007cf0:	2a00      	cmp	r2, #0
 8007cf2:	bf0c      	ite	eq
 8007cf4:	2201      	moveq	r2, #1
 8007cf6:	f04f 32ff 	movne.w	r2, #4294967295
 8007cfa:	608a      	str	r2, [r1, #8]
 8007cfc:	6822      	ldr	r2, [r4, #0]
 8007cfe:	f8df 908c 	ldr.w	r9, [pc, #140]	; 8007d8c <_scanf_chars+0xac>
 8007d02:	06d1      	lsls	r1, r2, #27
 8007d04:	bf5f      	itttt	pl
 8007d06:	681a      	ldrpl	r2, [r3, #0]
 8007d08:	1d11      	addpl	r1, r2, #4
 8007d0a:	6019      	strpl	r1, [r3, #0]
 8007d0c:	6816      	ldrpl	r6, [r2, #0]
 8007d0e:	2700      	movs	r7, #0
 8007d10:	69a0      	ldr	r0, [r4, #24]
 8007d12:	b188      	cbz	r0, 8007d38 <_scanf_chars+0x58>
 8007d14:	2801      	cmp	r0, #1
 8007d16:	d107      	bne.n	8007d28 <_scanf_chars+0x48>
 8007d18:	682b      	ldr	r3, [r5, #0]
 8007d1a:	781a      	ldrb	r2, [r3, #0]
 8007d1c:	6963      	ldr	r3, [r4, #20]
 8007d1e:	5c9b      	ldrb	r3, [r3, r2]
 8007d20:	b953      	cbnz	r3, 8007d38 <_scanf_chars+0x58>
 8007d22:	bb27      	cbnz	r7, 8007d6e <_scanf_chars+0x8e>
 8007d24:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007d28:	2802      	cmp	r0, #2
 8007d2a:	d120      	bne.n	8007d6e <_scanf_chars+0x8e>
 8007d2c:	682b      	ldr	r3, [r5, #0]
 8007d2e:	781b      	ldrb	r3, [r3, #0]
 8007d30:	f813 3009 	ldrb.w	r3, [r3, r9]
 8007d34:	071b      	lsls	r3, r3, #28
 8007d36:	d41a      	bmi.n	8007d6e <_scanf_chars+0x8e>
 8007d38:	6823      	ldr	r3, [r4, #0]
 8007d3a:	06da      	lsls	r2, r3, #27
 8007d3c:	bf5e      	ittt	pl
 8007d3e:	682b      	ldrpl	r3, [r5, #0]
 8007d40:	781b      	ldrbpl	r3, [r3, #0]
 8007d42:	f806 3b01 	strbpl.w	r3, [r6], #1
 8007d46:	682a      	ldr	r2, [r5, #0]
 8007d48:	686b      	ldr	r3, [r5, #4]
 8007d4a:	3201      	adds	r2, #1
 8007d4c:	602a      	str	r2, [r5, #0]
 8007d4e:	68a2      	ldr	r2, [r4, #8]
 8007d50:	3b01      	subs	r3, #1
 8007d52:	3a01      	subs	r2, #1
 8007d54:	606b      	str	r3, [r5, #4]
 8007d56:	3701      	adds	r7, #1
 8007d58:	60a2      	str	r2, [r4, #8]
 8007d5a:	b142      	cbz	r2, 8007d6e <_scanf_chars+0x8e>
 8007d5c:	2b00      	cmp	r3, #0
 8007d5e:	dcd7      	bgt.n	8007d10 <_scanf_chars+0x30>
 8007d60:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8007d64:	4629      	mov	r1, r5
 8007d66:	4640      	mov	r0, r8
 8007d68:	4798      	blx	r3
 8007d6a:	2800      	cmp	r0, #0
 8007d6c:	d0d0      	beq.n	8007d10 <_scanf_chars+0x30>
 8007d6e:	6823      	ldr	r3, [r4, #0]
 8007d70:	f013 0310 	ands.w	r3, r3, #16
 8007d74:	d105      	bne.n	8007d82 <_scanf_chars+0xa2>
 8007d76:	68e2      	ldr	r2, [r4, #12]
 8007d78:	3201      	adds	r2, #1
 8007d7a:	60e2      	str	r2, [r4, #12]
 8007d7c:	69a2      	ldr	r2, [r4, #24]
 8007d7e:	b102      	cbz	r2, 8007d82 <_scanf_chars+0xa2>
 8007d80:	7033      	strb	r3, [r6, #0]
 8007d82:	6923      	ldr	r3, [r4, #16]
 8007d84:	441f      	add	r7, r3
 8007d86:	6127      	str	r7, [r4, #16]
 8007d88:	2000      	movs	r0, #0
 8007d8a:	e7cb      	b.n	8007d24 <_scanf_chars+0x44>
 8007d8c:	0800a0e5 	.word	0x0800a0e5

08007d90 <_scanf_i>:
 8007d90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007d94:	4698      	mov	r8, r3
 8007d96:	4b74      	ldr	r3, [pc, #464]	; (8007f68 <_scanf_i+0x1d8>)
 8007d98:	460c      	mov	r4, r1
 8007d9a:	4682      	mov	sl, r0
 8007d9c:	4616      	mov	r6, r2
 8007d9e:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8007da2:	b087      	sub	sp, #28
 8007da4:	ab03      	add	r3, sp, #12
 8007da6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007daa:	4b70      	ldr	r3, [pc, #448]	; (8007f6c <_scanf_i+0x1dc>)
 8007dac:	69a1      	ldr	r1, [r4, #24]
 8007dae:	4a70      	ldr	r2, [pc, #448]	; (8007f70 <_scanf_i+0x1e0>)
 8007db0:	2903      	cmp	r1, #3
 8007db2:	bf18      	it	ne
 8007db4:	461a      	movne	r2, r3
 8007db6:	68a3      	ldr	r3, [r4, #8]
 8007db8:	9201      	str	r2, [sp, #4]
 8007dba:	1e5a      	subs	r2, r3, #1
 8007dbc:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 8007dc0:	bf88      	it	hi
 8007dc2:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 8007dc6:	4627      	mov	r7, r4
 8007dc8:	bf82      	ittt	hi
 8007dca:	eb03 0905 	addhi.w	r9, r3, r5
 8007dce:	f240 135d 	movwhi	r3, #349	; 0x15d
 8007dd2:	60a3      	strhi	r3, [r4, #8]
 8007dd4:	f857 3b1c 	ldr.w	r3, [r7], #28
 8007dd8:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
 8007ddc:	bf98      	it	ls
 8007dde:	f04f 0900 	movls.w	r9, #0
 8007de2:	6023      	str	r3, [r4, #0]
 8007de4:	463d      	mov	r5, r7
 8007de6:	f04f 0b00 	mov.w	fp, #0
 8007dea:	6831      	ldr	r1, [r6, #0]
 8007dec:	ab03      	add	r3, sp, #12
 8007dee:	7809      	ldrb	r1, [r1, #0]
 8007df0:	f853 002b 	ldr.w	r0, [r3, fp, lsl #2]
 8007df4:	2202      	movs	r2, #2
 8007df6:	f7f8 fa0b 	bl	8000210 <memchr>
 8007dfa:	b328      	cbz	r0, 8007e48 <_scanf_i+0xb8>
 8007dfc:	f1bb 0f01 	cmp.w	fp, #1
 8007e00:	d159      	bne.n	8007eb6 <_scanf_i+0x126>
 8007e02:	6862      	ldr	r2, [r4, #4]
 8007e04:	b92a      	cbnz	r2, 8007e12 <_scanf_i+0x82>
 8007e06:	6822      	ldr	r2, [r4, #0]
 8007e08:	2308      	movs	r3, #8
 8007e0a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007e0e:	6063      	str	r3, [r4, #4]
 8007e10:	6022      	str	r2, [r4, #0]
 8007e12:	6822      	ldr	r2, [r4, #0]
 8007e14:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
 8007e18:	6022      	str	r2, [r4, #0]
 8007e1a:	68a2      	ldr	r2, [r4, #8]
 8007e1c:	1e51      	subs	r1, r2, #1
 8007e1e:	60a1      	str	r1, [r4, #8]
 8007e20:	b192      	cbz	r2, 8007e48 <_scanf_i+0xb8>
 8007e22:	6832      	ldr	r2, [r6, #0]
 8007e24:	1c51      	adds	r1, r2, #1
 8007e26:	6031      	str	r1, [r6, #0]
 8007e28:	7812      	ldrb	r2, [r2, #0]
 8007e2a:	f805 2b01 	strb.w	r2, [r5], #1
 8007e2e:	6872      	ldr	r2, [r6, #4]
 8007e30:	3a01      	subs	r2, #1
 8007e32:	2a00      	cmp	r2, #0
 8007e34:	6072      	str	r2, [r6, #4]
 8007e36:	dc07      	bgt.n	8007e48 <_scanf_i+0xb8>
 8007e38:	f8d4 2180 	ldr.w	r2, [r4, #384]	; 0x180
 8007e3c:	4631      	mov	r1, r6
 8007e3e:	4650      	mov	r0, sl
 8007e40:	4790      	blx	r2
 8007e42:	2800      	cmp	r0, #0
 8007e44:	f040 8085 	bne.w	8007f52 <_scanf_i+0x1c2>
 8007e48:	f10b 0b01 	add.w	fp, fp, #1
 8007e4c:	f1bb 0f03 	cmp.w	fp, #3
 8007e50:	d1cb      	bne.n	8007dea <_scanf_i+0x5a>
 8007e52:	6863      	ldr	r3, [r4, #4]
 8007e54:	b90b      	cbnz	r3, 8007e5a <_scanf_i+0xca>
 8007e56:	230a      	movs	r3, #10
 8007e58:	6063      	str	r3, [r4, #4]
 8007e5a:	6863      	ldr	r3, [r4, #4]
 8007e5c:	4945      	ldr	r1, [pc, #276]	; (8007f74 <_scanf_i+0x1e4>)
 8007e5e:	6960      	ldr	r0, [r4, #20]
 8007e60:	1ac9      	subs	r1, r1, r3
 8007e62:	f000 f8a1 	bl	8007fa8 <__sccl>
 8007e66:	f04f 0b00 	mov.w	fp, #0
 8007e6a:	68a3      	ldr	r3, [r4, #8]
 8007e6c:	6822      	ldr	r2, [r4, #0]
 8007e6e:	2b00      	cmp	r3, #0
 8007e70:	d03d      	beq.n	8007eee <_scanf_i+0x15e>
 8007e72:	6831      	ldr	r1, [r6, #0]
 8007e74:	6960      	ldr	r0, [r4, #20]
 8007e76:	f891 c000 	ldrb.w	ip, [r1]
 8007e7a:	f810 000c 	ldrb.w	r0, [r0, ip]
 8007e7e:	2800      	cmp	r0, #0
 8007e80:	d035      	beq.n	8007eee <_scanf_i+0x15e>
 8007e82:	f1bc 0f30 	cmp.w	ip, #48	; 0x30
 8007e86:	d124      	bne.n	8007ed2 <_scanf_i+0x142>
 8007e88:	0510      	lsls	r0, r2, #20
 8007e8a:	d522      	bpl.n	8007ed2 <_scanf_i+0x142>
 8007e8c:	f10b 0b01 	add.w	fp, fp, #1
 8007e90:	f1b9 0f00 	cmp.w	r9, #0
 8007e94:	d003      	beq.n	8007e9e <_scanf_i+0x10e>
 8007e96:	3301      	adds	r3, #1
 8007e98:	f109 39ff 	add.w	r9, r9, #4294967295
 8007e9c:	60a3      	str	r3, [r4, #8]
 8007e9e:	6873      	ldr	r3, [r6, #4]
 8007ea0:	3b01      	subs	r3, #1
 8007ea2:	2b00      	cmp	r3, #0
 8007ea4:	6073      	str	r3, [r6, #4]
 8007ea6:	dd1b      	ble.n	8007ee0 <_scanf_i+0x150>
 8007ea8:	6833      	ldr	r3, [r6, #0]
 8007eaa:	3301      	adds	r3, #1
 8007eac:	6033      	str	r3, [r6, #0]
 8007eae:	68a3      	ldr	r3, [r4, #8]
 8007eb0:	3b01      	subs	r3, #1
 8007eb2:	60a3      	str	r3, [r4, #8]
 8007eb4:	e7d9      	b.n	8007e6a <_scanf_i+0xda>
 8007eb6:	f1bb 0f02 	cmp.w	fp, #2
 8007eba:	d1ae      	bne.n	8007e1a <_scanf_i+0x8a>
 8007ebc:	6822      	ldr	r2, [r4, #0]
 8007ebe:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
 8007ec2:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8007ec6:	d1bf      	bne.n	8007e48 <_scanf_i+0xb8>
 8007ec8:	2310      	movs	r3, #16
 8007eca:	6063      	str	r3, [r4, #4]
 8007ecc:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007ed0:	e7a2      	b.n	8007e18 <_scanf_i+0x88>
 8007ed2:	f422 6210 	bic.w	r2, r2, #2304	; 0x900
 8007ed6:	6022      	str	r2, [r4, #0]
 8007ed8:	780b      	ldrb	r3, [r1, #0]
 8007eda:	f805 3b01 	strb.w	r3, [r5], #1
 8007ede:	e7de      	b.n	8007e9e <_scanf_i+0x10e>
 8007ee0:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8007ee4:	4631      	mov	r1, r6
 8007ee6:	4650      	mov	r0, sl
 8007ee8:	4798      	blx	r3
 8007eea:	2800      	cmp	r0, #0
 8007eec:	d0df      	beq.n	8007eae <_scanf_i+0x11e>
 8007eee:	6823      	ldr	r3, [r4, #0]
 8007ef0:	05d9      	lsls	r1, r3, #23
 8007ef2:	d50d      	bpl.n	8007f10 <_scanf_i+0x180>
 8007ef4:	42bd      	cmp	r5, r7
 8007ef6:	d909      	bls.n	8007f0c <_scanf_i+0x17c>
 8007ef8:	f815 1c01 	ldrb.w	r1, [r5, #-1]
 8007efc:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8007f00:	4632      	mov	r2, r6
 8007f02:	4650      	mov	r0, sl
 8007f04:	4798      	blx	r3
 8007f06:	f105 39ff 	add.w	r9, r5, #4294967295
 8007f0a:	464d      	mov	r5, r9
 8007f0c:	42bd      	cmp	r5, r7
 8007f0e:	d028      	beq.n	8007f62 <_scanf_i+0x1d2>
 8007f10:	6822      	ldr	r2, [r4, #0]
 8007f12:	f012 0210 	ands.w	r2, r2, #16
 8007f16:	d113      	bne.n	8007f40 <_scanf_i+0x1b0>
 8007f18:	702a      	strb	r2, [r5, #0]
 8007f1a:	6863      	ldr	r3, [r4, #4]
 8007f1c:	9e01      	ldr	r6, [sp, #4]
 8007f1e:	4639      	mov	r1, r7
 8007f20:	4650      	mov	r0, sl
 8007f22:	47b0      	blx	r6
 8007f24:	f8d8 3000 	ldr.w	r3, [r8]
 8007f28:	6821      	ldr	r1, [r4, #0]
 8007f2a:	1d1a      	adds	r2, r3, #4
 8007f2c:	f8c8 2000 	str.w	r2, [r8]
 8007f30:	f011 0f20 	tst.w	r1, #32
 8007f34:	681b      	ldr	r3, [r3, #0]
 8007f36:	d00f      	beq.n	8007f58 <_scanf_i+0x1c8>
 8007f38:	6018      	str	r0, [r3, #0]
 8007f3a:	68e3      	ldr	r3, [r4, #12]
 8007f3c:	3301      	adds	r3, #1
 8007f3e:	60e3      	str	r3, [r4, #12]
 8007f40:	1bed      	subs	r5, r5, r7
 8007f42:	44ab      	add	fp, r5
 8007f44:	6925      	ldr	r5, [r4, #16]
 8007f46:	445d      	add	r5, fp
 8007f48:	6125      	str	r5, [r4, #16]
 8007f4a:	2000      	movs	r0, #0
 8007f4c:	b007      	add	sp, #28
 8007f4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007f52:	f04f 0b00 	mov.w	fp, #0
 8007f56:	e7ca      	b.n	8007eee <_scanf_i+0x15e>
 8007f58:	07ca      	lsls	r2, r1, #31
 8007f5a:	bf4c      	ite	mi
 8007f5c:	8018      	strhmi	r0, [r3, #0]
 8007f5e:	6018      	strpl	r0, [r3, #0]
 8007f60:	e7eb      	b.n	8007f3a <_scanf_i+0x1aa>
 8007f62:	2001      	movs	r0, #1
 8007f64:	e7f2      	b.n	8007f4c <_scanf_i+0x1bc>
 8007f66:	bf00      	nop
 8007f68:	08009f38 	.word	0x08009f38
 8007f6c:	08008139 	.word	0x08008139
 8007f70:	08005191 	.word	0x08005191
 8007f74:	0800a466 	.word	0x0800a466

08007f78 <_read_r>:
 8007f78:	b538      	push	{r3, r4, r5, lr}
 8007f7a:	4d07      	ldr	r5, [pc, #28]	; (8007f98 <_read_r+0x20>)
 8007f7c:	4604      	mov	r4, r0
 8007f7e:	4608      	mov	r0, r1
 8007f80:	4611      	mov	r1, r2
 8007f82:	2200      	movs	r2, #0
 8007f84:	602a      	str	r2, [r5, #0]
 8007f86:	461a      	mov	r2, r3
 8007f88:	f7fa faa2 	bl	80024d0 <_read>
 8007f8c:	1c43      	adds	r3, r0, #1
 8007f8e:	d102      	bne.n	8007f96 <_read_r+0x1e>
 8007f90:	682b      	ldr	r3, [r5, #0]
 8007f92:	b103      	cbz	r3, 8007f96 <_read_r+0x1e>
 8007f94:	6023      	str	r3, [r4, #0]
 8007f96:	bd38      	pop	{r3, r4, r5, pc}
 8007f98:	20000d4c 	.word	0x20000d4c

08007f9c <nan>:
 8007f9c:	4901      	ldr	r1, [pc, #4]	; (8007fa4 <nan+0x8>)
 8007f9e:	2000      	movs	r0, #0
 8007fa0:	4770      	bx	lr
 8007fa2:	bf00      	nop
 8007fa4:	7ff80000 	.word	0x7ff80000

08007fa8 <__sccl>:
 8007fa8:	b570      	push	{r4, r5, r6, lr}
 8007faa:	780b      	ldrb	r3, [r1, #0]
 8007fac:	4604      	mov	r4, r0
 8007fae:	2b5e      	cmp	r3, #94	; 0x5e
 8007fb0:	bf0b      	itete	eq
 8007fb2:	784b      	ldrbeq	r3, [r1, #1]
 8007fb4:	1c48      	addne	r0, r1, #1
 8007fb6:	1c88      	addeq	r0, r1, #2
 8007fb8:	2200      	movne	r2, #0
 8007fba:	bf08      	it	eq
 8007fbc:	2201      	moveq	r2, #1
 8007fbe:	1e61      	subs	r1, r4, #1
 8007fc0:	f104 05ff 	add.w	r5, r4, #255	; 0xff
 8007fc4:	f801 2f01 	strb.w	r2, [r1, #1]!
 8007fc8:	42a9      	cmp	r1, r5
 8007fca:	d1fb      	bne.n	8007fc4 <__sccl+0x1c>
 8007fcc:	b90b      	cbnz	r3, 8007fd2 <__sccl+0x2a>
 8007fce:	3801      	subs	r0, #1
 8007fd0:	bd70      	pop	{r4, r5, r6, pc}
 8007fd2:	f082 0101 	eor.w	r1, r2, #1
 8007fd6:	54e1      	strb	r1, [r4, r3]
 8007fd8:	1c42      	adds	r2, r0, #1
 8007fda:	f812 5c01 	ldrb.w	r5, [r2, #-1]
 8007fde:	2d2d      	cmp	r5, #45	; 0x2d
 8007fe0:	f102 36ff 	add.w	r6, r2, #4294967295
 8007fe4:	4610      	mov	r0, r2
 8007fe6:	d006      	beq.n	8007ff6 <__sccl+0x4e>
 8007fe8:	2d5d      	cmp	r5, #93	; 0x5d
 8007fea:	d0f1      	beq.n	8007fd0 <__sccl+0x28>
 8007fec:	b90d      	cbnz	r5, 8007ff2 <__sccl+0x4a>
 8007fee:	4630      	mov	r0, r6
 8007ff0:	e7ee      	b.n	8007fd0 <__sccl+0x28>
 8007ff2:	462b      	mov	r3, r5
 8007ff4:	e7ef      	b.n	8007fd6 <__sccl+0x2e>
 8007ff6:	7816      	ldrb	r6, [r2, #0]
 8007ff8:	2e5d      	cmp	r6, #93	; 0x5d
 8007ffa:	d0fa      	beq.n	8007ff2 <__sccl+0x4a>
 8007ffc:	42b3      	cmp	r3, r6
 8007ffe:	dcf8      	bgt.n	8007ff2 <__sccl+0x4a>
 8008000:	4618      	mov	r0, r3
 8008002:	3001      	adds	r0, #1
 8008004:	4286      	cmp	r6, r0
 8008006:	5421      	strb	r1, [r4, r0]
 8008008:	dcfb      	bgt.n	8008002 <__sccl+0x5a>
 800800a:	43d8      	mvns	r0, r3
 800800c:	4430      	add	r0, r6
 800800e:	1c5d      	adds	r5, r3, #1
 8008010:	42b3      	cmp	r3, r6
 8008012:	bfa8      	it	ge
 8008014:	2000      	movge	r0, #0
 8008016:	182b      	adds	r3, r5, r0
 8008018:	3202      	adds	r2, #2
 800801a:	e7de      	b.n	8007fda <__sccl+0x32>

0800801c <strncmp>:
 800801c:	b510      	push	{r4, lr}
 800801e:	b16a      	cbz	r2, 800803c <strncmp+0x20>
 8008020:	3901      	subs	r1, #1
 8008022:	1884      	adds	r4, r0, r2
 8008024:	f810 3b01 	ldrb.w	r3, [r0], #1
 8008028:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800802c:	4293      	cmp	r3, r2
 800802e:	d103      	bne.n	8008038 <strncmp+0x1c>
 8008030:	42a0      	cmp	r0, r4
 8008032:	d001      	beq.n	8008038 <strncmp+0x1c>
 8008034:	2b00      	cmp	r3, #0
 8008036:	d1f5      	bne.n	8008024 <strncmp+0x8>
 8008038:	1a98      	subs	r0, r3, r2
 800803a:	bd10      	pop	{r4, pc}
 800803c:	4610      	mov	r0, r2
 800803e:	e7fc      	b.n	800803a <strncmp+0x1e>

08008040 <_strtoul_l.isra.0>:
 8008040:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008044:	4e3b      	ldr	r6, [pc, #236]	; (8008134 <_strtoul_l.isra.0+0xf4>)
 8008046:	4686      	mov	lr, r0
 8008048:	468c      	mov	ip, r1
 800804a:	4660      	mov	r0, ip
 800804c:	f81c 4b01 	ldrb.w	r4, [ip], #1
 8008050:	5da5      	ldrb	r5, [r4, r6]
 8008052:	f015 0508 	ands.w	r5, r5, #8
 8008056:	d1f8      	bne.n	800804a <_strtoul_l.isra.0+0xa>
 8008058:	2c2d      	cmp	r4, #45	; 0x2d
 800805a:	d134      	bne.n	80080c6 <_strtoul_l.isra.0+0x86>
 800805c:	f89c 4000 	ldrb.w	r4, [ip]
 8008060:	f04f 0801 	mov.w	r8, #1
 8008064:	f100 0c02 	add.w	ip, r0, #2
 8008068:	2b00      	cmp	r3, #0
 800806a:	d05e      	beq.n	800812a <_strtoul_l.isra.0+0xea>
 800806c:	2b10      	cmp	r3, #16
 800806e:	d10c      	bne.n	800808a <_strtoul_l.isra.0+0x4a>
 8008070:	2c30      	cmp	r4, #48	; 0x30
 8008072:	d10a      	bne.n	800808a <_strtoul_l.isra.0+0x4a>
 8008074:	f89c 0000 	ldrb.w	r0, [ip]
 8008078:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 800807c:	2858      	cmp	r0, #88	; 0x58
 800807e:	d14f      	bne.n	8008120 <_strtoul_l.isra.0+0xe0>
 8008080:	f89c 4001 	ldrb.w	r4, [ip, #1]
 8008084:	2310      	movs	r3, #16
 8008086:	f10c 0c02 	add.w	ip, ip, #2
 800808a:	f04f 37ff 	mov.w	r7, #4294967295
 800808e:	2500      	movs	r5, #0
 8008090:	fbb7 f7f3 	udiv	r7, r7, r3
 8008094:	fb03 f907 	mul.w	r9, r3, r7
 8008098:	ea6f 0909 	mvn.w	r9, r9
 800809c:	4628      	mov	r0, r5
 800809e:	f1a4 0630 	sub.w	r6, r4, #48	; 0x30
 80080a2:	2e09      	cmp	r6, #9
 80080a4:	d818      	bhi.n	80080d8 <_strtoul_l.isra.0+0x98>
 80080a6:	4634      	mov	r4, r6
 80080a8:	42a3      	cmp	r3, r4
 80080aa:	dd24      	ble.n	80080f6 <_strtoul_l.isra.0+0xb6>
 80080ac:	2d00      	cmp	r5, #0
 80080ae:	db1f      	blt.n	80080f0 <_strtoul_l.isra.0+0xb0>
 80080b0:	4287      	cmp	r7, r0
 80080b2:	d31d      	bcc.n	80080f0 <_strtoul_l.isra.0+0xb0>
 80080b4:	d101      	bne.n	80080ba <_strtoul_l.isra.0+0x7a>
 80080b6:	45a1      	cmp	r9, r4
 80080b8:	db1a      	blt.n	80080f0 <_strtoul_l.isra.0+0xb0>
 80080ba:	fb00 4003 	mla	r0, r0, r3, r4
 80080be:	2501      	movs	r5, #1
 80080c0:	f81c 4b01 	ldrb.w	r4, [ip], #1
 80080c4:	e7eb      	b.n	800809e <_strtoul_l.isra.0+0x5e>
 80080c6:	2c2b      	cmp	r4, #43	; 0x2b
 80080c8:	bf08      	it	eq
 80080ca:	f89c 4000 	ldrbeq.w	r4, [ip]
 80080ce:	46a8      	mov	r8, r5
 80080d0:	bf08      	it	eq
 80080d2:	f100 0c02 	addeq.w	ip, r0, #2
 80080d6:	e7c7      	b.n	8008068 <_strtoul_l.isra.0+0x28>
 80080d8:	f1a4 0641 	sub.w	r6, r4, #65	; 0x41
 80080dc:	2e19      	cmp	r6, #25
 80080de:	d801      	bhi.n	80080e4 <_strtoul_l.isra.0+0xa4>
 80080e0:	3c37      	subs	r4, #55	; 0x37
 80080e2:	e7e1      	b.n	80080a8 <_strtoul_l.isra.0+0x68>
 80080e4:	f1a4 0661 	sub.w	r6, r4, #97	; 0x61
 80080e8:	2e19      	cmp	r6, #25
 80080ea:	d804      	bhi.n	80080f6 <_strtoul_l.isra.0+0xb6>
 80080ec:	3c57      	subs	r4, #87	; 0x57
 80080ee:	e7db      	b.n	80080a8 <_strtoul_l.isra.0+0x68>
 80080f0:	f04f 35ff 	mov.w	r5, #4294967295
 80080f4:	e7e4      	b.n	80080c0 <_strtoul_l.isra.0+0x80>
 80080f6:	2d00      	cmp	r5, #0
 80080f8:	da07      	bge.n	800810a <_strtoul_l.isra.0+0xca>
 80080fa:	2322      	movs	r3, #34	; 0x22
 80080fc:	f8ce 3000 	str.w	r3, [lr]
 8008100:	f04f 30ff 	mov.w	r0, #4294967295
 8008104:	b942      	cbnz	r2, 8008118 <_strtoul_l.isra.0+0xd8>
 8008106:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800810a:	f1b8 0f00 	cmp.w	r8, #0
 800810e:	d000      	beq.n	8008112 <_strtoul_l.isra.0+0xd2>
 8008110:	4240      	negs	r0, r0
 8008112:	2a00      	cmp	r2, #0
 8008114:	d0f7      	beq.n	8008106 <_strtoul_l.isra.0+0xc6>
 8008116:	b10d      	cbz	r5, 800811c <_strtoul_l.isra.0+0xdc>
 8008118:	f10c 31ff 	add.w	r1, ip, #4294967295
 800811c:	6011      	str	r1, [r2, #0]
 800811e:	e7f2      	b.n	8008106 <_strtoul_l.isra.0+0xc6>
 8008120:	2430      	movs	r4, #48	; 0x30
 8008122:	2b00      	cmp	r3, #0
 8008124:	d1b1      	bne.n	800808a <_strtoul_l.isra.0+0x4a>
 8008126:	2308      	movs	r3, #8
 8008128:	e7af      	b.n	800808a <_strtoul_l.isra.0+0x4a>
 800812a:	2c30      	cmp	r4, #48	; 0x30
 800812c:	d0a2      	beq.n	8008074 <_strtoul_l.isra.0+0x34>
 800812e:	230a      	movs	r3, #10
 8008130:	e7ab      	b.n	800808a <_strtoul_l.isra.0+0x4a>
 8008132:	bf00      	nop
 8008134:	0800a0e5 	.word	0x0800a0e5

08008138 <_strtoul_r>:
 8008138:	f7ff bf82 	b.w	8008040 <_strtoul_l.isra.0>

0800813c <__submore>:
 800813c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008140:	460c      	mov	r4, r1
 8008142:	6b49      	ldr	r1, [r1, #52]	; 0x34
 8008144:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8008148:	4299      	cmp	r1, r3
 800814a:	d11d      	bne.n	8008188 <__submore+0x4c>
 800814c:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8008150:	f7fa ffb2 	bl	80030b8 <_malloc_r>
 8008154:	b918      	cbnz	r0, 800815e <__submore+0x22>
 8008156:	f04f 30ff 	mov.w	r0, #4294967295
 800815a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800815e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8008162:	63a3      	str	r3, [r4, #56]	; 0x38
 8008164:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8008168:	6360      	str	r0, [r4, #52]	; 0x34
 800816a:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
 800816e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8008172:	f880 33fe 	strb.w	r3, [r0, #1022]	; 0x3fe
 8008176:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800817a:	f880 33fd 	strb.w	r3, [r0, #1021]	; 0x3fd
 800817e:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
 8008182:	6020      	str	r0, [r4, #0]
 8008184:	2000      	movs	r0, #0
 8008186:	e7e8      	b.n	800815a <__submore+0x1e>
 8008188:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 800818a:	0077      	lsls	r7, r6, #1
 800818c:	463a      	mov	r2, r7
 800818e:	f000 f85f 	bl	8008250 <_realloc_r>
 8008192:	4605      	mov	r5, r0
 8008194:	2800      	cmp	r0, #0
 8008196:	d0de      	beq.n	8008156 <__submore+0x1a>
 8008198:	eb00 0806 	add.w	r8, r0, r6
 800819c:	4601      	mov	r1, r0
 800819e:	4632      	mov	r2, r6
 80081a0:	4640      	mov	r0, r8
 80081a2:	f7fa ff25 	bl	8002ff0 <memcpy>
 80081a6:	e9c4 570d 	strd	r5, r7, [r4, #52]	; 0x34
 80081aa:	f8c4 8000 	str.w	r8, [r4]
 80081ae:	e7e9      	b.n	8008184 <__submore+0x48>

080081b0 <__ascii_wctomb>:
 80081b0:	4603      	mov	r3, r0
 80081b2:	4608      	mov	r0, r1
 80081b4:	b141      	cbz	r1, 80081c8 <__ascii_wctomb+0x18>
 80081b6:	2aff      	cmp	r2, #255	; 0xff
 80081b8:	d904      	bls.n	80081c4 <__ascii_wctomb+0x14>
 80081ba:	228a      	movs	r2, #138	; 0x8a
 80081bc:	601a      	str	r2, [r3, #0]
 80081be:	f04f 30ff 	mov.w	r0, #4294967295
 80081c2:	4770      	bx	lr
 80081c4:	700a      	strb	r2, [r1, #0]
 80081c6:	2001      	movs	r0, #1
 80081c8:	4770      	bx	lr

080081ca <abort>:
 80081ca:	b508      	push	{r3, lr}
 80081cc:	2006      	movs	r0, #6
 80081ce:	f000 f88d 	bl	80082ec <raise>
 80081d2:	2001      	movs	r0, #1
 80081d4:	f7fa f90b 	bl	80023ee <_exit>

080081d8 <_fstat_r>:
 80081d8:	b538      	push	{r3, r4, r5, lr}
 80081da:	4d07      	ldr	r5, [pc, #28]	; (80081f8 <_fstat_r+0x20>)
 80081dc:	2300      	movs	r3, #0
 80081de:	4604      	mov	r4, r0
 80081e0:	4608      	mov	r0, r1
 80081e2:	4611      	mov	r1, r2
 80081e4:	602b      	str	r3, [r5, #0]
 80081e6:	f7fa f917 	bl	8002418 <_fstat>
 80081ea:	1c43      	adds	r3, r0, #1
 80081ec:	d102      	bne.n	80081f4 <_fstat_r+0x1c>
 80081ee:	682b      	ldr	r3, [r5, #0]
 80081f0:	b103      	cbz	r3, 80081f4 <_fstat_r+0x1c>
 80081f2:	6023      	str	r3, [r4, #0]
 80081f4:	bd38      	pop	{r3, r4, r5, pc}
 80081f6:	bf00      	nop
 80081f8:	20000d4c 	.word	0x20000d4c

080081fc <_isatty_r>:
 80081fc:	b538      	push	{r3, r4, r5, lr}
 80081fe:	4d06      	ldr	r5, [pc, #24]	; (8008218 <_isatty_r+0x1c>)
 8008200:	2300      	movs	r3, #0
 8008202:	4604      	mov	r4, r0
 8008204:	4608      	mov	r0, r1
 8008206:	602b      	str	r3, [r5, #0]
 8008208:	f7fa f915 	bl	8002436 <_isatty>
 800820c:	1c43      	adds	r3, r0, #1
 800820e:	d102      	bne.n	8008216 <_isatty_r+0x1a>
 8008210:	682b      	ldr	r3, [r5, #0]
 8008212:	b103      	cbz	r3, 8008216 <_isatty_r+0x1a>
 8008214:	6023      	str	r3, [r4, #0]
 8008216:	bd38      	pop	{r3, r4, r5, pc}
 8008218:	20000d4c 	.word	0x20000d4c

0800821c <memmove>:
 800821c:	4288      	cmp	r0, r1
 800821e:	b510      	push	{r4, lr}
 8008220:	eb01 0402 	add.w	r4, r1, r2
 8008224:	d902      	bls.n	800822c <memmove+0x10>
 8008226:	4284      	cmp	r4, r0
 8008228:	4623      	mov	r3, r4
 800822a:	d807      	bhi.n	800823c <memmove+0x20>
 800822c:	1e43      	subs	r3, r0, #1
 800822e:	42a1      	cmp	r1, r4
 8008230:	d008      	beq.n	8008244 <memmove+0x28>
 8008232:	f811 2b01 	ldrb.w	r2, [r1], #1
 8008236:	f803 2f01 	strb.w	r2, [r3, #1]!
 800823a:	e7f8      	b.n	800822e <memmove+0x12>
 800823c:	4402      	add	r2, r0
 800823e:	4601      	mov	r1, r0
 8008240:	428a      	cmp	r2, r1
 8008242:	d100      	bne.n	8008246 <memmove+0x2a>
 8008244:	bd10      	pop	{r4, pc}
 8008246:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800824a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800824e:	e7f7      	b.n	8008240 <memmove+0x24>

08008250 <_realloc_r>:
 8008250:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008252:	4607      	mov	r7, r0
 8008254:	4614      	mov	r4, r2
 8008256:	460e      	mov	r6, r1
 8008258:	b921      	cbnz	r1, 8008264 <_realloc_r+0x14>
 800825a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800825e:	4611      	mov	r1, r2
 8008260:	f7fa bf2a 	b.w	80030b8 <_malloc_r>
 8008264:	b922      	cbnz	r2, 8008270 <_realloc_r+0x20>
 8008266:	f7fa fed9 	bl	800301c <_free_r>
 800826a:	4625      	mov	r5, r4
 800826c:	4628      	mov	r0, r5
 800826e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008270:	f000 f858 	bl	8008324 <_malloc_usable_size_r>
 8008274:	42a0      	cmp	r0, r4
 8008276:	d20f      	bcs.n	8008298 <_realloc_r+0x48>
 8008278:	4621      	mov	r1, r4
 800827a:	4638      	mov	r0, r7
 800827c:	f7fa ff1c 	bl	80030b8 <_malloc_r>
 8008280:	4605      	mov	r5, r0
 8008282:	2800      	cmp	r0, #0
 8008284:	d0f2      	beq.n	800826c <_realloc_r+0x1c>
 8008286:	4631      	mov	r1, r6
 8008288:	4622      	mov	r2, r4
 800828a:	f7fa feb1 	bl	8002ff0 <memcpy>
 800828e:	4631      	mov	r1, r6
 8008290:	4638      	mov	r0, r7
 8008292:	f7fa fec3 	bl	800301c <_free_r>
 8008296:	e7e9      	b.n	800826c <_realloc_r+0x1c>
 8008298:	4635      	mov	r5, r6
 800829a:	e7e7      	b.n	800826c <_realloc_r+0x1c>

0800829c <_raise_r>:
 800829c:	291f      	cmp	r1, #31
 800829e:	b538      	push	{r3, r4, r5, lr}
 80082a0:	4604      	mov	r4, r0
 80082a2:	460d      	mov	r5, r1
 80082a4:	d904      	bls.n	80082b0 <_raise_r+0x14>
 80082a6:	2316      	movs	r3, #22
 80082a8:	6003      	str	r3, [r0, #0]
 80082aa:	f04f 30ff 	mov.w	r0, #4294967295
 80082ae:	bd38      	pop	{r3, r4, r5, pc}
 80082b0:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80082b2:	b112      	cbz	r2, 80082ba <_raise_r+0x1e>
 80082b4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80082b8:	b94b      	cbnz	r3, 80082ce <_raise_r+0x32>
 80082ba:	4620      	mov	r0, r4
 80082bc:	f000 f830 	bl	8008320 <_getpid_r>
 80082c0:	462a      	mov	r2, r5
 80082c2:	4601      	mov	r1, r0
 80082c4:	4620      	mov	r0, r4
 80082c6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80082ca:	f000 b817 	b.w	80082fc <_kill_r>
 80082ce:	2b01      	cmp	r3, #1
 80082d0:	d00a      	beq.n	80082e8 <_raise_r+0x4c>
 80082d2:	1c59      	adds	r1, r3, #1
 80082d4:	d103      	bne.n	80082de <_raise_r+0x42>
 80082d6:	2316      	movs	r3, #22
 80082d8:	6003      	str	r3, [r0, #0]
 80082da:	2001      	movs	r0, #1
 80082dc:	e7e7      	b.n	80082ae <_raise_r+0x12>
 80082de:	2400      	movs	r4, #0
 80082e0:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80082e4:	4628      	mov	r0, r5
 80082e6:	4798      	blx	r3
 80082e8:	2000      	movs	r0, #0
 80082ea:	e7e0      	b.n	80082ae <_raise_r+0x12>

080082ec <raise>:
 80082ec:	4b02      	ldr	r3, [pc, #8]	; (80082f8 <raise+0xc>)
 80082ee:	4601      	mov	r1, r0
 80082f0:	6818      	ldr	r0, [r3, #0]
 80082f2:	f7ff bfd3 	b.w	800829c <_raise_r>
 80082f6:	bf00      	nop
 80082f8:	20000b10 	.word	0x20000b10

080082fc <_kill_r>:
 80082fc:	b538      	push	{r3, r4, r5, lr}
 80082fe:	4d07      	ldr	r5, [pc, #28]	; (800831c <_kill_r+0x20>)
 8008300:	2300      	movs	r3, #0
 8008302:	4604      	mov	r4, r0
 8008304:	4608      	mov	r0, r1
 8008306:	4611      	mov	r1, r2
 8008308:	602b      	str	r3, [r5, #0]
 800830a:	f7fa f860 	bl	80023ce <_kill>
 800830e:	1c43      	adds	r3, r0, #1
 8008310:	d102      	bne.n	8008318 <_kill_r+0x1c>
 8008312:	682b      	ldr	r3, [r5, #0]
 8008314:	b103      	cbz	r3, 8008318 <_kill_r+0x1c>
 8008316:	6023      	str	r3, [r4, #0]
 8008318:	bd38      	pop	{r3, r4, r5, pc}
 800831a:	bf00      	nop
 800831c:	20000d4c 	.word	0x20000d4c

08008320 <_getpid_r>:
 8008320:	f7fa b84e 	b.w	80023c0 <_getpid>

08008324 <_malloc_usable_size_r>:
 8008324:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8008328:	1f18      	subs	r0, r3, #4
 800832a:	2b00      	cmp	r3, #0
 800832c:	bfbc      	itt	lt
 800832e:	580b      	ldrlt	r3, [r1, r0]
 8008330:	18c0      	addlt	r0, r0, r3
 8008332:	4770      	bx	lr

08008334 <atanf>:
 8008334:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008338:	f020 4500 	bic.w	r5, r0, #2147483648	; 0x80000000
 800833c:	f1b5 4fa1 	cmp.w	r5, #1350565888	; 0x50800000
 8008340:	4604      	mov	r4, r0
 8008342:	4680      	mov	r8, r0
 8008344:	db0e      	blt.n	8008364 <atanf+0x30>
 8008346:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 800834a:	dd04      	ble.n	8008356 <atanf+0x22>
 800834c:	4601      	mov	r1, r0
 800834e:	f7f8 fccb 	bl	8000ce8 <__addsf3>
 8008352:	4604      	mov	r4, r0
 8008354:	e003      	b.n	800835e <atanf+0x2a>
 8008356:	2800      	cmp	r0, #0
 8008358:	f300 80ce 	bgt.w	80084f8 <atanf+0x1c4>
 800835c:	4c67      	ldr	r4, [pc, #412]	; (80084fc <atanf+0x1c8>)
 800835e:	4620      	mov	r0, r4
 8008360:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008364:	4b66      	ldr	r3, [pc, #408]	; (8008500 <atanf+0x1cc>)
 8008366:	429d      	cmp	r5, r3
 8008368:	dc0e      	bgt.n	8008388 <atanf+0x54>
 800836a:	f1b5 5f44 	cmp.w	r5, #822083584	; 0x31000000
 800836e:	da08      	bge.n	8008382 <atanf+0x4e>
 8008370:	4964      	ldr	r1, [pc, #400]	; (8008504 <atanf+0x1d0>)
 8008372:	f7f8 fcb9 	bl	8000ce8 <__addsf3>
 8008376:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 800837a:	f7f8 ff79 	bl	8001270 <__aeabi_fcmpgt>
 800837e:	2800      	cmp	r0, #0
 8008380:	d1ed      	bne.n	800835e <atanf+0x2a>
 8008382:	f04f 36ff 	mov.w	r6, #4294967295
 8008386:	e01c      	b.n	80083c2 <atanf+0x8e>
 8008388:	f000 f914 	bl	80085b4 <fabsf>
 800838c:	4b5e      	ldr	r3, [pc, #376]	; (8008508 <atanf+0x1d4>)
 800838e:	429d      	cmp	r5, r3
 8008390:	4604      	mov	r4, r0
 8008392:	dc7c      	bgt.n	800848e <atanf+0x15a>
 8008394:	f5a3 03d0 	sub.w	r3, r3, #6815744	; 0x680000
 8008398:	429d      	cmp	r5, r3
 800839a:	dc67      	bgt.n	800846c <atanf+0x138>
 800839c:	4601      	mov	r1, r0
 800839e:	f7f8 fca3 	bl	8000ce8 <__addsf3>
 80083a2:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 80083a6:	f7f8 fc9d 	bl	8000ce4 <__aeabi_fsub>
 80083aa:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 80083ae:	4605      	mov	r5, r0
 80083b0:	4620      	mov	r0, r4
 80083b2:	f7f8 fc99 	bl	8000ce8 <__addsf3>
 80083b6:	4601      	mov	r1, r0
 80083b8:	4628      	mov	r0, r5
 80083ba:	f7f8 fe51 	bl	8001060 <__aeabi_fdiv>
 80083be:	2600      	movs	r6, #0
 80083c0:	4604      	mov	r4, r0
 80083c2:	4621      	mov	r1, r4
 80083c4:	4620      	mov	r0, r4
 80083c6:	f7f8 fd97 	bl	8000ef8 <__aeabi_fmul>
 80083ca:	4601      	mov	r1, r0
 80083cc:	4607      	mov	r7, r0
 80083ce:	f7f8 fd93 	bl	8000ef8 <__aeabi_fmul>
 80083d2:	494e      	ldr	r1, [pc, #312]	; (800850c <atanf+0x1d8>)
 80083d4:	4605      	mov	r5, r0
 80083d6:	f7f8 fd8f 	bl	8000ef8 <__aeabi_fmul>
 80083da:	494d      	ldr	r1, [pc, #308]	; (8008510 <atanf+0x1dc>)
 80083dc:	f7f8 fc84 	bl	8000ce8 <__addsf3>
 80083e0:	4629      	mov	r1, r5
 80083e2:	f7f8 fd89 	bl	8000ef8 <__aeabi_fmul>
 80083e6:	494b      	ldr	r1, [pc, #300]	; (8008514 <atanf+0x1e0>)
 80083e8:	f7f8 fc7e 	bl	8000ce8 <__addsf3>
 80083ec:	4629      	mov	r1, r5
 80083ee:	f7f8 fd83 	bl	8000ef8 <__aeabi_fmul>
 80083f2:	4949      	ldr	r1, [pc, #292]	; (8008518 <atanf+0x1e4>)
 80083f4:	f7f8 fc78 	bl	8000ce8 <__addsf3>
 80083f8:	4629      	mov	r1, r5
 80083fa:	f7f8 fd7d 	bl	8000ef8 <__aeabi_fmul>
 80083fe:	4947      	ldr	r1, [pc, #284]	; (800851c <atanf+0x1e8>)
 8008400:	f7f8 fc72 	bl	8000ce8 <__addsf3>
 8008404:	4629      	mov	r1, r5
 8008406:	f7f8 fd77 	bl	8000ef8 <__aeabi_fmul>
 800840a:	4945      	ldr	r1, [pc, #276]	; (8008520 <atanf+0x1ec>)
 800840c:	f7f8 fc6c 	bl	8000ce8 <__addsf3>
 8008410:	4639      	mov	r1, r7
 8008412:	f7f8 fd71 	bl	8000ef8 <__aeabi_fmul>
 8008416:	4943      	ldr	r1, [pc, #268]	; (8008524 <atanf+0x1f0>)
 8008418:	4607      	mov	r7, r0
 800841a:	4628      	mov	r0, r5
 800841c:	f7f8 fd6c 	bl	8000ef8 <__aeabi_fmul>
 8008420:	4941      	ldr	r1, [pc, #260]	; (8008528 <atanf+0x1f4>)
 8008422:	f7f8 fc5f 	bl	8000ce4 <__aeabi_fsub>
 8008426:	4629      	mov	r1, r5
 8008428:	f7f8 fd66 	bl	8000ef8 <__aeabi_fmul>
 800842c:	493f      	ldr	r1, [pc, #252]	; (800852c <atanf+0x1f8>)
 800842e:	f7f8 fc59 	bl	8000ce4 <__aeabi_fsub>
 8008432:	4629      	mov	r1, r5
 8008434:	f7f8 fd60 	bl	8000ef8 <__aeabi_fmul>
 8008438:	493d      	ldr	r1, [pc, #244]	; (8008530 <atanf+0x1fc>)
 800843a:	f7f8 fc53 	bl	8000ce4 <__aeabi_fsub>
 800843e:	4629      	mov	r1, r5
 8008440:	f7f8 fd5a 	bl	8000ef8 <__aeabi_fmul>
 8008444:	493b      	ldr	r1, [pc, #236]	; (8008534 <atanf+0x200>)
 8008446:	f7f8 fc4d 	bl	8000ce4 <__aeabi_fsub>
 800844a:	4629      	mov	r1, r5
 800844c:	f7f8 fd54 	bl	8000ef8 <__aeabi_fmul>
 8008450:	4601      	mov	r1, r0
 8008452:	4638      	mov	r0, r7
 8008454:	f7f8 fc48 	bl	8000ce8 <__addsf3>
 8008458:	4621      	mov	r1, r4
 800845a:	f7f8 fd4d 	bl	8000ef8 <__aeabi_fmul>
 800845e:	1c73      	adds	r3, r6, #1
 8008460:	4601      	mov	r1, r0
 8008462:	d133      	bne.n	80084cc <atanf+0x198>
 8008464:	4620      	mov	r0, r4
 8008466:	f7f8 fc3d 	bl	8000ce4 <__aeabi_fsub>
 800846a:	e772      	b.n	8008352 <atanf+0x1e>
 800846c:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 8008470:	f7f8 fc38 	bl	8000ce4 <__aeabi_fsub>
 8008474:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 8008478:	4605      	mov	r5, r0
 800847a:	4620      	mov	r0, r4
 800847c:	f7f8 fc34 	bl	8000ce8 <__addsf3>
 8008480:	4601      	mov	r1, r0
 8008482:	4628      	mov	r0, r5
 8008484:	f7f8 fdec 	bl	8001060 <__aeabi_fdiv>
 8008488:	2601      	movs	r6, #1
 800848a:	4604      	mov	r4, r0
 800848c:	e799      	b.n	80083c2 <atanf+0x8e>
 800848e:	4b2a      	ldr	r3, [pc, #168]	; (8008538 <atanf+0x204>)
 8008490:	429d      	cmp	r5, r3
 8008492:	dc14      	bgt.n	80084be <atanf+0x18a>
 8008494:	f04f 517f 	mov.w	r1, #1069547520	; 0x3fc00000
 8008498:	f7f8 fc24 	bl	8000ce4 <__aeabi_fsub>
 800849c:	f04f 517f 	mov.w	r1, #1069547520	; 0x3fc00000
 80084a0:	4605      	mov	r5, r0
 80084a2:	4620      	mov	r0, r4
 80084a4:	f7f8 fd28 	bl	8000ef8 <__aeabi_fmul>
 80084a8:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 80084ac:	f7f8 fc1c 	bl	8000ce8 <__addsf3>
 80084b0:	4601      	mov	r1, r0
 80084b2:	4628      	mov	r0, r5
 80084b4:	f7f8 fdd4 	bl	8001060 <__aeabi_fdiv>
 80084b8:	2602      	movs	r6, #2
 80084ba:	4604      	mov	r4, r0
 80084bc:	e781      	b.n	80083c2 <atanf+0x8e>
 80084be:	4601      	mov	r1, r0
 80084c0:	481e      	ldr	r0, [pc, #120]	; (800853c <atanf+0x208>)
 80084c2:	f7f8 fdcd 	bl	8001060 <__aeabi_fdiv>
 80084c6:	2603      	movs	r6, #3
 80084c8:	4604      	mov	r4, r0
 80084ca:	e77a      	b.n	80083c2 <atanf+0x8e>
 80084cc:	4b1c      	ldr	r3, [pc, #112]	; (8008540 <atanf+0x20c>)
 80084ce:	f853 1026 	ldr.w	r1, [r3, r6, lsl #2]
 80084d2:	f7f8 fc07 	bl	8000ce4 <__aeabi_fsub>
 80084d6:	4621      	mov	r1, r4
 80084d8:	f7f8 fc04 	bl	8000ce4 <__aeabi_fsub>
 80084dc:	4b19      	ldr	r3, [pc, #100]	; (8008544 <atanf+0x210>)
 80084de:	4601      	mov	r1, r0
 80084e0:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 80084e4:	f7f8 fbfe 	bl	8000ce4 <__aeabi_fsub>
 80084e8:	f1b8 0f00 	cmp.w	r8, #0
 80084ec:	4604      	mov	r4, r0
 80084ee:	f6bf af36 	bge.w	800835e <atanf+0x2a>
 80084f2:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 80084f6:	e72c      	b.n	8008352 <atanf+0x1e>
 80084f8:	4c13      	ldr	r4, [pc, #76]	; (8008548 <atanf+0x214>)
 80084fa:	e730      	b.n	800835e <atanf+0x2a>
 80084fc:	bfc90fdb 	.word	0xbfc90fdb
 8008500:	3edfffff 	.word	0x3edfffff
 8008504:	7149f2ca 	.word	0x7149f2ca
 8008508:	3f97ffff 	.word	0x3f97ffff
 800850c:	3c8569d7 	.word	0x3c8569d7
 8008510:	3d4bda59 	.word	0x3d4bda59
 8008514:	3d886b35 	.word	0x3d886b35
 8008518:	3dba2e6e 	.word	0x3dba2e6e
 800851c:	3e124925 	.word	0x3e124925
 8008520:	3eaaaaab 	.word	0x3eaaaaab
 8008524:	bd15a221 	.word	0xbd15a221
 8008528:	3d6ef16b 	.word	0x3d6ef16b
 800852c:	3d9d8795 	.word	0x3d9d8795
 8008530:	3de38e38 	.word	0x3de38e38
 8008534:	3e4ccccd 	.word	0x3e4ccccd
 8008538:	401bffff 	.word	0x401bffff
 800853c:	bf800000 	.word	0xbf800000
 8008540:	0800a478 	.word	0x0800a478
 8008544:	0800a468 	.word	0x0800a468
 8008548:	3fc90fdb 	.word	0x3fc90fdb

0800854c <cosf>:
 800854c:	b507      	push	{r0, r1, r2, lr}
 800854e:	4a18      	ldr	r2, [pc, #96]	; (80085b0 <cosf+0x64>)
 8008550:	f020 4300 	bic.w	r3, r0, #2147483648	; 0x80000000
 8008554:	4293      	cmp	r3, r2
 8008556:	4601      	mov	r1, r0
 8008558:	dc03      	bgt.n	8008562 <cosf+0x16>
 800855a:	2100      	movs	r1, #0
 800855c:	f000 fb9e 	bl	8008c9c <__kernel_cosf>
 8008560:	e004      	b.n	800856c <cosf+0x20>
 8008562:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8008566:	db04      	blt.n	8008572 <cosf+0x26>
 8008568:	f7f8 fbbc 	bl	8000ce4 <__aeabi_fsub>
 800856c:	b003      	add	sp, #12
 800856e:	f85d fb04 	ldr.w	pc, [sp], #4
 8008572:	4669      	mov	r1, sp
 8008574:	f000 f9e4 	bl	8008940 <__ieee754_rem_pio2f>
 8008578:	f000 0203 	and.w	r2, r0, #3
 800857c:	2a01      	cmp	r2, #1
 800857e:	d005      	beq.n	800858c <cosf+0x40>
 8008580:	2a02      	cmp	r2, #2
 8008582:	d00a      	beq.n	800859a <cosf+0x4e>
 8008584:	b972      	cbnz	r2, 80085a4 <cosf+0x58>
 8008586:	9901      	ldr	r1, [sp, #4]
 8008588:	9800      	ldr	r0, [sp, #0]
 800858a:	e7e7      	b.n	800855c <cosf+0x10>
 800858c:	9901      	ldr	r1, [sp, #4]
 800858e:	9800      	ldr	r0, [sp, #0]
 8008590:	f000 feba 	bl	8009308 <__kernel_sinf>
 8008594:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 8008598:	e7e8      	b.n	800856c <cosf+0x20>
 800859a:	9901      	ldr	r1, [sp, #4]
 800859c:	9800      	ldr	r0, [sp, #0]
 800859e:	f000 fb7d 	bl	8008c9c <__kernel_cosf>
 80085a2:	e7f7      	b.n	8008594 <cosf+0x48>
 80085a4:	9901      	ldr	r1, [sp, #4]
 80085a6:	9800      	ldr	r0, [sp, #0]
 80085a8:	2201      	movs	r2, #1
 80085aa:	f000 fead 	bl	8009308 <__kernel_sinf>
 80085ae:	e7dd      	b.n	800856c <cosf+0x20>
 80085b0:	3f490fd8 	.word	0x3f490fd8

080085b4 <fabsf>:
 80085b4:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 80085b8:	4770      	bx	lr
	...

080085bc <sinf>:
 80085bc:	b507      	push	{r0, r1, r2, lr}
 80085be:	4a19      	ldr	r2, [pc, #100]	; (8008624 <sinf+0x68>)
 80085c0:	f020 4300 	bic.w	r3, r0, #2147483648	; 0x80000000
 80085c4:	4293      	cmp	r3, r2
 80085c6:	4601      	mov	r1, r0
 80085c8:	dc04      	bgt.n	80085d4 <sinf+0x18>
 80085ca:	2200      	movs	r2, #0
 80085cc:	2100      	movs	r1, #0
 80085ce:	f000 fe9b 	bl	8009308 <__kernel_sinf>
 80085d2:	e004      	b.n	80085de <sinf+0x22>
 80085d4:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 80085d8:	db04      	blt.n	80085e4 <sinf+0x28>
 80085da:	f7f8 fb83 	bl	8000ce4 <__aeabi_fsub>
 80085de:	b003      	add	sp, #12
 80085e0:	f85d fb04 	ldr.w	pc, [sp], #4
 80085e4:	4669      	mov	r1, sp
 80085e6:	f000 f9ab 	bl	8008940 <__ieee754_rem_pio2f>
 80085ea:	f000 0003 	and.w	r0, r0, #3
 80085ee:	2801      	cmp	r0, #1
 80085f0:	d006      	beq.n	8008600 <sinf+0x44>
 80085f2:	2802      	cmp	r0, #2
 80085f4:	d009      	beq.n	800860a <sinf+0x4e>
 80085f6:	b980      	cbnz	r0, 800861a <sinf+0x5e>
 80085f8:	9901      	ldr	r1, [sp, #4]
 80085fa:	9800      	ldr	r0, [sp, #0]
 80085fc:	2201      	movs	r2, #1
 80085fe:	e7e6      	b.n	80085ce <sinf+0x12>
 8008600:	9901      	ldr	r1, [sp, #4]
 8008602:	9800      	ldr	r0, [sp, #0]
 8008604:	f000 fb4a 	bl	8008c9c <__kernel_cosf>
 8008608:	e7e9      	b.n	80085de <sinf+0x22>
 800860a:	9901      	ldr	r1, [sp, #4]
 800860c:	9800      	ldr	r0, [sp, #0]
 800860e:	2201      	movs	r2, #1
 8008610:	f000 fe7a 	bl	8009308 <__kernel_sinf>
 8008614:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 8008618:	e7e1      	b.n	80085de <sinf+0x22>
 800861a:	9901      	ldr	r1, [sp, #4]
 800861c:	9800      	ldr	r0, [sp, #0]
 800861e:	f000 fb3d 	bl	8008c9c <__kernel_cosf>
 8008622:	e7f7      	b.n	8008614 <sinf+0x58>
 8008624:	3f490fd8 	.word	0x3f490fd8

08008628 <tanf>:
 8008628:	b507      	push	{r0, r1, r2, lr}
 800862a:	4a0f      	ldr	r2, [pc, #60]	; (8008668 <tanf+0x40>)
 800862c:	f020 4300 	bic.w	r3, r0, #2147483648	; 0x80000000
 8008630:	4293      	cmp	r3, r2
 8008632:	4601      	mov	r1, r0
 8008634:	dc04      	bgt.n	8008640 <tanf+0x18>
 8008636:	2201      	movs	r2, #1
 8008638:	2100      	movs	r1, #0
 800863a:	f000 fedb 	bl	80093f4 <__kernel_tanf>
 800863e:	e004      	b.n	800864a <tanf+0x22>
 8008640:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8008644:	db04      	blt.n	8008650 <tanf+0x28>
 8008646:	f7f8 fb4d 	bl	8000ce4 <__aeabi_fsub>
 800864a:	b003      	add	sp, #12
 800864c:	f85d fb04 	ldr.w	pc, [sp], #4
 8008650:	4669      	mov	r1, sp
 8008652:	f000 f975 	bl	8008940 <__ieee754_rem_pio2f>
 8008656:	0042      	lsls	r2, r0, #1
 8008658:	f002 0202 	and.w	r2, r2, #2
 800865c:	9901      	ldr	r1, [sp, #4]
 800865e:	9800      	ldr	r0, [sp, #0]
 8008660:	f1c2 0201 	rsb	r2, r2, #1
 8008664:	e7e9      	b.n	800863a <tanf+0x12>
 8008666:	bf00      	nop
 8008668:	3f490fda 	.word	0x3f490fda

0800866c <asinf>:
 800866c:	b538      	push	{r3, r4, r5, lr}
 800866e:	4604      	mov	r4, r0
 8008670:	f000 f822 	bl	80086b8 <__ieee754_asinf>
 8008674:	4b0e      	ldr	r3, [pc, #56]	; (80086b0 <asinf+0x44>)
 8008676:	f993 3000 	ldrsb.w	r3, [r3]
 800867a:	3301      	adds	r3, #1
 800867c:	4605      	mov	r5, r0
 800867e:	d015      	beq.n	80086ac <asinf+0x40>
 8008680:	4621      	mov	r1, r4
 8008682:	4620      	mov	r0, r4
 8008684:	f7f8 fdfe 	bl	8001284 <__aeabi_fcmpun>
 8008688:	b980      	cbnz	r0, 80086ac <asinf+0x40>
 800868a:	4620      	mov	r0, r4
 800868c:	f7ff ff92 	bl	80085b4 <fabsf>
 8008690:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 8008694:	f7f8 fdec 	bl	8001270 <__aeabi_fcmpgt>
 8008698:	b140      	cbz	r0, 80086ac <asinf+0x40>
 800869a:	f7fa fad5 	bl	8002c48 <__errno>
 800869e:	2321      	movs	r3, #33	; 0x21
 80086a0:	6003      	str	r3, [r0, #0]
 80086a2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80086a6:	4803      	ldr	r0, [pc, #12]	; (80086b4 <asinf+0x48>)
 80086a8:	f7fb bdc4 	b.w	8004234 <nanf>
 80086ac:	4628      	mov	r0, r5
 80086ae:	bd38      	pop	{r3, r4, r5, pc}
 80086b0:	20000ce4 	.word	0x20000ce4
 80086b4:	0800a0e3 	.word	0x0800a0e3

080086b8 <__ieee754_asinf>:
 80086b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80086bc:	f020 4800 	bic.w	r8, r0, #2147483648	; 0x80000000
 80086c0:	f1b8 5f7e 	cmp.w	r8, #1065353216	; 0x3f800000
 80086c4:	4604      	mov	r4, r0
 80086c6:	4605      	mov	r5, r0
 80086c8:	d10c      	bne.n	80086e4 <__ieee754_asinf+0x2c>
 80086ca:	498d      	ldr	r1, [pc, #564]	; (8008900 <__ieee754_asinf+0x248>)
 80086cc:	f7f8 fc14 	bl	8000ef8 <__aeabi_fmul>
 80086d0:	498c      	ldr	r1, [pc, #560]	; (8008904 <__ieee754_asinf+0x24c>)
 80086d2:	4605      	mov	r5, r0
 80086d4:	4620      	mov	r0, r4
 80086d6:	f7f8 fc0f 	bl	8000ef8 <__aeabi_fmul>
 80086da:	4601      	mov	r1, r0
 80086dc:	4628      	mov	r0, r5
 80086de:	f7f8 fb03 	bl	8000ce8 <__addsf3>
 80086e2:	e006      	b.n	80086f2 <__ieee754_asinf+0x3a>
 80086e4:	dd07      	ble.n	80086f6 <__ieee754_asinf+0x3e>
 80086e6:	4601      	mov	r1, r0
 80086e8:	f7f8 fafc 	bl	8000ce4 <__aeabi_fsub>
 80086ec:	4601      	mov	r1, r0
 80086ee:	f7f8 fcb7 	bl	8001060 <__aeabi_fdiv>
 80086f2:	4604      	mov	r4, r0
 80086f4:	e00e      	b.n	8008714 <__ieee754_asinf+0x5c>
 80086f6:	f1b8 5f7c 	cmp.w	r8, #1056964608	; 0x3f000000
 80086fa:	da58      	bge.n	80087ae <__ieee754_asinf+0xf6>
 80086fc:	f1b8 5f48 	cmp.w	r8, #838860800	; 0x32000000
 8008700:	da0b      	bge.n	800871a <__ieee754_asinf+0x62>
 8008702:	4981      	ldr	r1, [pc, #516]	; (8008908 <__ieee754_asinf+0x250>)
 8008704:	f7f8 faf0 	bl	8000ce8 <__addsf3>
 8008708:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 800870c:	f7f8 fdb0 	bl	8001270 <__aeabi_fcmpgt>
 8008710:	2800      	cmp	r0, #0
 8008712:	d04c      	beq.n	80087ae <__ieee754_asinf+0xf6>
 8008714:	4620      	mov	r0, r4
 8008716:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800871a:	4601      	mov	r1, r0
 800871c:	f7f8 fbec 	bl	8000ef8 <__aeabi_fmul>
 8008720:	497a      	ldr	r1, [pc, #488]	; (800890c <__ieee754_asinf+0x254>)
 8008722:	4605      	mov	r5, r0
 8008724:	f7f8 fbe8 	bl	8000ef8 <__aeabi_fmul>
 8008728:	4979      	ldr	r1, [pc, #484]	; (8008910 <__ieee754_asinf+0x258>)
 800872a:	f7f8 fadd 	bl	8000ce8 <__addsf3>
 800872e:	4629      	mov	r1, r5
 8008730:	f7f8 fbe2 	bl	8000ef8 <__aeabi_fmul>
 8008734:	4977      	ldr	r1, [pc, #476]	; (8008914 <__ieee754_asinf+0x25c>)
 8008736:	f7f8 fad5 	bl	8000ce4 <__aeabi_fsub>
 800873a:	4629      	mov	r1, r5
 800873c:	f7f8 fbdc 	bl	8000ef8 <__aeabi_fmul>
 8008740:	4975      	ldr	r1, [pc, #468]	; (8008918 <__ieee754_asinf+0x260>)
 8008742:	f7f8 fad1 	bl	8000ce8 <__addsf3>
 8008746:	4629      	mov	r1, r5
 8008748:	f7f8 fbd6 	bl	8000ef8 <__aeabi_fmul>
 800874c:	4973      	ldr	r1, [pc, #460]	; (800891c <__ieee754_asinf+0x264>)
 800874e:	f7f8 fac9 	bl	8000ce4 <__aeabi_fsub>
 8008752:	4629      	mov	r1, r5
 8008754:	f7f8 fbd0 	bl	8000ef8 <__aeabi_fmul>
 8008758:	4971      	ldr	r1, [pc, #452]	; (8008920 <__ieee754_asinf+0x268>)
 800875a:	f7f8 fac5 	bl	8000ce8 <__addsf3>
 800875e:	4629      	mov	r1, r5
 8008760:	f7f8 fbca 	bl	8000ef8 <__aeabi_fmul>
 8008764:	496f      	ldr	r1, [pc, #444]	; (8008924 <__ieee754_asinf+0x26c>)
 8008766:	4606      	mov	r6, r0
 8008768:	4628      	mov	r0, r5
 800876a:	f7f8 fbc5 	bl	8000ef8 <__aeabi_fmul>
 800876e:	496e      	ldr	r1, [pc, #440]	; (8008928 <__ieee754_asinf+0x270>)
 8008770:	f7f8 fab8 	bl	8000ce4 <__aeabi_fsub>
 8008774:	4629      	mov	r1, r5
 8008776:	f7f8 fbbf 	bl	8000ef8 <__aeabi_fmul>
 800877a:	496c      	ldr	r1, [pc, #432]	; (800892c <__ieee754_asinf+0x274>)
 800877c:	f7f8 fab4 	bl	8000ce8 <__addsf3>
 8008780:	4629      	mov	r1, r5
 8008782:	f7f8 fbb9 	bl	8000ef8 <__aeabi_fmul>
 8008786:	496a      	ldr	r1, [pc, #424]	; (8008930 <__ieee754_asinf+0x278>)
 8008788:	f7f8 faac 	bl	8000ce4 <__aeabi_fsub>
 800878c:	4629      	mov	r1, r5
 800878e:	f7f8 fbb3 	bl	8000ef8 <__aeabi_fmul>
 8008792:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 8008796:	f7f8 faa7 	bl	8000ce8 <__addsf3>
 800879a:	4601      	mov	r1, r0
 800879c:	4630      	mov	r0, r6
 800879e:	f7f8 fc5f 	bl	8001060 <__aeabi_fdiv>
 80087a2:	4621      	mov	r1, r4
 80087a4:	f7f8 fba8 	bl	8000ef8 <__aeabi_fmul>
 80087a8:	4601      	mov	r1, r0
 80087aa:	4620      	mov	r0, r4
 80087ac:	e797      	b.n	80086de <__ieee754_asinf+0x26>
 80087ae:	4620      	mov	r0, r4
 80087b0:	f7ff ff00 	bl	80085b4 <fabsf>
 80087b4:	4601      	mov	r1, r0
 80087b6:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 80087ba:	f7f8 fa93 	bl	8000ce4 <__aeabi_fsub>
 80087be:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
 80087c2:	f7f8 fb99 	bl	8000ef8 <__aeabi_fmul>
 80087c6:	4951      	ldr	r1, [pc, #324]	; (800890c <__ieee754_asinf+0x254>)
 80087c8:	4606      	mov	r6, r0
 80087ca:	f7f8 fb95 	bl	8000ef8 <__aeabi_fmul>
 80087ce:	4950      	ldr	r1, [pc, #320]	; (8008910 <__ieee754_asinf+0x258>)
 80087d0:	f7f8 fa8a 	bl	8000ce8 <__addsf3>
 80087d4:	4631      	mov	r1, r6
 80087d6:	f7f8 fb8f 	bl	8000ef8 <__aeabi_fmul>
 80087da:	494e      	ldr	r1, [pc, #312]	; (8008914 <__ieee754_asinf+0x25c>)
 80087dc:	f7f8 fa82 	bl	8000ce4 <__aeabi_fsub>
 80087e0:	4631      	mov	r1, r6
 80087e2:	f7f8 fb89 	bl	8000ef8 <__aeabi_fmul>
 80087e6:	494c      	ldr	r1, [pc, #304]	; (8008918 <__ieee754_asinf+0x260>)
 80087e8:	f7f8 fa7e 	bl	8000ce8 <__addsf3>
 80087ec:	4631      	mov	r1, r6
 80087ee:	f7f8 fb83 	bl	8000ef8 <__aeabi_fmul>
 80087f2:	494a      	ldr	r1, [pc, #296]	; (800891c <__ieee754_asinf+0x264>)
 80087f4:	f7f8 fa76 	bl	8000ce4 <__aeabi_fsub>
 80087f8:	4631      	mov	r1, r6
 80087fa:	f7f8 fb7d 	bl	8000ef8 <__aeabi_fmul>
 80087fe:	4948      	ldr	r1, [pc, #288]	; (8008920 <__ieee754_asinf+0x268>)
 8008800:	f7f8 fa72 	bl	8000ce8 <__addsf3>
 8008804:	4631      	mov	r1, r6
 8008806:	f7f8 fb77 	bl	8000ef8 <__aeabi_fmul>
 800880a:	4946      	ldr	r1, [pc, #280]	; (8008924 <__ieee754_asinf+0x26c>)
 800880c:	4681      	mov	r9, r0
 800880e:	4630      	mov	r0, r6
 8008810:	f7f8 fb72 	bl	8000ef8 <__aeabi_fmul>
 8008814:	4944      	ldr	r1, [pc, #272]	; (8008928 <__ieee754_asinf+0x270>)
 8008816:	f7f8 fa65 	bl	8000ce4 <__aeabi_fsub>
 800881a:	4631      	mov	r1, r6
 800881c:	f7f8 fb6c 	bl	8000ef8 <__aeabi_fmul>
 8008820:	4942      	ldr	r1, [pc, #264]	; (800892c <__ieee754_asinf+0x274>)
 8008822:	f7f8 fa61 	bl	8000ce8 <__addsf3>
 8008826:	4631      	mov	r1, r6
 8008828:	f7f8 fb66 	bl	8000ef8 <__aeabi_fmul>
 800882c:	4940      	ldr	r1, [pc, #256]	; (8008930 <__ieee754_asinf+0x278>)
 800882e:	f7f8 fa59 	bl	8000ce4 <__aeabi_fsub>
 8008832:	4631      	mov	r1, r6
 8008834:	f7f8 fb60 	bl	8000ef8 <__aeabi_fmul>
 8008838:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 800883c:	f7f8 fa54 	bl	8000ce8 <__addsf3>
 8008840:	4682      	mov	sl, r0
 8008842:	4630      	mov	r0, r6
 8008844:	f000 f9da 	bl	8008bfc <__ieee754_sqrtf>
 8008848:	4b3a      	ldr	r3, [pc, #232]	; (8008934 <__ieee754_asinf+0x27c>)
 800884a:	4598      	cmp	r8, r3
 800884c:	4607      	mov	r7, r0
 800884e:	dd1a      	ble.n	8008886 <__ieee754_asinf+0x1ce>
 8008850:	4651      	mov	r1, sl
 8008852:	4648      	mov	r0, r9
 8008854:	f7f8 fc04 	bl	8001060 <__aeabi_fdiv>
 8008858:	4639      	mov	r1, r7
 800885a:	f7f8 fb4d 	bl	8000ef8 <__aeabi_fmul>
 800885e:	4639      	mov	r1, r7
 8008860:	f7f8 fa42 	bl	8000ce8 <__addsf3>
 8008864:	4601      	mov	r1, r0
 8008866:	f7f8 fa3f 	bl	8000ce8 <__addsf3>
 800886a:	4933      	ldr	r1, [pc, #204]	; (8008938 <__ieee754_asinf+0x280>)
 800886c:	f7f8 fa3c 	bl	8000ce8 <__addsf3>
 8008870:	4601      	mov	r1, r0
 8008872:	4823      	ldr	r0, [pc, #140]	; (8008900 <__ieee754_asinf+0x248>)
 8008874:	f7f8 fa36 	bl	8000ce4 <__aeabi_fsub>
 8008878:	2d00      	cmp	r5, #0
 800887a:	4604      	mov	r4, r0
 800887c:	f73f af4a 	bgt.w	8008714 <__ieee754_asinf+0x5c>
 8008880:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 8008884:	e735      	b.n	80086f2 <__ieee754_asinf+0x3a>
 8008886:	4601      	mov	r1, r0
 8008888:	f420 687f 	bic.w	r8, r0, #4080	; 0xff0
 800888c:	f7f8 fa2c 	bl	8000ce8 <__addsf3>
 8008890:	4651      	mov	r1, sl
 8008892:	4604      	mov	r4, r0
 8008894:	4648      	mov	r0, r9
 8008896:	f7f8 fbe3 	bl	8001060 <__aeabi_fdiv>
 800889a:	4601      	mov	r1, r0
 800889c:	4620      	mov	r0, r4
 800889e:	f7f8 fb2b 	bl	8000ef8 <__aeabi_fmul>
 80088a2:	f028 080f 	bic.w	r8, r8, #15
 80088a6:	4681      	mov	r9, r0
 80088a8:	4641      	mov	r1, r8
 80088aa:	4640      	mov	r0, r8
 80088ac:	f7f8 fb24 	bl	8000ef8 <__aeabi_fmul>
 80088b0:	4601      	mov	r1, r0
 80088b2:	4630      	mov	r0, r6
 80088b4:	f7f8 fa16 	bl	8000ce4 <__aeabi_fsub>
 80088b8:	4641      	mov	r1, r8
 80088ba:	4604      	mov	r4, r0
 80088bc:	4638      	mov	r0, r7
 80088be:	f7f8 fa13 	bl	8000ce8 <__addsf3>
 80088c2:	4601      	mov	r1, r0
 80088c4:	4620      	mov	r0, r4
 80088c6:	f7f8 fbcb 	bl	8001060 <__aeabi_fdiv>
 80088ca:	4601      	mov	r1, r0
 80088cc:	f7f8 fa0c 	bl	8000ce8 <__addsf3>
 80088d0:	4601      	mov	r1, r0
 80088d2:	480c      	ldr	r0, [pc, #48]	; (8008904 <__ieee754_asinf+0x24c>)
 80088d4:	f7f8 fa06 	bl	8000ce4 <__aeabi_fsub>
 80088d8:	4601      	mov	r1, r0
 80088da:	4648      	mov	r0, r9
 80088dc:	f7f8 fa02 	bl	8000ce4 <__aeabi_fsub>
 80088e0:	4641      	mov	r1, r8
 80088e2:	4604      	mov	r4, r0
 80088e4:	4640      	mov	r0, r8
 80088e6:	f7f8 f9ff 	bl	8000ce8 <__addsf3>
 80088ea:	4601      	mov	r1, r0
 80088ec:	4813      	ldr	r0, [pc, #76]	; (800893c <__ieee754_asinf+0x284>)
 80088ee:	f7f8 f9f9 	bl	8000ce4 <__aeabi_fsub>
 80088f2:	4601      	mov	r1, r0
 80088f4:	4620      	mov	r0, r4
 80088f6:	f7f8 f9f5 	bl	8000ce4 <__aeabi_fsub>
 80088fa:	4601      	mov	r1, r0
 80088fc:	480f      	ldr	r0, [pc, #60]	; (800893c <__ieee754_asinf+0x284>)
 80088fe:	e7b9      	b.n	8008874 <__ieee754_asinf+0x1bc>
 8008900:	3fc90fdb 	.word	0x3fc90fdb
 8008904:	b33bbd2e 	.word	0xb33bbd2e
 8008908:	7149f2ca 	.word	0x7149f2ca
 800890c:	3811ef08 	.word	0x3811ef08
 8008910:	3a4f7f04 	.word	0x3a4f7f04
 8008914:	3d241146 	.word	0x3d241146
 8008918:	3e4e0aa8 	.word	0x3e4e0aa8
 800891c:	3ea6b090 	.word	0x3ea6b090
 8008920:	3e2aaaab 	.word	0x3e2aaaab
 8008924:	3d9dc62e 	.word	0x3d9dc62e
 8008928:	3f303361 	.word	0x3f303361
 800892c:	4001572d 	.word	0x4001572d
 8008930:	4019d139 	.word	0x4019d139
 8008934:	3f799999 	.word	0x3f799999
 8008938:	333bbd2e 	.word	0x333bbd2e
 800893c:	3f490fdb 	.word	0x3f490fdb

08008940 <__ieee754_rem_pio2f>:
 8008940:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008944:	4aa0      	ldr	r2, [pc, #640]	; (8008bc8 <__ieee754_rem_pio2f+0x288>)
 8008946:	f020 4600 	bic.w	r6, r0, #2147483648	; 0x80000000
 800894a:	4296      	cmp	r6, r2
 800894c:	b087      	sub	sp, #28
 800894e:	460c      	mov	r4, r1
 8008950:	4682      	mov	sl, r0
 8008952:	dc04      	bgt.n	800895e <__ieee754_rem_pio2f+0x1e>
 8008954:	2300      	movs	r3, #0
 8008956:	6008      	str	r0, [r1, #0]
 8008958:	604b      	str	r3, [r1, #4]
 800895a:	2500      	movs	r5, #0
 800895c:	e01a      	b.n	8008994 <__ieee754_rem_pio2f+0x54>
 800895e:	4a9b      	ldr	r2, [pc, #620]	; (8008bcc <__ieee754_rem_pio2f+0x28c>)
 8008960:	4296      	cmp	r6, r2
 8008962:	dc4b      	bgt.n	80089fc <__ieee754_rem_pio2f+0xbc>
 8008964:	2800      	cmp	r0, #0
 8008966:	499a      	ldr	r1, [pc, #616]	; (8008bd0 <__ieee754_rem_pio2f+0x290>)
 8008968:	4f9a      	ldr	r7, [pc, #616]	; (8008bd4 <__ieee754_rem_pio2f+0x294>)
 800896a:	f026 060f 	bic.w	r6, r6, #15
 800896e:	dd23      	ble.n	80089b8 <__ieee754_rem_pio2f+0x78>
 8008970:	f7f8 f9b8 	bl	8000ce4 <__aeabi_fsub>
 8008974:	42be      	cmp	r6, r7
 8008976:	4605      	mov	r5, r0
 8008978:	d010      	beq.n	800899c <__ieee754_rem_pio2f+0x5c>
 800897a:	4997      	ldr	r1, [pc, #604]	; (8008bd8 <__ieee754_rem_pio2f+0x298>)
 800897c:	f7f8 f9b2 	bl	8000ce4 <__aeabi_fsub>
 8008980:	4601      	mov	r1, r0
 8008982:	6020      	str	r0, [r4, #0]
 8008984:	4628      	mov	r0, r5
 8008986:	f7f8 f9ad 	bl	8000ce4 <__aeabi_fsub>
 800898a:	4993      	ldr	r1, [pc, #588]	; (8008bd8 <__ieee754_rem_pio2f+0x298>)
 800898c:	f7f8 f9aa 	bl	8000ce4 <__aeabi_fsub>
 8008990:	2501      	movs	r5, #1
 8008992:	6060      	str	r0, [r4, #4]
 8008994:	4628      	mov	r0, r5
 8008996:	b007      	add	sp, #28
 8008998:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800899c:	498f      	ldr	r1, [pc, #572]	; (8008bdc <__ieee754_rem_pio2f+0x29c>)
 800899e:	f7f8 f9a1 	bl	8000ce4 <__aeabi_fsub>
 80089a2:	498f      	ldr	r1, [pc, #572]	; (8008be0 <__ieee754_rem_pio2f+0x2a0>)
 80089a4:	4605      	mov	r5, r0
 80089a6:	f7f8 f99d 	bl	8000ce4 <__aeabi_fsub>
 80089aa:	4601      	mov	r1, r0
 80089ac:	6020      	str	r0, [r4, #0]
 80089ae:	4628      	mov	r0, r5
 80089b0:	f7f8 f998 	bl	8000ce4 <__aeabi_fsub>
 80089b4:	498a      	ldr	r1, [pc, #552]	; (8008be0 <__ieee754_rem_pio2f+0x2a0>)
 80089b6:	e7e9      	b.n	800898c <__ieee754_rem_pio2f+0x4c>
 80089b8:	f7f8 f996 	bl	8000ce8 <__addsf3>
 80089bc:	42be      	cmp	r6, r7
 80089be:	4605      	mov	r5, r0
 80089c0:	d00e      	beq.n	80089e0 <__ieee754_rem_pio2f+0xa0>
 80089c2:	4985      	ldr	r1, [pc, #532]	; (8008bd8 <__ieee754_rem_pio2f+0x298>)
 80089c4:	f7f8 f990 	bl	8000ce8 <__addsf3>
 80089c8:	4601      	mov	r1, r0
 80089ca:	6020      	str	r0, [r4, #0]
 80089cc:	4628      	mov	r0, r5
 80089ce:	f7f8 f989 	bl	8000ce4 <__aeabi_fsub>
 80089d2:	4981      	ldr	r1, [pc, #516]	; (8008bd8 <__ieee754_rem_pio2f+0x298>)
 80089d4:	f7f8 f988 	bl	8000ce8 <__addsf3>
 80089d8:	f04f 35ff 	mov.w	r5, #4294967295
 80089dc:	6060      	str	r0, [r4, #4]
 80089de:	e7d9      	b.n	8008994 <__ieee754_rem_pio2f+0x54>
 80089e0:	497e      	ldr	r1, [pc, #504]	; (8008bdc <__ieee754_rem_pio2f+0x29c>)
 80089e2:	f7f8 f981 	bl	8000ce8 <__addsf3>
 80089e6:	497e      	ldr	r1, [pc, #504]	; (8008be0 <__ieee754_rem_pio2f+0x2a0>)
 80089e8:	4605      	mov	r5, r0
 80089ea:	f7f8 f97d 	bl	8000ce8 <__addsf3>
 80089ee:	4601      	mov	r1, r0
 80089f0:	6020      	str	r0, [r4, #0]
 80089f2:	4628      	mov	r0, r5
 80089f4:	f7f8 f976 	bl	8000ce4 <__aeabi_fsub>
 80089f8:	4979      	ldr	r1, [pc, #484]	; (8008be0 <__ieee754_rem_pio2f+0x2a0>)
 80089fa:	e7eb      	b.n	80089d4 <__ieee754_rem_pio2f+0x94>
 80089fc:	4a79      	ldr	r2, [pc, #484]	; (8008be4 <__ieee754_rem_pio2f+0x2a4>)
 80089fe:	4296      	cmp	r6, r2
 8008a00:	f300 8091 	bgt.w	8008b26 <__ieee754_rem_pio2f+0x1e6>
 8008a04:	f7ff fdd6 	bl	80085b4 <fabsf>
 8008a08:	4977      	ldr	r1, [pc, #476]	; (8008be8 <__ieee754_rem_pio2f+0x2a8>)
 8008a0a:	4607      	mov	r7, r0
 8008a0c:	f7f8 fa74 	bl	8000ef8 <__aeabi_fmul>
 8008a10:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
 8008a14:	f7f8 f968 	bl	8000ce8 <__addsf3>
 8008a18:	f7f8 fc4a 	bl	80012b0 <__aeabi_f2iz>
 8008a1c:	4605      	mov	r5, r0
 8008a1e:	f7f8 fa17 	bl	8000e50 <__aeabi_i2f>
 8008a22:	496b      	ldr	r1, [pc, #428]	; (8008bd0 <__ieee754_rem_pio2f+0x290>)
 8008a24:	4681      	mov	r9, r0
 8008a26:	f7f8 fa67 	bl	8000ef8 <__aeabi_fmul>
 8008a2a:	4601      	mov	r1, r0
 8008a2c:	4638      	mov	r0, r7
 8008a2e:	f7f8 f959 	bl	8000ce4 <__aeabi_fsub>
 8008a32:	4969      	ldr	r1, [pc, #420]	; (8008bd8 <__ieee754_rem_pio2f+0x298>)
 8008a34:	4680      	mov	r8, r0
 8008a36:	4648      	mov	r0, r9
 8008a38:	f7f8 fa5e 	bl	8000ef8 <__aeabi_fmul>
 8008a3c:	2d1f      	cmp	r5, #31
 8008a3e:	4607      	mov	r7, r0
 8008a40:	dc0c      	bgt.n	8008a5c <__ieee754_rem_pio2f+0x11c>
 8008a42:	4a6a      	ldr	r2, [pc, #424]	; (8008bec <__ieee754_rem_pio2f+0x2ac>)
 8008a44:	1e69      	subs	r1, r5, #1
 8008a46:	f026 03ff 	bic.w	r3, r6, #255	; 0xff
 8008a4a:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 8008a4e:	4293      	cmp	r3, r2
 8008a50:	d004      	beq.n	8008a5c <__ieee754_rem_pio2f+0x11c>
 8008a52:	4639      	mov	r1, r7
 8008a54:	4640      	mov	r0, r8
 8008a56:	f7f8 f945 	bl	8000ce4 <__aeabi_fsub>
 8008a5a:	e00b      	b.n	8008a74 <__ieee754_rem_pio2f+0x134>
 8008a5c:	4639      	mov	r1, r7
 8008a5e:	4640      	mov	r0, r8
 8008a60:	f7f8 f940 	bl	8000ce4 <__aeabi_fsub>
 8008a64:	f3c0 53c7 	ubfx	r3, r0, #23, #8
 8008a68:	ea4f 5be6 	mov.w	fp, r6, asr #23
 8008a6c:	ebc3 56d6 	rsb	r6, r3, r6, lsr #23
 8008a70:	2e08      	cmp	r6, #8
 8008a72:	dc01      	bgt.n	8008a78 <__ieee754_rem_pio2f+0x138>
 8008a74:	6020      	str	r0, [r4, #0]
 8008a76:	e026      	b.n	8008ac6 <__ieee754_rem_pio2f+0x186>
 8008a78:	4958      	ldr	r1, [pc, #352]	; (8008bdc <__ieee754_rem_pio2f+0x29c>)
 8008a7a:	4648      	mov	r0, r9
 8008a7c:	f7f8 fa3c 	bl	8000ef8 <__aeabi_fmul>
 8008a80:	4607      	mov	r7, r0
 8008a82:	4601      	mov	r1, r0
 8008a84:	4640      	mov	r0, r8
 8008a86:	f7f8 f92d 	bl	8000ce4 <__aeabi_fsub>
 8008a8a:	4601      	mov	r1, r0
 8008a8c:	4606      	mov	r6, r0
 8008a8e:	4640      	mov	r0, r8
 8008a90:	f7f8 f928 	bl	8000ce4 <__aeabi_fsub>
 8008a94:	4639      	mov	r1, r7
 8008a96:	f7f8 f925 	bl	8000ce4 <__aeabi_fsub>
 8008a9a:	4951      	ldr	r1, [pc, #324]	; (8008be0 <__ieee754_rem_pio2f+0x2a0>)
 8008a9c:	4607      	mov	r7, r0
 8008a9e:	4648      	mov	r0, r9
 8008aa0:	f7f8 fa2a 	bl	8000ef8 <__aeabi_fmul>
 8008aa4:	4639      	mov	r1, r7
 8008aa6:	f7f8 f91d 	bl	8000ce4 <__aeabi_fsub>
 8008aaa:	4601      	mov	r1, r0
 8008aac:	4607      	mov	r7, r0
 8008aae:	4630      	mov	r0, r6
 8008ab0:	f7f8 f918 	bl	8000ce4 <__aeabi_fsub>
 8008ab4:	f3c0 53c7 	ubfx	r3, r0, #23, #8
 8008ab8:	ebab 0b03 	sub.w	fp, fp, r3
 8008abc:	f1bb 0f19 	cmp.w	fp, #25
 8008ac0:	dc16      	bgt.n	8008af0 <__ieee754_rem_pio2f+0x1b0>
 8008ac2:	6020      	str	r0, [r4, #0]
 8008ac4:	46b0      	mov	r8, r6
 8008ac6:	6826      	ldr	r6, [r4, #0]
 8008ac8:	4640      	mov	r0, r8
 8008aca:	4631      	mov	r1, r6
 8008acc:	f7f8 f90a 	bl	8000ce4 <__aeabi_fsub>
 8008ad0:	4639      	mov	r1, r7
 8008ad2:	f7f8 f907 	bl	8000ce4 <__aeabi_fsub>
 8008ad6:	f1ba 0f00 	cmp.w	sl, #0
 8008ada:	6060      	str	r0, [r4, #4]
 8008adc:	f6bf af5a 	bge.w	8008994 <__ieee754_rem_pio2f+0x54>
 8008ae0:	f106 4600 	add.w	r6, r6, #2147483648	; 0x80000000
 8008ae4:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 8008ae8:	6026      	str	r6, [r4, #0]
 8008aea:	6060      	str	r0, [r4, #4]
 8008aec:	426d      	negs	r5, r5
 8008aee:	e751      	b.n	8008994 <__ieee754_rem_pio2f+0x54>
 8008af0:	493f      	ldr	r1, [pc, #252]	; (8008bf0 <__ieee754_rem_pio2f+0x2b0>)
 8008af2:	4648      	mov	r0, r9
 8008af4:	f7f8 fa00 	bl	8000ef8 <__aeabi_fmul>
 8008af8:	4607      	mov	r7, r0
 8008afa:	4601      	mov	r1, r0
 8008afc:	4630      	mov	r0, r6
 8008afe:	f7f8 f8f1 	bl	8000ce4 <__aeabi_fsub>
 8008b02:	4601      	mov	r1, r0
 8008b04:	4680      	mov	r8, r0
 8008b06:	4630      	mov	r0, r6
 8008b08:	f7f8 f8ec 	bl	8000ce4 <__aeabi_fsub>
 8008b0c:	4639      	mov	r1, r7
 8008b0e:	f7f8 f8e9 	bl	8000ce4 <__aeabi_fsub>
 8008b12:	4938      	ldr	r1, [pc, #224]	; (8008bf4 <__ieee754_rem_pio2f+0x2b4>)
 8008b14:	4606      	mov	r6, r0
 8008b16:	4648      	mov	r0, r9
 8008b18:	f7f8 f9ee 	bl	8000ef8 <__aeabi_fmul>
 8008b1c:	4631      	mov	r1, r6
 8008b1e:	f7f8 f8e1 	bl	8000ce4 <__aeabi_fsub>
 8008b22:	4607      	mov	r7, r0
 8008b24:	e795      	b.n	8008a52 <__ieee754_rem_pio2f+0x112>
 8008b26:	f1b6 4fff 	cmp.w	r6, #2139095040	; 0x7f800000
 8008b2a:	db05      	blt.n	8008b38 <__ieee754_rem_pio2f+0x1f8>
 8008b2c:	4601      	mov	r1, r0
 8008b2e:	f7f8 f8d9 	bl	8000ce4 <__aeabi_fsub>
 8008b32:	6060      	str	r0, [r4, #4]
 8008b34:	6020      	str	r0, [r4, #0]
 8008b36:	e710      	b.n	800895a <__ieee754_rem_pio2f+0x1a>
 8008b38:	15f7      	asrs	r7, r6, #23
 8008b3a:	3f86      	subs	r7, #134	; 0x86
 8008b3c:	eba6 56c7 	sub.w	r6, r6, r7, lsl #23
 8008b40:	4630      	mov	r0, r6
 8008b42:	f7f8 fbb5 	bl	80012b0 <__aeabi_f2iz>
 8008b46:	f7f8 f983 	bl	8000e50 <__aeabi_i2f>
 8008b4a:	4601      	mov	r1, r0
 8008b4c:	9003      	str	r0, [sp, #12]
 8008b4e:	4630      	mov	r0, r6
 8008b50:	f7f8 f8c8 	bl	8000ce4 <__aeabi_fsub>
 8008b54:	f04f 4187 	mov.w	r1, #1132462080	; 0x43800000
 8008b58:	f7f8 f9ce 	bl	8000ef8 <__aeabi_fmul>
 8008b5c:	4606      	mov	r6, r0
 8008b5e:	f7f8 fba7 	bl	80012b0 <__aeabi_f2iz>
 8008b62:	f7f8 f975 	bl	8000e50 <__aeabi_i2f>
 8008b66:	4601      	mov	r1, r0
 8008b68:	9004      	str	r0, [sp, #16]
 8008b6a:	4605      	mov	r5, r0
 8008b6c:	4630      	mov	r0, r6
 8008b6e:	f7f8 f8b9 	bl	8000ce4 <__aeabi_fsub>
 8008b72:	f04f 4187 	mov.w	r1, #1132462080	; 0x43800000
 8008b76:	f7f8 f9bf 	bl	8000ef8 <__aeabi_fmul>
 8008b7a:	2100      	movs	r1, #0
 8008b7c:	9005      	str	r0, [sp, #20]
 8008b7e:	f7f8 fb4f 	bl	8001220 <__aeabi_fcmpeq>
 8008b82:	b1f0      	cbz	r0, 8008bc2 <__ieee754_rem_pio2f+0x282>
 8008b84:	2100      	movs	r1, #0
 8008b86:	4628      	mov	r0, r5
 8008b88:	f7f8 fb4a 	bl	8001220 <__aeabi_fcmpeq>
 8008b8c:	2800      	cmp	r0, #0
 8008b8e:	bf14      	ite	ne
 8008b90:	2301      	movne	r3, #1
 8008b92:	2302      	moveq	r3, #2
 8008b94:	4a18      	ldr	r2, [pc, #96]	; (8008bf8 <__ieee754_rem_pio2f+0x2b8>)
 8008b96:	9201      	str	r2, [sp, #4]
 8008b98:	2202      	movs	r2, #2
 8008b9a:	9200      	str	r2, [sp, #0]
 8008b9c:	4621      	mov	r1, r4
 8008b9e:	463a      	mov	r2, r7
 8008ba0:	a803      	add	r0, sp, #12
 8008ba2:	f000 f8fb 	bl	8008d9c <__kernel_rem_pio2f>
 8008ba6:	f1ba 0f00 	cmp.w	sl, #0
 8008baa:	4605      	mov	r5, r0
 8008bac:	f6bf aef2 	bge.w	8008994 <__ieee754_rem_pio2f+0x54>
 8008bb0:	6823      	ldr	r3, [r4, #0]
 8008bb2:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8008bb6:	6023      	str	r3, [r4, #0]
 8008bb8:	6863      	ldr	r3, [r4, #4]
 8008bba:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8008bbe:	6063      	str	r3, [r4, #4]
 8008bc0:	e794      	b.n	8008aec <__ieee754_rem_pio2f+0x1ac>
 8008bc2:	2303      	movs	r3, #3
 8008bc4:	e7e6      	b.n	8008b94 <__ieee754_rem_pio2f+0x254>
 8008bc6:	bf00      	nop
 8008bc8:	3f490fd8 	.word	0x3f490fd8
 8008bcc:	4016cbe3 	.word	0x4016cbe3
 8008bd0:	3fc90f80 	.word	0x3fc90f80
 8008bd4:	3fc90fd0 	.word	0x3fc90fd0
 8008bd8:	37354443 	.word	0x37354443
 8008bdc:	37354400 	.word	0x37354400
 8008be0:	2e85a308 	.word	0x2e85a308
 8008be4:	43490f80 	.word	0x43490f80
 8008be8:	3f22f984 	.word	0x3f22f984
 8008bec:	0800a488 	.word	0x0800a488
 8008bf0:	2e85a300 	.word	0x2e85a300
 8008bf4:	248d3132 	.word	0x248d3132
 8008bf8:	0800a508 	.word	0x0800a508

08008bfc <__ieee754_sqrtf>:
 8008bfc:	f020 4200 	bic.w	r2, r0, #2147483648	; 0x80000000
 8008c00:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 8008c04:	b570      	push	{r4, r5, r6, lr}
 8008c06:	4603      	mov	r3, r0
 8008c08:	4604      	mov	r4, r0
 8008c0a:	d309      	bcc.n	8008c20 <__ieee754_sqrtf+0x24>
 8008c0c:	4601      	mov	r1, r0
 8008c0e:	f7f8 f973 	bl	8000ef8 <__aeabi_fmul>
 8008c12:	4601      	mov	r1, r0
 8008c14:	4620      	mov	r0, r4
 8008c16:	f7f8 f867 	bl	8000ce8 <__addsf3>
 8008c1a:	4604      	mov	r4, r0
 8008c1c:	4620      	mov	r0, r4
 8008c1e:	bd70      	pop	{r4, r5, r6, pc}
 8008c20:	2a00      	cmp	r2, #0
 8008c22:	d0fb      	beq.n	8008c1c <__ieee754_sqrtf+0x20>
 8008c24:	2800      	cmp	r0, #0
 8008c26:	da06      	bge.n	8008c36 <__ieee754_sqrtf+0x3a>
 8008c28:	4601      	mov	r1, r0
 8008c2a:	f7f8 f85b 	bl	8000ce4 <__aeabi_fsub>
 8008c2e:	4601      	mov	r1, r0
 8008c30:	f7f8 fa16 	bl	8001060 <__aeabi_fdiv>
 8008c34:	e7f1      	b.n	8008c1a <__ieee754_sqrtf+0x1e>
 8008c36:	f010 42ff 	ands.w	r2, r0, #2139095040	; 0x7f800000
 8008c3a:	ea4f 51e0 	mov.w	r1, r0, asr #23
 8008c3e:	d027      	beq.n	8008c90 <__ieee754_sqrtf+0x94>
 8008c40:	f3c3 0216 	ubfx	r2, r3, #0, #23
 8008c44:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8008c48:	07cb      	lsls	r3, r1, #31
 8008c4a:	f1a1 007f 	sub.w	r0, r1, #127	; 0x7f
 8008c4e:	bf58      	it	pl
 8008c50:	0052      	lslpl	r2, r2, #1
 8008c52:	2300      	movs	r3, #0
 8008c54:	1040      	asrs	r0, r0, #1
 8008c56:	0052      	lsls	r2, r2, #1
 8008c58:	2419      	movs	r4, #25
 8008c5a:	461e      	mov	r6, r3
 8008c5c:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 8008c60:	1875      	adds	r5, r6, r1
 8008c62:	4295      	cmp	r5, r2
 8008c64:	bfde      	ittt	le
 8008c66:	186e      	addle	r6, r5, r1
 8008c68:	1b52      	suble	r2, r2, r5
 8008c6a:	185b      	addle	r3, r3, r1
 8008c6c:	3c01      	subs	r4, #1
 8008c6e:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8008c72:	ea4f 0151 	mov.w	r1, r1, lsr #1
 8008c76:	d1f3      	bne.n	8008c60 <__ieee754_sqrtf+0x64>
 8008c78:	b112      	cbz	r2, 8008c80 <__ieee754_sqrtf+0x84>
 8008c7a:	3301      	adds	r3, #1
 8008c7c:	f023 0301 	bic.w	r3, r3, #1
 8008c80:	105c      	asrs	r4, r3, #1
 8008c82:	f104 547c 	add.w	r4, r4, #1056964608	; 0x3f000000
 8008c86:	eb04 54c0 	add.w	r4, r4, r0, lsl #23
 8008c8a:	e7c7      	b.n	8008c1c <__ieee754_sqrtf+0x20>
 8008c8c:	005b      	lsls	r3, r3, #1
 8008c8e:	3201      	adds	r2, #1
 8008c90:	0218      	lsls	r0, r3, #8
 8008c92:	d5fb      	bpl.n	8008c8c <__ieee754_sqrtf+0x90>
 8008c94:	3a01      	subs	r2, #1
 8008c96:	1a89      	subs	r1, r1, r2
 8008c98:	e7d2      	b.n	8008c40 <__ieee754_sqrtf+0x44>
	...

08008c9c <__kernel_cosf>:
 8008c9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008ca0:	f020 4400 	bic.w	r4, r0, #2147483648	; 0x80000000
 8008ca4:	f1b4 5f48 	cmp.w	r4, #838860800	; 0x32000000
 8008ca8:	4606      	mov	r6, r0
 8008caa:	4688      	mov	r8, r1
 8008cac:	da03      	bge.n	8008cb6 <__kernel_cosf+0x1a>
 8008cae:	f7f8 faff 	bl	80012b0 <__aeabi_f2iz>
 8008cb2:	2800      	cmp	r0, #0
 8008cb4:	d05c      	beq.n	8008d70 <__kernel_cosf+0xd4>
 8008cb6:	4631      	mov	r1, r6
 8008cb8:	4630      	mov	r0, r6
 8008cba:	f7f8 f91d 	bl	8000ef8 <__aeabi_fmul>
 8008cbe:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
 8008cc2:	4605      	mov	r5, r0
 8008cc4:	f7f8 f918 	bl	8000ef8 <__aeabi_fmul>
 8008cc8:	492b      	ldr	r1, [pc, #172]	; (8008d78 <__kernel_cosf+0xdc>)
 8008cca:	4607      	mov	r7, r0
 8008ccc:	4628      	mov	r0, r5
 8008cce:	f7f8 f913 	bl	8000ef8 <__aeabi_fmul>
 8008cd2:	492a      	ldr	r1, [pc, #168]	; (8008d7c <__kernel_cosf+0xe0>)
 8008cd4:	f7f8 f808 	bl	8000ce8 <__addsf3>
 8008cd8:	4629      	mov	r1, r5
 8008cda:	f7f8 f90d 	bl	8000ef8 <__aeabi_fmul>
 8008cde:	4928      	ldr	r1, [pc, #160]	; (8008d80 <__kernel_cosf+0xe4>)
 8008ce0:	f7f8 f800 	bl	8000ce4 <__aeabi_fsub>
 8008ce4:	4629      	mov	r1, r5
 8008ce6:	f7f8 f907 	bl	8000ef8 <__aeabi_fmul>
 8008cea:	4926      	ldr	r1, [pc, #152]	; (8008d84 <__kernel_cosf+0xe8>)
 8008cec:	f7f7 fffc 	bl	8000ce8 <__addsf3>
 8008cf0:	4629      	mov	r1, r5
 8008cf2:	f7f8 f901 	bl	8000ef8 <__aeabi_fmul>
 8008cf6:	4924      	ldr	r1, [pc, #144]	; (8008d88 <__kernel_cosf+0xec>)
 8008cf8:	f7f7 fff4 	bl	8000ce4 <__aeabi_fsub>
 8008cfc:	4629      	mov	r1, r5
 8008cfe:	f7f8 f8fb 	bl	8000ef8 <__aeabi_fmul>
 8008d02:	4922      	ldr	r1, [pc, #136]	; (8008d8c <__kernel_cosf+0xf0>)
 8008d04:	f7f7 fff0 	bl	8000ce8 <__addsf3>
 8008d08:	4629      	mov	r1, r5
 8008d0a:	f7f8 f8f5 	bl	8000ef8 <__aeabi_fmul>
 8008d0e:	4629      	mov	r1, r5
 8008d10:	f7f8 f8f2 	bl	8000ef8 <__aeabi_fmul>
 8008d14:	4641      	mov	r1, r8
 8008d16:	4605      	mov	r5, r0
 8008d18:	4630      	mov	r0, r6
 8008d1a:	f7f8 f8ed 	bl	8000ef8 <__aeabi_fmul>
 8008d1e:	4601      	mov	r1, r0
 8008d20:	4628      	mov	r0, r5
 8008d22:	f7f7 ffdf 	bl	8000ce4 <__aeabi_fsub>
 8008d26:	4b1a      	ldr	r3, [pc, #104]	; (8008d90 <__kernel_cosf+0xf4>)
 8008d28:	429c      	cmp	r4, r3
 8008d2a:	4605      	mov	r5, r0
 8008d2c:	dc0a      	bgt.n	8008d44 <__kernel_cosf+0xa8>
 8008d2e:	4601      	mov	r1, r0
 8008d30:	4638      	mov	r0, r7
 8008d32:	f7f7 ffd7 	bl	8000ce4 <__aeabi_fsub>
 8008d36:	4601      	mov	r1, r0
 8008d38:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 8008d3c:	f7f7 ffd2 	bl	8000ce4 <__aeabi_fsub>
 8008d40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008d44:	4b13      	ldr	r3, [pc, #76]	; (8008d94 <__kernel_cosf+0xf8>)
 8008d46:	429c      	cmp	r4, r3
 8008d48:	bfcc      	ite	gt
 8008d4a:	4c13      	ldrgt	r4, [pc, #76]	; (8008d98 <__kernel_cosf+0xfc>)
 8008d4c:	f104 447f 	addle.w	r4, r4, #4278190080	; 0xff000000
 8008d50:	4621      	mov	r1, r4
 8008d52:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 8008d56:	f7f7 ffc5 	bl	8000ce4 <__aeabi_fsub>
 8008d5a:	4621      	mov	r1, r4
 8008d5c:	4606      	mov	r6, r0
 8008d5e:	4638      	mov	r0, r7
 8008d60:	f7f7 ffc0 	bl	8000ce4 <__aeabi_fsub>
 8008d64:	4629      	mov	r1, r5
 8008d66:	f7f7 ffbd 	bl	8000ce4 <__aeabi_fsub>
 8008d6a:	4601      	mov	r1, r0
 8008d6c:	4630      	mov	r0, r6
 8008d6e:	e7e5      	b.n	8008d3c <__kernel_cosf+0xa0>
 8008d70:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 8008d74:	e7e4      	b.n	8008d40 <__kernel_cosf+0xa4>
 8008d76:	bf00      	nop
 8008d78:	ad47d74e 	.word	0xad47d74e
 8008d7c:	310f74f6 	.word	0x310f74f6
 8008d80:	3493f27c 	.word	0x3493f27c
 8008d84:	37d00d01 	.word	0x37d00d01
 8008d88:	3ab60b61 	.word	0x3ab60b61
 8008d8c:	3d2aaaab 	.word	0x3d2aaaab
 8008d90:	3e999999 	.word	0x3e999999
 8008d94:	3f480000 	.word	0x3f480000
 8008d98:	3e900000 	.word	0x3e900000

08008d9c <__kernel_rem_pio2f>:
 8008d9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008da0:	b0db      	sub	sp, #364	; 0x16c
 8008da2:	9202      	str	r2, [sp, #8]
 8008da4:	9304      	str	r3, [sp, #16]
 8008da6:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8008da8:	4bc5      	ldr	r3, [pc, #788]	; (80090c0 <__kernel_rem_pio2f+0x324>)
 8008daa:	9005      	str	r0, [sp, #20]
 8008dac:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8008db0:	9301      	str	r3, [sp, #4]
 8008db2:	9b04      	ldr	r3, [sp, #16]
 8008db4:	9100      	str	r1, [sp, #0]
 8008db6:	3b01      	subs	r3, #1
 8008db8:	9303      	str	r3, [sp, #12]
 8008dba:	9b02      	ldr	r3, [sp, #8]
 8008dbc:	1d1a      	adds	r2, r3, #4
 8008dbe:	f2c0 809b 	blt.w	8008ef8 <__kernel_rem_pio2f+0x15c>
 8008dc2:	1edc      	subs	r4, r3, #3
 8008dc4:	bf48      	it	mi
 8008dc6:	1d1c      	addmi	r4, r3, #4
 8008dc8:	10e4      	asrs	r4, r4, #3
 8008dca:	1c67      	adds	r7, r4, #1
 8008dcc:	00fb      	lsls	r3, r7, #3
 8008dce:	9306      	str	r3, [sp, #24]
 8008dd0:	9b02      	ldr	r3, [sp, #8]
 8008dd2:	9a03      	ldr	r2, [sp, #12]
 8008dd4:	eba3 07c7 	sub.w	r7, r3, r7, lsl #3
 8008dd8:	9b01      	ldr	r3, [sp, #4]
 8008dda:	eb03 0802 	add.w	r8, r3, r2
 8008dde:	9b65      	ldr	r3, [sp, #404]	; 0x194
 8008de0:	1aa6      	subs	r6, r4, r2
 8008de2:	eb03 0986 	add.w	r9, r3, r6, lsl #2
 8008de6:	2500      	movs	r5, #0
 8008de8:	f04f 0a00 	mov.w	sl, #0
 8008dec:	f10d 0b78 	add.w	fp, sp, #120	; 0x78
 8008df0:	4545      	cmp	r5, r8
 8008df2:	f340 8083 	ble.w	8008efc <__kernel_rem_pio2f+0x160>
 8008df6:	9b04      	ldr	r3, [sp, #16]
 8008df8:	aa1e      	add	r2, sp, #120	; 0x78
 8008dfa:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8008dfe:	f04f 0800 	mov.w	r8, #0
 8008e02:	f04f 0b00 	mov.w	fp, #0
 8008e06:	ab46      	add	r3, sp, #280	; 0x118
 8008e08:	9a01      	ldr	r2, [sp, #4]
 8008e0a:	4590      	cmp	r8, r2
 8008e0c:	f340 809c 	ble.w	8008f48 <__kernel_rem_pio2f+0x1ac>
 8008e10:	4613      	mov	r3, r2
 8008e12:	aa0a      	add	r2, sp, #40	; 0x28
 8008e14:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8008e18:	9308      	str	r3, [sp, #32]
 8008e1a:	9b65      	ldr	r3, [sp, #404]	; 0x194
 8008e1c:	f8dd 8004 	ldr.w	r8, [sp, #4]
 8008e20:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8008e24:	9307      	str	r3, [sp, #28]
 8008e26:	ab5a      	add	r3, sp, #360	; 0x168
 8008e28:	eb03 0388 	add.w	r3, r3, r8, lsl #2
 8008e2c:	ad0a      	add	r5, sp, #40	; 0x28
 8008e2e:	f853 4c50 	ldr.w	r4, [r3, #-80]
 8008e32:	462e      	mov	r6, r5
 8008e34:	46c3      	mov	fp, r8
 8008e36:	f04f 4987 	mov.w	r9, #1132462080	; 0x43800000
 8008e3a:	f50d 7a8c 	add.w	sl, sp, #280	; 0x118
 8008e3e:	f1bb 0f00 	cmp.w	fp, #0
 8008e42:	f300 8086 	bgt.w	8008f52 <__kernel_rem_pio2f+0x1b6>
 8008e46:	4639      	mov	r1, r7
 8008e48:	4620      	mov	r0, r4
 8008e4a:	f000 fc43 	bl	80096d4 <scalbnf>
 8008e4e:	f04f 5178 	mov.w	r1, #1040187392	; 0x3e000000
 8008e52:	4604      	mov	r4, r0
 8008e54:	f7f8 f850 	bl	8000ef8 <__aeabi_fmul>
 8008e58:	f000 fbfa 	bl	8009650 <floorf>
 8008e5c:	f04f 4182 	mov.w	r1, #1090519040	; 0x41000000
 8008e60:	f7f8 f84a 	bl	8000ef8 <__aeabi_fmul>
 8008e64:	4601      	mov	r1, r0
 8008e66:	4620      	mov	r0, r4
 8008e68:	f7f7 ff3c 	bl	8000ce4 <__aeabi_fsub>
 8008e6c:	4604      	mov	r4, r0
 8008e6e:	f7f8 fa1f 	bl	80012b0 <__aeabi_f2iz>
 8008e72:	4606      	mov	r6, r0
 8008e74:	f7f7 ffec 	bl	8000e50 <__aeabi_i2f>
 8008e78:	4601      	mov	r1, r0
 8008e7a:	4620      	mov	r0, r4
 8008e7c:	f7f7 ff32 	bl	8000ce4 <__aeabi_fsub>
 8008e80:	2f00      	cmp	r7, #0
 8008e82:	4681      	mov	r9, r0
 8008e84:	f340 8084 	ble.w	8008f90 <__kernel_rem_pio2f+0x1f4>
 8008e88:	f108 32ff 	add.w	r2, r8, #4294967295
 8008e8c:	ab0a      	add	r3, sp, #40	; 0x28
 8008e8e:	f1c7 0108 	rsb	r1, r7, #8
 8008e92:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8008e96:	fa44 f301 	asr.w	r3, r4, r1
 8008e9a:	441e      	add	r6, r3
 8008e9c:	408b      	lsls	r3, r1
 8008e9e:	1ae4      	subs	r4, r4, r3
 8008ea0:	ab0a      	add	r3, sp, #40	; 0x28
 8008ea2:	f1c7 0007 	rsb	r0, r7, #7
 8008ea6:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8008eaa:	4104      	asrs	r4, r0
 8008eac:	2c00      	cmp	r4, #0
 8008eae:	dd7e      	ble.n	8008fae <__kernel_rem_pio2f+0x212>
 8008eb0:	2200      	movs	r2, #0
 8008eb2:	3601      	adds	r6, #1
 8008eb4:	4692      	mov	sl, r2
 8008eb6:	4590      	cmp	r8, r2
 8008eb8:	f300 80b0 	bgt.w	800901c <__kernel_rem_pio2f+0x280>
 8008ebc:	2f00      	cmp	r7, #0
 8008ebe:	dd05      	ble.n	8008ecc <__kernel_rem_pio2f+0x130>
 8008ec0:	2f01      	cmp	r7, #1
 8008ec2:	f000 80bd 	beq.w	8009040 <__kernel_rem_pio2f+0x2a4>
 8008ec6:	2f02      	cmp	r7, #2
 8008ec8:	f000 80c5 	beq.w	8009056 <__kernel_rem_pio2f+0x2ba>
 8008ecc:	2c02      	cmp	r4, #2
 8008ece:	d16e      	bne.n	8008fae <__kernel_rem_pio2f+0x212>
 8008ed0:	4649      	mov	r1, r9
 8008ed2:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 8008ed6:	f7f7 ff05 	bl	8000ce4 <__aeabi_fsub>
 8008eda:	4681      	mov	r9, r0
 8008edc:	f1ba 0f00 	cmp.w	sl, #0
 8008ee0:	d065      	beq.n	8008fae <__kernel_rem_pio2f+0x212>
 8008ee2:	4639      	mov	r1, r7
 8008ee4:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 8008ee8:	f000 fbf4 	bl	80096d4 <scalbnf>
 8008eec:	4601      	mov	r1, r0
 8008eee:	4648      	mov	r0, r9
 8008ef0:	f7f7 fef8 	bl	8000ce4 <__aeabi_fsub>
 8008ef4:	4681      	mov	r9, r0
 8008ef6:	e05a      	b.n	8008fae <__kernel_rem_pio2f+0x212>
 8008ef8:	2400      	movs	r4, #0
 8008efa:	e766      	b.n	8008dca <__kernel_rem_pio2f+0x2e>
 8008efc:	42ee      	cmn	r6, r5
 8008efe:	d407      	bmi.n	8008f10 <__kernel_rem_pio2f+0x174>
 8008f00:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 8008f04:	f7f7 ffa4 	bl	8000e50 <__aeabi_i2f>
 8008f08:	f84b 0025 	str.w	r0, [fp, r5, lsl #2]
 8008f0c:	3501      	adds	r5, #1
 8008f0e:	e76f      	b.n	8008df0 <__kernel_rem_pio2f+0x54>
 8008f10:	4650      	mov	r0, sl
 8008f12:	e7f9      	b.n	8008f08 <__kernel_rem_pio2f+0x16c>
 8008f14:	9b05      	ldr	r3, [sp, #20]
 8008f16:	f8da 1000 	ldr.w	r1, [sl]
 8008f1a:	f853 0029 	ldr.w	r0, [r3, r9, lsl #2]
 8008f1e:	f7f7 ffeb 	bl	8000ef8 <__aeabi_fmul>
 8008f22:	4601      	mov	r1, r0
 8008f24:	4630      	mov	r0, r6
 8008f26:	f7f7 fedf 	bl	8000ce8 <__addsf3>
 8008f2a:	f109 0901 	add.w	r9, r9, #1
 8008f2e:	4606      	mov	r6, r0
 8008f30:	ab46      	add	r3, sp, #280	; 0x118
 8008f32:	9a03      	ldr	r2, [sp, #12]
 8008f34:	4591      	cmp	r9, r2
 8008f36:	f1aa 0a04 	sub.w	sl, sl, #4
 8008f3a:	ddeb      	ble.n	8008f14 <__kernel_rem_pio2f+0x178>
 8008f3c:	f843 6028 	str.w	r6, [r3, r8, lsl #2]
 8008f40:	3504      	adds	r5, #4
 8008f42:	f108 0801 	add.w	r8, r8, #1
 8008f46:	e75f      	b.n	8008e08 <__kernel_rem_pio2f+0x6c>
 8008f48:	46aa      	mov	sl, r5
 8008f4a:	465e      	mov	r6, fp
 8008f4c:	f04f 0900 	mov.w	r9, #0
 8008f50:	e7ef      	b.n	8008f32 <__kernel_rem_pio2f+0x196>
 8008f52:	f04f 516e 	mov.w	r1, #998244352	; 0x3b800000
 8008f56:	4620      	mov	r0, r4
 8008f58:	f7f7 ffce 	bl	8000ef8 <__aeabi_fmul>
 8008f5c:	f7f8 f9a8 	bl	80012b0 <__aeabi_f2iz>
 8008f60:	f7f7 ff76 	bl	8000e50 <__aeabi_i2f>
 8008f64:	4649      	mov	r1, r9
 8008f66:	9009      	str	r0, [sp, #36]	; 0x24
 8008f68:	f7f7 ffc6 	bl	8000ef8 <__aeabi_fmul>
 8008f6c:	4601      	mov	r1, r0
 8008f6e:	4620      	mov	r0, r4
 8008f70:	f7f7 feb8 	bl	8000ce4 <__aeabi_fsub>
 8008f74:	f7f8 f99c 	bl	80012b0 <__aeabi_f2iz>
 8008f78:	f10b 3bff 	add.w	fp, fp, #4294967295
 8008f7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008f7e:	f846 0b04 	str.w	r0, [r6], #4
 8008f82:	f85a 102b 	ldr.w	r1, [sl, fp, lsl #2]
 8008f86:	4618      	mov	r0, r3
 8008f88:	f7f7 feae 	bl	8000ce8 <__addsf3>
 8008f8c:	4604      	mov	r4, r0
 8008f8e:	e756      	b.n	8008e3e <__kernel_rem_pio2f+0xa2>
 8008f90:	d106      	bne.n	8008fa0 <__kernel_rem_pio2f+0x204>
 8008f92:	f108 33ff 	add.w	r3, r8, #4294967295
 8008f96:	aa0a      	add	r2, sp, #40	; 0x28
 8008f98:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8008f9c:	1224      	asrs	r4, r4, #8
 8008f9e:	e785      	b.n	8008eac <__kernel_rem_pio2f+0x110>
 8008fa0:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
 8008fa4:	f7f8 f95a 	bl	800125c <__aeabi_fcmpge>
 8008fa8:	4604      	mov	r4, r0
 8008faa:	2800      	cmp	r0, #0
 8008fac:	d134      	bne.n	8009018 <__kernel_rem_pio2f+0x27c>
 8008fae:	2100      	movs	r1, #0
 8008fb0:	4648      	mov	r0, r9
 8008fb2:	f7f8 f935 	bl	8001220 <__aeabi_fcmpeq>
 8008fb6:	2800      	cmp	r0, #0
 8008fb8:	f000 809a 	beq.w	80090f0 <__kernel_rem_pio2f+0x354>
 8008fbc:	f108 35ff 	add.w	r5, r8, #4294967295
 8008fc0:	462b      	mov	r3, r5
 8008fc2:	2200      	movs	r2, #0
 8008fc4:	9901      	ldr	r1, [sp, #4]
 8008fc6:	428b      	cmp	r3, r1
 8008fc8:	da4d      	bge.n	8009066 <__kernel_rem_pio2f+0x2ca>
 8008fca:	2a00      	cmp	r2, #0
 8008fcc:	d07c      	beq.n	80090c8 <__kernel_rem_pio2f+0x32c>
 8008fce:	ab0a      	add	r3, sp, #40	; 0x28
 8008fd0:	3f08      	subs	r7, #8
 8008fd2:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8008fd6:	2b00      	cmp	r3, #0
 8008fd8:	f000 8088 	beq.w	80090ec <__kernel_rem_pio2f+0x350>
 8008fdc:	4639      	mov	r1, r7
 8008fde:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 8008fe2:	f000 fb77 	bl	80096d4 <scalbnf>
 8008fe6:	46aa      	mov	sl, r5
 8008fe8:	4681      	mov	r9, r0
 8008fea:	af46      	add	r7, sp, #280	; 0x118
 8008fec:	f04f 586e 	mov.w	r8, #998244352	; 0x3b800000
 8008ff0:	f1ba 0f00 	cmp.w	sl, #0
 8008ff4:	f280 80b1 	bge.w	800915a <__kernel_rem_pio2f+0x3be>
 8008ff8:	46a9      	mov	r9, r5
 8008ffa:	f04f 0a00 	mov.w	sl, #0
 8008ffe:	2200      	movs	r2, #0
 8009000:	f1b9 0f00 	cmp.w	r9, #0
 8009004:	f2c0 80db 	blt.w	80091be <__kernel_rem_pio2f+0x422>
 8009008:	a946      	add	r1, sp, #280	; 0x118
 800900a:	4b2e      	ldr	r3, [pc, #184]	; (80090c4 <__kernel_rem_pio2f+0x328>)
 800900c:	eb01 0b89 	add.w	fp, r1, r9, lsl #2
 8009010:	4617      	mov	r7, r2
 8009012:	f04f 0800 	mov.w	r8, #0
 8009016:	e0c3      	b.n	80091a0 <__kernel_rem_pio2f+0x404>
 8009018:	2402      	movs	r4, #2
 800901a:	e749      	b.n	8008eb0 <__kernel_rem_pio2f+0x114>
 800901c:	682b      	ldr	r3, [r5, #0]
 800901e:	f1ba 0f00 	cmp.w	sl, #0
 8009022:	d108      	bne.n	8009036 <__kernel_rem_pio2f+0x29a>
 8009024:	b11b      	cbz	r3, 800902e <__kernel_rem_pio2f+0x292>
 8009026:	f5c3 7380 	rsb	r3, r3, #256	; 0x100
 800902a:	602b      	str	r3, [r5, #0]
 800902c:	2301      	movs	r3, #1
 800902e:	3201      	adds	r2, #1
 8009030:	3504      	adds	r5, #4
 8009032:	469a      	mov	sl, r3
 8009034:	e73f      	b.n	8008eb6 <__kernel_rem_pio2f+0x11a>
 8009036:	f1c3 03ff 	rsb	r3, r3, #255	; 0xff
 800903a:	602b      	str	r3, [r5, #0]
 800903c:	4653      	mov	r3, sl
 800903e:	e7f6      	b.n	800902e <__kernel_rem_pio2f+0x292>
 8009040:	f108 32ff 	add.w	r2, r8, #4294967295
 8009044:	ab0a      	add	r3, sp, #40	; 0x28
 8009046:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800904a:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800904e:	a90a      	add	r1, sp, #40	; 0x28
 8009050:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 8009054:	e73a      	b.n	8008ecc <__kernel_rem_pio2f+0x130>
 8009056:	f108 32ff 	add.w	r2, r8, #4294967295
 800905a:	ab0a      	add	r3, sp, #40	; 0x28
 800905c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8009060:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8009064:	e7f3      	b.n	800904e <__kernel_rem_pio2f+0x2b2>
 8009066:	a90a      	add	r1, sp, #40	; 0x28
 8009068:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 800906c:	3b01      	subs	r3, #1
 800906e:	430a      	orrs	r2, r1
 8009070:	e7a8      	b.n	8008fc4 <__kernel_rem_pio2f+0x228>
 8009072:	3301      	adds	r3, #1
 8009074:	f852 1d04 	ldr.w	r1, [r2, #-4]!
 8009078:	2900      	cmp	r1, #0
 800907a:	d0fa      	beq.n	8009072 <__kernel_rem_pio2f+0x2d6>
 800907c:	9a04      	ldr	r2, [sp, #16]
 800907e:	eb08 0402 	add.w	r4, r8, r2
 8009082:	aa1e      	add	r2, sp, #120	; 0x78
 8009084:	f108 0501 	add.w	r5, r8, #1
 8009088:	eb02 0484 	add.w	r4, r2, r4, lsl #2
 800908c:	4498      	add	r8, r3
 800908e:	f50d 798c 	add.w	r9, sp, #280	; 0x118
 8009092:	45a8      	cmp	r8, r5
 8009094:	f6ff aec7 	blt.w	8008e26 <__kernel_rem_pio2f+0x8a>
 8009098:	9b07      	ldr	r3, [sp, #28]
 800909a:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800909e:	f7f7 fed7 	bl	8000e50 <__aeabi_i2f>
 80090a2:	46a3      	mov	fp, r4
 80090a4:	f04f 0a00 	mov.w	sl, #0
 80090a8:	f84b 0b04 	str.w	r0, [fp], #4
 80090ac:	2600      	movs	r6, #0
 80090ae:	9b03      	ldr	r3, [sp, #12]
 80090b0:	459a      	cmp	sl, r3
 80090b2:	dd0c      	ble.n	80090ce <__kernel_rem_pio2f+0x332>
 80090b4:	f849 6025 	str.w	r6, [r9, r5, lsl #2]
 80090b8:	465c      	mov	r4, fp
 80090ba:	3501      	adds	r5, #1
 80090bc:	e7e9      	b.n	8009092 <__kernel_rem_pio2f+0x2f6>
 80090be:	bf00      	nop
 80090c0:	0800a84c 	.word	0x0800a84c
 80090c4:	0800a820 	.word	0x0800a820
 80090c8:	9a08      	ldr	r2, [sp, #32]
 80090ca:	2301      	movs	r3, #1
 80090cc:	e7d2      	b.n	8009074 <__kernel_rem_pio2f+0x2d8>
 80090ce:	9b05      	ldr	r3, [sp, #20]
 80090d0:	f854 0904 	ldr.w	r0, [r4], #-4
 80090d4:	f853 102a 	ldr.w	r1, [r3, sl, lsl #2]
 80090d8:	f7f7 ff0e 	bl	8000ef8 <__aeabi_fmul>
 80090dc:	4601      	mov	r1, r0
 80090de:	4630      	mov	r0, r6
 80090e0:	f7f7 fe02 	bl	8000ce8 <__addsf3>
 80090e4:	f10a 0a01 	add.w	sl, sl, #1
 80090e8:	4606      	mov	r6, r0
 80090ea:	e7e0      	b.n	80090ae <__kernel_rem_pio2f+0x312>
 80090ec:	3d01      	subs	r5, #1
 80090ee:	e76e      	b.n	8008fce <__kernel_rem_pio2f+0x232>
 80090f0:	9b06      	ldr	r3, [sp, #24]
 80090f2:	9a02      	ldr	r2, [sp, #8]
 80090f4:	4648      	mov	r0, r9
 80090f6:	1a99      	subs	r1, r3, r2
 80090f8:	f000 faec 	bl	80096d4 <scalbnf>
 80090fc:	f04f 4187 	mov.w	r1, #1132462080	; 0x43800000
 8009100:	4605      	mov	r5, r0
 8009102:	f7f8 f8ab 	bl	800125c <__aeabi_fcmpge>
 8009106:	b300      	cbz	r0, 800914a <__kernel_rem_pio2f+0x3ae>
 8009108:	f04f 516e 	mov.w	r1, #998244352	; 0x3b800000
 800910c:	4628      	mov	r0, r5
 800910e:	f7f7 fef3 	bl	8000ef8 <__aeabi_fmul>
 8009112:	f7f8 f8cd 	bl	80012b0 <__aeabi_f2iz>
 8009116:	f7f7 fe9b 	bl	8000e50 <__aeabi_i2f>
 800911a:	f04f 4187 	mov.w	r1, #1132462080	; 0x43800000
 800911e:	4681      	mov	r9, r0
 8009120:	f7f7 feea 	bl	8000ef8 <__aeabi_fmul>
 8009124:	4601      	mov	r1, r0
 8009126:	4628      	mov	r0, r5
 8009128:	f7f7 fddc 	bl	8000ce4 <__aeabi_fsub>
 800912c:	f7f8 f8c0 	bl	80012b0 <__aeabi_f2iz>
 8009130:	ab0a      	add	r3, sp, #40	; 0x28
 8009132:	f108 0501 	add.w	r5, r8, #1
 8009136:	f843 0028 	str.w	r0, [r3, r8, lsl #2]
 800913a:	4648      	mov	r0, r9
 800913c:	f7f8 f8b8 	bl	80012b0 <__aeabi_f2iz>
 8009140:	ab0a      	add	r3, sp, #40	; 0x28
 8009142:	3708      	adds	r7, #8
 8009144:	f843 0025 	str.w	r0, [r3, r5, lsl #2]
 8009148:	e748      	b.n	8008fdc <__kernel_rem_pio2f+0x240>
 800914a:	4628      	mov	r0, r5
 800914c:	f7f8 f8b0 	bl	80012b0 <__aeabi_f2iz>
 8009150:	ab0a      	add	r3, sp, #40	; 0x28
 8009152:	4645      	mov	r5, r8
 8009154:	f843 0028 	str.w	r0, [r3, r8, lsl #2]
 8009158:	e740      	b.n	8008fdc <__kernel_rem_pio2f+0x240>
 800915a:	ab0a      	add	r3, sp, #40	; 0x28
 800915c:	f853 002a 	ldr.w	r0, [r3, sl, lsl #2]
 8009160:	f7f7 fe76 	bl	8000e50 <__aeabi_i2f>
 8009164:	4649      	mov	r1, r9
 8009166:	f7f7 fec7 	bl	8000ef8 <__aeabi_fmul>
 800916a:	4641      	mov	r1, r8
 800916c:	f847 002a 	str.w	r0, [r7, sl, lsl #2]
 8009170:	4648      	mov	r0, r9
 8009172:	f7f7 fec1 	bl	8000ef8 <__aeabi_fmul>
 8009176:	f10a 3aff 	add.w	sl, sl, #4294967295
 800917a:	4681      	mov	r9, r0
 800917c:	e738      	b.n	8008ff0 <__kernel_rem_pio2f+0x254>
 800917e:	f853 0b04 	ldr.w	r0, [r3], #4
 8009182:	f85b 1b04 	ldr.w	r1, [fp], #4
 8009186:	9203      	str	r2, [sp, #12]
 8009188:	9302      	str	r3, [sp, #8]
 800918a:	f7f7 feb5 	bl	8000ef8 <__aeabi_fmul>
 800918e:	4601      	mov	r1, r0
 8009190:	4638      	mov	r0, r7
 8009192:	f7f7 fda9 	bl	8000ce8 <__addsf3>
 8009196:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 800919a:	4607      	mov	r7, r0
 800919c:	f108 0801 	add.w	r8, r8, #1
 80091a0:	9901      	ldr	r1, [sp, #4]
 80091a2:	4588      	cmp	r8, r1
 80091a4:	dc01      	bgt.n	80091aa <__kernel_rem_pio2f+0x40e>
 80091a6:	45c2      	cmp	sl, r8
 80091a8:	dae9      	bge.n	800917e <__kernel_rem_pio2f+0x3e2>
 80091aa:	ab5a      	add	r3, sp, #360	; 0x168
 80091ac:	eb03 038a 	add.w	r3, r3, sl, lsl #2
 80091b0:	f109 39ff 	add.w	r9, r9, #4294967295
 80091b4:	f843 7ca0 	str.w	r7, [r3, #-160]
 80091b8:	f10a 0a01 	add.w	sl, sl, #1
 80091bc:	e720      	b.n	8009000 <__kernel_rem_pio2f+0x264>
 80091be:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80091c0:	2b02      	cmp	r3, #2
 80091c2:	dc07      	bgt.n	80091d4 <__kernel_rem_pio2f+0x438>
 80091c4:	2b00      	cmp	r3, #0
 80091c6:	dc4d      	bgt.n	8009264 <__kernel_rem_pio2f+0x4c8>
 80091c8:	d02e      	beq.n	8009228 <__kernel_rem_pio2f+0x48c>
 80091ca:	f006 0007 	and.w	r0, r6, #7
 80091ce:	b05b      	add	sp, #364	; 0x16c
 80091d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80091d4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80091d6:	2b03      	cmp	r3, #3
 80091d8:	d1f7      	bne.n	80091ca <__kernel_rem_pio2f+0x42e>
 80091da:	f10d 0bc8 	add.w	fp, sp, #200	; 0xc8
 80091de:	eb0b 0785 	add.w	r7, fp, r5, lsl #2
 80091e2:	46b8      	mov	r8, r7
 80091e4:	46aa      	mov	sl, r5
 80091e6:	f1ba 0f00 	cmp.w	sl, #0
 80091ea:	dc48      	bgt.n	800927e <__kernel_rem_pio2f+0x4e2>
 80091ec:	46a9      	mov	r9, r5
 80091ee:	f1b9 0f01 	cmp.w	r9, #1
 80091f2:	dc5f      	bgt.n	80092b4 <__kernel_rem_pio2f+0x518>
 80091f4:	2000      	movs	r0, #0
 80091f6:	2d01      	cmp	r5, #1
 80091f8:	dc75      	bgt.n	80092e6 <__kernel_rem_pio2f+0x54a>
 80091fa:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 80091fc:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80091fe:	2c00      	cmp	r4, #0
 8009200:	d177      	bne.n	80092f2 <__kernel_rem_pio2f+0x556>
 8009202:	9900      	ldr	r1, [sp, #0]
 8009204:	600a      	str	r2, [r1, #0]
 8009206:	604b      	str	r3, [r1, #4]
 8009208:	460a      	mov	r2, r1
 800920a:	6090      	str	r0, [r2, #8]
 800920c:	e7dd      	b.n	80091ca <__kernel_rem_pio2f+0x42e>
 800920e:	f857 1025 	ldr.w	r1, [r7, r5, lsl #2]
 8009212:	f7f7 fd69 	bl	8000ce8 <__addsf3>
 8009216:	3d01      	subs	r5, #1
 8009218:	2d00      	cmp	r5, #0
 800921a:	daf8      	bge.n	800920e <__kernel_rem_pio2f+0x472>
 800921c:	b10c      	cbz	r4, 8009222 <__kernel_rem_pio2f+0x486>
 800921e:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 8009222:	9b00      	ldr	r3, [sp, #0]
 8009224:	6018      	str	r0, [r3, #0]
 8009226:	e7d0      	b.n	80091ca <__kernel_rem_pio2f+0x42e>
 8009228:	2000      	movs	r0, #0
 800922a:	af32      	add	r7, sp, #200	; 0xc8
 800922c:	e7f4      	b.n	8009218 <__kernel_rem_pio2f+0x47c>
 800922e:	f858 1027 	ldr.w	r1, [r8, r7, lsl #2]
 8009232:	f7f7 fd59 	bl	8000ce8 <__addsf3>
 8009236:	3f01      	subs	r7, #1
 8009238:	2f00      	cmp	r7, #0
 800923a:	daf8      	bge.n	800922e <__kernel_rem_pio2f+0x492>
 800923c:	b1bc      	cbz	r4, 800926e <__kernel_rem_pio2f+0x4d2>
 800923e:	f100 4300 	add.w	r3, r0, #2147483648	; 0x80000000
 8009242:	9a00      	ldr	r2, [sp, #0]
 8009244:	4601      	mov	r1, r0
 8009246:	6013      	str	r3, [r2, #0]
 8009248:	9832      	ldr	r0, [sp, #200]	; 0xc8
 800924a:	f7f7 fd4b 	bl	8000ce4 <__aeabi_fsub>
 800924e:	2701      	movs	r7, #1
 8009250:	f10d 08c8 	add.w	r8, sp, #200	; 0xc8
 8009254:	42bd      	cmp	r5, r7
 8009256:	da0c      	bge.n	8009272 <__kernel_rem_pio2f+0x4d6>
 8009258:	b10c      	cbz	r4, 800925e <__kernel_rem_pio2f+0x4c2>
 800925a:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 800925e:	9b00      	ldr	r3, [sp, #0]
 8009260:	6058      	str	r0, [r3, #4]
 8009262:	e7b2      	b.n	80091ca <__kernel_rem_pio2f+0x42e>
 8009264:	462f      	mov	r7, r5
 8009266:	2000      	movs	r0, #0
 8009268:	f10d 08c8 	add.w	r8, sp, #200	; 0xc8
 800926c:	e7e4      	b.n	8009238 <__kernel_rem_pio2f+0x49c>
 800926e:	4603      	mov	r3, r0
 8009270:	e7e7      	b.n	8009242 <__kernel_rem_pio2f+0x4a6>
 8009272:	f858 1027 	ldr.w	r1, [r8, r7, lsl #2]
 8009276:	f7f7 fd37 	bl	8000ce8 <__addsf3>
 800927a:	3701      	adds	r7, #1
 800927c:	e7ea      	b.n	8009254 <__kernel_rem_pio2f+0x4b8>
 800927e:	f8d8 3000 	ldr.w	r3, [r8]
 8009282:	f858 2c04 	ldr.w	r2, [r8, #-4]
 8009286:	9302      	str	r3, [sp, #8]
 8009288:	4619      	mov	r1, r3
 800928a:	4610      	mov	r0, r2
 800928c:	9201      	str	r2, [sp, #4]
 800928e:	f7f7 fd2b 	bl	8000ce8 <__addsf3>
 8009292:	9a01      	ldr	r2, [sp, #4]
 8009294:	4601      	mov	r1, r0
 8009296:	4681      	mov	r9, r0
 8009298:	4610      	mov	r0, r2
 800929a:	f7f7 fd23 	bl	8000ce4 <__aeabi_fsub>
 800929e:	9b02      	ldr	r3, [sp, #8]
 80092a0:	4619      	mov	r1, r3
 80092a2:	f7f7 fd21 	bl	8000ce8 <__addsf3>
 80092a6:	f848 0904 	str.w	r0, [r8], #-4
 80092aa:	f10a 3aff 	add.w	sl, sl, #4294967295
 80092ae:	f8c8 9000 	str.w	r9, [r8]
 80092b2:	e798      	b.n	80091e6 <__kernel_rem_pio2f+0x44a>
 80092b4:	f857 3c04 	ldr.w	r3, [r7, #-4]
 80092b8:	f8d7 a000 	ldr.w	sl, [r7]
 80092bc:	9301      	str	r3, [sp, #4]
 80092be:	4651      	mov	r1, sl
 80092c0:	4618      	mov	r0, r3
 80092c2:	f7f7 fd11 	bl	8000ce8 <__addsf3>
 80092c6:	9b01      	ldr	r3, [sp, #4]
 80092c8:	4601      	mov	r1, r0
 80092ca:	4680      	mov	r8, r0
 80092cc:	4618      	mov	r0, r3
 80092ce:	f7f7 fd09 	bl	8000ce4 <__aeabi_fsub>
 80092d2:	4651      	mov	r1, sl
 80092d4:	f7f7 fd08 	bl	8000ce8 <__addsf3>
 80092d8:	f847 0904 	str.w	r0, [r7], #-4
 80092dc:	f109 39ff 	add.w	r9, r9, #4294967295
 80092e0:	f8c7 8000 	str.w	r8, [r7]
 80092e4:	e783      	b.n	80091ee <__kernel_rem_pio2f+0x452>
 80092e6:	f85b 1025 	ldr.w	r1, [fp, r5, lsl #2]
 80092ea:	f7f7 fcfd 	bl	8000ce8 <__addsf3>
 80092ee:	3d01      	subs	r5, #1
 80092f0:	e781      	b.n	80091f6 <__kernel_rem_pio2f+0x45a>
 80092f2:	9900      	ldr	r1, [sp, #0]
 80092f4:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80092f8:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 80092fc:	600a      	str	r2, [r1, #0]
 80092fe:	604b      	str	r3, [r1, #4]
 8009300:	460a      	mov	r2, r1
 8009302:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 8009306:	e780      	b.n	800920a <__kernel_rem_pio2f+0x46e>

08009308 <__kernel_sinf>:
 8009308:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800930c:	f020 4300 	bic.w	r3, r0, #2147483648	; 0x80000000
 8009310:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 8009314:	4604      	mov	r4, r0
 8009316:	460f      	mov	r7, r1
 8009318:	4691      	mov	r9, r2
 800931a:	da03      	bge.n	8009324 <__kernel_sinf+0x1c>
 800931c:	f7f7 ffc8 	bl	80012b0 <__aeabi_f2iz>
 8009320:	2800      	cmp	r0, #0
 8009322:	d035      	beq.n	8009390 <__kernel_sinf+0x88>
 8009324:	4621      	mov	r1, r4
 8009326:	4620      	mov	r0, r4
 8009328:	f7f7 fde6 	bl	8000ef8 <__aeabi_fmul>
 800932c:	4605      	mov	r5, r0
 800932e:	4601      	mov	r1, r0
 8009330:	4620      	mov	r0, r4
 8009332:	f7f7 fde1 	bl	8000ef8 <__aeabi_fmul>
 8009336:	4929      	ldr	r1, [pc, #164]	; (80093dc <__kernel_sinf+0xd4>)
 8009338:	4606      	mov	r6, r0
 800933a:	4628      	mov	r0, r5
 800933c:	f7f7 fddc 	bl	8000ef8 <__aeabi_fmul>
 8009340:	4927      	ldr	r1, [pc, #156]	; (80093e0 <__kernel_sinf+0xd8>)
 8009342:	f7f7 fccf 	bl	8000ce4 <__aeabi_fsub>
 8009346:	4629      	mov	r1, r5
 8009348:	f7f7 fdd6 	bl	8000ef8 <__aeabi_fmul>
 800934c:	4925      	ldr	r1, [pc, #148]	; (80093e4 <__kernel_sinf+0xdc>)
 800934e:	f7f7 fccb 	bl	8000ce8 <__addsf3>
 8009352:	4629      	mov	r1, r5
 8009354:	f7f7 fdd0 	bl	8000ef8 <__aeabi_fmul>
 8009358:	4923      	ldr	r1, [pc, #140]	; (80093e8 <__kernel_sinf+0xe0>)
 800935a:	f7f7 fcc3 	bl	8000ce4 <__aeabi_fsub>
 800935e:	4629      	mov	r1, r5
 8009360:	f7f7 fdca 	bl	8000ef8 <__aeabi_fmul>
 8009364:	4921      	ldr	r1, [pc, #132]	; (80093ec <__kernel_sinf+0xe4>)
 8009366:	f7f7 fcbf 	bl	8000ce8 <__addsf3>
 800936a:	4680      	mov	r8, r0
 800936c:	f1b9 0f00 	cmp.w	r9, #0
 8009370:	d111      	bne.n	8009396 <__kernel_sinf+0x8e>
 8009372:	4601      	mov	r1, r0
 8009374:	4628      	mov	r0, r5
 8009376:	f7f7 fdbf 	bl	8000ef8 <__aeabi_fmul>
 800937a:	491d      	ldr	r1, [pc, #116]	; (80093f0 <__kernel_sinf+0xe8>)
 800937c:	f7f7 fcb2 	bl	8000ce4 <__aeabi_fsub>
 8009380:	4631      	mov	r1, r6
 8009382:	f7f7 fdb9 	bl	8000ef8 <__aeabi_fmul>
 8009386:	4601      	mov	r1, r0
 8009388:	4620      	mov	r0, r4
 800938a:	f7f7 fcad 	bl	8000ce8 <__addsf3>
 800938e:	4604      	mov	r4, r0
 8009390:	4620      	mov	r0, r4
 8009392:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8009396:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
 800939a:	4638      	mov	r0, r7
 800939c:	f7f7 fdac 	bl	8000ef8 <__aeabi_fmul>
 80093a0:	4641      	mov	r1, r8
 80093a2:	4681      	mov	r9, r0
 80093a4:	4630      	mov	r0, r6
 80093a6:	f7f7 fda7 	bl	8000ef8 <__aeabi_fmul>
 80093aa:	4601      	mov	r1, r0
 80093ac:	4648      	mov	r0, r9
 80093ae:	f7f7 fc99 	bl	8000ce4 <__aeabi_fsub>
 80093b2:	4629      	mov	r1, r5
 80093b4:	f7f7 fda0 	bl	8000ef8 <__aeabi_fmul>
 80093b8:	4639      	mov	r1, r7
 80093ba:	f7f7 fc93 	bl	8000ce4 <__aeabi_fsub>
 80093be:	490c      	ldr	r1, [pc, #48]	; (80093f0 <__kernel_sinf+0xe8>)
 80093c0:	4605      	mov	r5, r0
 80093c2:	4630      	mov	r0, r6
 80093c4:	f7f7 fd98 	bl	8000ef8 <__aeabi_fmul>
 80093c8:	4601      	mov	r1, r0
 80093ca:	4628      	mov	r0, r5
 80093cc:	f7f7 fc8c 	bl	8000ce8 <__addsf3>
 80093d0:	4601      	mov	r1, r0
 80093d2:	4620      	mov	r0, r4
 80093d4:	f7f7 fc86 	bl	8000ce4 <__aeabi_fsub>
 80093d8:	e7d9      	b.n	800938e <__kernel_sinf+0x86>
 80093da:	bf00      	nop
 80093dc:	2f2ec9d3 	.word	0x2f2ec9d3
 80093e0:	32d72f34 	.word	0x32d72f34
 80093e4:	3638ef1b 	.word	0x3638ef1b
 80093e8:	39500d01 	.word	0x39500d01
 80093ec:	3c088889 	.word	0x3c088889
 80093f0:	3e2aaaab 	.word	0x3e2aaaab

080093f4 <__kernel_tanf>:
 80093f4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80093f8:	f020 4a00 	bic.w	sl, r0, #2147483648	; 0x80000000
 80093fc:	f1ba 5f46 	cmp.w	sl, #830472192	; 0x31800000
 8009400:	4604      	mov	r4, r0
 8009402:	460e      	mov	r6, r1
 8009404:	4690      	mov	r8, r2
 8009406:	4607      	mov	r7, r0
 8009408:	da1b      	bge.n	8009442 <__kernel_tanf+0x4e>
 800940a:	f7f7 ff51 	bl	80012b0 <__aeabi_f2iz>
 800940e:	2800      	cmp	r0, #0
 8009410:	d12f      	bne.n	8009472 <__kernel_tanf+0x7e>
 8009412:	f108 0301 	add.w	r3, r8, #1
 8009416:	ea53 030a 	orrs.w	r3, r3, sl
 800941a:	d10c      	bne.n	8009436 <__kernel_tanf+0x42>
 800941c:	4620      	mov	r0, r4
 800941e:	f7ff f8c9 	bl	80085b4 <fabsf>
 8009422:	4601      	mov	r1, r0
 8009424:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 8009428:	f7f7 fe1a 	bl	8001060 <__aeabi_fdiv>
 800942c:	4604      	mov	r4, r0
 800942e:	4620      	mov	r0, r4
 8009430:	b003      	add	sp, #12
 8009432:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009436:	f1b8 0f01 	cmp.w	r8, #1
 800943a:	d0f8      	beq.n	800942e <__kernel_tanf+0x3a>
 800943c:	4872      	ldr	r0, [pc, #456]	; (8009608 <__kernel_tanf+0x214>)
 800943e:	4621      	mov	r1, r4
 8009440:	e7f2      	b.n	8009428 <__kernel_tanf+0x34>
 8009442:	4b72      	ldr	r3, [pc, #456]	; (800960c <__kernel_tanf+0x218>)
 8009444:	459a      	cmp	sl, r3
 8009446:	db14      	blt.n	8009472 <__kernel_tanf+0x7e>
 8009448:	2800      	cmp	r0, #0
 800944a:	bfbe      	ittt	lt
 800944c:	f100 4000 	addlt.w	r0, r0, #2147483648	; 0x80000000
 8009450:	4604      	movlt	r4, r0
 8009452:	f101 4600 	addlt.w	r6, r1, #2147483648	; 0x80000000
 8009456:	486e      	ldr	r0, [pc, #440]	; (8009610 <__kernel_tanf+0x21c>)
 8009458:	4621      	mov	r1, r4
 800945a:	f7f7 fc43 	bl	8000ce4 <__aeabi_fsub>
 800945e:	4631      	mov	r1, r6
 8009460:	4604      	mov	r4, r0
 8009462:	486c      	ldr	r0, [pc, #432]	; (8009614 <__kernel_tanf+0x220>)
 8009464:	f7f7 fc3e 	bl	8000ce4 <__aeabi_fsub>
 8009468:	4621      	mov	r1, r4
 800946a:	f7f7 fc3d 	bl	8000ce8 <__addsf3>
 800946e:	2600      	movs	r6, #0
 8009470:	4604      	mov	r4, r0
 8009472:	4621      	mov	r1, r4
 8009474:	4620      	mov	r0, r4
 8009476:	f7f7 fd3f 	bl	8000ef8 <__aeabi_fmul>
 800947a:	4601      	mov	r1, r0
 800947c:	4681      	mov	r9, r0
 800947e:	f7f7 fd3b 	bl	8000ef8 <__aeabi_fmul>
 8009482:	4649      	mov	r1, r9
 8009484:	4605      	mov	r5, r0
 8009486:	4620      	mov	r0, r4
 8009488:	f7f7 fd36 	bl	8000ef8 <__aeabi_fmul>
 800948c:	4962      	ldr	r1, [pc, #392]	; (8009618 <__kernel_tanf+0x224>)
 800948e:	4683      	mov	fp, r0
 8009490:	4628      	mov	r0, r5
 8009492:	f7f7 fd31 	bl	8000ef8 <__aeabi_fmul>
 8009496:	4961      	ldr	r1, [pc, #388]	; (800961c <__kernel_tanf+0x228>)
 8009498:	f7f7 fc26 	bl	8000ce8 <__addsf3>
 800949c:	4629      	mov	r1, r5
 800949e:	f7f7 fd2b 	bl	8000ef8 <__aeabi_fmul>
 80094a2:	495f      	ldr	r1, [pc, #380]	; (8009620 <__kernel_tanf+0x22c>)
 80094a4:	f7f7 fc20 	bl	8000ce8 <__addsf3>
 80094a8:	4629      	mov	r1, r5
 80094aa:	f7f7 fd25 	bl	8000ef8 <__aeabi_fmul>
 80094ae:	495d      	ldr	r1, [pc, #372]	; (8009624 <__kernel_tanf+0x230>)
 80094b0:	f7f7 fc1a 	bl	8000ce8 <__addsf3>
 80094b4:	4629      	mov	r1, r5
 80094b6:	f7f7 fd1f 	bl	8000ef8 <__aeabi_fmul>
 80094ba:	495b      	ldr	r1, [pc, #364]	; (8009628 <__kernel_tanf+0x234>)
 80094bc:	f7f7 fc14 	bl	8000ce8 <__addsf3>
 80094c0:	4629      	mov	r1, r5
 80094c2:	f7f7 fd19 	bl	8000ef8 <__aeabi_fmul>
 80094c6:	4959      	ldr	r1, [pc, #356]	; (800962c <__kernel_tanf+0x238>)
 80094c8:	f7f7 fc0e 	bl	8000ce8 <__addsf3>
 80094cc:	4649      	mov	r1, r9
 80094ce:	f7f7 fd13 	bl	8000ef8 <__aeabi_fmul>
 80094d2:	4957      	ldr	r1, [pc, #348]	; (8009630 <__kernel_tanf+0x23c>)
 80094d4:	9001      	str	r0, [sp, #4]
 80094d6:	4628      	mov	r0, r5
 80094d8:	f7f7 fd0e 	bl	8000ef8 <__aeabi_fmul>
 80094dc:	4955      	ldr	r1, [pc, #340]	; (8009634 <__kernel_tanf+0x240>)
 80094de:	f7f7 fc03 	bl	8000ce8 <__addsf3>
 80094e2:	4629      	mov	r1, r5
 80094e4:	f7f7 fd08 	bl	8000ef8 <__aeabi_fmul>
 80094e8:	4953      	ldr	r1, [pc, #332]	; (8009638 <__kernel_tanf+0x244>)
 80094ea:	f7f7 fbfd 	bl	8000ce8 <__addsf3>
 80094ee:	4629      	mov	r1, r5
 80094f0:	f7f7 fd02 	bl	8000ef8 <__aeabi_fmul>
 80094f4:	4951      	ldr	r1, [pc, #324]	; (800963c <__kernel_tanf+0x248>)
 80094f6:	f7f7 fbf7 	bl	8000ce8 <__addsf3>
 80094fa:	4629      	mov	r1, r5
 80094fc:	f7f7 fcfc 	bl	8000ef8 <__aeabi_fmul>
 8009500:	494f      	ldr	r1, [pc, #316]	; (8009640 <__kernel_tanf+0x24c>)
 8009502:	f7f7 fbf1 	bl	8000ce8 <__addsf3>
 8009506:	4629      	mov	r1, r5
 8009508:	f7f7 fcf6 	bl	8000ef8 <__aeabi_fmul>
 800950c:	494d      	ldr	r1, [pc, #308]	; (8009644 <__kernel_tanf+0x250>)
 800950e:	f7f7 fbeb 	bl	8000ce8 <__addsf3>
 8009512:	9b01      	ldr	r3, [sp, #4]
 8009514:	4601      	mov	r1, r0
 8009516:	4618      	mov	r0, r3
 8009518:	f7f7 fbe6 	bl	8000ce8 <__addsf3>
 800951c:	4659      	mov	r1, fp
 800951e:	f7f7 fceb 	bl	8000ef8 <__aeabi_fmul>
 8009522:	4631      	mov	r1, r6
 8009524:	f7f7 fbe0 	bl	8000ce8 <__addsf3>
 8009528:	4649      	mov	r1, r9
 800952a:	f7f7 fce5 	bl	8000ef8 <__aeabi_fmul>
 800952e:	4631      	mov	r1, r6
 8009530:	f7f7 fbda 	bl	8000ce8 <__addsf3>
 8009534:	4944      	ldr	r1, [pc, #272]	; (8009648 <__kernel_tanf+0x254>)
 8009536:	4605      	mov	r5, r0
 8009538:	4658      	mov	r0, fp
 800953a:	f7f7 fcdd 	bl	8000ef8 <__aeabi_fmul>
 800953e:	4629      	mov	r1, r5
 8009540:	f7f7 fbd2 	bl	8000ce8 <__addsf3>
 8009544:	4601      	mov	r1, r0
 8009546:	4681      	mov	r9, r0
 8009548:	4620      	mov	r0, r4
 800954a:	f7f7 fbcd 	bl	8000ce8 <__addsf3>
 800954e:	4b2f      	ldr	r3, [pc, #188]	; (800960c <__kernel_tanf+0x218>)
 8009550:	459a      	cmp	sl, r3
 8009552:	4605      	mov	r5, r0
 8009554:	db2b      	blt.n	80095ae <__kernel_tanf+0x1ba>
 8009556:	4640      	mov	r0, r8
 8009558:	f7f7 fc7a 	bl	8000e50 <__aeabi_i2f>
 800955c:	4629      	mov	r1, r5
 800955e:	4606      	mov	r6, r0
 8009560:	4628      	mov	r0, r5
 8009562:	f7f7 fcc9 	bl	8000ef8 <__aeabi_fmul>
 8009566:	4631      	mov	r1, r6
 8009568:	4680      	mov	r8, r0
 800956a:	4628      	mov	r0, r5
 800956c:	f7f7 fbbc 	bl	8000ce8 <__addsf3>
 8009570:	4601      	mov	r1, r0
 8009572:	4640      	mov	r0, r8
 8009574:	f7f7 fd74 	bl	8001060 <__aeabi_fdiv>
 8009578:	4649      	mov	r1, r9
 800957a:	f7f7 fbb3 	bl	8000ce4 <__aeabi_fsub>
 800957e:	4601      	mov	r1, r0
 8009580:	4620      	mov	r0, r4
 8009582:	f7f7 fbaf 	bl	8000ce4 <__aeabi_fsub>
 8009586:	4601      	mov	r1, r0
 8009588:	f7f7 fbae 	bl	8000ce8 <__addsf3>
 800958c:	4601      	mov	r1, r0
 800958e:	4630      	mov	r0, r6
 8009590:	f7f7 fba8 	bl	8000ce4 <__aeabi_fsub>
 8009594:	17bf      	asrs	r7, r7, #30
 8009596:	f007 0702 	and.w	r7, r7, #2
 800959a:	4604      	mov	r4, r0
 800959c:	f1c7 0001 	rsb	r0, r7, #1
 80095a0:	f7f7 fc56 	bl	8000e50 <__aeabi_i2f>
 80095a4:	4601      	mov	r1, r0
 80095a6:	4620      	mov	r0, r4
 80095a8:	f7f7 fca6 	bl	8000ef8 <__aeabi_fmul>
 80095ac:	e73e      	b.n	800942c <__kernel_tanf+0x38>
 80095ae:	f1b8 0f01 	cmp.w	r8, #1
 80095b2:	d027      	beq.n	8009604 <__kernel_tanf+0x210>
 80095b4:	4e25      	ldr	r6, [pc, #148]	; (800964c <__kernel_tanf+0x258>)
 80095b6:	4601      	mov	r1, r0
 80095b8:	ea06 0800 	and.w	r8, r6, r0
 80095bc:	4812      	ldr	r0, [pc, #72]	; (8009608 <__kernel_tanf+0x214>)
 80095be:	f7f7 fd4f 	bl	8001060 <__aeabi_fdiv>
 80095c2:	4621      	mov	r1, r4
 80095c4:	4006      	ands	r6, r0
 80095c6:	4607      	mov	r7, r0
 80095c8:	4640      	mov	r0, r8
 80095ca:	f7f7 fb8b 	bl	8000ce4 <__aeabi_fsub>
 80095ce:	4601      	mov	r1, r0
 80095d0:	4648      	mov	r0, r9
 80095d2:	f7f7 fb87 	bl	8000ce4 <__aeabi_fsub>
 80095d6:	4631      	mov	r1, r6
 80095d8:	f7f7 fc8e 	bl	8000ef8 <__aeabi_fmul>
 80095dc:	4631      	mov	r1, r6
 80095de:	4604      	mov	r4, r0
 80095e0:	4640      	mov	r0, r8
 80095e2:	f7f7 fc89 	bl	8000ef8 <__aeabi_fmul>
 80095e6:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 80095ea:	f7f7 fb7d 	bl	8000ce8 <__addsf3>
 80095ee:	4601      	mov	r1, r0
 80095f0:	4620      	mov	r0, r4
 80095f2:	f7f7 fb79 	bl	8000ce8 <__addsf3>
 80095f6:	4639      	mov	r1, r7
 80095f8:	f7f7 fc7e 	bl	8000ef8 <__aeabi_fmul>
 80095fc:	4631      	mov	r1, r6
 80095fe:	f7f7 fb73 	bl	8000ce8 <__addsf3>
 8009602:	e713      	b.n	800942c <__kernel_tanf+0x38>
 8009604:	4604      	mov	r4, r0
 8009606:	e712      	b.n	800942e <__kernel_tanf+0x3a>
 8009608:	bf800000 	.word	0xbf800000
 800960c:	3f2ca140 	.word	0x3f2ca140
 8009610:	3f490fda 	.word	0x3f490fda
 8009614:	33222168 	.word	0x33222168
 8009618:	37d95384 	.word	0x37d95384
 800961c:	3895c07a 	.word	0x3895c07a
 8009620:	398137b9 	.word	0x398137b9
 8009624:	3abede48 	.word	0x3abede48
 8009628:	3c11371f 	.word	0x3c11371f
 800962c:	3d5d0dd1 	.word	0x3d5d0dd1
 8009630:	b79bae5f 	.word	0xb79bae5f
 8009634:	38a3f445 	.word	0x38a3f445
 8009638:	3a1a26c8 	.word	0x3a1a26c8
 800963c:	3b6b6916 	.word	0x3b6b6916
 8009640:	3cb327a4 	.word	0x3cb327a4
 8009644:	3e088889 	.word	0x3e088889
 8009648:	3eaaaaab 	.word	0x3eaaaaab
 800964c:	fffff000 	.word	0xfffff000

08009650 <floorf>:
 8009650:	b570      	push	{r4, r5, r6, lr}
 8009652:	f3c0 55c7 	ubfx	r5, r0, #23, #8
 8009656:	3d7f      	subs	r5, #127	; 0x7f
 8009658:	2d16      	cmp	r5, #22
 800965a:	4601      	mov	r1, r0
 800965c:	4604      	mov	r4, r0
 800965e:	f020 4600 	bic.w	r6, r0, #2147483648	; 0x80000000
 8009662:	dc26      	bgt.n	80096b2 <floorf+0x62>
 8009664:	2d00      	cmp	r5, #0
 8009666:	da0e      	bge.n	8009686 <floorf+0x36>
 8009668:	4917      	ldr	r1, [pc, #92]	; (80096c8 <floorf+0x78>)
 800966a:	f7f7 fb3d 	bl	8000ce8 <__addsf3>
 800966e:	2100      	movs	r1, #0
 8009670:	f7f7 fdfe 	bl	8001270 <__aeabi_fcmpgt>
 8009674:	b128      	cbz	r0, 8009682 <floorf+0x32>
 8009676:	2c00      	cmp	r4, #0
 8009678:	da23      	bge.n	80096c2 <floorf+0x72>
 800967a:	4b14      	ldr	r3, [pc, #80]	; (80096cc <floorf+0x7c>)
 800967c:	2e00      	cmp	r6, #0
 800967e:	bf18      	it	ne
 8009680:	461c      	movne	r4, r3
 8009682:	4621      	mov	r1, r4
 8009684:	e01b      	b.n	80096be <floorf+0x6e>
 8009686:	4e12      	ldr	r6, [pc, #72]	; (80096d0 <floorf+0x80>)
 8009688:	412e      	asrs	r6, r5
 800968a:	4230      	tst	r0, r6
 800968c:	d017      	beq.n	80096be <floorf+0x6e>
 800968e:	490e      	ldr	r1, [pc, #56]	; (80096c8 <floorf+0x78>)
 8009690:	f7f7 fb2a 	bl	8000ce8 <__addsf3>
 8009694:	2100      	movs	r1, #0
 8009696:	f7f7 fdeb 	bl	8001270 <__aeabi_fcmpgt>
 800969a:	2800      	cmp	r0, #0
 800969c:	d0f1      	beq.n	8009682 <floorf+0x32>
 800969e:	2c00      	cmp	r4, #0
 80096a0:	bfbe      	ittt	lt
 80096a2:	f44f 0300 	movlt.w	r3, #8388608	; 0x800000
 80096a6:	fa43 f505 	asrlt.w	r5, r3, r5
 80096aa:	1964      	addlt	r4, r4, r5
 80096ac:	ea24 0406 	bic.w	r4, r4, r6
 80096b0:	e7e7      	b.n	8009682 <floorf+0x32>
 80096b2:	f1b6 4fff 	cmp.w	r6, #2139095040	; 0x7f800000
 80096b6:	d302      	bcc.n	80096be <floorf+0x6e>
 80096b8:	f7f7 fb16 	bl	8000ce8 <__addsf3>
 80096bc:	4601      	mov	r1, r0
 80096be:	4608      	mov	r0, r1
 80096c0:	bd70      	pop	{r4, r5, r6, pc}
 80096c2:	2400      	movs	r4, #0
 80096c4:	e7dd      	b.n	8009682 <floorf+0x32>
 80096c6:	bf00      	nop
 80096c8:	7149f2ca 	.word	0x7149f2ca
 80096cc:	bf800000 	.word	0xbf800000
 80096d0:	007fffff 	.word	0x007fffff

080096d4 <scalbnf>:
 80096d4:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 80096d8:	b538      	push	{r3, r4, r5, lr}
 80096da:	4603      	mov	r3, r0
 80096dc:	460d      	mov	r5, r1
 80096de:	4604      	mov	r4, r0
 80096e0:	d02a      	beq.n	8009738 <scalbnf+0x64>
 80096e2:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 80096e6:	d304      	bcc.n	80096f2 <scalbnf+0x1e>
 80096e8:	4601      	mov	r1, r0
 80096ea:	f7f7 fafd 	bl	8000ce8 <__addsf3>
 80096ee:	4603      	mov	r3, r0
 80096f0:	e022      	b.n	8009738 <scalbnf+0x64>
 80096f2:	f010 4fff 	tst.w	r0, #2139095040	; 0x7f800000
 80096f6:	d117      	bne.n	8009728 <scalbnf+0x54>
 80096f8:	f04f 4198 	mov.w	r1, #1275068416	; 0x4c000000
 80096fc:	f7f7 fbfc 	bl	8000ef8 <__aeabi_fmul>
 8009700:	4a17      	ldr	r2, [pc, #92]	; (8009760 <scalbnf+0x8c>)
 8009702:	4295      	cmp	r5, r2
 8009704:	4603      	mov	r3, r0
 8009706:	db0b      	blt.n	8009720 <scalbnf+0x4c>
 8009708:	f3c0 52c7 	ubfx	r2, r0, #23, #8
 800970c:	4604      	mov	r4, r0
 800970e:	3a19      	subs	r2, #25
 8009710:	442a      	add	r2, r5
 8009712:	2afe      	cmp	r2, #254	; 0xfe
 8009714:	dd0a      	ble.n	800972c <scalbnf+0x58>
 8009716:	4913      	ldr	r1, [pc, #76]	; (8009764 <scalbnf+0x90>)
 8009718:	4618      	mov	r0, r3
 800971a:	f361 001e 	bfi	r0, r1, #0, #31
 800971e:	e000      	b.n	8009722 <scalbnf+0x4e>
 8009720:	4911      	ldr	r1, [pc, #68]	; (8009768 <scalbnf+0x94>)
 8009722:	f7f7 fbe9 	bl	8000ef8 <__aeabi_fmul>
 8009726:	e7e2      	b.n	80096ee <scalbnf+0x1a>
 8009728:	0dd2      	lsrs	r2, r2, #23
 800972a:	e7f1      	b.n	8009710 <scalbnf+0x3c>
 800972c:	2a00      	cmp	r2, #0
 800972e:	dd05      	ble.n	800973c <scalbnf+0x68>
 8009730:	f024 40ff 	bic.w	r0, r4, #2139095040	; 0x7f800000
 8009734:	ea40 53c2 	orr.w	r3, r0, r2, lsl #23
 8009738:	4618      	mov	r0, r3
 800973a:	bd38      	pop	{r3, r4, r5, pc}
 800973c:	f112 0f16 	cmn.w	r2, #22
 8009740:	da05      	bge.n	800974e <scalbnf+0x7a>
 8009742:	f24c 3250 	movw	r2, #50000	; 0xc350
 8009746:	4295      	cmp	r5, r2
 8009748:	dce5      	bgt.n	8009716 <scalbnf+0x42>
 800974a:	4907      	ldr	r1, [pc, #28]	; (8009768 <scalbnf+0x94>)
 800974c:	e7e4      	b.n	8009718 <scalbnf+0x44>
 800974e:	3219      	adds	r2, #25
 8009750:	f024 44ff 	bic.w	r4, r4, #2139095040	; 0x7f800000
 8009754:	f04f 514c 	mov.w	r1, #855638016	; 0x33000000
 8009758:	ea44 50c2 	orr.w	r0, r4, r2, lsl #23
 800975c:	e7e1      	b.n	8009722 <scalbnf+0x4e>
 800975e:	bf00      	nop
 8009760:	ffff3cb0 	.word	0xffff3cb0
 8009764:	7149f2ca 	.word	0x7149f2ca
 8009768:	0da24260 	.word	0x0da24260

0800976c <_init>:
 800976c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800976e:	bf00      	nop
 8009770:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8009772:	bc08      	pop	{r3}
 8009774:	469e      	mov	lr, r3
 8009776:	4770      	bx	lr

08009778 <_fini>:
 8009778:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800977a:	bf00      	nop
 800977c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800977e:	bc08      	pop	{r3}
 8009780:	469e      	mov	lr, r3
 8009782:	4770      	bx	lr
