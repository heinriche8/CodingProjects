//	Evan Heinrich
//	CE2801 sect. 011
//	9/28/2021
//
//	File:
//		delay.S
//	Description of File:
//		Originally created 9/28/2021 for Lab 3
//		Modified 10/19/2021 for Lab 6, conversion to using
//		our board's dedicated timers
//	(opt) Dependancies:
//		N/A

// Assembler Directives
.syntax unified
.cpu cortex-m4
.thumb
.section .text

// Literal Pool
.equ TIM2_BASE,		0x40000000	// Timer 2 base address
.equ RCC_BASE, 		0x40023800	// RCC base address

.equ APB1ENR,		0x40		// Offset from RCC base to APB1ENR
.equ TIM2EN,		1 << 0		// Location of TIM2 enabler is bit 0


// Globally exposed functions
.global delay_setup
.global delay_ms
.global delay_us
.global delay_sec


// 16,000 clock pulses in one millisecond
// Possibly use a 32-bit timer with a clock division of 2 or 4
//	-> Use TIM2 (32-bit)
//	-> TIM2_CH1 = PA0
// Then multiply the desired delay by 16k/[clk]

delay_setup:
	PUSH {R0-R12, LR}



    POP {R0-R12, PC}

// 16,000 clock pulses in one millisecond
// Possibly use a 32-bit timer with a clock division of 2 or 4
// Then multiply the desired delay by 16k/[clk]
delay_ms:

// Same general idea as millisecond, figure out how many pulses in a microsecond
delay_us:

// Use the largest clock division.
delay_sec:
