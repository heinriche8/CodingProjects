	component Computer_System is
		port (
			gyro_sda_in                                        : in    std_logic                     := 'X';             -- sda_in
			gyro_scl_in                                        : in    std_logic                     := 'X';             -- scl_in
			gyro_sda_oe                                        : out   std_logic;                                        -- sda_oe
			gyro_scl_oe                                        : out   std_logic;                                        -- scl_oe
			hex3_hex0_export                                   : out   std_logic_vector(31 downto 0);                    -- export
			hex5_hex4_export                                   : out   std_logic_vector(15 downto 0);                    -- export
			joyirq_ext_export                                  : in    std_logic                     := 'X';             -- export
			leds_export                                        : out   std_logic_vector(9 downto 0);                     -- export
			penirq_n_export                                    : in    std_logic                     := 'X';             -- export
			pushbuttons_export                                 : in    std_logic_vector(1 downto 0)  := (others => 'X'); -- export
			pwmx_conduit_clk                                   : in    std_logic                     := 'X';             -- clk
			pwmx_conduit_pwm                                   : out   std_logic;                                        -- pwm
			pwmy_conduit_clk                                   : in    std_logic                     := 'X';             -- clk
			pwmy_conduit_pwm                                   : out   std_logic;                                        -- pwm
			sdram_addr                                         : out   std_logic_vector(12 downto 0);                    -- addr
			sdram_ba                                           : out   std_logic_vector(1 downto 0);                     -- ba
			sdram_cas_n                                        : out   std_logic;                                        -- cas_n
			sdram_cke                                          : out   std_logic;                                        -- cke
			sdram_cs_n                                         : out   std_logic;                                        -- cs_n
			sdram_dq                                           : inout std_logic_vector(15 downto 0) := (others => 'X'); -- dq
			sdram_dqm                                          : out   std_logic_vector(1 downto 0);                     -- dqm
			sdram_ras_n                                        : out   std_logic;                                        -- ras_n
			sdram_we_n                                         : out   std_logic;                                        -- we_n
			sdram_clk_clk                                      : out   std_logic;                                        -- clk
			slider_switches_export                             : in    std_logic_vector(9 downto 0)  := (others => 'X'); -- export
			system_pll_ref_clk_clk                             : in    std_logic                     := 'X';             -- clk
			system_pll_ref_reset_reset                         : in    std_logic                     := 'X';             -- reset
			touch_spi_MISO                                     : in    std_logic                     := 'X';             -- MISO
			touch_spi_MOSI                                     : out   std_logic;                                        -- MOSI
			touch_spi_SCLK                                     : out   std_logic;                                        -- SCLK
			touch_spi_SS_n                                     : out   std_logic;                                        -- SS_n
			vga_CLK                                            : out   std_logic;                                        -- CLK
			vga_HS                                             : out   std_logic;                                        -- HS
			vga_VS                                             : out   std_logic;                                        -- VS
			vga_BLANK                                          : out   std_logic;                                        -- BLANK
			vga_SYNC                                           : out   std_logic;                                        -- SYNC
			vga_R                                              : out   std_logic_vector(3 downto 0);                     -- R
			vga_G                                              : out   std_logic_vector(3 downto 0);                     -- G
			vga_B                                              : out   std_logic_vector(3 downto 0);                     -- B
			video_lt24_controller_0_external_interface_lcd_on  : out   std_logic;                                        -- lcd_on
			video_lt24_controller_0_external_interface_reset_n : out   std_logic;                                        -- reset_n
			video_lt24_controller_0_external_interface_csx     : out   std_logic;                                        -- csx
			video_lt24_controller_0_external_interface_data    : out   std_logic_vector(15 downto 0);                    -- data
			video_lt24_controller_0_external_interface_rdx     : out   std_logic;                                        -- rdx
			video_lt24_controller_0_external_interface_wrx     : out   std_logic;                                        -- wrx
			video_lt24_controller_0_external_interface_dcx     : out   std_logic;                                        -- dcx
			video_pll_0_ref_clk_clk                            : in    std_logic                     := 'X';             -- clk
			video_pll_0_ref_reset_reset                        : in    std_logic                     := 'X'              -- reset
		);
	end component Computer_System;

