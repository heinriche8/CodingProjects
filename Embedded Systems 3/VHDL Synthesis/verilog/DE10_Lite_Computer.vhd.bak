library ieee;
use ieee.std_logic_1164.all;

entity DE10_Lite_Computer is
port (
			--Onboard System Clocks
			CLOCK_50 : in std_logic;
			CLOCK2_50 : in std_logic;
			CLOCK_ADC_10 : in std_logic;
			
			--Pushbuttons
			KEY : in std_logic_vector(1 downto 0);
			
			--Sliders
			SW : in std_logic_vector(9 downto 0);
			
			--LEDS
			LEDR : out std_logic_vector(9 downto 0);
			
			--Seven Segment Displays
			HEX0, HEX1, HEX2, HEX3, HEX4, HEX5 : out std_logic_vector(7 downto 0);
			
			--SDRAM 
			DRAM_ADDR : out std_logic_vector(12 downto 0);
			DRAM_BA : out std_logic_vector(1 downto 0);
			DRAM_CAS_N : out std_logic;
			DRAM_CKE : out std_logic;
			DRAM_CLK : out std_logic;
			DRAM_CS_N : out std_logic;
			DRAM_DQ : inout std_logic_vector(15 downto 0);
			DRAM_LDQM : out std_logic;
			DRAM_RAS_N : out std_logic;
			DRAM_UDQM : out std_logic;
			DRAM_WE_N : out std_logic
			
		);
end entity DE10_Lite_Computer;

architecture STRUCTURAL of DE10_Lite_Computer is 

	 component Computer_System is
		  port (
				hex3_hex0_export           : out   std_logic_vector(31 downto 0);                    -- export
				hex5_hex4_export           : out   std_logic_vector(15 downto 0);                    -- export
				leds_export                : out   std_logic_vector(9 downto 0);                     -- export
				pushbuttons_export         : in    std_logic_vector(1 downto 0)  := (others => 'X'); -- export
				sdram_addr                 : out   std_logic_vector(12 downto 0);                    -- addr
				sdram_ba                   : out   std_logic_vector(1 downto 0);                     -- ba
				sdram_cas_n                : out   std_logic;                                        -- cas_n
				sdram_cke                  : out   std_logic;                                        -- cke
				sdram_cs_n                 : out   std_logic;                                        -- cs_n
				sdram_dq                   : inout std_logic_vector(15 downto 0) := (others => 'X'); -- dq
				sdram_dqm                  : out   std_logic_vector(1 downto 0);                     -- dqm
				sdram_ras_n                : out   std_logic;                                        -- ras_n
				sdram_we_n                 : out   std_logic;                                        -- we_n
				sdram_clk_clk              : out   std_logic;                                        -- clk
				slider_switches_export     : in    std_logic_vector(9 downto 0)  := (others => 'X'); -- export
				system_pll_ref_clk_clk     : in    std_logic                     := 'X';             -- clk
				system_pll_ref_reset_reset : in    std_logic                     := 'X'              -- reset
		  );
	 end component Computer_System;
	 
	 signal HEX3_HEX0 : std_logic_vector(31 downto 0);
	 signal HEX5_HEX4 : std_logic_vector(15 downto 0);
	 signal DRAM_DQM : std_logic_vector(1 downto 0);
	 
begin 


    u0 : component Computer_System
        port map (
            hex3_hex0_export           => HEX3_HEX0,           --            hex3_hex0.export
            hex5_hex4_export           => HEX5_HEX4,           --            hex5_hex4.export
            leds_export                => LEDR,                --                 leds.export
            pushbuttons_export         => not KEY,         --          pushbuttons.export
            sdram_addr                 => DRAM_ADDR,                 --                sdram.addr
            sdram_ba                   => DRAM_BA,                   --                     .ba
            sdram_cas_n                => DRAM_CAS_N,                --                     .cas_n
            sdram_cke                  => DRAM_CKE,                  --                     .cke
            sdram_cs_n                 => DRAM_CS_N,                 --                     .cs_n
            sdram_dq                   => DRAM_DQ,                   --                     .dq
            sdram_dqm                  => DRAM_DQM,                  --                     .dqm
            sdram_ras_n                => DRAM_RAS_N,                --                     .ras_n
            sdram_we_n                 => DRAM_WE_N,                 --                     .we_n
            sdram_clk_clk              => DRAM_CLK,              --            sdram_clk.clk
            slider_switches_export     => SW,     --      slider_switches.export
            system_pll_ref_clk_clk     => CLOCK_50,     --   system_pll_ref_clk.clk
            system_pll_ref_reset_reset => '0'  -- system_pll_ref_reset.reset
        );
		  
	HEX0 <= not HEX3_HEX0(7 downto 0);
	HEX1 <= not HEX3_HEX0(15 downto 8);
	HEX2 <= not HEX3_HEX0(23 downto 16);
	HEX3 <= not HEX3_HEX0(31 downto 24);
	HEX4 <= not HEX5_HEX4(7 downto 0);
	HEX5 <= not HEX5_HEX4(15 downto 8);
	
	DRAM_LDQM <= DRAM_DQM(0);
	DRAM_UDQM <= DRAM_DQM(1);


end architecture STRUCTURAL;